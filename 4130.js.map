{"version":3,"file":"4130.js?ver=0.0.327_1721341356947","mappings":"gKAGIA,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOC,GAAI,6xNAA8xN,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,yFAAyF,MAAQ,GAAG,SAAW,oiFAAoiF,eAAiB,CAAC,2o+BAA0t+B,WAAa,MAE9uxC,S,qECJIH,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOC,GAAI,y1BAA01B,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,yFAAyF,MAAQ,GAAG,SAAW,+UAA+U,eAAiB,CAAC,2o+BAA0t+B,WAAa,MAErlhC,S,mCCGO,MAAMC,EAA2BC,OAAOC,IAAI,2B,mCCe5C,MAAMC,EAAwBF,OAAOC,IAAI,wB,mCChBzC,MAAME,EAA0BH,OAAOC,IAAI,0B,mCCF3C,MAAMG,EAA2BJ,OAAOC,IAAI,2B,6OCJnD,MAAMI,EAAeC,KAAM,QAAa,mBAAmBA,EAAEA,KAAI,UAAcA,GACzEC,EAAa,CAAEC,MAAO,aACtBC,EAAa,CACjBD,OAAoB,oBAAgB,CAAC,2BAEjCE,EAAa,CAAEF,MAAO,eACtBG,EAAa,CAAEH,MAAO,eACtBI,EAA2BP,GAAa,KAAmB,IAAAQ,GAAoB,MAAO,CAC1FL,OAAoB,oBAAgB,CAAC,sBACrCV,GAAI,wBACH,MAAO,KACJgB,EAAa,CACjBN,OAAoB,oBAAgB,CAAC,SAAS,YAE1CO,EAA2BV,GAAa,KAAmB,IAAAQ,GAAoB,OAAQ,CAAEL,MAAO,eAAiB,YAAa,KAC9HQ,EAAa,CACjBC,IAAK,EACLT,MAAO,iBACPU,MAAO,CAAC,IAAM,QAAQ,KAAO,QAAQ,UAAU,IAAI,MAAQ,UAEvDC,EAAa,CACjBF,IAAK,EACLT,MAAO,iBACPU,MAAO,CAAC,IAAM,QAAQ,KAAO,QAAQ,UAAU,IAAI,MAAQ,UAEvDE,EAAc,CAClBH,IAAK,EACLT,MAAO,iBACPU,MAAO,CAAC,IAAM,QAAQ,KAAO,QAAQ,UAAU,IAAI,MAAQ,UAuB7D,GAA4B,QAAiB,CAC3CG,OAAQ,uBACRC,MAAO,CAAC,SACRC,MAAMC,GAAS,KAAEC,IAEnB,MAAMC,EAAY,aAA8BC,EAAA,GAC1CC,EAAmB,aAAqCC,EAAA,GACxDC,EAAS,aAA2BC,EAAA,GACpCC,EAAW,aAAoCC,EAAA,GAC/CC,EAAuB,aAAyChC,EAAA,GAChEiC,EAAgB,aAAkCC,EAAA,GAIlDC,GAAQ,QAAuB,IAC/BC,GAAiB,UACjBC,GAAyB,UACzBC,GAAc,UACdC,GAAgB,UAChBC,GAAgB,QAA4B,CAAC,GAC7CC,GAAqB,QAAY,KAGvC,SAAUC,gBACAZ,EAASa,SAAQD,gBAEbE,QAAQC,IAAI,CACdf,EAASgB,eAAwC7C,EAAA,EAAyB,CAAE8C,cAF9B,CAAC,OAAQ,UAAW,iBAAkB,aAESC,MAAKC,GAAOb,EAAec,MAAQD,IAChInB,EAASgB,eAAyC5C,EAAA,EAA0B,CAAC,GAAG8C,MAAKC,GAAOZ,EAAuBa,MAAQD,MA8dnIvB,EAAiByB,aAAa3B,EAAU4B,OAAOjB,OAAQkB,IACnD,GAAuB,SAAnBA,EAAKC,aAA0BD,EAAKE,WAAc,OACtD,MAAMC,EAAkBhC,EAAU4B,OAAOjB,MAAMsB,MAAKC,IAAI,MAAC,MAAgB,SAAhBA,EAAEJ,aAA0C,QAAjB,EAAAI,EAAEC,uBAAe,eAAEC,KAAMP,EAAKO,EAAE,KACjHJ,aAAe,EAAfA,EAAiBI,MAChBpB,EAAcU,MAAMG,EAAKO,IAAMJ,aAAe,EAAfA,EAAiBI,GAAE,IA5Y9D,WACI,MAAMC,EAAM,IAAIC,IACVC,EAAS,IAAID,IAEnBpC,EAAiByB,aAAa3B,EAAU4B,OAAOjB,OAAQkB,I,YACnD,GAAuB,SAAnBA,EAAKC,WAAyB,OAIlC,IAAIU,EACJ,GAHkD,UAAzBX,EAAKY,MAAMX,YAA0BrB,EAAciC,iBAAiBb,EAAKY,OAS7F,CACD,MAAME,EAA6C,QAA5B,EAAA9B,EAAuBa,aAAK,eAAEkB,IAAIf,EAAKY,MAAML,IAC9DS,EAAoH,QAAnG,EAAAhB,EAAKY,MAAkBK,oBAAoBb,MAAKc,GAAOA,EAAIC,eAAiBhD,EAAU4B,OAAOqB,eAAM,eAAEC,gBAEtHC,EAAsBR,aAAc,EAAdA,EAAgBS,QAAOlB,GAAKA,EAAEM,SAAWK,IAAeQ,SAAQnB,GAAKA,EAAEoB,wBAAuBrB,MAAKC,GAAKA,EAAEqB,SAAW1B,EAAKO,KACtJI,EAAUW,aAAmB,EAAnBA,EAAqBX,O,KAXZ,CACnB,MAAMgB,EAAaC,EAAkB5B,GACrC,IAAK2B,EACD,OAAOjB,EAAOmB,IAAI7B,EAAKO,GAAIP,EAAK8B,gBAAkB9B,EAAK8B,gBAAgBtB,KAAIH,GAAKA,EAAE0B,UAAWC,SACjGrB,EAAUgB,C,CAUd,MAAMM,EAAgD,QAAlC,EAAoB,QAApB,EAAAlD,EAAec,aAAK,eAAEkB,IAAIf,EAAKO,WAAG,eAAEH,MAAKC,GAAKA,EAAEM,SAAWA,IACzEuB,GAAOD,aAAW,EAAXA,EAAaH,iBAAkBG,aAAW,EAAXA,EAAaH,gBAAgBtB,KAAIH,GAAKA,EAAE0B,UAASvB,KAAIH,IAAI,MAAC,OAAmB,QAAnB,EAAAlB,EAAcU,aAAK,eAAGQ,KAAMA,CAAC,IAAI2B,QACvItB,EAAOmB,IAAI7B,EAAKO,GAAI2B,EAAK,IAI7BxB,EAAOyB,SAAQ,CAACC,EAAYL,KACxB,MAAMM,EAAaL,QACnBtB,EAAOyB,SAAQ,CAACG,EAAcC,KACtBD,EAAaE,MAAKC,GAASA,GAASV,KACpCM,EAAWhG,KAAKkG,EAAW,IAEnC/B,EAAIqB,IAAIE,EAAS,CAAEM,aAAYD,cAAa,IAEhDlD,EAAcW,MAAQW,CAC1B,CA1HQkC,GA4JR,WACI,MAAMC,EAAYhE,EAAqBiE,0BAA0B,CAC7DC,gBAAiB,CAAC7C,EAAM8C,KACpB,OAAQ9C,EAAKO,IAAM,KAAK,mBAAqC,KAAK,kBAAoC,OAAO,EAC7G,OAAQP,EAAKC,YACT,IAAK,cAAe,OAAO,EAC3B,IAAK,SAEL,IAAK,QAAS,OAAO,EADrB,IAAK,SAAU,OAAO6C,E,IAM5BC,EAAY,CAACC,EAAgDC,K,sBAC/D,MAAMjD,EAAOgD,EAASE,aACtB,GAAuB,eAAnBlD,EAAKC,WAA+B,MAAM,IAAIkD,MAAM,wBAGxD,IAEIC,EAFAC,EADazE,EAAc0E,YAAYtD,EAAM,QAC5BuD,MAAM,KAAKC,OAAS,EAGzC,OAAOxD,EAAKC,YACR,IAAK,SACDmD,EAAY,CACR7G,GAAIyD,EAAKO,GAAIkD,KAAMzD,EAAKyD,KAAMC,KAAM,SAAUC,WAAW,EAAMN,QAC/DO,SAA2B,QAAjB,EAAAZ,EAASY,gBAAQ,eAAEpD,KAAKR,GAAS+C,EAAU/C,EAAM,CAAE6D,YAAaZ,EAAQY,iBAEpE,QAAlB,EAAAT,EAAUQ,gBAAQ,SAAEzB,SAAQ2B,GAASA,EAAMC,OAASX,IACpDY,GAA0BZ,GAAW,GACrC,MACJ,IAAK,QACD,GAAIH,EAAQY,YAER,GADAT,EAAY,CAAE7G,GAAIyD,EAAKO,GAAIkD,KAAMzD,EAAKyD,KAAMC,KAAM1D,EAAKiE,UAAWZ,QAAOnD,WAAYF,EAAKE,aACrF+C,EAAQY,YAAYK,kBAAoBlE,EAAKmE,eAAgB,CAC9D,MAAMxC,EAAaC,EAAkB5B,GACrCoD,EAAY,IACLA,EACHgB,UAASzC,GAAoB3B,EAAKmE,eAClCE,UAAU1C,IAAsB3B,EAAKmE,eACrCxD,QAASgB,GAAc,S,KAExB,CACH,MAAM2C,EAAgE,QAAzC,EAAArB,EAAQY,YAAYpC,6BAAqB,eAAErB,MAAKC,GAAKA,EAAEqB,SAAW1B,EAAKO,KACpG6C,EAAY,IAAKA,EAAWgB,SAAS,EAAMC,UAAU,EAAO1D,QAAS2D,aAAoB,EAApBA,EAAsB3D,QAAST,WAAYF,EAAKE,W,KAEtH,CACH,MAAMyB,EAAaC,EAAkB5B,GACrCoD,EAAY,CACR7G,GAAIyD,EAAKO,GACTkD,KAAMzD,EAAKyD,KACXW,UAASzC,GAAoB3B,EAAKmE,eAClCE,UAAU1C,IAAsB3B,EAAKmE,eACrCT,KAAM1D,EAAKiE,UACXtD,QAASgB,GAAc,SACvB0B,QACAnD,WAAYF,EAAKE,W,CAGzB,MACJ,IAAK,SACD,MAAMgE,EAAmBtF,EAAciC,iBAAiBb,GAClDgB,EAAiG,QAAjF,EAAAhB,EAAKiB,oBAAoBb,MAAKc,GAAOA,EAAIC,eAAiBhD,EAAU4B,OAAOqB,eAAM,eAAEC,gBACnGI,EAAwByC,EAA8G,QAA3F,EAA0C,QAA1C,EAA4B,QAA5B,EAAAlF,EAAuBa,aAAK,eAAEkB,IAAIf,EAAKO,WAAG,eAAEH,MAAK9D,GAAUA,EAAOqE,SAAWK,WAAc,eAAES,2BAAwB8C,EAEtKnB,EAAY,CACR7G,GAAIyD,EAAKO,GACToD,WAAW,EACXF,KAAMzD,EAAKyD,KACXC,KAAM,SACNc,SAAUN,EACVvD,QAASK,EACT4C,SAA2B,QAAjB,EAAAZ,EAASY,gBAAQ,eAAEpD,KAAKR,GAAS+C,EAAU/C,EAAM,CAAC6D,YAAa,CAACK,mBAAkBlD,gBAAeS,8BAE7F,QAAlB,EAAA2B,EAAUQ,gBAAQ,SAAEzB,SAAQ2B,GAASA,EAAMC,OAASX,IACpDY,GAA0BZ,GAAW,GAG7C,OAAOA,CAAS,EAEdqB,EAAa9B,EAAUnC,KAAIR,GAAQ+C,EAAU/C,EAAM,CAAC,KAEpD0E,EAAatB,I,OAxFvB,UAA6B,QAAEuB,IACvBA,EAAQzE,aAfhB,SAA0BF,GACtB,MAAM4E,GAAW,IAAAC,WAAU,IAAkB,CACzCC,wBACA7F,cACA8F,iBACAC,kBACAhF,KAAMA,EACNiF,yBAEEC,EAAUC,SAASC,cAAc,OACvCR,EAASS,MAAMH,GACf,MAAMI,EAAWH,SAASI,eAAe,wBACzCD,SAAAA,EAAUE,YAAYN,EAC1B,CAGQO,CAAiBd,GACjB7F,EAAMe,MAAMxD,KAAKsI,GAEzB,CAoFQe,CAAoB,CAAEf,QAASvB,IACb,QAAlB,EAAAA,EAAUQ,gBAAQ,SAAEzB,QAAQuC,EAAU,EAG1CD,EAAWtC,QAAQuC,EACvB,CAlPQiB,EAAa,GACd,CAAEC,SAAS,GAAO,IAGzB,MAAMC,GAAkB,SAAiB,IAAMC,EAAWhH,EAAMe,SAC1DkG,GAAqB,SAAiB,IAAMD,EAAWhH,EAAMe,OAAO,KAEpEiG,EAAa,CAACE,EAAuBC,GAAmB,IACrDD,EAAIE,QAAO,CAACC,EAAKnG,KACtB,GAAGiG,IAA8C,IAAzBjG,aAAI,EAAJA,EAAMoG,kBAA6C,IAAjBpG,aAAI,EAAJA,EAAMoE,UAAmB,OAAO+B,EAC1F,IAAIE,EAAQ,EAIZ,OAHIrG,aAAI,EAAJA,EAAM4D,YACRyC,GAASP,EAAW9F,EAAK4D,SAAUqC,IAE9BE,EAAME,CAAK,GACjB,GAGCC,GAAuB,SAO7B,WACI,OAAQxH,EAAMe,MAAM2C,MAAMxC,GAASA,EAAKoE,SAAWpE,EAAKoG,oBAAqBG,MAA2BC,GAC5G,IANMC,GAAiB,SAAS,IAuPhC,WACI,IAAIA,GAA0B,EAgB9B,OAfA3H,EAAMe,MAAMsC,SAAQnC,I,MACC,UAAbA,EAAK0D,KACQ,QAAb,EAAA1D,EAAK4D,gBAAQ,SAAEzB,SAAQ2B,IACfA,EAAMnD,UACN8F,GAAiB,E,IAMrBzG,EAAKW,UACL8F,GAAiB,E,IAItBA,CACX,CAzQsCC,KAChCC,GAA6B,SAAS,IAAMH,MAC5CI,GAAsB,QAASL,GAOrC,SAASA,I,QACL,MAAMM,EAAW,IAAIpG,IACrB3B,EAAMe,MAAMsC,SAAQnC,IACC,UAAbA,EAAK0D,MAAoB1D,EAAK4D,UAAY5D,EAAK4D,SAASJ,OAAS,EACjExD,EAAK4D,SAASzB,SAAQ2B,GAAS+C,EAAShF,IAAIiC,EAAMvH,GAAqB,GAAjBuH,EAAMM,WAE5DyC,EAAShF,IAAI7B,EAAKzD,GAAoB,GAAhByD,EAAKoE,QAAgB,IAGnD,MAAM0C,EAAmB,IAAIrG,IACV,QAAnB,EAAAvB,EAAcW,aAAK,SAAEsC,SAAQ,CAACD,EAAM3F,KAC3BsK,EAAS9F,IAAIxE,IAGlB2F,EAAKE,WAAWD,SAAQ4E,IACpB,IAAIF,EAAS9F,IAAIgG,GAGjB,GAAID,EAAiBE,IAAIzK,GAAK,CAC1B,MAAM0K,EAAOH,EAAiB/F,IAAIxE,GAClC0K,EAAK5K,KAAK0K,GACVD,EAAiBjF,IAAItF,EAAI0K,E,MAEzBH,EAAiBjF,IAAItF,EAAI,CAACwK,G,GAGhC,IAIN,MAAOG,GAAeJ,EAAiBK,OACvC,GAAID,EAAa,CACb,MAAME,EAAgBN,EAAiB/F,IAAImG,GACrCG,EAAkBD,EAAgBA,EAAc5G,IAAI8G,GAAU9G,KAAIH,GAAKA,aAAC,EAADA,EAAGoD,OAAM8D,KAAK,MAAQ,GACnGnI,EAAmBS,MAAQ,UAAUwH,YAA+C,QAArB,EAAAC,EAASJ,UAAY,eAAEzD,mBAAmB4D,I,CAG7G,OAAgC,GAAzBP,EAAiBU,IAC5B,CAGA,SAASF,EAAS/G,GACd,IAAK,MAAMP,KAAQlB,EAAMe,MAAO,CAC5B,GAAiB,UAAbG,EAAK0D,MAAoB1D,EAAKzD,IAAMgE,EACpC,OAAOP,EACX,GAAiB,UAAbA,EAAK0D,MAAoB1D,EAAK4D,UAAY5D,EAAK4D,SAASJ,OAAS,EAAG,CACpE,MAAMiE,EAAIzH,EAAK4D,SAASxD,MAAKC,GAAKA,EAAE9D,IAAMgE,IAC1C,GAAIkH,EAAG,OAAOA,C,EAG1B,CAoKA,SAAS7F,EAAkB5B,G,MACvB,KAAyB,QAApB,EAAAjB,EAAec,aAAK,eAAEmH,IAAIhH,EAAKO,KAChC,OAEJ,MAAMmH,EAAW3I,EAAec,MAAMkB,IAAIf,EAAKO,IAC/C,OAAKmH,EAGkB,CAACA,IACpB,MAAMC,EAAiBD,EAASlH,KAAIoH,IAChC,MAAMC,EAAuBD,EAAErE,MAAM,KACrC,OAA4B,GAArBuE,SAASD,EAAM,IAAgC,EAArBC,SAASD,EAAM,GAAO,IAG3DF,EAAeI,MAAK,CAACC,EAAGC,IAAMA,EAAID,IAElC,MAAMrG,EAAagG,EAAe,GAClC,MAAO,GAAGO,KAAKC,MAAMxG,EAAa,OAAOA,EAAa,IAAI,EAGvDyG,CAAeV,EAASlH,KAAIH,GAAKA,EAAEM,gBAf1C,CAiBJ,CAuBA,SAAS6F,IACL,IAAI6B,GAAY,EAAOC,GAAW,EAClC,MAAMC,EAAK,CAACvI,EAAkByD,EAAcC,IAAiB1D,EAAKoE,SAAWpE,EAAK0D,MAAQA,GAAQ1D,EAAKyD,OAASA,EAChH,IAAI,MAAMzD,KAAQlB,EAAMe,MAAO,CAC3B,GAAGwI,GAAaC,EAAU,MACT,UAAbtI,EAAK0D,MAAoB1D,EAAK4D,UAC1ByE,IAAWA,EAAYrI,EAAK4D,SAASpB,MAAKnC,GAAKkI,EAAGlI,EAAG,UAAW,WAChEiI,IAAUA,EAAWtI,EAAK4D,SAASpB,MAAKnC,GAAKkI,EAAGlI,EAAG,SAAU,aAG7DgI,IAAWA,IAAcE,EAAGvI,EAAM,UAAW,SAC7CsI,IAAUA,IAAaC,EAAGvI,EAAM,SAAU,S,CAGtD,OAAOqI,GAAaC,CACxB,CAEA,SAASE,KACL,MAAMpE,EAAUyB,EAAgBhG,OAASkG,EAAmBlG,MAC5Df,EAAMe,MAAM0B,QAAOlB,KAAMA,aAAC,EAADA,EAAGgE,YAAUlC,SAASnC,IAC3CA,EAAKoE,SAAWA,EACkCG,MAAxBvE,EAAKyI,iBAAgCzI,EAAK4D,UAAY5D,EAAK4D,SAASJ,OAAS,IAAMxD,EAAK4D,SAASpB,MAAKkG,GAAKA,EAAErE,aAChHrE,EAAKyI,iBAAmBrE,GACnBG,MAAxBvE,EAAKoG,kBAA8BpG,EAAKoG,iBAAmBhC,GAC3DpE,EAAK4D,UAAU5D,EAAK4D,SAASrC,QAAOmH,IAAMA,EAAErE,WAAUlC,SAAS2B,GAAWA,EAAMM,SAAWA,GAAS,GAEhH,CAGA,SAASY,GAAehF,EAAkB2I,EAAwBhF,G,MAC9D3D,EAAK2D,eAA0BY,IAAdZ,EAA0BA,GAAa3D,EAAK2D,UACzDgF,IACa,QAAb,EAAA3I,EAAK4D,gBAAQ,SAAEzB,SAAQ2B,IACHqB,SAASI,eAAezB,EAAMvH,IACrCoB,MAAMiL,QAAU5I,EAAK2D,UAAY,OAAS,QACnDqB,GAAelB,EAAO6E,EAAc3I,EAAK2D,UAAU,IAG/D,CAEA,SAASkF,GAAmB7I,EAAkB8I,G,QAC1C,GAAI9I,EAAKqE,UAAYrE,EAAKoE,QAAS,OAEnCpE,EAAKoE,SAAU,EACfpE,EAAK+D,QAAUC,GAA0BhE,EAAK+D,OAAQ+E,GAEtD,MAAM5G,EAAwC,QAAjC,EAAmB,QAAnB,EAAAhD,EAAcW,aAAK,eAAEkB,IAAIf,EAAKzD,WAAG,eAAE6F,WAC3CF,GAELA,EAAKC,SAAQ4G,IACTjK,EAAMe,MAAMsC,SAAQnC,I,MAChB,GAAiB,UAAbA,EAAK0D,OAAqB1D,EAAKyI,gBAAiB,CAChD,MAAMO,EAA6B,QAAb,EAAAhJ,EAAK4D,gBAAQ,eAAExD,MAAK0D,IAAUA,EAAMM,SAAWN,EAAMvH,IAAMwM,IAGjF,OAFAC,GAAiBH,GAAmBG,EAAeF,QACnD9E,GAA0BhE,EAAM8I,E,CAI/B9I,EAAKoE,SAAWpE,EAAKzD,IAAMwM,IAC5BF,GAAmB7I,EAAM8I,GACzB9I,EAAK+D,QAAUC,GAA0BhE,EAAK+D,OAAQ+E,G,GAE5D,GAEV,CAEA,SAAShE,GAAqB9E,GACtBA,EAAKqE,UAzOb,SAAyBrE,G,QACrB,MAAMkC,EAAwC,QAAjC,EAAmB,QAAnB,EAAAhD,EAAcW,aAAK,eAAEkB,IAAIf,EAAKzD,WAAG,eAAE8F,WAChD,QAAKH,GAEEA,EAAKM,MAAKuG,GAAOjK,EAAMe,MAAM2C,MAAKxC,I,MACrC,MAAiB,UAAbA,EAAK0D,MAAoB1D,EAAKoG,gBACV,QAAb,EAAApG,EAAK4D,gBAAQ,eAAEpB,MAAKsB,GAASA,EAAMM,SAAWN,EAAMvH,IAAMwM,IAE9D/I,EAAKzD,IAAMwM,GAAO/I,EAAKoE,OAAO,KAE7C,CA+NyB6E,CAAgBjJ,IAAsB,gBAAbA,EAAKyD,OAGlC,UAAbzD,EAAK0D,MAAiC,UAAb1D,EAAK0D,KAC1B1D,EAAKoE,SACLpE,EAAKoE,SAAU,EACfpE,EAAK+D,QAAUC,GAA0BhE,EAAK+D,QAAQ,IAEtD8E,GAAmB7I,GAAM,GAGzBA,EAAK4D,UAAY5D,EAAK4D,SAASrC,QAAOmH,IAAMA,EAAErE,WAAUb,OAAS,EAC7DxD,EAAKoG,iBACLpG,EAAK4D,SAASrC,QAAOmH,IAAMA,EAAErE,WAAUlC,SAAQ2B,GAASA,EAAMM,SAAU,IACxEpE,EAAKoE,SAAU,EACfJ,GAA0BhE,GAAM,KAEhCA,EAAK4D,SAASzB,SAAQ2B,GAAS+E,GAAmB/E,GAAO,KACzD9D,EAAKoE,SAAU,IAInBpE,EAAKoE,SAAWpE,EAAKoE,QACrBpE,EAAKyI,iBAAkB,GAInC,CAEA,SAASzE,GAA0BhE,EAAkB8I,G,QACjD9I,EAAKqE,SAAWrE,EAAK4D,WAAqC,GAAxB5D,EAAK4D,SAASJ,UAA6B,QAAb,EAAAxD,EAAK4D,gBAAQ,eAAEpB,MAAKsB,IAAUA,EAAMO,aACpGrE,EAAKyI,gBAAkBzI,EAAK4D,UAAY5D,EAAK4D,SAASJ,OAAS,IAAMxD,EAAK4D,SAASpB,MAAMsB,IAAWA,EAAMM,SAAWN,EAAMO,WAC3HrE,EAAKoG,gBAA+B,QAAb,EAAApG,EAAK4D,gBAAQ,eAAEpB,MAAMsB,GAAUA,EAAMM,UAAYN,EAAMO,WAC1EyE,GAAiB9I,EAAK+D,QACtBC,GAA0BhE,EAAK+D,QAAQ,EAE/C,CAEA,SAASmF,GAAoBC,EAAoBnJ,G,gBAC7C,MAAMkC,EAA0B,QAAnB,EAAAhD,EAAcW,aAAK,eAAEkB,IAAIf,EAAKzD,IACxB,QAAnB,EAAA2C,EAAcW,aAAK,SAAEgC,IAAI7B,EAAKzD,GAAI,CAC9B8F,YAAYH,aAAI,EAAJA,EAAMG,aAAcL,QAChCI,YAAmG,QAAvF,EAAsE,QAAtE,EAAkC,QAAlC,EAAoB,QAApB,EAAArD,EAAec,aAAK,eAAEkB,IAAIf,EAAKzD,WAAG,eAAE6D,MAAKC,GAAKA,EAAEM,SAAWwI,WAAW,eAAErH,uBAAe,eAAEtB,KAAIH,GAAKA,EAAE0B,YAAYC,SAEpI,CAEA,SAAS+C,GAAc/E,G,QACnB,MAEMiD,EAAU,CACZmG,YAHgB,CAAE7M,GAAIyD,EAAKzD,GAAI8M,MAAO,CAAEjF,QAASpE,EAAKoE,SAAWkF,KAAMtJ,EAAKyD,KAAMC,KAAM1D,EAAK0D,KAAM/C,QAASX,EAAKW,SAGpG4I,GAAK5I,IACdX,EAAKW,QAAUA,EACfuI,GAAoBvI,EAASX,EAAK,IAJA,QAApB,EAAAjB,EAAec,aAAK,eAAEmH,IAAIhH,EAAKzD,OASjD0G,EAAQyE,SAA+B,QAApB,EAAA3I,EAAec,aAAK,eAAEkB,IAAIf,EAAKzD,KAEtDgC,EAAOiL,YACH,SAAqB,IAAM,iCAC3B,CAAEC,UAAU,EAAMC,MAAO,iBAAkBC,MAAO,SAAUC,UAAW,QAASC,SAAU,QAAU5G,EAE5G,CAEA,SAASgC,GAAoBjF,G,MACzBzB,EAAOiL,YACH,SAAqB,IAAM,kCAC3B,CAAEC,UAAU,EAAMC,MAAO,iBAAkBC,MAAO,SAAUC,UAAW,QAASC,SAAU,QAC1F,CACIvN,OAAQ,CAAEiE,GAAIP,EAAKzD,IAAMmL,SAAsC,QAA5B,EAAA1I,EAAuBa,aAAK,eAAEkB,IAAIf,EAAKzD,IAAKgN,GAAKvI,I,MAChFhB,EAAKW,QAAUK,EAAcL,QAChB,QAAb,EAAAX,EAAK4D,gBAAQ,SAAEzB,SAAQ2B,IACnB,MAAMgG,EAAe9I,EAAcS,sBAAsBrB,MAAKC,GAAKA,EAAEqB,SAAWoC,EAAMvH,KACtFuH,EAAMnD,QAAUmJ,aAAY,EAAZA,EAAcnJ,QAC9BuI,GAAoBY,aAAY,EAAZA,EAAcnJ,QAAUmD,EAAM,GACpD,GAIlB,CAWA,SAASiG,KACL,MAAMC,EAAoBhK,I,MACtB,IAAIA,EAAKW,UAAYX,EAAKoE,QAAS,OAEnC,GAAgB,UAAbpE,EAAK0D,MAAiC,UAAb1D,EAAK0D,KAC7B,MAAO,CAAC,CAAEnD,GAAIP,EAAKzD,GAAIoE,QAASX,EAAKW,UAEzC,IAAIX,EAAKoG,gBAAiB,OAE1B,MAAMxC,EAAW5B,QAKjB,OAJa,QAAb,EAAAhC,EAAK4D,gBAAQ,SAAEzB,SAAQ8H,IACnB,MAAMC,EAAYF,EAAiBC,GAChCC,GAAaA,EAAU1G,OAAS,GAAGxB,MAAMmI,UAAU9N,KAAK+N,MAAMxG,EAAUsG,EAAU,IAElFtG,CAAQ,EAGbyG,EAAWrI,QAKjB,OAJAlD,EAAMe,MAAMsC,SAAQ9B,IAChB,MAAMiK,EAAWN,EAAiB3J,GAC/BiK,GAAYA,EAAS9G,OAAS,GAAGxB,MAAMmI,UAAU9N,KAAK+N,MAAMC,EAAUC,EAAS,IAE/ED,CAEX,CAYA,MAAO,CAACE,EAAUC,MACR,WAAc,QAAoB,MAAOxN,EAAY,EAC3D,IAAAM,GAAoB,MAAO,KAAM,EAC/B,QAAa,IAAc,CACzBL,OAAO,oBAAgB,CAAC,8BACxBwN,OAAO,QAAO1E,KAAuB,QAAOF,GAC5C6E,OAAO,QAAO3E,KAAuB,QAAOF,GAC5C8E,QAASnC,IACR,KAAM,EAAe,CAAC,QAAS,WAClC,IAAAlL,GAAoB,MAAOJ,EAAY,EACrC,IAAAI,GAAoB,OAAQH,GAAY,sBAAiB,QAAO4I,IAAsB,IACtF,QAAiB,SACjB,IAAAzI,GAAoB,OAAQF,GAAY,sBAAiB,QAAOyI,IAAmB,IACnF,QAAiB,wBAGrBxI,GACA,IAAAC,GAAoB,MAAOC,EAAY,EACrC,IAAAD,GAAoB,MAAO,CACzBL,OAAO,oBAAgB,CAAC,kBACxB0N,QAASH,EAAO,KAAOA,EAAO,GAAMI,GAAiB1M,EAAK,WACzD,WACH,IAAAZ,GAAoB,MAAO,CACzBL,OAAO,qBAAiB,QAAOqJ,GAAwB,kBAAoB,IAC3EqE,QAASH,EAAO,KAAOA,EAAO,GAAMI,KAAkB,QAAOtE,IArErEjH,iBACIZ,EAASa,SACLD,UACI,MAAMP,EAAQiL,WACRtL,EAASgB,eAAyCjD,EAAA,EAA0B,CAAEsC,QAAOK,cAAeA,EAAcU,QACxH3B,EAAK,QAAQ,GACnB,CAAE0H,SAAS,GACjB,CA8D8FiF,KACrF,CACDrN,GACE,QAAOmJ,IAEL,QAAoB,QAAQ,KAD3B,WAAc,QAAoB,OAAQlJ,EAAY,4CAEzD,QAAOgJ,IAEH,QAAOG,IAEP,QAAoB,QAAQ,KAD3B,WAAc,QAAoB,OAAQ/I,GAAa,qBAAiBuB,EAAmBS,OAAQ,MAFrG,WAAc,QAAoB,OAAQjC,EAAY,+FAI1D,OAIT,I,uICrlBIqF,EAAU,CAAC,EAEfA,EAAQ6H,kBAAoB,IAC5B7H,EAAQ8H,cAAgB,IAElB9H,EAAQ+H,OAAS,SAAc,KAAM,QAE3C/H,EAAQgI,OAAS,IACjBhI,EAAQiI,mBAAqB,IAEhB,IAAI,IAASjI,GAKJ,KAAW,YAAiB,W,eCf9C,EAAU,CAAC,EAEf,EAAQ6H,kBAAoB,IAC5B,EAAQC,cAAgB,IAElB,EAAQC,OAAS,SAAc,KAAM,QAE3C,EAAQC,OAAS,IACjB,EAAQC,mBAAqB,IAEhB,IAAI,IAAS,GAKJ,KAAW,YAAiB,WCnBlD,MAEA,GAFiC,E,SAAA,GAAgB,EAAQ,CAAC,CAAC,YAAY,oB","sources":["webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/workflowExportDialog.vue?9f34","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/workflowExportDialog.vue?75b1","webpack://qcloud_shell/./src/domain/useCase/ICreateWorkflowExportJob.ts","webpack://qcloud_shell/./src/domain/useCase/IFileDisplayerUseCase.ts","webpack://qcloud_shell/./src/domain/useCase/IListMultiModelVersions.ts","webpack://qcloud_shell/./src/domain/useCase/IListMultiModuleVersions.ts","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/workflowExportDialog.vue?0f6b","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/workflowExportDialog.vue?dfed","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/workflowExportDialog.vue?d854","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/workflowExportDialog.vue"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.container[data-v-3a5ba19e] {\\n    padding: 32px 20px 20px;\\n}\\n.settings-container[data-v-3a5ba19e] {\\n    position: relative;\\n    top: 0px;\\n    left: 0px;\\n}\\n.custom-text[data-v-3a5ba19e] {\\n    /* position: absolute; */\\n    font-family: 'Roboto';\\n    font-style: normal;\\n    font-weight: 500;\\n    font-size: 15px;\\n    line-height: 18px;\\n    /* left: 24px; */\\n    color: #212121;\\n}\\n\\n/* .custom-text.title{\\n    top: 92px;\\n}\\n\\n.custom-text.environment{\\n    top: 174px;\\n} */\\n.radio-button[data-v-3a5ba19e] {\\n    position: absolute;\\n    top: 60px;\\n    left: 20px;\\n    cursor: pointer;\\n}\\n.radio-text[data-v-3a5ba19e] {\\n    position: absolute;\\n    top: 59px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n    user-select: none;\\n    cursor: pointer;\\n}\\n.existing-app-url[data-v-3a5ba19e] {\\n    position: absolute;\\n    width: 760px;\\n    height: 40px;\\n    top: 114px;\\n    left: 20px;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #bcbcbc;\\n    border-radius: 4px;\\n    font: normal normal normal 14px/19px Roboto;\\n    letter-spacing: 0px;\\n    padding: 10px 0px 10px 10px;\\n}\\n.url-error[data-v-3a5ba19e] {\\n    border: 1px solid red;\\n}\\n.url-disable[data-v-3a5ba19e] {\\n    opacity: 0.5;\\n}\\n.existing-app-url[data-v-3a5ba19e]::placeholder {\\n    color: #bcbcbc;\\n    user-select: none;\\n}\\n.modules-selected-checkbox[data-v-3a5ba19e] {\\n    cursor: pointer;\\n}\\n.modules-selected-text[data-v-3a5ba19e] {\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #757575;\\n    margin: 0 0 13px 30px;\\n}\\n\\n/* .modules-selected-text.deploy {\\n    top: 257px;\\n} */\\n.text-number[data-v-3a5ba19e] {\\n    font: normal normal bold 14px/19px Roboto;\\n    color: #212121;\\n}\\n.modules-datatable[data-v-3a5ba19e] {\\n    width: 760px;\\n    height: 288px;\\n    border: 1px solid #bcbcbc;\\n    overflow-x: hidden;\\n    overflow-y: auto;\\n    margin-bottom: 20px;\\n}\\n\\n/* .modules-datatable.deploy {\\n    top: 286px;\\n} */\\n.modules-datatable[data-v-3a5ba19e]::-webkit-scrollbar {\\n    width: 4px;\\n}\\n.modules-datatable[data-v-3a5ba19e]::-webkit-scrollbar-thumb {\\n    background: #bcbcbc 0% 0% no-repeat padding-box;\\n    border-radius: 10px;\\n}\\n.modules-datatable[data-v-3a5ba19e]::-webkit-scrollbar-thumb:hover {\\n    background: #555;\\n}\\n.row-container[data-v-3a5ba19e] {\\n    width: 100%;\\n    height: 36px;\\n    position: relative;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #e0e0e0;\\n}\\n.chevron[data-v-3a5ba19e] {\\n    position: absolute;\\n    left: 4px;\\n    color: #757575;\\n    font-size: 24px;\\n}\\n.chevron.disabled[data-v-3a5ba19e] {\\n    pointer-events: none;\\n    color: #D5D5D5;\\n}\\n.module-checkbox[data-v-3a5ba19e] {\\n    position: absolute;\\n    top: 10px;\\n    left: 43px;\\n    cursor: pointer;\\n}\\n.module-name[data-v-3a5ba19e] {\\n    position: absolute;\\n    top: 9px;\\n    left: 69px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n.module-name.imported[data-v-3a5ba19e] {\\n    top: 10px;\\n    left: 87px;\\n}\\n.module-name.disabled[data-v-3a5ba19e] {\\n    color: #D5D5D5;\\n}\\n.model-checkbox[data-v-3a5ba19e] {\\n    position: absolute;\\n    top: 10px;\\n    left: 59px;\\n    cursor: pointer;\\n}\\n.model-icon[data-v-3a5ba19e] {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 85px;\\n}\\n.app-tier-model-icon[data-v-3a5ba19e] {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 69px\\n}\\n.app-tier-model-name[data-v-3a5ba19e] {\\n    position: absolute;\\n    top: 10px;\\n    left: 87px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n.app-tier-model-name.disabled[data-v-3a5ba19e] {\\n    color: #D5D5D5;\\n}\\n.model-name[data-v-3a5ba19e] {\\n    position: absolute;\\n    top: 9px;\\n    left: 103px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n.model-name.disabled[data-v-3a5ba19e] {\\n    color: #D5D5D5;\\n}\\n.version-text[data-v-3a5ba19e] {\\n    margin: 10px 7px 10px auto;\\n    display: table;\\n    font: normal normal normal 12px/16px Roboto;\\n    color: #757575;\\n    cursor: pointer;\\n    user-select: none;\\n}\\n.version-text.disabled[data-v-3a5ba19e] {\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n.version-icon[data-v-3a5ba19e] {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #D5D5D5;\\n}\\n.version-icon.disabled[data-v-3a5ba19e] {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #EEEEEE;\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n.footer[data-v-3a5ba19e] {\\n    position: relative;\\n    width: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: end;\\n}\\n.footer.deploy[data-v-3a5ba19e] {\\n    position: relative;\\n    width: 100%;\\n}\\n.footer.export[data-v-3a5ba19e] {\\n    margin-top: 102px;\\n}\\n.cancel-button[data-v-3a5ba19e] {\\n    border-radius: 4px;\\n    user-select: none;\\n    font-style: normal;\\n    font-weight: 500;\\n    font-family: \\\"ROBOTO\\\";\\n    font-size: 15px;\\n    color: #757575;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n.save-button[data-v-3a5ba19e] {\\n    background: #151233 0% 0% no-repeat padding-box;\\n    border-radius: 4px;\\n    user-select: none;\\n    font-weight: 500;\\n    font-size: 15px;\\n    color: #ffffff;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n.mobile-publish-text[data-v-3a5ba19e],\\n.web-publish-text[data-v-3a5ba19e] {\\n    padding: 5px 12px;\\n    margin-bottom: 52px;\\n    width: 100%;\\n    color: #757575;\\n    font-size: 14px;\\n    background: #F5F5FA;\\n    border-radius: 4px;\\n    display: flex;\\n    align-items: center;\\n}\\n.mobile-publish-text i[data-v-3a5ba19e],\\n.web-publish-text i[data-v-3a5ba19e] {\\n    font-size: 24px;\\n    color: #151233;\\n    margin-right: 4px;\\n}\\n.save-button.deploy[data-v-3a5ba19e] {\\n    padding: 10px 16px;\\n}\\n.button-disable .save-button[data-v-3a5ba19e] {\\n    color: #757575;\\n    cursor: default;\\n}\\n.button-disable .save-button:hover+.button-tooltip[data-v-3a5ba19e],\\n.start-screen:hover .button-tooltip[data-v-3a5ba19e],\\n.row-container:hover .button-tooltip[data-v-3a5ba19e],\\n.publish-info:hover .button-tooltip[data-v-3a5ba19e] {\\n    visibility: visible;\\n    transition: opacity 0.3s ease-out 1s;\\n    opacity: 1;\\n}\\n.button-tooltip[data-v-3a5ba19e] {\\n    visibility: hidden;\\n    position: absolute;\\n    background: #757575;\\n    color: #FFFFFF;\\n    font-size: 11px;\\n    font-family: 'Roboto';\\n    text-align: center;\\n    border-radius: 4px;\\n    letter-spacing: 0.2px;\\n    padding: 6px 8px 6px 8px;\\n    top: 56px;\\n    left: 63px;\\n    opacity: 0;\\n}\\n.publish-info[data-v-3a5ba19e] {\\n    color: #757575;\\n    font-size: 20px;\\n    margin-left: 10px;\\n}\\n.select-environment[data-v-3a5ba19e] {\\n    width: 100%;\\n    font-size: 15px;\\n    height: 40px;\\n    line-height: 40px;\\n    margin-top: 4px\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/presentation/vue3/components/dialogs/publish/workflowExportDialog.vue\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"<template>\\n    <div class=\\\"container\\\">\\n        <div>\\n            <CheckboxComp :class=\\\"['modules-selected-checkbox']\\\"\\n                :minus=\\\"selectedItemsCount != totalItemsCount\\\" :check=\\\"selectedItemsCount == totalItemsCount\\\"\\n                @click=\\\"clickMainCheckbox\\\" />\\n            <div :class=\\\"['modules-selected-text']\\\">\\n                <span class=\\\"text-number\\\">{{ selectedItemsCount }}</span>\\n                of <span class=\\\"text-number\\\">{{ totalItemsCount }}</span> items selected\\n            </div>\\n        </div>\\n        <div :class=\\\"['modules-datatable']\\\" id=\\\"module-container-div\\\"> </div>\\n        <div :class=\\\"['footer','export']\\\">\\n            <div :class=\\\"['cancel-button', ]\\\" @click=\\\"emit('close')\\\">Cancel</div>\\n            <div :class=\\\"(isDownloadBtnDisable ? ' button-disable' : '')\\\"\\n                @click=\\\"!isDownloadBtnDisable && downloadBtnClicked()\\\">\\n                <span class=\\\"save-button \\\">DOWNLOAD</span>\\n                <span v-if=\\\"!isWorkflowExecutionItemsOK\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -80px; left: 626px; z-index: 1; width: 145px;\\\">'getUser' & 'nofify' flows not found. </span>\\n                <span v-if=\\\"!isThereVersion\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -80px; left: 626px; z-index: 1; width: 145px;\\\">There are no items ready to publish. At least\\n                    one of your items must be ready to publish.</span>\\n                <span v-else-if=\\\"!isAllDependenciesOK\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -95px; left: 644px; z-index: 1; width: 135px;\\\">{{ dependencyErrorStr }}</span>\\n            </div>\\n        </div>\\n    </div>\\n</template>\\n\\n\\n<script setup lang=\\\"ts\\\">\\nimport { computed,createApp,defineAsyncComponent,onMounted,ref } from \\\"vue\\\";\\nimport { ITableData } from \\\"../../../../../../../common/qCloudTemp/exporter\\\";\\nimport { IModuleRelatedModelItem } from \\\"../../../../../../../common/qCloudTemp/quickCloud\\\";\\nimport { container } from \\\"../../../../../domain/core/diContainer\\\";\\nimport { IModel,IModelHistoryInfo,IModule,IModuleVersion,IWorkflowExportItem } from \\\"../../../../../domain/model/models\\\";\\nimport { IDialog } from \\\"../../../../../domain/presentation/IDialog\\\";\\nimport { ITreeItem } from \\\"../../../../../domain/presentation/ITreeView\\\";\\nimport { ICreateWorkflowExportJob } from \\\"../../../../../domain/useCase/ICreateWorkflowExportJob\\\";\\nimport { FileDisplayerExternalData,IFileDisplayerUseCase } from \\\"../../../../../domain/useCase/IFileDisplayerUseCase\\\";\\nimport { FileExplorerConstants } from \\\"../../../../../domain/useCase/IFileExplorer\\\";\\nimport { IListMultiModelVersions } from \\\"../../../../../domain/useCase/IListMultiModelVersions\\\";\\nimport { IListMultiModuleVersions } from \\\"../../../../../domain/useCase/IListMultiModuleVersions\\\";\\nimport { IObjectUseCase } from \\\"../../../../../domain/useCase/IObjectUseCase\\\";\\nimport { IUseCaseExecutor } from \\\"../../../../../domain/useCase/IUseCaseExecutor\\\";\\nimport { IViewModel } from \\\"../../../../../domain/viewModel/IViewModel\\\";\\nimport { IViewModelManager } from \\\"../../../../../domain/viewModel/IViewModelManager\\\";\\nimport CheckboxComp from \\\"../../checkboxComp.vue\\\";\\nimport ExportDialogItem from \\\"./components/exportDialogItem.vue\\\";\\n\\nconst viewModel = container.resolve<IViewModel>(IViewModel);\\nconst viewModelManager = container.resolve<IViewModelManager>(IViewModelManager);\\nconst dialog = container.resolve<IDialog>(IDialog);\\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\\nconst fileDisplayerUseCase = container.resolve<IFileDisplayerUseCase>(IFileDisplayerUseCase);\\nconst objectUseCase = container.resolve<IObjectUseCase>(IObjectUseCase);\\n\\n\\nconst emit = defineEmits([\\\"close\\\"]);\\nconst items = ref<Array<ITableData>>([]);\\nconst modelHistories = ref<Map<string, Array<IModelHistoryInfo>>>();\\nconst importedModuleVersions = ref<Map<string, Array<IModuleVersion>>>();\\nconst startScreen = ref<IModel>();\\nconst dependencyMap = ref<Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>>();\\nconst overridingMap = ref<Record<string, string>>({});\\nconst dependencyErrorStr = ref<string>('');\\n\\n\\nonMounted(async () => {\\n    await executor.execute(async () => {\\n        const excludedTypes: Array<IModel[\\\"modelType\\\"]> = ['bpmn', 'process', 'entityDesigner', 'process'];\\n        await Promise.all([\\n            executor.executeUseCase<IListMultiModelVersions>(IListMultiModelVersions, { excludedTypes }).then(res => modelHistories.value = res),\\n            executor.executeUseCase<IListMultiModuleVersions>(IListMultiModuleVersions, {}).then(res => importedModuleVersions.value = res)\\n        ]);\\n        initOverridingMap();\\n        initDependencies();\\n        handleItems();\\n    }, { loading: true });\\n})\\n\\nconst totalItemsCount = computed<number>(() => countItems(items.value));\\nconst selectedItemsCount = computed<number>(() => countItems(items.value, true));\\n\\nconst countItems = (arr:Array<ITableData>, useCheckedFilter = false) => {\\n  return arr.reduce((acc, item) => {\\n    if(useCheckedFilter && (item?.anyChildChecked == false || item?.checked == false)) return acc;\\n    let count = 1;\\n    if (item?.children) {\\n      count += countItems(item.children, useCheckedFilter);\\n    }\\n    return acc + count;\\n  }, 0);\\n};\\n\\nconst isDownloadBtnDisable = computed(validate);\\n// const mainCheckboxState = computed(() => items.value.length == allChildCheckedModulesCount.value ? true\\n//     : (anyChildCheckedModulesCount.value + checkedRootLevelModelsCount.value > 0 ? false : undefined));\\nconst isThereVersion = computed(() => checkMaxVersionOfAllItems());\\nconst isWorkflowExecutionItemsOK = computed(() => checkWorkflowExecutionItems());\\nconst isAllDependenciesOK = computed(validateDependencies)\\n\\nfunction validate() {\\n    return !items.value.some((item) => item.checked || item.anyChildChecked) || !validateDependencies() || !checkWorkflowExecutionItems();\\n}\\n\\n\\nfunction validateDependencies() {\\n    const checkMap = new Map<string, boolean>();\\n    items.value.forEach(item => {\\n        if (item.type == 'module' && item.children && item.children.length > 0)\\n            item.children.forEach(child => checkMap.set(child.id, child.checked == true))\\n        else\\n            checkMap.set(item.id, item.checked == true)\\n    })\\n\\n    const mustBeCheckedMap = new Map<string, Array<string>>();\\n    dependencyMap.value?.forEach((deps, id) => {\\n        if (!checkMap.get(id))\\n            return;\\n\\n        deps.dependedTo.forEach(dependedId => {\\n            if (checkMap.get(dependedId))\\n                return;\\n\\n            if (mustBeCheckedMap.has(id)) {\\n                const vals = mustBeCheckedMap.get(id)!\\n                vals.push(dependedId)\\n                mustBeCheckedMap.set(id, vals)\\n            } else {\\n                mustBeCheckedMap.set(id, [dependedId])\\n            }\\n\\n        });\\n    })\\n\\n    //set deps error text\\n    const [firstItemID] = mustBeCheckedMap.keys();\\n    if (firstItemID) {\\n        const firstItemDeps = mustBeCheckedMap.get(firstItemID);\\n        const firstItemDepStr = firstItemDeps ? firstItemDeps.map(findItem).map(e => e?.name).join(', ') : '';\\n        dependencyErrorStr.value = `Select ${firstItemDepStr} first. ${findItem(firstItemID)?.name} depends on ${firstItemDepStr}.`\\n    }\\n\\n    return mustBeCheckedMap.size == 0\\n}\\n\\n\\nfunction findItem(ID: string) {\\n    for (const item of items.value) {\\n        if (item.type != 'module' && item.id == ID)\\n            return item;\\n        if (item.type == 'module' && item.children && item.children.length > 0) {\\n            const f = item.children.find(e => e.id == ID)\\n            if (f) return f\\n        }\\n    }\\n}\\n\\nfunction initDependencies() {\\n    const map = new Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>();\\n    const depMap = new Map<string, Array<string>>();\\n\\n    viewModelManager.flatMapItems(viewModel.studio.items, (item) => {\\n        if (item.objectType != \\\"model\\\") { return; }\\n\\n        const isImportedModule = item.owner.objectType == \\\"module\\\" && objectUseCase.isModuleImported(item.owner);\\n\\n        let version: string | undefined;\\n        if (!isImportedModule) {\\n            const maxVersion = getItemMaxVersion(item)\\n            if (!maxVersion)\\n                return depMap.set(item.ID, item.dependentModels ? item.dependentModels.map(e => e.modelId) : Array<string>());\\n            version = maxVersion;\\n        }\\n        else {\\n            const moduleVersions = importedModuleVersions.value?.get(item.owner.ID)\\n            const moduleVersion = (item.owner as IModule).relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion\\n\\n            const importedModuleModel = moduleVersions?.filter(e => e.version == moduleVersion).flatMap(e => e.relatedModelHistories).find(e => e.modelID == item.ID)\\n            version = importedModuleModel?.version\\n        }\\n\\n        const historyItem = modelHistories.value?.get(item.ID)?.find(e => e.version == version);\\n        const deps = historyItem?.dependentModels ? historyItem?.dependentModels.map(e => e.modelId).map(e => overridingMap.value?.[e] || e) : Array<string>()\\n        depMap.set(item.ID, deps);\\n    });\\n\\n\\n    depMap.forEach((dependedTo, modelId) => {\\n        const dependedBy = Array<string>();\\n        depMap.forEach((dependencies, depModelId) => {\\n            if (dependencies.some(depId => depId == modelId))\\n                dependedBy.push(depModelId)\\n        })\\n        map.set(modelId, { dependedBy, dependedTo });\\n    })\\n    dependencyMap.value = map;\\n}\\n\\nfunction isModelDepended(item: ITableData) {\\n    const deps = dependencyMap.value?.get(item.id)?.dependedBy\\n    if (!deps) return false;\\n\\n    return deps.some(dep => items.value.some(item => {\\n        if (item.type == 'module' && item.anyChildChecked) {\\n            return item.children?.some(child => child.checked && child.id == dep)\\n        }\\n        return item.id == dep && item.checked\\n    }));\\n}\\nfunction createDialogComp(item: ITableData) {\\n    const newChild = createApp(ExportDialogItem, {\\n        handleItemCheckEvent,\\n        startScreen,\\n        versionDialog,\\n        handleCollapse,\\n        item: item,\\n        moduleVersionDialog\\n    });\\n    const mountEl = document.createElement('div');\\n    newChild.mount(mountEl);\\n    const parentEl = document.getElementById('module-container-div');\\n    parentEl?.appendChild(mountEl);\\n}\\nfunction createAndAppendItem({ newItem }: { newItem: ITableData }) {\\n    if(!newItem.overridden){\\n        createDialogComp(newItem);\\n        items.value.push(newItem);\\n    }\\n}\\n\\nfunction handleItems() {\\n    const treeItems = fileDisplayerUseCase.cloneFileExplorerTreeView({\\n        displayFilterer: (item, hasChildren) => {\\n            switch (item.ID) { case FileExplorerConstants.uiAssetListID: case FileExplorerConstants.uiSettingsID: return false; default: break; }\\n            switch (item.objectType) {\\n                case \\\"application\\\": return false;\\n                case \\\"module\\\": return true;\\n                case \\\"folder\\\": return hasChildren;\\n                case \\\"model\\\": return true;\\n            }\\n        },\\n    });\\n\\n    const converter = (treeItem: ITreeItem<FileDisplayerExternalData>, options: {ownerModule?: {isImportedModule: boolean;moduleVersion: string | undefined;relatedModelHistories: IModuleRelatedModelItem[] | undefined}}): ITableData => {\\n        const item = treeItem.externalData;\\n        if (item.objectType == \\\"application\\\") { throw new Error(\\\"unexpected item type\\\"); }\\n\\n        const fullPath = objectUseCase.getFullPath(item, \\\"self\\\");\\n        let level = fullPath.split(\\\"/\\\").length - 1;\\n\\n        let tableData: ITableData;\\n        switch(item.objectType) {\\n            case \\\"folder\\\":\\n                tableData = {\\n                    id: item.ID, name: item.name, type: \\\"folder\\\", collapsed: true, level,\\n                    children: treeItem.children?.map((item) => converter(item, { ownerModule: options.ownerModule })),\\n                };\\n                tableData.children?.forEach(child => child.parent = tableData);\\n                handleParentCheckedStatus(tableData, false);\\n                break;\\n            case \\\"model\\\":\\n                if (options.ownerModule) {\\n                    tableData = { id: item.ID, name: item.name, type: item.modelType, level, overridden: item.overridden}; //FIXME: set overridden status to externalData\\n                    if (!options.ownerModule.isImportedModule || item.isUnmodifiable) {\\n                        const maxVersion = getItemMaxVersion(item);\\n                        tableData = {\\n                            ...tableData,\\n                            checked: maxVersion ? true : item.isUnmodifiable,\\n                            disabled: maxVersion ? false : !item.isUnmodifiable,\\n                            version: maxVersion || 'latest',\\n                        };\\n                    } else {\\n                        const importedModulesModel = options.ownerModule.relatedModelHistories?.find(e => e.modelID == item.ID)\\n                        tableData = { ...tableData, checked: true, disabled: false, version: importedModulesModel?.version, overridden: item.overridden };\\n                    }\\n                } else {\\n                    const maxVersion = getItemMaxVersion(item);\\n                    tableData = {\\n                        id: item.ID,\\n                        name: item.name,\\n                        checked: maxVersion ? true : item.isUnmodifiable,\\n                        disabled: maxVersion ? false : !item.isUnmodifiable,\\n                        type: item.modelType,\\n                        version: maxVersion || 'latest',\\n                        level,\\n                        overridden: item.overridden,\\n                    };\\n                }\\n                break;\\n            case \\\"module\\\":\\n                const isImportedModule = objectUseCase.isModuleImported(item);\\n                const moduleVersion = item.relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion;\\n                const relatedModelHistories = isImportedModule ? importedModuleVersions.value?.get(item.ID)?.find(module => module.version == moduleVersion)?.relatedModelHistories : undefined\\n                \\n                tableData = {\\n                    id: item.ID,\\n                    collapsed: true,\\n                    name: item.name,\\n                    type: \\\"module\\\",\\n                    imported: isImportedModule,\\n                    version: moduleVersion,\\n                    children: treeItem.children?.map((item) => converter(item, {ownerModule: {isImportedModule, moduleVersion, relatedModelHistories}})),\\n                }\\n                tableData.children?.forEach(child => child.parent = tableData);\\n                handleParentCheckedStatus(tableData, false);\\n                break;\\n        }\\n        return tableData;\\n    };\\n    const tableDatas = treeItems.map(item => converter(item, {}));\\n\\n    const traverser = (tableData: ITableData) => {\\n        createAndAppendItem({ newItem: tableData });\\n        tableData.children?.forEach(traverser);\\n    };\\n    \\n    tableDatas.forEach(traverser);\\n}\\n\\nfunction getItemMaxVersion(item: IModel): string | undefined {\\n    if (!modelHistories.value?.has(item.ID))\\n        return undefined;\\n\\n    const versions = modelHistories.value.get(item.ID);\\n    if (!versions)\\n        return undefined;\\n\\n    const findMaxVersion = (versions: Array<string>) => {\\n        const versionNumbers = versions.map(v => {\\n            const parts: Array<string> = v.split(\\\".\\\");\\n            return parseInt(parts[0]) * 10 + parseInt(parts[1]) * 1;\\n        })\\n\\n        versionNumbers.sort((a, b) => b - a);\\n\\n        const maxVersion = versionNumbers[0];\\n        return `${Math.floor(maxVersion / 10)}.${maxVersion % 10}`;\\n    }\\n\\n    return findMaxVersion(versions.map(e => e.version!));\\n\\n}\\n\\nfunction checkMaxVersionOfAllItems() {\\n    let isThereVersion: boolean = false;\\n    items.value.forEach(item => {\\n        if (item.type == \\\"module\\\") {\\n            item.children?.forEach(child => {\\n                if (child.version) {\\n                    isThereVersion = true;\\n                }\\n\\n            })\\n        }\\n        else {\\n            if (item.version) {\\n                isThereVersion = true;\\n            }\\n        }\\n    })\\n    return isThereVersion;\\n}\\n\\n//FIXME: Tum objectler check edilmeli.\\nfunction checkWorkflowExecutionItems() {\\n    let getUserOK = false, notifyOK = false;\\n    const fn = (item: ITableData, name: string, type: string) => item.checked && item.type == type && item.name === name;\\n    for(const item of items.value) {\\n        if(getUserOK && notifyOK) break;\\n        if (item.type == \\\"module\\\" && item.children) {\\n            if(!getUserOK) getUserOK = item.children.some(e => fn(e, 'getUser', 'flow'));\\n            if(!notifyOK) notifyOK = item.children.some(e => fn(e, 'notify', 'flow'));\\n        }\\n        else {\\n            if(!getUserOK) getUserOK = !!fn(item, 'getUser', 'flow');\\n            if(!notifyOK) notifyOK = !!fn(item, 'notify', 'flow');\\n        }\\n    }\\n    return getUserOK && notifyOK;\\n}\\n\\nfunction clickMainCheckbox(){\\n    const checked = totalItemsCount.value == selectedItemsCount.value;\\n    items.value.filter(e => !e?.disabled).forEach((item) => {\\n        item.checked = !checked;\\n        const allItemsCheckable = item.allChildChecked != undefined && item.children && item.children.length > 0 && !item.children.some(c => c.disabled);\\n        if (allItemsCheckable) item.allChildChecked = !checked;\\n        if (item.anyChildChecked != undefined) item.anyChildChecked = !checked;\\n        if (item.children) item.children.filter(c => !c.disabled).forEach((child) => (child.checked = !checked));\\n    });\\n}\\n\\n\\nfunction handleCollapse(item: ITableData, childIterate?: boolean, collapsed?: boolean) {\\n    item.collapsed = collapsed !== undefined ? collapsed : !item.collapsed;\\n    if (childIterate) {\\n        item.children?.forEach(child => {\\n            const childEl = document.getElementById(child.id);\\n            childEl!.style.display = item.collapsed ? \\\"none\\\" : \\\"block\\\";\\n            handleCollapse(child, childIterate, item.collapsed);\\n        })\\n    }\\n}\\n\\nfunction checkAllDependents(item: ITableData, recurseParent: boolean) {\\n    if (item.disabled || item.checked) return;\\n\\n    item.checked = true\\n    item.parent && handleParentCheckedStatus(item.parent, recurseParent);\\n\\n    const deps = dependencyMap.value?.get(item.id)?.dependedTo\\n    if (!deps) return;\\n\\n    deps.forEach(dep => {\\n        items.value.forEach(item => {\\n            if (item.type == 'module' && !item.allChildChecked) {\\n                const willCheckItem = item.children?.find(child => !child.checked && child.id == dep)\\n                willCheckItem && checkAllDependents(willCheckItem, recurseParent);\\n                handleParentCheckedStatus(item, recurseParent);\\n                return;\\n            }\\n\\n            if (!item.checked && item.id == dep) {\\n                checkAllDependents(item, recurseParent);\\n                item.parent && handleParentCheckedStatus(item.parent, recurseParent);\\n            }\\n        })\\n    });\\n}\\n\\nfunction handleItemCheckEvent(item: ITableData) {\\n    if (item.disabled || isModelDepended(item) || item.name == 'App Settings')\\n        return;\\n\\n    if (item.type != \\\"module\\\" && item.type != \\\"folder\\\") {\\n        if (item.checked) {\\n            item.checked = false;\\n            item.parent && handleParentCheckedStatus(item.parent, true);\\n        } else {\\n            checkAllDependents(item, true);\\n        }\\n    } else {\\n        if (item.children && item.children.filter(c => !c.disabled).length > 0) {\\n            if (item.anyChildChecked) {\\n                item.children.filter(c => !c.disabled).forEach(child => child.checked = false);\\n                item.checked = false;\\n                handleParentCheckedStatus(item, true);\\n            } else {\\n                item.children.forEach(child => checkAllDependents(child, true));\\n                item.checked = true;\\n            }\\n        }\\n        else {\\n            item.checked = !item.checked;\\n            item.allChildChecked = false;\\n        }\\n    }\\n\\n}\\n\\nfunction handleParentCheckedStatus(item: ITableData, recurseParent: boolean) {\\n    item.disabled = item.children && (item.children.length == 0 || !item.children?.some(child => !child.disabled))\\n    item.allChildChecked = item.children && item.children.length > 0 && !item.children.some((child) => !child.checked || child.disabled);\\n    item.anyChildChecked = item.children?.some((child) => child.checked && !child.disabled);\\n    if (recurseParent && item.parent) {\\n        handleParentCheckedStatus(item.parent, true);\\n    }\\n}\\n\\nfunction updateDependencyMap(newVersion: string, item: ITableData) {\\n    const deps = dependencyMap.value?.get(item.id);\\n    dependencyMap.value?.set(item.id, {\\n        dependedBy: deps?.dependedBy || Array<string>(),\\n        dependedTo: modelHistories.value?.get(item.id)?.find(e => e.version == newVersion)?.dependentModels?.map(e => e.modelId) || Array<string>()\\n    })\\n}\\n\\nfunction versionDialog(item: ITableData) {\\n    const clickedNode = { id: item.id, state: { checked: item.checked }, text: item.name, type: item.type, version: item.version };\\n    const hasAnyVersion = modelHistories.value?.has(item.id);\\n    const options = {\\n        clickedNode, cb: (version: string) => {\\n            item.version = version;\\n            updateDependencyMap(version, item);\\n        }\\n    } as any;\\n\\n    if (hasAnyVersion) {\\n        options.versions = modelHistories.value?.get(item.id)\\n    }\\n    dialog.showDialog(\\n        defineAsyncComponent(() => import(\\\"../../application/modelVersionDialog.vue\\\")),\\n        { closable: true, title: \\\"Change Version\\\", width: \\\"1080px\\\", maxHeight: \\\"500px\\\", overflow: \\\"auto\\\" }, options\\n    );\\n}\\n\\nfunction moduleVersionDialog(item: ITableData) {\\n    dialog.showDialog(\\n        defineAsyncComponent(() => import(\\\"../../application/moduleVersionDialog.vue\\\")),\\n        { closable: true, title: \\\"Change Version\\\", width: \\\"1080px\\\", maxHeight: \\\"500px\\\", overflow: \\\"auto\\\" },\\n        {\\n            module: { ID: item.id }, versions: importedModuleVersions.value?.get(item.id), cb: (moduleVersion: IModuleVersion) => {\\n                item.version = moduleVersion.version;\\n                item.children?.forEach(child => {\\n                    const modulesModel = moduleVersion.relatedModelHistories.find(e => e.modelID == child.id)\\n                    child.version = modulesModel?.version\\n                    updateDependencyMap(modulesModel?.version!, child);\\n                })\\n            }\\n        }\\n    );\\n}\\n\\nasync function downloadBtnClicked() {\\n    executor.execute(\\n        async () => {\\n            const items = getJobItems();\\n            await executor.executeUseCase<ICreateWorkflowExportJob>(ICreateWorkflowExportJob, { items, overridingMap: overridingMap.value });\\n            emit(\\\"close\\\");\\n    },{ loading: true });\\n}\\n\\nfunction getJobItems(): Array<IWorkflowExportItem> {\\n    const findCheckedItems = (item: ITableData): Array<IWorkflowExportItem> | undefined => {\\n        if(!item.version || !item.checked) return;\\n\\n        if(item.type != 'module' && item.type != 'folder')\\n            return [{ ID: item.id, version: item.version }];\\n        \\n        if(!item.anyChildChecked) return;\\n\\n        const children = Array<IWorkflowExportItem>();\\n        item.children?.forEach(ch => {\\n            const childList = findCheckedItems(ch);\\n            if(childList && childList.length > 0) Array.prototype.push.apply(children, childList);\\n        });\\n        return children;\\n    }\\n\\n    const jobItems = Array<IWorkflowExportItem>();\\n    items.value.forEach(e => {\\n        const itemList = findCheckedItems(e);\\n        if(itemList && itemList.length > 0) Array.prototype.push.apply(jobItems, itemList);\\n    });\\n    return jobItems;\\n\\n}\\n\\nfunction initOverridingMap() {\\n    viewModelManager.flatMapItems(viewModel.studio.items, (item) => {\\n        if (item.objectType != \\\"model\\\" || !item.overridden) { return; }\\n        const overridingModel = viewModel.studio.items.find(e => e.objectType == 'model' && e.overriddenModel?.ID == item.ID);\\n        if(overridingModel?.ID)\\n            overridingMap.value[item.ID] = overridingModel?.ID;\\n    });\\n}\\n\\n</script>\\n\\n\\n<style scoped>\\n.container {\\n    padding: 32px 20px 20px;\\n}\\n\\n.settings-container {\\n    position: relative;\\n    top: 0px;\\n    left: 0px;\\n}\\n\\n.custom-text {\\n    /* position: absolute; */\\n    font-family: 'Roboto';\\n    font-style: normal;\\n    font-weight: 500;\\n    font-size: 15px;\\n    line-height: 18px;\\n    /* left: 24px; */\\n    color: #212121;\\n}\\n\\n/* .custom-text.title{\\n    top: 92px;\\n}\\n\\n.custom-text.environment{\\n    top: 174px;\\n} */\\n\\n.radio-button {\\n    position: absolute;\\n    top: 60px;\\n    left: 20px;\\n    cursor: pointer;\\n}\\n\\n.radio-text {\\n    position: absolute;\\n    top: 59px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n    user-select: none;\\n    cursor: pointer;\\n}\\n\\n.existing-app-url {\\n    position: absolute;\\n    width: 760px;\\n    height: 40px;\\n    top: 114px;\\n    left: 20px;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #bcbcbc;\\n    border-radius: 4px;\\n    font: normal normal normal 14px/19px Roboto;\\n    letter-spacing: 0px;\\n    padding: 10px 0px 10px 10px;\\n}\\n\\n.url-error {\\n    border: 1px solid red;\\n}\\n\\n.url-disable {\\n    opacity: 0.5;\\n}\\n\\n.existing-app-url::placeholder {\\n    color: #bcbcbc;\\n    user-select: none;\\n}\\n\\n.modules-selected-checkbox {\\n    cursor: pointer;\\n}\\n\\n.modules-selected-text {\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #757575;\\n    margin: 0 0 13px 30px;\\n    ;\\n}\\n\\n/* .modules-selected-text.deploy {\\n    top: 257px;\\n} */\\n\\n.text-number {\\n    font: normal normal bold 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.modules-datatable {\\n    width: 760px;\\n    height: 288px;\\n    border: 1px solid #bcbcbc;\\n    overflow-x: hidden;\\n    overflow-y: auto;\\n    margin-bottom: 20px;\\n}\\n\\n/* .modules-datatable.deploy {\\n    top: 286px;\\n} */\\n\\n.modules-datatable::-webkit-scrollbar {\\n    width: 4px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar-thumb {\\n    background: #bcbcbc 0% 0% no-repeat padding-box;\\n    border-radius: 10px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar-thumb:hover {\\n    background: #555;\\n}\\n\\n.row-container {\\n    width: 100%;\\n    height: 36px;\\n    position: relative;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #e0e0e0;\\n}\\n\\n.chevron {\\n    position: absolute;\\n    left: 4px;\\n    color: #757575;\\n    font-size: 24px;\\n}\\n\\n.chevron.disabled {\\n    pointer-events: none;\\n    color: #D5D5D5;\\n}\\n\\n.module-checkbox {\\n    position: absolute;\\n    top: 10px;\\n    left: 43px;\\n    cursor: pointer;\\n}\\n\\n.module-name {\\n    position: absolute;\\n    top: 9px;\\n    left: 69px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.module-name.imported {\\n    top: 10px;\\n    left: 87px;\\n}\\n\\n.module-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.model-checkbox {\\n    position: absolute;\\n    top: 10px;\\n    left: 59px;\\n    cursor: pointer;\\n}\\n\\n.model-icon {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 85px;\\n}\\n\\n.app-tier-model-icon {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 69px\\n}\\n\\n.app-tier-model-name {\\n    position: absolute;\\n    top: 10px;\\n    left: 87px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.app-tier-model-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.model-name {\\n    position: absolute;\\n    top: 9px;\\n    left: 103px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.model-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.version-text {\\n    margin: 10px 7px 10px auto;\\n    display: table;\\n    font: normal normal normal 12px/16px Roboto;\\n    color: #757575;\\n    cursor: pointer;\\n    user-select: none;\\n}\\n\\n.version-text.disabled {\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n\\n.version-icon {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #D5D5D5;\\n}\\n\\n.version-icon.disabled {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #EEEEEE;\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n\\n.footer {\\n    position: relative;\\n    width: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: end;\\n}\\n\\n.footer.deploy {\\n    position: relative;\\n    width: 100%;\\n}\\n\\n.footer.export {\\n    margin-top: 102px;\\n}\\n\\n.cancel-button {\\n    border-radius: 4px;\\n    user-select: none;\\n    font-style: normal;\\n    font-weight: 500;\\n    font-family: \\\"ROBOTO\\\";\\n    font-size: 15px;\\n    color: #757575;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n\\n\\n\\n.save-button {\\n    background: #151233 0% 0% no-repeat padding-box;\\n    border-radius: 4px;\\n    user-select: none;\\n    font-weight: 500;\\n    font-size: 15px;\\n    color: #ffffff;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n\\n.mobile-publish-text,\\n.web-publish-text {\\n    padding: 5px 12px;\\n    margin-bottom: 52px;\\n    width: 100%;\\n    color: #757575;\\n    font-size: 14px;\\n    background: #F5F5FA;\\n    border-radius: 4px;\\n    display: flex;\\n    align-items: center;\\n}\\n\\n.mobile-publish-text i,\\n.web-publish-text i {\\n    font-size: 24px;\\n    color: #151233;\\n    margin-right: 4px;\\n}\\n\\n.save-button.deploy {\\n    padding: 10px 16px;\\n}\\n\\n.button-disable .save-button {\\n    color: #757575;\\n    cursor: default;\\n}\\n\\n.button-disable .save-button:hover+.button-tooltip,\\n.start-screen:hover .button-tooltip,\\n.row-container:hover .button-tooltip,\\n.publish-info:hover .button-tooltip {\\n    visibility: visible;\\n    transition: opacity 0.3s ease-out 1s;\\n    opacity: 1;\\n}\\n\\n.button-tooltip {\\n    visibility: hidden;\\n    position: absolute;\\n    background: #757575;\\n    color: #FFFFFF;\\n    font-size: 11px;\\n    font-family: 'Roboto';\\n    text-align: center;\\n    border-radius: 4px;\\n    letter-spacing: 0.2px;\\n    padding: 6px 8px 6px 8px;\\n    top: 56px;\\n    left: 63px;\\n    opacity: 0;\\n}\\n\\n.publish-info {\\n    color: #757575;\\n    font-size: 20px;\\n    margin-left: 10px;\\n}\\n\\n.select-environment {\\n    width: 100%;\\n    font-size: 15px;\\n    height: 40px;\\n    line-height: 40px;\\n    margin-top: 4px\\n}\\n</style>\\n\\n<style>\\n.selected-environment {\\n    background-color: transparent;\\n    border-radius: 4px;\\n    border: 1px solid #BCBCBC;\\n    color: #212121;\\n    padding-left: 12px;\\n}\\n\\n.custom-placeholder:empty:before {\\n    color: #BCBCBC !important;\\n    font-weight: 400;\\n}\\n\\n.custom-select .items .option {\\n    font-size: 14px;\\n    padding-left: 12px;\\n    line-height: 32px;\\n}\\n\\n.custom-select .items .option:hover {\\n    background-color: #EEEEEE;\\n    color: #212121;\\n}\\n\\n.custom-select .items .option.disabled:hover {\\n    background-color: #FFFFFF;\\n    color: #212121;\\n}\\n\\n.custom-select.select-environment .items {\\n    margin-top: 4px;\\n    color: #212121;\\n    border-radius: 4px;\\n    border: 1px solid #E3E3E3;\\n    overflow: hidden;\\n    background-color: #FFFFFF;\\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\\n    position: static !important;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.selected-environment {\\n    background-color: transparent;\\n    border-radius: 4px;\\n    border: 1px solid #BCBCBC;\\n    color: #212121;\\n    padding-left: 12px;\\n}\\n.custom-placeholder:empty:before {\\n    color: #BCBCBC !important;\\n    font-weight: 400;\\n}\\n.custom-select .items .option {\\n    font-size: 14px;\\n    padding-left: 12px;\\n    line-height: 32px;\\n}\\n.custom-select .items .option:hover {\\n    background-color: #EEEEEE;\\n    color: #212121;\\n}\\n.custom-select .items .option.disabled:hover {\\n    background-color: #FFFFFF;\\n    color: #212121;\\n}\\n.custom-select.select-environment .items {\\n    margin-top: 4px;\\n    color: #212121;\\n    border-radius: 4px;\\n    border: 1px solid #E3E3E3;\\n    overflow: hidden;\\n    background-color: #FFFFFF;\\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\\n    position: static !important;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/presentation/vue3/components/dialogs/publish/workflowExportDialog.vue\"],\"names\":[],\"mappings\":\";AA84BA;IACI,6BAA6B;IAC7B,kBAAkB;IAClB,yBAAyB;IACzB,cAAc;IACd,kBAAkB;AACtB;AAEA;IACI,yBAAyB;IACzB,gBAAgB;AACpB;AAEA;IACI,eAAe;IACf,kBAAkB;IAClB,iBAAiB;AACrB;AAEA;IACI,yBAAyB;IACzB,cAAc;AAClB;AAEA;IACI,yBAAyB;IACzB,cAAc;AAClB;AAEA;IACI,eAAe;IACf,cAAc;IACd,kBAAkB;IAClB,yBAAyB;IACzB,gBAAgB;IAChB,yBAAyB;IACzB,0CAA0C;IAC1C,2BAA2B;AAC/B\",\"sourcesContent\":[\"<template>\\n    <div class=\\\"container\\\">\\n        <div>\\n            <CheckboxComp :class=\\\"['modules-selected-checkbox']\\\"\\n                :minus=\\\"selectedItemsCount != totalItemsCount\\\" :check=\\\"selectedItemsCount == totalItemsCount\\\"\\n                @click=\\\"clickMainCheckbox\\\" />\\n            <div :class=\\\"['modules-selected-text']\\\">\\n                <span class=\\\"text-number\\\">{{ selectedItemsCount }}</span>\\n                of <span class=\\\"text-number\\\">{{ totalItemsCount }}</span> items selected\\n            </div>\\n        </div>\\n        <div :class=\\\"['modules-datatable']\\\" id=\\\"module-container-div\\\"> </div>\\n        <div :class=\\\"['footer','export']\\\">\\n            <div :class=\\\"['cancel-button', ]\\\" @click=\\\"emit('close')\\\">Cancel</div>\\n            <div :class=\\\"(isDownloadBtnDisable ? ' button-disable' : '')\\\"\\n                @click=\\\"!isDownloadBtnDisable && downloadBtnClicked()\\\">\\n                <span class=\\\"save-button \\\">DOWNLOAD</span>\\n                <span v-if=\\\"!isWorkflowExecutionItemsOK\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -80px; left: 626px; z-index: 1; width: 145px;\\\">'getUser' & 'nofify' flows not found. </span>\\n                <span v-if=\\\"!isThereVersion\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -80px; left: 626px; z-index: 1; width: 145px;\\\">There are no items ready to publish. At least\\n                    one of your items must be ready to publish.</span>\\n                <span v-else-if=\\\"!isAllDependenciesOK\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -95px; left: 644px; z-index: 1; width: 135px;\\\">{{ dependencyErrorStr }}</span>\\n            </div>\\n        </div>\\n    </div>\\n</template>\\n\\n\\n<script setup lang=\\\"ts\\\">\\nimport { computed,createApp,defineAsyncComponent,onMounted,ref } from \\\"vue\\\";\\nimport { ITableData } from \\\"../../../../../../../common/qCloudTemp/exporter\\\";\\nimport { IModuleRelatedModelItem } from \\\"../../../../../../../common/qCloudTemp/quickCloud\\\";\\nimport { container } from \\\"../../../../../domain/core/diContainer\\\";\\nimport { IModel,IModelHistoryInfo,IModule,IModuleVersion,IWorkflowExportItem } from \\\"../../../../../domain/model/models\\\";\\nimport { IDialog } from \\\"../../../../../domain/presentation/IDialog\\\";\\nimport { ITreeItem } from \\\"../../../../../domain/presentation/ITreeView\\\";\\nimport { ICreateWorkflowExportJob } from \\\"../../../../../domain/useCase/ICreateWorkflowExportJob\\\";\\nimport { FileDisplayerExternalData,IFileDisplayerUseCase } from \\\"../../../../../domain/useCase/IFileDisplayerUseCase\\\";\\nimport { FileExplorerConstants } from \\\"../../../../../domain/useCase/IFileExplorer\\\";\\nimport { IListMultiModelVersions } from \\\"../../../../../domain/useCase/IListMultiModelVersions\\\";\\nimport { IListMultiModuleVersions } from \\\"../../../../../domain/useCase/IListMultiModuleVersions\\\";\\nimport { IObjectUseCase } from \\\"../../../../../domain/useCase/IObjectUseCase\\\";\\nimport { IUseCaseExecutor } from \\\"../../../../../domain/useCase/IUseCaseExecutor\\\";\\nimport { IViewModel } from \\\"../../../../../domain/viewModel/IViewModel\\\";\\nimport { IViewModelManager } from \\\"../../../../../domain/viewModel/IViewModelManager\\\";\\nimport CheckboxComp from \\\"../../checkboxComp.vue\\\";\\nimport ExportDialogItem from \\\"./components/exportDialogItem.vue\\\";\\n\\nconst viewModel = container.resolve<IViewModel>(IViewModel);\\nconst viewModelManager = container.resolve<IViewModelManager>(IViewModelManager);\\nconst dialog = container.resolve<IDialog>(IDialog);\\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\\nconst fileDisplayerUseCase = container.resolve<IFileDisplayerUseCase>(IFileDisplayerUseCase);\\nconst objectUseCase = container.resolve<IObjectUseCase>(IObjectUseCase);\\n\\n\\nconst emit = defineEmits([\\\"close\\\"]);\\nconst items = ref<Array<ITableData>>([]);\\nconst modelHistories = ref<Map<string, Array<IModelHistoryInfo>>>();\\nconst importedModuleVersions = ref<Map<string, Array<IModuleVersion>>>();\\nconst startScreen = ref<IModel>();\\nconst dependencyMap = ref<Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>>();\\nconst overridingMap = ref<Record<string, string>>({});\\nconst dependencyErrorStr = ref<string>('');\\n\\n\\nonMounted(async () => {\\n    await executor.execute(async () => {\\n        const excludedTypes: Array<IModel[\\\"modelType\\\"]> = ['bpmn', 'process', 'entityDesigner', 'process'];\\n        await Promise.all([\\n            executor.executeUseCase<IListMultiModelVersions>(IListMultiModelVersions, { excludedTypes }).then(res => modelHistories.value = res),\\n            executor.executeUseCase<IListMultiModuleVersions>(IListMultiModuleVersions, {}).then(res => importedModuleVersions.value = res)\\n        ]);\\n        initOverridingMap();\\n        initDependencies();\\n        handleItems();\\n    }, { loading: true });\\n})\\n\\nconst totalItemsCount = computed<number>(() => countItems(items.value));\\nconst selectedItemsCount = computed<number>(() => countItems(items.value, true));\\n\\nconst countItems = (arr:Array<ITableData>, useCheckedFilter = false) => {\\n  return arr.reduce((acc, item) => {\\n    if(useCheckedFilter && (item?.anyChildChecked == false || item?.checked == false)) return acc;\\n    let count = 1;\\n    if (item?.children) {\\n      count += countItems(item.children, useCheckedFilter);\\n    }\\n    return acc + count;\\n  }, 0);\\n};\\n\\nconst isDownloadBtnDisable = computed(validate);\\n// const mainCheckboxState = computed(() => items.value.length == allChildCheckedModulesCount.value ? true\\n//     : (anyChildCheckedModulesCount.value + checkedRootLevelModelsCount.value > 0 ? false : undefined));\\nconst isThereVersion = computed(() => checkMaxVersionOfAllItems());\\nconst isWorkflowExecutionItemsOK = computed(() => checkWorkflowExecutionItems());\\nconst isAllDependenciesOK = computed(validateDependencies)\\n\\nfunction validate() {\\n    return !items.value.some((item) => item.checked || item.anyChildChecked) || !validateDependencies() || !checkWorkflowExecutionItems();\\n}\\n\\n\\nfunction validateDependencies() {\\n    const checkMap = new Map<string, boolean>();\\n    items.value.forEach(item => {\\n        if (item.type == 'module' && item.children && item.children.length > 0)\\n            item.children.forEach(child => checkMap.set(child.id, child.checked == true))\\n        else\\n            checkMap.set(item.id, item.checked == true)\\n    })\\n\\n    const mustBeCheckedMap = new Map<string, Array<string>>();\\n    dependencyMap.value?.forEach((deps, id) => {\\n        if (!checkMap.get(id))\\n            return;\\n\\n        deps.dependedTo.forEach(dependedId => {\\n            if (checkMap.get(dependedId))\\n                return;\\n\\n            if (mustBeCheckedMap.has(id)) {\\n                const vals = mustBeCheckedMap.get(id)!\\n                vals.push(dependedId)\\n                mustBeCheckedMap.set(id, vals)\\n            } else {\\n                mustBeCheckedMap.set(id, [dependedId])\\n            }\\n\\n        });\\n    })\\n\\n    //set deps error text\\n    const [firstItemID] = mustBeCheckedMap.keys();\\n    if (firstItemID) {\\n        const firstItemDeps = mustBeCheckedMap.get(firstItemID);\\n        const firstItemDepStr = firstItemDeps ? firstItemDeps.map(findItem).map(e => e?.name).join(', ') : '';\\n        dependencyErrorStr.value = `Select ${firstItemDepStr} first. ${findItem(firstItemID)?.name} depends on ${firstItemDepStr}.`\\n    }\\n\\n    return mustBeCheckedMap.size == 0\\n}\\n\\n\\nfunction findItem(ID: string) {\\n    for (const item of items.value) {\\n        if (item.type != 'module' && item.id == ID)\\n            return item;\\n        if (item.type == 'module' && item.children && item.children.length > 0) {\\n            const f = item.children.find(e => e.id == ID)\\n            if (f) return f\\n        }\\n    }\\n}\\n\\nfunction initDependencies() {\\n    const map = new Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>();\\n    const depMap = new Map<string, Array<string>>();\\n\\n    viewModelManager.flatMapItems(viewModel.studio.items, (item) => {\\n        if (item.objectType != \\\"model\\\") { return; }\\n\\n        const isImportedModule = item.owner.objectType == \\\"module\\\" && objectUseCase.isModuleImported(item.owner);\\n\\n        let version: string | undefined;\\n        if (!isImportedModule) {\\n            const maxVersion = getItemMaxVersion(item)\\n            if (!maxVersion)\\n                return depMap.set(item.ID, item.dependentModels ? item.dependentModels.map(e => e.modelId) : Array<string>());\\n            version = maxVersion;\\n        }\\n        else {\\n            const moduleVersions = importedModuleVersions.value?.get(item.owner.ID)\\n            const moduleVersion = (item.owner as IModule).relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion\\n\\n            const importedModuleModel = moduleVersions?.filter(e => e.version == moduleVersion).flatMap(e => e.relatedModelHistories).find(e => e.modelID == item.ID)\\n            version = importedModuleModel?.version\\n        }\\n\\n        const historyItem = modelHistories.value?.get(item.ID)?.find(e => e.version == version);\\n        const deps = historyItem?.dependentModels ? historyItem?.dependentModels.map(e => e.modelId).map(e => overridingMap.value?.[e] || e) : Array<string>()\\n        depMap.set(item.ID, deps);\\n    });\\n\\n\\n    depMap.forEach((dependedTo, modelId) => {\\n        const dependedBy = Array<string>();\\n        depMap.forEach((dependencies, depModelId) => {\\n            if (dependencies.some(depId => depId == modelId))\\n                dependedBy.push(depModelId)\\n        })\\n        map.set(modelId, { dependedBy, dependedTo });\\n    })\\n    dependencyMap.value = map;\\n}\\n\\nfunction isModelDepended(item: ITableData) {\\n    const deps = dependencyMap.value?.get(item.id)?.dependedBy\\n    if (!deps) return false;\\n\\n    return deps.some(dep => items.value.some(item => {\\n        if (item.type == 'module' && item.anyChildChecked) {\\n            return item.children?.some(child => child.checked && child.id == dep)\\n        }\\n        return item.id == dep && item.checked\\n    }));\\n}\\nfunction createDialogComp(item: ITableData) {\\n    const newChild = createApp(ExportDialogItem, {\\n        handleItemCheckEvent,\\n        startScreen,\\n        versionDialog,\\n        handleCollapse,\\n        item: item,\\n        moduleVersionDialog\\n    });\\n    const mountEl = document.createElement('div');\\n    newChild.mount(mountEl);\\n    const parentEl = document.getElementById('module-container-div');\\n    parentEl?.appendChild(mountEl);\\n}\\nfunction createAndAppendItem({ newItem }: { newItem: ITableData }) {\\n    if(!newItem.overridden){\\n        createDialogComp(newItem);\\n        items.value.push(newItem);\\n    }\\n}\\n\\nfunction handleItems() {\\n    const treeItems = fileDisplayerUseCase.cloneFileExplorerTreeView({\\n        displayFilterer: (item, hasChildren) => {\\n            switch (item.ID) { case FileExplorerConstants.uiAssetListID: case FileExplorerConstants.uiSettingsID: return false; default: break; }\\n            switch (item.objectType) {\\n                case \\\"application\\\": return false;\\n                case \\\"module\\\": return true;\\n                case \\\"folder\\\": return hasChildren;\\n                case \\\"model\\\": return true;\\n            }\\n        },\\n    });\\n\\n    const converter = (treeItem: ITreeItem<FileDisplayerExternalData>, options: {ownerModule?: {isImportedModule: boolean;moduleVersion: string | undefined;relatedModelHistories: IModuleRelatedModelItem[] | undefined}}): ITableData => {\\n        const item = treeItem.externalData;\\n        if (item.objectType == \\\"application\\\") { throw new Error(\\\"unexpected item type\\\"); }\\n\\n        const fullPath = objectUseCase.getFullPath(item, \\\"self\\\");\\n        let level = fullPath.split(\\\"/\\\").length - 1;\\n\\n        let tableData: ITableData;\\n        switch(item.objectType) {\\n            case \\\"folder\\\":\\n                tableData = {\\n                    id: item.ID, name: item.name, type: \\\"folder\\\", collapsed: true, level,\\n                    children: treeItem.children?.map((item) => converter(item, { ownerModule: options.ownerModule })),\\n                };\\n                tableData.children?.forEach(child => child.parent = tableData);\\n                handleParentCheckedStatus(tableData, false);\\n                break;\\n            case \\\"model\\\":\\n                if (options.ownerModule) {\\n                    tableData = { id: item.ID, name: item.name, type: item.modelType, level, overridden: item.overridden}; //FIXME: set overridden status to externalData\\n                    if (!options.ownerModule.isImportedModule || item.isUnmodifiable) {\\n                        const maxVersion = getItemMaxVersion(item);\\n                        tableData = {\\n                            ...tableData,\\n                            checked: maxVersion ? true : item.isUnmodifiable,\\n                            disabled: maxVersion ? false : !item.isUnmodifiable,\\n                            version: maxVersion || 'latest',\\n                        };\\n                    } else {\\n                        const importedModulesModel = options.ownerModule.relatedModelHistories?.find(e => e.modelID == item.ID)\\n                        tableData = { ...tableData, checked: true, disabled: false, version: importedModulesModel?.version, overridden: item.overridden };\\n                    }\\n                } else {\\n                    const maxVersion = getItemMaxVersion(item);\\n                    tableData = {\\n                        id: item.ID,\\n                        name: item.name,\\n                        checked: maxVersion ? true : item.isUnmodifiable,\\n                        disabled: maxVersion ? false : !item.isUnmodifiable,\\n                        type: item.modelType,\\n                        version: maxVersion || 'latest',\\n                        level,\\n                        overridden: item.overridden,\\n                    };\\n                }\\n                break;\\n            case \\\"module\\\":\\n                const isImportedModule = objectUseCase.isModuleImported(item);\\n                const moduleVersion = item.relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion;\\n                const relatedModelHistories = isImportedModule ? importedModuleVersions.value?.get(item.ID)?.find(module => module.version == moduleVersion)?.relatedModelHistories : undefined\\n                \\n                tableData = {\\n                    id: item.ID,\\n                    collapsed: true,\\n                    name: item.name,\\n                    type: \\\"module\\\",\\n                    imported: isImportedModule,\\n                    version: moduleVersion,\\n                    children: treeItem.children?.map((item) => converter(item, {ownerModule: {isImportedModule, moduleVersion, relatedModelHistories}})),\\n                }\\n                tableData.children?.forEach(child => child.parent = tableData);\\n                handleParentCheckedStatus(tableData, false);\\n                break;\\n        }\\n        return tableData;\\n    };\\n    const tableDatas = treeItems.map(item => converter(item, {}));\\n\\n    const traverser = (tableData: ITableData) => {\\n        createAndAppendItem({ newItem: tableData });\\n        tableData.children?.forEach(traverser);\\n    };\\n    \\n    tableDatas.forEach(traverser);\\n}\\n\\nfunction getItemMaxVersion(item: IModel): string | undefined {\\n    if (!modelHistories.value?.has(item.ID))\\n        return undefined;\\n\\n    const versions = modelHistories.value.get(item.ID);\\n    if (!versions)\\n        return undefined;\\n\\n    const findMaxVersion = (versions: Array<string>) => {\\n        const versionNumbers = versions.map(v => {\\n            const parts: Array<string> = v.split(\\\".\\\");\\n            return parseInt(parts[0]) * 10 + parseInt(parts[1]) * 1;\\n        })\\n\\n        versionNumbers.sort((a, b) => b - a);\\n\\n        const maxVersion = versionNumbers[0];\\n        return `${Math.floor(maxVersion / 10)}.${maxVersion % 10}`;\\n    }\\n\\n    return findMaxVersion(versions.map(e => e.version!));\\n\\n}\\n\\nfunction checkMaxVersionOfAllItems() {\\n    let isThereVersion: boolean = false;\\n    items.value.forEach(item => {\\n        if (item.type == \\\"module\\\") {\\n            item.children?.forEach(child => {\\n                if (child.version) {\\n                    isThereVersion = true;\\n                }\\n\\n            })\\n        }\\n        else {\\n            if (item.version) {\\n                isThereVersion = true;\\n            }\\n        }\\n    })\\n    return isThereVersion;\\n}\\n\\n//FIXME: Tum objectler check edilmeli.\\nfunction checkWorkflowExecutionItems() {\\n    let getUserOK = false, notifyOK = false;\\n    const fn = (item: ITableData, name: string, type: string) => item.checked && item.type == type && item.name === name;\\n    for(const item of items.value) {\\n        if(getUserOK && notifyOK) break;\\n        if (item.type == \\\"module\\\" && item.children) {\\n            if(!getUserOK) getUserOK = item.children.some(e => fn(e, 'getUser', 'flow'));\\n            if(!notifyOK) notifyOK = item.children.some(e => fn(e, 'notify', 'flow'));\\n        }\\n        else {\\n            if(!getUserOK) getUserOK = !!fn(item, 'getUser', 'flow');\\n            if(!notifyOK) notifyOK = !!fn(item, 'notify', 'flow');\\n        }\\n    }\\n    return getUserOK && notifyOK;\\n}\\n\\nfunction clickMainCheckbox(){\\n    const checked = totalItemsCount.value == selectedItemsCount.value;\\n    items.value.filter(e => !e?.disabled).forEach((item) => {\\n        item.checked = !checked;\\n        const allItemsCheckable = item.allChildChecked != undefined && item.children && item.children.length > 0 && !item.children.some(c => c.disabled);\\n        if (allItemsCheckable) item.allChildChecked = !checked;\\n        if (item.anyChildChecked != undefined) item.anyChildChecked = !checked;\\n        if (item.children) item.children.filter(c => !c.disabled).forEach((child) => (child.checked = !checked));\\n    });\\n}\\n\\n\\nfunction handleCollapse(item: ITableData, childIterate?: boolean, collapsed?: boolean) {\\n    item.collapsed = collapsed !== undefined ? collapsed : !item.collapsed;\\n    if (childIterate) {\\n        item.children?.forEach(child => {\\n            const childEl = document.getElementById(child.id);\\n            childEl!.style.display = item.collapsed ? \\\"none\\\" : \\\"block\\\";\\n            handleCollapse(child, childIterate, item.collapsed);\\n        })\\n    }\\n}\\n\\nfunction checkAllDependents(item: ITableData, recurseParent: boolean) {\\n    if (item.disabled || item.checked) return;\\n\\n    item.checked = true\\n    item.parent && handleParentCheckedStatus(item.parent, recurseParent);\\n\\n    const deps = dependencyMap.value?.get(item.id)?.dependedTo\\n    if (!deps) return;\\n\\n    deps.forEach(dep => {\\n        items.value.forEach(item => {\\n            if (item.type == 'module' && !item.allChildChecked) {\\n                const willCheckItem = item.children?.find(child => !child.checked && child.id == dep)\\n                willCheckItem && checkAllDependents(willCheckItem, recurseParent);\\n                handleParentCheckedStatus(item, recurseParent);\\n                return;\\n            }\\n\\n            if (!item.checked && item.id == dep) {\\n                checkAllDependents(item, recurseParent);\\n                item.parent && handleParentCheckedStatus(item.parent, recurseParent);\\n            }\\n        })\\n    });\\n}\\n\\nfunction handleItemCheckEvent(item: ITableData) {\\n    if (item.disabled || isModelDepended(item) || item.name == 'App Settings')\\n        return;\\n\\n    if (item.type != \\\"module\\\" && item.type != \\\"folder\\\") {\\n        if (item.checked) {\\n            item.checked = false;\\n            item.parent && handleParentCheckedStatus(item.parent, true);\\n        } else {\\n            checkAllDependents(item, true);\\n        }\\n    } else {\\n        if (item.children && item.children.filter(c => !c.disabled).length > 0) {\\n            if (item.anyChildChecked) {\\n                item.children.filter(c => !c.disabled).forEach(child => child.checked = false);\\n                item.checked = false;\\n                handleParentCheckedStatus(item, true);\\n            } else {\\n                item.children.forEach(child => checkAllDependents(child, true));\\n                item.checked = true;\\n            }\\n        }\\n        else {\\n            item.checked = !item.checked;\\n            item.allChildChecked = false;\\n        }\\n    }\\n\\n}\\n\\nfunction handleParentCheckedStatus(item: ITableData, recurseParent: boolean) {\\n    item.disabled = item.children && (item.children.length == 0 || !item.children?.some(child => !child.disabled))\\n    item.allChildChecked = item.children && item.children.length > 0 && !item.children.some((child) => !child.checked || child.disabled);\\n    item.anyChildChecked = item.children?.some((child) => child.checked && !child.disabled);\\n    if (recurseParent && item.parent) {\\n        handleParentCheckedStatus(item.parent, true);\\n    }\\n}\\n\\nfunction updateDependencyMap(newVersion: string, item: ITableData) {\\n    const deps = dependencyMap.value?.get(item.id);\\n    dependencyMap.value?.set(item.id, {\\n        dependedBy: deps?.dependedBy || Array<string>(),\\n        dependedTo: modelHistories.value?.get(item.id)?.find(e => e.version == newVersion)?.dependentModels?.map(e => e.modelId) || Array<string>()\\n    })\\n}\\n\\nfunction versionDialog(item: ITableData) {\\n    const clickedNode = { id: item.id, state: { checked: item.checked }, text: item.name, type: item.type, version: item.version };\\n    const hasAnyVersion = modelHistories.value?.has(item.id);\\n    const options = {\\n        clickedNode, cb: (version: string) => {\\n            item.version = version;\\n            updateDependencyMap(version, item);\\n        }\\n    } as any;\\n\\n    if (hasAnyVersion) {\\n        options.versions = modelHistories.value?.get(item.id)\\n    }\\n    dialog.showDialog(\\n        defineAsyncComponent(() => import(\\\"../../application/modelVersionDialog.vue\\\")),\\n        { closable: true, title: \\\"Change Version\\\", width: \\\"1080px\\\", maxHeight: \\\"500px\\\", overflow: \\\"auto\\\" }, options\\n    );\\n}\\n\\nfunction moduleVersionDialog(item: ITableData) {\\n    dialog.showDialog(\\n        defineAsyncComponent(() => import(\\\"../../application/moduleVersionDialog.vue\\\")),\\n        { closable: true, title: \\\"Change Version\\\", width: \\\"1080px\\\", maxHeight: \\\"500px\\\", overflow: \\\"auto\\\" },\\n        {\\n            module: { ID: item.id }, versions: importedModuleVersions.value?.get(item.id), cb: (moduleVersion: IModuleVersion) => {\\n                item.version = moduleVersion.version;\\n                item.children?.forEach(child => {\\n                    const modulesModel = moduleVersion.relatedModelHistories.find(e => e.modelID == child.id)\\n                    child.version = modulesModel?.version\\n                    updateDependencyMap(modulesModel?.version!, child);\\n                })\\n            }\\n        }\\n    );\\n}\\n\\nasync function downloadBtnClicked() {\\n    executor.execute(\\n        async () => {\\n            const items = getJobItems();\\n            await executor.executeUseCase<ICreateWorkflowExportJob>(ICreateWorkflowExportJob, { items, overridingMap: overridingMap.value });\\n            emit(\\\"close\\\");\\n    },{ loading: true });\\n}\\n\\nfunction getJobItems(): Array<IWorkflowExportItem> {\\n    const findCheckedItems = (item: ITableData): Array<IWorkflowExportItem> | undefined => {\\n        if(!item.version || !item.checked) return;\\n\\n        if(item.type != 'module' && item.type != 'folder')\\n            return [{ ID: item.id, version: item.version }];\\n        \\n        if(!item.anyChildChecked) return;\\n\\n        const children = Array<IWorkflowExportItem>();\\n        item.children?.forEach(ch => {\\n            const childList = findCheckedItems(ch);\\n            if(childList && childList.length > 0) Array.prototype.push.apply(children, childList);\\n        });\\n        return children;\\n    }\\n\\n    const jobItems = Array<IWorkflowExportItem>();\\n    items.value.forEach(e => {\\n        const itemList = findCheckedItems(e);\\n        if(itemList && itemList.length > 0) Array.prototype.push.apply(jobItems, itemList);\\n    });\\n    return jobItems;\\n\\n}\\n\\nfunction initOverridingMap() {\\n    viewModelManager.flatMapItems(viewModel.studio.items, (item) => {\\n        if (item.objectType != \\\"model\\\" || !item.overridden) { return; }\\n        const overridingModel = viewModel.studio.items.find(e => e.objectType == 'model' && e.overriddenModel?.ID == item.ID);\\n        if(overridingModel?.ID)\\n            overridingMap.value[item.ID] = overridingModel?.ID;\\n    });\\n}\\n\\n</script>\\n\\n\\n<style scoped>\\n.container {\\n    padding: 32px 20px 20px;\\n}\\n\\n.settings-container {\\n    position: relative;\\n    top: 0px;\\n    left: 0px;\\n}\\n\\n.custom-text {\\n    /* position: absolute; */\\n    font-family: 'Roboto';\\n    font-style: normal;\\n    font-weight: 500;\\n    font-size: 15px;\\n    line-height: 18px;\\n    /* left: 24px; */\\n    color: #212121;\\n}\\n\\n/* .custom-text.title{\\n    top: 92px;\\n}\\n\\n.custom-text.environment{\\n    top: 174px;\\n} */\\n\\n.radio-button {\\n    position: absolute;\\n    top: 60px;\\n    left: 20px;\\n    cursor: pointer;\\n}\\n\\n.radio-text {\\n    position: absolute;\\n    top: 59px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n    user-select: none;\\n    cursor: pointer;\\n}\\n\\n.existing-app-url {\\n    position: absolute;\\n    width: 760px;\\n    height: 40px;\\n    top: 114px;\\n    left: 20px;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #bcbcbc;\\n    border-radius: 4px;\\n    font: normal normal normal 14px/19px Roboto;\\n    letter-spacing: 0px;\\n    padding: 10px 0px 10px 10px;\\n}\\n\\n.url-error {\\n    border: 1px solid red;\\n}\\n\\n.url-disable {\\n    opacity: 0.5;\\n}\\n\\n.existing-app-url::placeholder {\\n    color: #bcbcbc;\\n    user-select: none;\\n}\\n\\n.modules-selected-checkbox {\\n    cursor: pointer;\\n}\\n\\n.modules-selected-text {\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #757575;\\n    margin: 0 0 13px 30px;\\n    ;\\n}\\n\\n/* .modules-selected-text.deploy {\\n    top: 257px;\\n} */\\n\\n.text-number {\\n    font: normal normal bold 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.modules-datatable {\\n    width: 760px;\\n    height: 288px;\\n    border: 1px solid #bcbcbc;\\n    overflow-x: hidden;\\n    overflow-y: auto;\\n    margin-bottom: 20px;\\n}\\n\\n/* .modules-datatable.deploy {\\n    top: 286px;\\n} */\\n\\n.modules-datatable::-webkit-scrollbar {\\n    width: 4px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar-thumb {\\n    background: #bcbcbc 0% 0% no-repeat padding-box;\\n    border-radius: 10px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar-thumb:hover {\\n    background: #555;\\n}\\n\\n.row-container {\\n    width: 100%;\\n    height: 36px;\\n    position: relative;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #e0e0e0;\\n}\\n\\n.chevron {\\n    position: absolute;\\n    left: 4px;\\n    color: #757575;\\n    font-size: 24px;\\n}\\n\\n.chevron.disabled {\\n    pointer-events: none;\\n    color: #D5D5D5;\\n}\\n\\n.module-checkbox {\\n    position: absolute;\\n    top: 10px;\\n    left: 43px;\\n    cursor: pointer;\\n}\\n\\n.module-name {\\n    position: absolute;\\n    top: 9px;\\n    left: 69px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.module-name.imported {\\n    top: 10px;\\n    left: 87px;\\n}\\n\\n.module-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.model-checkbox {\\n    position: absolute;\\n    top: 10px;\\n    left: 59px;\\n    cursor: pointer;\\n}\\n\\n.model-icon {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 85px;\\n}\\n\\n.app-tier-model-icon {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 69px\\n}\\n\\n.app-tier-model-name {\\n    position: absolute;\\n    top: 10px;\\n    left: 87px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.app-tier-model-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.model-name {\\n    position: absolute;\\n    top: 9px;\\n    left: 103px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.model-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.version-text {\\n    margin: 10px 7px 10px auto;\\n    display: table;\\n    font: normal normal normal 12px/16px Roboto;\\n    color: #757575;\\n    cursor: pointer;\\n    user-select: none;\\n}\\n\\n.version-text.disabled {\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n\\n.version-icon {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #D5D5D5;\\n}\\n\\n.version-icon.disabled {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #EEEEEE;\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n\\n.footer {\\n    position: relative;\\n    width: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: end;\\n}\\n\\n.footer.deploy {\\n    position: relative;\\n    width: 100%;\\n}\\n\\n.footer.export {\\n    margin-top: 102px;\\n}\\n\\n.cancel-button {\\n    border-radius: 4px;\\n    user-select: none;\\n    font-style: normal;\\n    font-weight: 500;\\n    font-family: \\\"ROBOTO\\\";\\n    font-size: 15px;\\n    color: #757575;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n\\n\\n\\n.save-button {\\n    background: #151233 0% 0% no-repeat padding-box;\\n    border-radius: 4px;\\n    user-select: none;\\n    font-weight: 500;\\n    font-size: 15px;\\n    color: #ffffff;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n\\n.mobile-publish-text,\\n.web-publish-text {\\n    padding: 5px 12px;\\n    margin-bottom: 52px;\\n    width: 100%;\\n    color: #757575;\\n    font-size: 14px;\\n    background: #F5F5FA;\\n    border-radius: 4px;\\n    display: flex;\\n    align-items: center;\\n}\\n\\n.mobile-publish-text i,\\n.web-publish-text i {\\n    font-size: 24px;\\n    color: #151233;\\n    margin-right: 4px;\\n}\\n\\n.save-button.deploy {\\n    padding: 10px 16px;\\n}\\n\\n.button-disable .save-button {\\n    color: #757575;\\n    cursor: default;\\n}\\n\\n.button-disable .save-button:hover+.button-tooltip,\\n.start-screen:hover .button-tooltip,\\n.row-container:hover .button-tooltip,\\n.publish-info:hover .button-tooltip {\\n    visibility: visible;\\n    transition: opacity 0.3s ease-out 1s;\\n    opacity: 1;\\n}\\n\\n.button-tooltip {\\n    visibility: hidden;\\n    position: absolute;\\n    background: #757575;\\n    color: #FFFFFF;\\n    font-size: 11px;\\n    font-family: 'Roboto';\\n    text-align: center;\\n    border-radius: 4px;\\n    letter-spacing: 0.2px;\\n    padding: 6px 8px 6px 8px;\\n    top: 56px;\\n    left: 63px;\\n    opacity: 0;\\n}\\n\\n.publish-info {\\n    color: #757575;\\n    font-size: 20px;\\n    margin-left: 10px;\\n}\\n\\n.select-environment {\\n    width: 100%;\\n    font-size: 15px;\\n    height: 40px;\\n    line-height: 40px;\\n    margin-top: 4px\\n}\\n</style>\\n\\n<style>\\n.selected-environment {\\n    background-color: transparent;\\n    border-radius: 4px;\\n    border: 1px solid #BCBCBC;\\n    color: #212121;\\n    padding-left: 12px;\\n}\\n\\n.custom-placeholder:empty:before {\\n    color: #BCBCBC !important;\\n    font-weight: 400;\\n}\\n\\n.custom-select .items .option {\\n    font-size: 14px;\\n    padding-left: 12px;\\n    line-height: 32px;\\n}\\n\\n.custom-select .items .option:hover {\\n    background-color: #EEEEEE;\\n    color: #212121;\\n}\\n\\n.custom-select .items .option.disabled:hover {\\n    background-color: #FFFFFF;\\n    color: #212121;\\n}\\n\\n.custom-select.select-environment .items {\\n    margin-top: 4px;\\n    color: #212121;\\n    border-radius: 4px;\\n    border: 1px solid #E3E3E3;\\n    overflow: hidden;\\n    background-color: #FFFFFF;\\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\\n    position: static !important;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import { IWorkflowExportItem } from \"../model/models\";\nimport { IUseCase } from \"./IUseCase\";\n\nexport interface ICreateWorkflowExportJobParam {\n    items: Array<IWorkflowExportItem>;\n    overridingMap: Record<string, string>;\n}\n\nexport interface ICreateWorkflowExportJob extends IUseCase<void, ICreateWorkflowExportJobParam> {}\n\nexport const ICreateWorkflowExportJob = Symbol.for(\"ICreateWorkflowExportJob\");","import { IApplication, IFolder, IModel, IModule } from \"../model/models\";\nimport { ITreeItem, ITreeView } from \"../presentation/ITreeView\";\nimport { IFEExternalData } from \"./IFileExplorer\";\n\nexport interface IDisplayItemsAdditional {\n    id: string;\n    name: string;\n    externalData: FileDisplayerExternalData;\n}\nexport type DisplayModelsCb = (item: FileDisplayerExternalData, hasChildren: boolean) => boolean;\nexport interface ICloneFileExplorerOptions {\n    displayFilterer?: DisplayModelsCb;\n    cb?: { select?: (item: ITreeItem<FileDisplayerExternalData>) => void };\n}\nexport interface IDisplayItemsOptions extends ICloneFileExplorerOptions {\n    additionalItems?: Array<IDisplayItemsAdditional>;\n    additionalRoot?: IDisplayItemsAdditional;\n}\n\nexport type FileDisplayerExternalData = IApplication | IFEExternalData;\n\nexport interface IFileDisplayerUseCase {\n    cloneFileExplorerTreeView(options: ICloneFileExplorerOptions): Array<ITreeItem<FileDisplayerExternalData>>;\n    createFileExplorerClone(domElement: HTMLElement, options: IDisplayItemsOptions): ITreeView<FileDisplayerExternalData>;\n}\nexport const IFileDisplayerUseCase = Symbol.for(\"IFileDisplayerUseCase\");","import { IModel, IModelHistoryInfo } from \"../model/models\";\nimport { IUseCase } from \"./IUseCase\";\n\nexport interface IListMultiModelVersionsParam {\n    excludedTypes?: Array<IModel[\"modelType\"]>;\n }\nexport interface IListMultiModelVersions extends IUseCase<Map<string, Array<IModelHistoryInfo>>, IListMultiModelVersionsParam> {\n\n}\nexport const IListMultiModelVersions = Symbol.for(\"IListMultiModelVersions\");","import { IModuleVersion } from \"../../../../common/qCloudTemp/quickCloud\";\nimport { IUseCase } from \"./IUseCase\";\n\nexport interface IListMultiModuleVersionsParam { }\nexport interface IListMultiModuleVersions extends IUseCase<Map<string, Array<IModuleVersion>>, IListMultiModuleVersionsParam> {\n\n}\nexport const IListMultiModuleVersions = Symbol.for(\"IListMultiModuleVersions\");","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, normalizeClass as _normalizeClass, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-3a5ba19e\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"container\" }\nconst _hoisted_2 = {\n  class: /*#__PURE__*/_normalizeClass(['modules-selected-text'])\n}\nconst _hoisted_3 = { class: \"text-number\" }\nconst _hoisted_4 = { class: \"text-number\" }\nconst _hoisted_5 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: /*#__PURE__*/_normalizeClass(['modules-datatable']),\n  id: \"module-container-div\"\n}, null, -1 /* HOISTED */))\nconst _hoisted_6 = {\n  class: /*#__PURE__*/_normalizeClass(['footer','export'])\n}\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"save-button\" }, \"DOWNLOAD\", -1 /* HOISTED */))\nconst _hoisted_8 = {\n  key: 0,\n  class: \"button-tooltip\",\n  style: {\"top\":\"-80px\",\"left\":\"626px\",\"z-index\":\"1\",\"width\":\"145px\"}\n}\nconst _hoisted_9 = {\n  key: 1,\n  class: \"button-tooltip\",\n  style: {\"top\":\"-80px\",\"left\":\"626px\",\"z-index\":\"1\",\"width\":\"145px\"}\n}\nconst _hoisted_10 = {\n  key: 2,\n  class: \"button-tooltip\",\n  style: {\"top\":\"-95px\",\"left\":\"644px\",\"z-index\":\"1\",\"width\":\"135px\"}\n}\n\nimport { computed,createApp,defineAsyncComponent,onMounted,ref } from \"vue\";\nimport { ITableData } from \"../../../../../../../common/qCloudTemp/exporter\";\nimport { IModuleRelatedModelItem } from \"../../../../../../../common/qCloudTemp/quickCloud\";\nimport { container } from \"../../../../../domain/core/diContainer\";\nimport { IModel,IModelHistoryInfo,IModule,IModuleVersion,IWorkflowExportItem } from \"../../../../../domain/model/models\";\nimport { IDialog } from \"../../../../../domain/presentation/IDialog\";\nimport { ITreeItem } from \"../../../../../domain/presentation/ITreeView\";\nimport { ICreateWorkflowExportJob } from \"../../../../../domain/useCase/ICreateWorkflowExportJob\";\nimport { FileDisplayerExternalData,IFileDisplayerUseCase } from \"../../../../../domain/useCase/IFileDisplayerUseCase\";\nimport { FileExplorerConstants } from \"../../../../../domain/useCase/IFileExplorer\";\nimport { IListMultiModelVersions } from \"../../../../../domain/useCase/IListMultiModelVersions\";\nimport { IListMultiModuleVersions } from \"../../../../../domain/useCase/IListMultiModuleVersions\";\nimport { IObjectUseCase } from \"../../../../../domain/useCase/IObjectUseCase\";\nimport { IUseCaseExecutor } from \"../../../../../domain/useCase/IUseCaseExecutor\";\nimport { IViewModel } from \"../../../../../domain/viewModel/IViewModel\";\nimport { IViewModelManager } from \"../../../../../domain/viewModel/IViewModelManager\";\nimport CheckboxComp from \"../../checkboxComp.vue\";\nimport ExportDialogItem from \"./components/exportDialogItem.vue\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'workflowExportDialog',\n  emits: [\"close\"],\n  setup(__props, { emit }) {\n\nconst viewModel = container.resolve<IViewModel>(IViewModel);\nconst viewModelManager = container.resolve<IViewModelManager>(IViewModelManager);\nconst dialog = container.resolve<IDialog>(IDialog);\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\nconst fileDisplayerUseCase = container.resolve<IFileDisplayerUseCase>(IFileDisplayerUseCase);\nconst objectUseCase = container.resolve<IObjectUseCase>(IObjectUseCase);\n\n\n\nconst items = ref<Array<ITableData>>([]);\nconst modelHistories = ref<Map<string, Array<IModelHistoryInfo>>>();\nconst importedModuleVersions = ref<Map<string, Array<IModuleVersion>>>();\nconst startScreen = ref<IModel>();\nconst dependencyMap = ref<Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>>();\nconst overridingMap = ref<Record<string, string>>({});\nconst dependencyErrorStr = ref<string>('');\n\n\nonMounted(async () => {\n    await executor.execute(async () => {\n        const excludedTypes: Array<IModel[\"modelType\"]> = ['bpmn', 'process', 'entityDesigner', 'process'];\n        await Promise.all([\n            executor.executeUseCase<IListMultiModelVersions>(IListMultiModelVersions, { excludedTypes }).then(res => modelHistories.value = res),\n            executor.executeUseCase<IListMultiModuleVersions>(IListMultiModuleVersions, {}).then(res => importedModuleVersions.value = res)\n        ]);\n        initOverridingMap();\n        initDependencies();\n        handleItems();\n    }, { loading: true });\n})\n\nconst totalItemsCount = computed<number>(() => countItems(items.value));\nconst selectedItemsCount = computed<number>(() => countItems(items.value, true));\n\nconst countItems = (arr:Array<ITableData>, useCheckedFilter = false) => {\n  return arr.reduce((acc, item) => {\n    if(useCheckedFilter && (item?.anyChildChecked == false || item?.checked == false)) return acc;\n    let count = 1;\n    if (item?.children) {\n      count += countItems(item.children, useCheckedFilter);\n    }\n    return acc + count;\n  }, 0);\n};\n\nconst isDownloadBtnDisable = computed(validate);\n// const mainCheckboxState = computed(() => items.value.length == allChildCheckedModulesCount.value ? true\n//     : (anyChildCheckedModulesCount.value + checkedRootLevelModelsCount.value > 0 ? false : undefined));\nconst isThereVersion = computed(() => checkMaxVersionOfAllItems());\nconst isWorkflowExecutionItemsOK = computed(() => checkWorkflowExecutionItems());\nconst isAllDependenciesOK = computed(validateDependencies)\n\nfunction validate() {\n    return !items.value.some((item) => item.checked || item.anyChildChecked) || !validateDependencies() || !checkWorkflowExecutionItems();\n}\n\n\nfunction validateDependencies() {\n    const checkMap = new Map<string, boolean>();\n    items.value.forEach(item => {\n        if (item.type == 'module' && item.children && item.children.length > 0)\n            item.children.forEach(child => checkMap.set(child.id, child.checked == true))\n        else\n            checkMap.set(item.id, item.checked == true)\n    })\n\n    const mustBeCheckedMap = new Map<string, Array<string>>();\n    dependencyMap.value?.forEach((deps, id) => {\n        if (!checkMap.get(id))\n            return;\n\n        deps.dependedTo.forEach(dependedId => {\n            if (checkMap.get(dependedId))\n                return;\n\n            if (mustBeCheckedMap.has(id)) {\n                const vals = mustBeCheckedMap.get(id)!\n                vals.push(dependedId)\n                mustBeCheckedMap.set(id, vals)\n            } else {\n                mustBeCheckedMap.set(id, [dependedId])\n            }\n\n        });\n    })\n\n    //set deps error text\n    const [firstItemID] = mustBeCheckedMap.keys();\n    if (firstItemID) {\n        const firstItemDeps = mustBeCheckedMap.get(firstItemID);\n        const firstItemDepStr = firstItemDeps ? firstItemDeps.map(findItem).map(e => e?.name).join(', ') : '';\n        dependencyErrorStr.value = `Select ${firstItemDepStr} first. ${findItem(firstItemID)?.name} depends on ${firstItemDepStr}.`\n    }\n\n    return mustBeCheckedMap.size == 0\n}\n\n\nfunction findItem(ID: string) {\n    for (const item of items.value) {\n        if (item.type != 'module' && item.id == ID)\n            return item;\n        if (item.type == 'module' && item.children && item.children.length > 0) {\n            const f = item.children.find(e => e.id == ID)\n            if (f) return f\n        }\n    }\n}\n\nfunction initDependencies() {\n    const map = new Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>();\n    const depMap = new Map<string, Array<string>>();\n\n    viewModelManager.flatMapItems(viewModel.studio.items, (item) => {\n        if (item.objectType != \"model\") { return; }\n\n        const isImportedModule = item.owner.objectType == \"module\" && objectUseCase.isModuleImported(item.owner);\n\n        let version: string | undefined;\n        if (!isImportedModule) {\n            const maxVersion = getItemMaxVersion(item)\n            if (!maxVersion)\n                return depMap.set(item.ID, item.dependentModels ? item.dependentModels.map(e => e.modelId) : Array<string>());\n            version = maxVersion;\n        }\n        else {\n            const moduleVersions = importedModuleVersions.value?.get(item.owner.ID)\n            const moduleVersion = (item.owner as IModule).relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion\n\n            const importedModuleModel = moduleVersions?.filter(e => e.version == moduleVersion).flatMap(e => e.relatedModelHistories).find(e => e.modelID == item.ID)\n            version = importedModuleModel?.version\n        }\n\n        const historyItem = modelHistories.value?.get(item.ID)?.find(e => e.version == version);\n        const deps = historyItem?.dependentModels ? historyItem?.dependentModels.map(e => e.modelId).map(e => overridingMap.value?.[e] || e) : Array<string>()\n        depMap.set(item.ID, deps);\n    });\n\n\n    depMap.forEach((dependedTo, modelId) => {\n        const dependedBy = Array<string>();\n        depMap.forEach((dependencies, depModelId) => {\n            if (dependencies.some(depId => depId == modelId))\n                dependedBy.push(depModelId)\n        })\n        map.set(modelId, { dependedBy, dependedTo });\n    })\n    dependencyMap.value = map;\n}\n\nfunction isModelDepended(item: ITableData) {\n    const deps = dependencyMap.value?.get(item.id)?.dependedBy\n    if (!deps) return false;\n\n    return deps.some(dep => items.value.some(item => {\n        if (item.type == 'module' && item.anyChildChecked) {\n            return item.children?.some(child => child.checked && child.id == dep)\n        }\n        return item.id == dep && item.checked\n    }));\n}\nfunction createDialogComp(item: ITableData) {\n    const newChild = createApp(ExportDialogItem, {\n        handleItemCheckEvent,\n        startScreen,\n        versionDialog,\n        handleCollapse,\n        item: item,\n        moduleVersionDialog\n    });\n    const mountEl = document.createElement('div');\n    newChild.mount(mountEl);\n    const parentEl = document.getElementById('module-container-div');\n    parentEl?.appendChild(mountEl);\n}\nfunction createAndAppendItem({ newItem }: { newItem: ITableData }) {\n    if(!newItem.overridden){\n        createDialogComp(newItem);\n        items.value.push(newItem);\n    }\n}\n\nfunction handleItems() {\n    const treeItems = fileDisplayerUseCase.cloneFileExplorerTreeView({\n        displayFilterer: (item, hasChildren) => {\n            switch (item.ID) { case FileExplorerConstants.uiAssetListID: case FileExplorerConstants.uiSettingsID: return false; default: break; }\n            switch (item.objectType) {\n                case \"application\": return false;\n                case \"module\": return true;\n                case \"folder\": return hasChildren;\n                case \"model\": return true;\n            }\n        },\n    });\n\n    const converter = (treeItem: ITreeItem<FileDisplayerExternalData>, options: {ownerModule?: {isImportedModule: boolean;moduleVersion: string | undefined;relatedModelHistories: IModuleRelatedModelItem[] | undefined}}): ITableData => {\n        const item = treeItem.externalData;\n        if (item.objectType == \"application\") { throw new Error(\"unexpected item type\"); }\n\n        const fullPath = objectUseCase.getFullPath(item, \"self\");\n        let level = fullPath.split(\"/\").length - 1;\n\n        let tableData: ITableData;\n        switch(item.objectType) {\n            case \"folder\":\n                tableData = {\n                    id: item.ID, name: item.name, type: \"folder\", collapsed: true, level,\n                    children: treeItem.children?.map((item) => converter(item, { ownerModule: options.ownerModule })),\n                };\n                tableData.children?.forEach(child => child.parent = tableData);\n                handleParentCheckedStatus(tableData, false);\n                break;\n            case \"model\":\n                if (options.ownerModule) {\n                    tableData = { id: item.ID, name: item.name, type: item.modelType, level, overridden: item.overridden}; //FIXME: set overridden status to externalData\n                    if (!options.ownerModule.isImportedModule || item.isUnmodifiable) {\n                        const maxVersion = getItemMaxVersion(item);\n                        tableData = {\n                            ...tableData,\n                            checked: maxVersion ? true : item.isUnmodifiable,\n                            disabled: maxVersion ? false : !item.isUnmodifiable,\n                            version: maxVersion || 'latest',\n                        };\n                    } else {\n                        const importedModulesModel = options.ownerModule.relatedModelHistories?.find(e => e.modelID == item.ID)\n                        tableData = { ...tableData, checked: true, disabled: false, version: importedModulesModel?.version, overridden: item.overridden };\n                    }\n                } else {\n                    const maxVersion = getItemMaxVersion(item);\n                    tableData = {\n                        id: item.ID,\n                        name: item.name,\n                        checked: maxVersion ? true : item.isUnmodifiable,\n                        disabled: maxVersion ? false : !item.isUnmodifiable,\n                        type: item.modelType,\n                        version: maxVersion || 'latest',\n                        level,\n                        overridden: item.overridden,\n                    };\n                }\n                break;\n            case \"module\":\n                const isImportedModule = objectUseCase.isModuleImported(item);\n                const moduleVersion = item.relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion;\n                const relatedModelHistories = isImportedModule ? importedModuleVersions.value?.get(item.ID)?.find(module => module.version == moduleVersion)?.relatedModelHistories : undefined\n                \n                tableData = {\n                    id: item.ID,\n                    collapsed: true,\n                    name: item.name,\n                    type: \"module\",\n                    imported: isImportedModule,\n                    version: moduleVersion,\n                    children: treeItem.children?.map((item) => converter(item, {ownerModule: {isImportedModule, moduleVersion, relatedModelHistories}})),\n                }\n                tableData.children?.forEach(child => child.parent = tableData);\n                handleParentCheckedStatus(tableData, false);\n                break;\n        }\n        return tableData;\n    };\n    const tableDatas = treeItems.map(item => converter(item, {}));\n\n    const traverser = (tableData: ITableData) => {\n        createAndAppendItem({ newItem: tableData });\n        tableData.children?.forEach(traverser);\n    };\n    \n    tableDatas.forEach(traverser);\n}\n\nfunction getItemMaxVersion(item: IModel): string | undefined {\n    if (!modelHistories.value?.has(item.ID))\n        return undefined;\n\n    const versions = modelHistories.value.get(item.ID);\n    if (!versions)\n        return undefined;\n\n    const findMaxVersion = (versions: Array<string>) => {\n        const versionNumbers = versions.map(v => {\n            const parts: Array<string> = v.split(\".\");\n            return parseInt(parts[0]) * 10 + parseInt(parts[1]) * 1;\n        })\n\n        versionNumbers.sort((a, b) => b - a);\n\n        const maxVersion = versionNumbers[0];\n        return `${Math.floor(maxVersion / 10)}.${maxVersion % 10}`;\n    }\n\n    return findMaxVersion(versions.map(e => e.version!));\n\n}\n\nfunction checkMaxVersionOfAllItems() {\n    let isThereVersion: boolean = false;\n    items.value.forEach(item => {\n        if (item.type == \"module\") {\n            item.children?.forEach(child => {\n                if (child.version) {\n                    isThereVersion = true;\n                }\n\n            })\n        }\n        else {\n            if (item.version) {\n                isThereVersion = true;\n            }\n        }\n    })\n    return isThereVersion;\n}\n\n//FIXME: Tum objectler check edilmeli.\nfunction checkWorkflowExecutionItems() {\n    let getUserOK = false, notifyOK = false;\n    const fn = (item: ITableData, name: string, type: string) => item.checked && item.type == type && item.name === name;\n    for(const item of items.value) {\n        if(getUserOK && notifyOK) break;\n        if (item.type == \"module\" && item.children) {\n            if(!getUserOK) getUserOK = item.children.some(e => fn(e, 'getUser', 'flow'));\n            if(!notifyOK) notifyOK = item.children.some(e => fn(e, 'notify', 'flow'));\n        }\n        else {\n            if(!getUserOK) getUserOK = !!fn(item, 'getUser', 'flow');\n            if(!notifyOK) notifyOK = !!fn(item, 'notify', 'flow');\n        }\n    }\n    return getUserOK && notifyOK;\n}\n\nfunction clickMainCheckbox(){\n    const checked = totalItemsCount.value == selectedItemsCount.value;\n    items.value.filter(e => !e?.disabled).forEach((item) => {\n        item.checked = !checked;\n        const allItemsCheckable = item.allChildChecked != undefined && item.children && item.children.length > 0 && !item.children.some(c => c.disabled);\n        if (allItemsCheckable) item.allChildChecked = !checked;\n        if (item.anyChildChecked != undefined) item.anyChildChecked = !checked;\n        if (item.children) item.children.filter(c => !c.disabled).forEach((child) => (child.checked = !checked));\n    });\n}\n\n\nfunction handleCollapse(item: ITableData, childIterate?: boolean, collapsed?: boolean) {\n    item.collapsed = collapsed !== undefined ? collapsed : !item.collapsed;\n    if (childIterate) {\n        item.children?.forEach(child => {\n            const childEl = document.getElementById(child.id);\n            childEl!.style.display = item.collapsed ? \"none\" : \"block\";\n            handleCollapse(child, childIterate, item.collapsed);\n        })\n    }\n}\n\nfunction checkAllDependents(item: ITableData, recurseParent: boolean) {\n    if (item.disabled || item.checked) return;\n\n    item.checked = true\n    item.parent && handleParentCheckedStatus(item.parent, recurseParent);\n\n    const deps = dependencyMap.value?.get(item.id)?.dependedTo\n    if (!deps) return;\n\n    deps.forEach(dep => {\n        items.value.forEach(item => {\n            if (item.type == 'module' && !item.allChildChecked) {\n                const willCheckItem = item.children?.find(child => !child.checked && child.id == dep)\n                willCheckItem && checkAllDependents(willCheckItem, recurseParent);\n                handleParentCheckedStatus(item, recurseParent);\n                return;\n            }\n\n            if (!item.checked && item.id == dep) {\n                checkAllDependents(item, recurseParent);\n                item.parent && handleParentCheckedStatus(item.parent, recurseParent);\n            }\n        })\n    });\n}\n\nfunction handleItemCheckEvent(item: ITableData) {\n    if (item.disabled || isModelDepended(item) || item.name == 'App Settings')\n        return;\n\n    if (item.type != \"module\" && item.type != \"folder\") {\n        if (item.checked) {\n            item.checked = false;\n            item.parent && handleParentCheckedStatus(item.parent, true);\n        } else {\n            checkAllDependents(item, true);\n        }\n    } else {\n        if (item.children && item.children.filter(c => !c.disabled).length > 0) {\n            if (item.anyChildChecked) {\n                item.children.filter(c => !c.disabled).forEach(child => child.checked = false);\n                item.checked = false;\n                handleParentCheckedStatus(item, true);\n            } else {\n                item.children.forEach(child => checkAllDependents(child, true));\n                item.checked = true;\n            }\n        }\n        else {\n            item.checked = !item.checked;\n            item.allChildChecked = false;\n        }\n    }\n\n}\n\nfunction handleParentCheckedStatus(item: ITableData, recurseParent: boolean) {\n    item.disabled = item.children && (item.children.length == 0 || !item.children?.some(child => !child.disabled))\n    item.allChildChecked = item.children && item.children.length > 0 && !item.children.some((child) => !child.checked || child.disabled);\n    item.anyChildChecked = item.children?.some((child) => child.checked && !child.disabled);\n    if (recurseParent && item.parent) {\n        handleParentCheckedStatus(item.parent, true);\n    }\n}\n\nfunction updateDependencyMap(newVersion: string, item: ITableData) {\n    const deps = dependencyMap.value?.get(item.id);\n    dependencyMap.value?.set(item.id, {\n        dependedBy: deps?.dependedBy || Array<string>(),\n        dependedTo: modelHistories.value?.get(item.id)?.find(e => e.version == newVersion)?.dependentModels?.map(e => e.modelId) || Array<string>()\n    })\n}\n\nfunction versionDialog(item: ITableData) {\n    const clickedNode = { id: item.id, state: { checked: item.checked }, text: item.name, type: item.type, version: item.version };\n    const hasAnyVersion = modelHistories.value?.has(item.id);\n    const options = {\n        clickedNode, cb: (version: string) => {\n            item.version = version;\n            updateDependencyMap(version, item);\n        }\n    } as any;\n\n    if (hasAnyVersion) {\n        options.versions = modelHistories.value?.get(item.id)\n    }\n    dialog.showDialog(\n        defineAsyncComponent(() => import(\"../../application/modelVersionDialog.vue\")),\n        { closable: true, title: \"Change Version\", width: \"1080px\", maxHeight: \"500px\", overflow: \"auto\" }, options\n    );\n}\n\nfunction moduleVersionDialog(item: ITableData) {\n    dialog.showDialog(\n        defineAsyncComponent(() => import(\"../../application/moduleVersionDialog.vue\")),\n        { closable: true, title: \"Change Version\", width: \"1080px\", maxHeight: \"500px\", overflow: \"auto\" },\n        {\n            module: { ID: item.id }, versions: importedModuleVersions.value?.get(item.id), cb: (moduleVersion: IModuleVersion) => {\n                item.version = moduleVersion.version;\n                item.children?.forEach(child => {\n                    const modulesModel = moduleVersion.relatedModelHistories.find(e => e.modelID == child.id)\n                    child.version = modulesModel?.version\n                    updateDependencyMap(modulesModel?.version!, child);\n                })\n            }\n        }\n    );\n}\n\nasync function downloadBtnClicked() {\n    executor.execute(\n        async () => {\n            const items = getJobItems();\n            await executor.executeUseCase<ICreateWorkflowExportJob>(ICreateWorkflowExportJob, { items, overridingMap: overridingMap.value });\n            emit(\"close\");\n    },{ loading: true });\n}\n\nfunction getJobItems(): Array<IWorkflowExportItem> {\n    const findCheckedItems = (item: ITableData): Array<IWorkflowExportItem> | undefined => {\n        if(!item.version || !item.checked) return;\n\n        if(item.type != 'module' && item.type != 'folder')\n            return [{ ID: item.id, version: item.version }];\n        \n        if(!item.anyChildChecked) return;\n\n        const children = Array<IWorkflowExportItem>();\n        item.children?.forEach(ch => {\n            const childList = findCheckedItems(ch);\n            if(childList && childList.length > 0) Array.prototype.push.apply(children, childList);\n        });\n        return children;\n    }\n\n    const jobItems = Array<IWorkflowExportItem>();\n    items.value.forEach(e => {\n        const itemList = findCheckedItems(e);\n        if(itemList && itemList.length > 0) Array.prototype.push.apply(jobItems, itemList);\n    });\n    return jobItems;\n\n}\n\nfunction initOverridingMap() {\n    viewModelManager.flatMapItems(viewModel.studio.items, (item) => {\n        if (item.objectType != \"model\" || !item.overridden) { return; }\n        const overridingModel = viewModel.studio.items.find(e => e.objectType == 'model' && e.overriddenModel?.ID == item.ID);\n        if(overridingModel?.ID)\n            overridingMap.value[item.ID] = overridingModel?.ID;\n    });\n}\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", null, [\n      _createVNode(CheckboxComp, {\n        class: _normalizeClass(['modules-selected-checkbox']),\n        minus: _unref(selectedItemsCount) != _unref(totalItemsCount),\n        check: _unref(selectedItemsCount) == _unref(totalItemsCount),\n        onClick: clickMainCheckbox\n      }, null, 8 /* PROPS */, [\"minus\", \"check\"]),\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"span\", _hoisted_3, _toDisplayString(_unref(selectedItemsCount)), 1 /* TEXT */),\n        _createTextVNode(\" of \"),\n        _createElementVNode(\"span\", _hoisted_4, _toDisplayString(_unref(totalItemsCount)), 1 /* TEXT */),\n        _createTextVNode(\" items selected \")\n      ])\n    ]),\n    _hoisted_5,\n    _createElementVNode(\"div\", _hoisted_6, [\n      _createElementVNode(\"div\", {\n        class: _normalizeClass(['cancel-button', ]),\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (emit('close')))\n      }, \"Cancel\"),\n      _createElementVNode(\"div\", {\n        class: _normalizeClass((_unref(isDownloadBtnDisable) ? ' button-disable' : '')),\n        onClick: _cache[1] || (_cache[1] = ($event: any) => (!_unref(isDownloadBtnDisable) && downloadBtnClicked()))\n      }, [\n        _hoisted_7,\n        (!_unref(isWorkflowExecutionItemsOK))\n          ? (_openBlock(), _createElementBlock(\"span\", _hoisted_8, \"'getUser' & 'nofify' flows not found. \"))\n          : _createCommentVNode(\"v-if\", true),\n        (!_unref(isThereVersion))\n          ? (_openBlock(), _createElementBlock(\"span\", _hoisted_9, \"There are no items ready to publish. At least one of your items must be ready to publish.\"))\n          : (!_unref(isAllDependenciesOK))\n            ? (_openBlock(), _createElementBlock(\"span\", _hoisted_10, _toDisplayString(dependencyErrorStr.value), 1 /* TEXT */))\n            : _createCommentVNode(\"v-if\", true)\n      ], 2 /* CLASS */)\n    ])\n  ]))\n}\n}\n\n})","\n      import API from \"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./workflowExportDialog.vue?vue&type=style&index=0&id=3a5ba19e&scoped=true&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./workflowExportDialog.vue?vue&type=style&index=0&id=3a5ba19e&scoped=true&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./workflowExportDialog.vue?vue&type=style&index=1&id=3a5ba19e&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./workflowExportDialog.vue?vue&type=style&index=1&id=3a5ba19e&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","import script from \"./workflowExportDialog.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./workflowExportDialog.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./workflowExportDialog.vue?vue&type=style&index=0&id=3a5ba19e&scoped=true&lang=css\"\nimport \"./workflowExportDialog.vue?vue&type=style&index=1&id=3a5ba19e&lang=css\"\n\nimport exportComponent from \"/home/runner/work/studio/studio/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3a5ba19e\"]])\n\nexport default __exports__"],"names":["___CSS_LOADER_EXPORT___","push","module","id","ICreateWorkflowExportJob","Symbol","for","IFileDisplayerUseCase","IListMultiModelVersions","IListMultiModuleVersions","_withScopeId","n","_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_","_hoisted_6","_hoisted_7","_hoisted_8","key","style","_hoisted_9","_hoisted_10","__name","emits","setup","__props","emit","viewModel","IViewModel","viewModelManager","IViewModelManager","dialog","IDialog","executor","IUseCaseExecutor","fileDisplayerUseCase","objectUseCase","IObjectUseCase","items","modelHistories","importedModuleVersions","startScreen","dependencyMap","overridingMap","dependencyErrorStr","async","execute","Promise","all","executeUseCase","excludedTypes","then","res","value","flatMapItems","studio","item","objectType","overridden","overridingModel","find","e","overriddenModel","ID","map","Map","depMap","version","owner","isModuleImported","moduleVersions","get","moduleVersion","relatedApplications","app","applicationID","appId","importedVersion","importedModuleModel","filter","flatMap","relatedModelHistories","modelID","maxVersion","getItemMaxVersion","set","dependentModels","modelId","Array","historyItem","deps","forEach","dependedTo","dependedBy","dependencies","depModelId","some","depId","initDependencies","treeItems","cloneFileExplorerTreeView","displayFilterer","hasChildren","converter","treeItem","options","externalData","Error","tableData","level","getFullPath","split","length","name","type","collapsed","children","ownerModule","child","parent","handleParentCheckedStatus","modelType","isImportedModule","isUnmodifiable","checked","disabled","importedModulesModel","undefined","imported","tableDatas","traverser","newItem","newChild","createApp","handleItemCheckEvent","versionDialog","handleCollapse","moduleVersionDialog","mountEl","document","createElement","mount","parentEl","getElementById","appendChild","createDialogComp","createAndAppendItem","handleItems","loading","totalItemsCount","countItems","selectedItemsCount","arr","useCheckedFilter","reduce","acc","anyChildChecked","count","isDownloadBtnDisable","validateDependencies","checkWorkflowExecutionItems","isThereVersion","checkMaxVersionOfAllItems","isWorkflowExecutionItemsOK","isAllDependenciesOK","checkMap","mustBeCheckedMap","dependedId","has","vals","firstItemID","keys","firstItemDeps","firstItemDepStr","findItem","join","size","f","versions","versionNumbers","v","parts","parseInt","sort","a","b","Math","floor","findMaxVersion","getUserOK","notifyOK","fn","clickMainCheckbox","allChildChecked","c","childIterate","display","checkAllDependents","recurseParent","dep","willCheckItem","isModelDepended","updateDependencyMap","newVersion","clickedNode","state","text","cb","showDialog","closable","title","width","maxHeight","overflow","modulesModel","getJobItems","findCheckedItems","ch","childList","prototype","apply","jobItems","itemList","_ctx","_cache","minus","check","onClick","$event","downloadBtnClicked","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement"],"sourceRoot":""}