"use strict";(this.webpackChunkqcloud_shell=this.webpackChunkqcloud_shell||[]).push([[9558,2525,5627],{93405:(n,e,t)=>{t.d(e,{Z:()=>l});var o=t(34663),i=t.n(o),a=t(7638),s=t.n(a)()(i());s.push([n.id,"\n.autocomplete[data-v-ce7ebd40] {\n    position: relative;\n}\n.autocomplete .label[data-v-ce7ebd40] {\n    margin:0;\n    color: #151233;\n    font-weight: bold;\n    font-size: 14px;\n}\n.autocomplete .icon-arrow[data-v-ce7ebd40] {\n    position: absolute;\n    right: 5px;\n    bottom: 8px;\n    font-size: 16px;\n    color: #A1A1A1;\n}\n.autocomplete ul[data-v-ce7ebd40] {\n    margin: 0;\n    padding: 0;\n}\n.autocomplete li[data-v-ce7ebd40] {\n    list-style: none;\n}\n.autocomplete input[data-v-ce7ebd40] {\n    border-radius: 4px;\n    outline: none;\n    height: 40px;\n    width: 100%;\n    border: 1px solid #A1A1A1;\n    padding-left: 7px;\n    margin-top: 3px;\n}\n.autocomplete .autocomplete-items[data-v-ce7ebd40] {\n    position: absolute;\n    background-color: #FFF;\n    border: 1px solid #A1A1A1;\n    border-radius: 4px;\n    width: -webkit-fill-available;\n    padding: 10px 0;\n    z-index: 9999;\n}\n.autocomplete .autocomplete-items li[data-v-ce7ebd40] {\n    font-size: 14px;\n    line-height: 16px;\n    padding: 8px 12px;\n    color: #212121;\n}\n.autocomplete .autocomplete-items .option[data-v-ce7ebd40] {\n    cursor: pointer;\n}\n.autocomplete .autocomplete-items .option[data-v-ce7ebd40]:hover {\n    background-color: #EEEEEE;\n}\n","",{version:3,sources:["webpack://./src/presentation/vue3/components/autocomplete.vue"],names:[],mappings:";AA2FA;IACI,kBAAkB;AACtB;AAIA;IACI,QAAQ;IACR,cAAc;IACd,iBAAiB;IACjB,eAAe;AAEnB;AAEA;IACI,kBAAkB;IAClB,UAAU;IACV,WAAW;IACX,eAAe;IACf,cAAc;AAClB;AAEA;IACI,SAAS;IACT,UAAU;AACd;AAEA;IACI,gBAAgB;AACpB;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,YAAY;IACZ,WAAW;IACX,yBAAyB;IACzB,iBAAiB;IACjB,eAAe;AACnB;AAEA;IACI,kBAAkB;IAClB,sBAAsB;IACtB,yBAAyB;IACzB,kBAAkB;IAClB,6BAA6B;IAC7B,eAAe;IACf,aAAa;AACjB;AAEA;IACI,eAAe;IACf,iBAAiB;IACjB,iBAAiB;IACjB,cAAc;AAClB;AAEA;IACI,eAAe;AACnB;AAEA;IACI,yBAAyB;AAC7B",sourcesContent:['<template>\n    <div class="autocomplete">\n        <div @click="openMenu" @focusout="outsideClick" tabindex="0">\n            <span class="label">{{ props.label }}</span>\n            <input :placeholder="placeholder" :value="inputValue" @input="getInputValue">\n            <span :class="[\'icon-arrow mdi\', isItemsOpen ? \'mdi-chevron-up\' : \'mdi-chevron-down\']"></span>\n        </div>\n        <div class="autocomplete-items" v-if="isItemsOpen">\n            <ul>\n                <li v-if="filteredOptions.length === 0">No data</li>\n                <li v-for="item in filteredOptions" :key="item.value" class="option" @mousedown="selectItem(item)">{{\n                    item.name }}</li>\n            </ul>\n        </div>\n    </div>\n</template>\n  \n<script setup lang="ts">\nimport { onMounted, ref, watch } from \'vue\';\n\n\ninterface IOptions { name: string, value: string | number }\n\nconst emit = defineEmits(["changeValue"]);\nconst props = defineProps({\n    options: {\n        type: Array<IOptions>,\n        required: true,\n    },\n    placeholder: {\n        type: String,\n        default: "",\n    },\n    value: {\n        type: String,\n        default: ""\n    },\n    label: {\n        type: String\n    }\n})\n\nconst inputValue = ref<String>(props.value);\nconst isItemsOpen = ref<boolean>(false);\nconst filteredOptions = ref<Array<IOptions>>([]);\n\nwatch(() => props.options, (_new) => {\n    filteredOptions.value = _new;\n})\n\n// onMounted(() => {\n//     filteredOptions.value = props.options;\n// })\n\nfunction changeInput(e: any){\n    const value = e.target.value;\n    inputValue.value = value;\n    emit(\'changeValue\', value);\n}\nfunction getInputValue(e: any) {\n    const value = e.target.value;\n    inputValue.value = value;\n    filteredOptions.value = props.options.filter(option => option.name.includes(value));\n\n    const findOption = props.options.find(item => item.name === value);\n    if(findOption) {\n        selectItem(findOption);\n    } else {\n        emit(\'changeValue\', value);\n    }\n}\n\nfunction selectItem(item: IOptions) {\n    inputValue.value = item.name;\n    isItemsOpen.value = false;\n    // emit(\'change\', item.value);\n    emit(\'changeValue\', item.value);\n\n}\n\nfunction openMenu() {\n    isItemsOpen.value = !isItemsOpen.value;\n}\n\nfunction outsideClick() {\n    isItemsOpen.value = false;\n}\n\n<\/script>\n    \n<style scoped>\n.autocomplete {\n    position: relative;\n}\n\n\n\n.autocomplete .label {\n    margin:0;\n    color: #151233;\n    font-weight: bold;\n    font-size: 14px;\n\n}\n\n.autocomplete .icon-arrow {\n    position: absolute;\n    right: 5px;\n    bottom: 8px;\n    font-size: 16px;\n    color: #A1A1A1;\n}\n\n.autocomplete ul {\n    margin: 0;\n    padding: 0;\n}\n\n.autocomplete li {\n    list-style: none;\n}\n\n.autocomplete input {\n    border-radius: 4px;\n    outline: none;\n    height: 40px;\n    width: 100%;\n    border: 1px solid #A1A1A1;\n    padding-left: 7px;\n    margin-top: 3px;\n}\n\n.autocomplete .autocomplete-items {\n    position: absolute;\n    background-color: #FFF;\n    border: 1px solid #A1A1A1;\n    border-radius: 4px;\n    width: -webkit-fill-available;\n    padding: 10px 0;\n    z-index: 9999;\n}\n\n.autocomplete .autocomplete-items li {\n    font-size: 14px;\n    line-height: 16px;\n    padding: 8px 12px;\n    color: #212121;\n}\n\n.autocomplete .autocomplete-items .option {\n    cursor: pointer;\n}\n\n.autocomplete .autocomplete-items .option:hover {\n    background-color: #EEEEEE;\n}\n</style>'],sourceRoot:""}]);const l=s},57793:(n,e,t)=>{t.d(e,{Z:()=>u});var o=t(34663),i=t.n(o),a=t(7638),s=t.n(a),l=t(79240),r=s()(i());r.i(l.Z),r.push([n.id,"\n.role[data-v-37946342] {\n    width: 100%;\n    font-size: 15px;\n    height: 40px;\n    line-height: 40px;\n    border: 1px solid #BCBCBC;\n    border-radius: 4px;\n    padding: 0px 12px;\n}\n.select-name[data-v-37946342] {\n    color: #151233;\n    font-weight: bold;\n    font-size: 14px;\n}\n.continue-button[data-v-37946342] {\n    font-weight: 500;\n    font-size: 16px;\n    color: #FFFFFF;\n    background: #151233;\n    padding: 8px 16px;\n    border-radius: 4px;\n    border: none;\n}\n","",{version:3,sources:["webpack://./src/presentation/vue3/pages/processLivePreview/preDashboard.vue"],names:[],mappings:";AA6JA;IACI,WAAW;IACX,eAAe;IACf,YAAY;IACZ,iBAAiB;IACjB,yBAAyB;IACzB,kBAAkB;IAClB,iBAAiB;AACrB;AAEA;IACI,cAAc;IACd,iBAAiB;IACjB,eAAe;AACnB;AAEA;IACI,gBAAgB;IAChB,eAAe;IACf,cAAc;IACd,mBAAmB;IACnB,iBAAiB;IACjB,kBAAkB;IAClB,YAAY;AAChB",sourcesContent:['<script setup lang="ts">\nimport { computed, onBeforeMount, onMounted, ref } from "vue";\nimport { container } from "../../../../domain/core/diContainer";\nimport { IRouter, routeDefinition } from "../../../../domain/presentation/IRouter";\nimport IDEInput from "../../components/application/IDEInput.vue";\nimport CustomSelect from "../../components/customSelect.vue";\nimport autocomplete from "../../components/autocomplete.vue";\nimport { IUser } from "../../../../../../common/qCloudTemp/runtimeDtoObjects";\nimport { IIDEInputDefinitions } from "../../../../domain/presentation/IIDEInputDefinitions";\nimport { IUseCaseExecutor } from "../../../../domain/useCase/IUseCaseExecutor";\n\n\n// declare global {\n//     interface Window {\n//         workflow: {\n//             listUsers: () => Promise<Array<LPFlowUser>>;\n//             listUserRoles\n\n\n//         };\n//     }\n// }\n\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\n\ninterface IOptions { name: string, value: string };\ninterface IMultipleOptions { name: string };\n\nconst userOptions = ref<Array<IOptions>>([]);\nconst userRolesOptions = ref<Array<IOptions>>([]);\nconst swimlaneOptions = ref<Array<IOptions>>([]);\n\nconst listUsers = ref<Array<IUser>>([]);\n\nconst usernameInput = ref<string>("");\nconst unitInput = ref<string>("");\nconst rolesInput = ref<Array<string>>([]);\nconst swimlaneInput = ref<Array<string>>([]);\n\nconst unitDisabled = ref<boolean>(false);\nconst rolesDisabled = ref<boolean>(false);\nconst swimlaneDisabled = ref<boolean>(false);\n\nconst validations = ref<Record<"name", IIDEInputDefinitions["validations"]>>({\n    name: { minAndMaxLength: { min: 2, max: 40 }, availableCharacters: true, nonSpaceCharacter: true }\n});\nconst isNameValid = ref<boolean>(false);\n\nconst workflow = window.workflow;\n\nonMounted(async () => {\n        executor.execute(\n        async () => {\n            listUsers.value = await workflow.listUsers();\n            convertUserOptions();\n            convertUserRoles();\n            convertSwimlanes();\n        },\n        { loading: true }\n    );\n});\n\nconst isBtnDisabled = computed(()=> !isNameValid || !usernameInput.value || rolesInput.value.length == 0  || swimlaneInput.value.length == 0 );\n\nfunction convertUserRoles() {\n    userRolesOptions.value = workflow.listUserRoles().map((item:string) => { return { name: item, value: item } });\n}\n\nfunction convertSwimlanes() {\n    swimlaneOptions.value = workflow.listSwimlanes().map((item:string) => { return { name: item, value: item } });\n}\n\nfunction convertUserOptions() {\n    let options: Array<IOptions> = [];\n    listUsers.value.forEach((item: IUser) => {\n        options.push({ name: item.name, value: item.id });\n    })\n    userOptions.value = options;\n}\n\nfunction selectUserName(value: string) {\n    usernameInput.value = value;\n    const findUser = listUsers.value.find((item: IUser) => item.id === value);\n    unitDisabled.value = rolesDisabled.value = swimlaneDisabled.value = !!findUser;\n    if (findUser) {\n        unitInput.value = findUser.unit;\n        rolesInput.value = findUser.roles;\n        swimlaneInput.value = findUser.swimlane || [];\n    } \n}\nfunction selectUnit(value: string) {\n    unitInput.value = value;\n}\nfunction selectUserRoles(value: Array<IOptions>) {\n    rolesInput.value = value.map((item: IOptions)=> item.name);\n}\nfunction selectSwimlanes(value: Array<IOptions>) {\n    swimlaneInput.value = value.map((item: IOptions)=> item.name);\n}\n\nasync function continueButton() {\n    executor.execute(\n        async () => {\n            const findUser = listUsers.value.find((item: IUser) => item.id === usernameInput.value)?.name || "";\n            const user = { id: usernameInput.value, unit: unitInput.value, name: findUser, roles: rolesInput.value, swimlane: swimlaneInput.value }; //FIXME: define userRequestDTO without id?\n            await workflow.insertUser(user);\n            const router = container.resolve<IRouter>(IRouter);\n            await router.push(\'../processlivepreview/dashboard\');\n        },\n        { loading: true }\n    );\n}\nfunction setNameValidationStatus(isValid: boolean) {\n    isNameValid.value = isValid;\n}\n\n\n<\/script>\n\n<template>\n    <div class="container d-flex justify-content-center align-items-center h-100">\n        <div class="card w-full">\n            <div class="card-header"> Select or Create User </div>\n            <div class="card-body">\n                <div class="row">\n                    <div class="col">\n                        <autocomplete label="Username" :options="userOptions" @changeValue="selectUserName" />\n                    </div>\n                    <div class="col">\n                        <IDEInput element-id="preDashboardUnit" :isRequired="true" placeholder="" type="text" info-text="Unit" :value="unitInput" @getValue="selectUnit"\n                            :isDisabled="unitDisabled" @validateStatus="setNameValidationStatus" :validations="validations.name" />\n                    </div>\n                </div>\n                <div class="row mt-2">\n                    <div class="col">\n                        <span class="select-name">Roles</span>\n                        <CustomSelect class="role" :options="userRolesOptions" :multiple="true" :disabled="rolesDisabled"\n                            :defaultMultiple="rolesInput.map(item => { return { name: item } })"\n                            multipleSelectedClass="role-tag-name" @input="selectUserRoles" />\n                    </div>\n                    <div class="col">\n                        <span class="select-name">Swimlane</span>\n                        <CustomSelect class="role" :options="swimlaneOptions" :multiple="true" :disabled="swimlaneDisabled"\n                            :defaultMultiple="swimlaneInput.map(item => { return { name: item } })"\n                            multipleSelectedClass="role-tag-name" @input="selectSwimlanes" />\n                    </div>\n                </div>\n            </div>\n            <div class="card-footer d-flex justify-content-end">\n                <button class="continue-button" :style="{ opacity: isBtnDisabled ? \'0.5\': \'1\' }" :disabled="isBtnDisabled" @click="continueButton">Continue</button>\n            </div>\n        </div>\n    </div>\n</template>\n<style scoped>\n@import url("../../../../styles/IDE3.css");\n\n.role {\n    width: 100%;\n    font-size: 15px;\n    height: 40px;\n    line-height: 40px;\n    border: 1px solid #BCBCBC;\n    border-radius: 4px;\n    padding: 0px 12px;\n}\n\n.select-name {\n    color: #151233;\n    font-weight: bold;\n    font-size: 14px;\n}\n\n.continue-button {\n    font-weight: 500;\n    font-size: 16px;\n    color: #FFFFFF;\n    background: #151233;\n    padding: 8px 16px;\n    border-radius: 4px;\n    border: none;\n}\n</style>\n<style>\n.role .items {\n    color: #212121;\n    border-radius: 8px;\n    border: 1px solid #E3E3E3;\n    overflow: hidden;\n    background-color: #FFFFFF;\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\n    margin-top: 8px;\n}\n\n.role .items .option {\n    color: #212121;\n    padding-left: 12px;\n    line-height: 32px;\n}\n\n.role .items .option:hover {\n    background-color: #EEEEEE;\n}\n\n.role i {\n    font-size: 16px;\n    color: #BCBCBC;\n}\n\n.role-tag-name {\n    align-items: center;\n    padding: 5px 8px;\n    background: #D0D1E9;\n    display: flex;\n    justify-content: center;\n    border-radius: 20px;\n    margin-right: 4px;\n    font-size: 14px;\n    color: #2F3160;\n    white-space: nowrap;\n    font-weight: 500;\n}\n</style>\n\n'],sourceRoot:""}]);const u=r},65013:(n,e,t)=>{t.d(e,{Z:()=>l});var o=t(34663),i=t.n(o),a=t(7638),s=t.n(a)()(i());s.push([n.id,"\n.role .items {\n    color: #212121;\n    border-radius: 8px;\n    border: 1px solid #E3E3E3;\n    overflow: hidden;\n    background-color: #FFFFFF;\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\n    margin-top: 8px;\n}\n.role .items .option {\n    color: #212121;\n    padding-left: 12px;\n    line-height: 32px;\n}\n.role .items .option:hover {\n    background-color: #EEEEEE;\n}\n.role i {\n    font-size: 16px;\n    color: #BCBCBC;\n}\n.role-tag-name {\n    align-items: center;\n    padding: 5px 8px;\n    background: #D0D1E9;\n    display: flex;\n    justify-content: center;\n    border-radius: 20px;\n    margin-right: 4px;\n    font-size: 14px;\n    color: #2F3160;\n    white-space: nowrap;\n    font-weight: 500;\n}\n","",{version:3,sources:["webpack://./src/presentation/vue3/pages/processLivePreview/preDashboard.vue"],names:[],mappings:";AAwLA;IACI,cAAc;IACd,kBAAkB;IAClB,yBAAyB;IACzB,gBAAgB;IAChB,yBAAyB;IACzB,0CAA0C;IAC1C,eAAe;AACnB;AAEA;IACI,cAAc;IACd,kBAAkB;IAClB,iBAAiB;AACrB;AAEA;IACI,yBAAyB;AAC7B;AAEA;IACI,eAAe;IACf,cAAc;AAClB;AAEA;IACI,mBAAmB;IACnB,gBAAgB;IAChB,mBAAmB;IACnB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,iBAAiB;IACjB,eAAe;IACf,cAAc;IACd,mBAAmB;IACnB,gBAAgB;AACpB",sourcesContent:['<script setup lang="ts">\nimport { computed, onBeforeMount, onMounted, ref } from "vue";\nimport { container } from "../../../../domain/core/diContainer";\nimport { IRouter, routeDefinition } from "../../../../domain/presentation/IRouter";\nimport IDEInput from "../../components/application/IDEInput.vue";\nimport CustomSelect from "../../components/customSelect.vue";\nimport autocomplete from "../../components/autocomplete.vue";\nimport { IUser } from "../../../../../../common/qCloudTemp/runtimeDtoObjects";\nimport { IIDEInputDefinitions } from "../../../../domain/presentation/IIDEInputDefinitions";\nimport { IUseCaseExecutor } from "../../../../domain/useCase/IUseCaseExecutor";\n\n\n// declare global {\n//     interface Window {\n//         workflow: {\n//             listUsers: () => Promise<Array<LPFlowUser>>;\n//             listUserRoles\n\n\n//         };\n//     }\n// }\n\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\n\ninterface IOptions { name: string, value: string };\ninterface IMultipleOptions { name: string };\n\nconst userOptions = ref<Array<IOptions>>([]);\nconst userRolesOptions = ref<Array<IOptions>>([]);\nconst swimlaneOptions = ref<Array<IOptions>>([]);\n\nconst listUsers = ref<Array<IUser>>([]);\n\nconst usernameInput = ref<string>("");\nconst unitInput = ref<string>("");\nconst rolesInput = ref<Array<string>>([]);\nconst swimlaneInput = ref<Array<string>>([]);\n\nconst unitDisabled = ref<boolean>(false);\nconst rolesDisabled = ref<boolean>(false);\nconst swimlaneDisabled = ref<boolean>(false);\n\nconst validations = ref<Record<"name", IIDEInputDefinitions["validations"]>>({\n    name: { minAndMaxLength: { min: 2, max: 40 }, availableCharacters: true, nonSpaceCharacter: true }\n});\nconst isNameValid = ref<boolean>(false);\n\nconst workflow = window.workflow;\n\nonMounted(async () => {\n        executor.execute(\n        async () => {\n            listUsers.value = await workflow.listUsers();\n            convertUserOptions();\n            convertUserRoles();\n            convertSwimlanes();\n        },\n        { loading: true }\n    );\n});\n\nconst isBtnDisabled = computed(()=> !isNameValid || !usernameInput.value || rolesInput.value.length == 0  || swimlaneInput.value.length == 0 );\n\nfunction convertUserRoles() {\n    userRolesOptions.value = workflow.listUserRoles().map((item:string) => { return { name: item, value: item } });\n}\n\nfunction convertSwimlanes() {\n    swimlaneOptions.value = workflow.listSwimlanes().map((item:string) => { return { name: item, value: item } });\n}\n\nfunction convertUserOptions() {\n    let options: Array<IOptions> = [];\n    listUsers.value.forEach((item: IUser) => {\n        options.push({ name: item.name, value: item.id });\n    })\n    userOptions.value = options;\n}\n\nfunction selectUserName(value: string) {\n    usernameInput.value = value;\n    const findUser = listUsers.value.find((item: IUser) => item.id === value);\n    unitDisabled.value = rolesDisabled.value = swimlaneDisabled.value = !!findUser;\n    if (findUser) {\n        unitInput.value = findUser.unit;\n        rolesInput.value = findUser.roles;\n        swimlaneInput.value = findUser.swimlane || [];\n    } \n}\nfunction selectUnit(value: string) {\n    unitInput.value = value;\n}\nfunction selectUserRoles(value: Array<IOptions>) {\n    rolesInput.value = value.map((item: IOptions)=> item.name);\n}\nfunction selectSwimlanes(value: Array<IOptions>) {\n    swimlaneInput.value = value.map((item: IOptions)=> item.name);\n}\n\nasync function continueButton() {\n    executor.execute(\n        async () => {\n            const findUser = listUsers.value.find((item: IUser) => item.id === usernameInput.value)?.name || "";\n            const user = { id: usernameInput.value, unit: unitInput.value, name: findUser, roles: rolesInput.value, swimlane: swimlaneInput.value }; //FIXME: define userRequestDTO without id?\n            await workflow.insertUser(user);\n            const router = container.resolve<IRouter>(IRouter);\n            await router.push(\'../processlivepreview/dashboard\');\n        },\n        { loading: true }\n    );\n}\nfunction setNameValidationStatus(isValid: boolean) {\n    isNameValid.value = isValid;\n}\n\n\n<\/script>\n\n<template>\n    <div class="container d-flex justify-content-center align-items-center h-100">\n        <div class="card w-full">\n            <div class="card-header"> Select or Create User </div>\n            <div class="card-body">\n                <div class="row">\n                    <div class="col">\n                        <autocomplete label="Username" :options="userOptions" @changeValue="selectUserName" />\n                    </div>\n                    <div class="col">\n                        <IDEInput element-id="preDashboardUnit" :isRequired="true" placeholder="" type="text" info-text="Unit" :value="unitInput" @getValue="selectUnit"\n                            :isDisabled="unitDisabled" @validateStatus="setNameValidationStatus" :validations="validations.name" />\n                    </div>\n                </div>\n                <div class="row mt-2">\n                    <div class="col">\n                        <span class="select-name">Roles</span>\n                        <CustomSelect class="role" :options="userRolesOptions" :multiple="true" :disabled="rolesDisabled"\n                            :defaultMultiple="rolesInput.map(item => { return { name: item } })"\n                            multipleSelectedClass="role-tag-name" @input="selectUserRoles" />\n                    </div>\n                    <div class="col">\n                        <span class="select-name">Swimlane</span>\n                        <CustomSelect class="role" :options="swimlaneOptions" :multiple="true" :disabled="swimlaneDisabled"\n                            :defaultMultiple="swimlaneInput.map(item => { return { name: item } })"\n                            multipleSelectedClass="role-tag-name" @input="selectSwimlanes" />\n                    </div>\n                </div>\n            </div>\n            <div class="card-footer d-flex justify-content-end">\n                <button class="continue-button" :style="{ opacity: isBtnDisabled ? \'0.5\': \'1\' }" :disabled="isBtnDisabled" @click="continueButton">Continue</button>\n            </div>\n        </div>\n    </div>\n</template>\n<style scoped>\n@import url("../../../../styles/IDE3.css");\n\n.role {\n    width: 100%;\n    font-size: 15px;\n    height: 40px;\n    line-height: 40px;\n    border: 1px solid #BCBCBC;\n    border-radius: 4px;\n    padding: 0px 12px;\n}\n\n.select-name {\n    color: #151233;\n    font-weight: bold;\n    font-size: 14px;\n}\n\n.continue-button {\n    font-weight: 500;\n    font-size: 16px;\n    color: #FFFFFF;\n    background: #151233;\n    padding: 8px 16px;\n    border-radius: 4px;\n    border: none;\n}\n</style>\n<style>\n.role .items {\n    color: #212121;\n    border-radius: 8px;\n    border: 1px solid #E3E3E3;\n    overflow: hidden;\n    background-color: #FFFFFF;\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\n    margin-top: 8px;\n}\n\n.role .items .option {\n    color: #212121;\n    padding-left: 12px;\n    line-height: 32px;\n}\n\n.role .items .option:hover {\n    background-color: #EEEEEE;\n}\n\n.role i {\n    font-size: 16px;\n    color: #BCBCBC;\n}\n\n.role-tag-name {\n    align-items: center;\n    padding: 5px 8px;\n    background: #D0D1E9;\n    display: flex;\n    justify-content: center;\n    border-radius: 20px;\n    margin-right: 4px;\n    font-size: 14px;\n    color: #2F3160;\n    white-space: nowrap;\n    font-weight: 500;\n}\n</style>\n\n'],sourceRoot:""}]);const l=s},7638:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,i,a){"string"==typeof n&&(n=[[null,n,void 0]]);var s={};if(o)for(var l=0;l<this.length;l++){var r=this[l][0];null!=r&&(s[r]=!0)}for(var u=0;u<n.length;u++){var c=[].concat(n[u]);o&&s[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),i&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=i):c[4]="".concat(i)),e.push(c))}},e}},34663:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(i," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},17450:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},s=[],l=0;l<n.length;l++){var r=n[l],u=o.base?r[0]+o.base:r[0],c=a[u]||0,p="".concat(u," ").concat(c);a[u]=c+1;var d=t(p),m={css:r[1],media:r[2],sourceMap:r[3],supports:r[4],layer:r[5]};if(-1!==d)e[d].references++,e[d].updater(m);else{var v=i(m,o);o.byIndex=l,e.splice(l,0,{identifier:p,updater:v,references:1})}s.push(p)}return s}function i(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,i){var a=o(n=n||[],i=i||{});return function(n){n=n||[];for(var s=0;s<a.length;s++){var l=t(a[s]);e[l].references--}for(var r=o(n,i),u=0;u<a.length;u++){var c=t(a[u]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}a=r}}},16199:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},62916:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},40458:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},29530:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,i&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},92165:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},32525:(n,e)=>{e.Z=(n,e)=>{const t=n.__vccOpts||n;for(const[n,o]of e)t[n]=o;return t}},91743:(n,e,t)=>{t.d(e,{L:()=>a});let o=!1;new Promise((n=>n())).then((()=>o=!0)),"undefined"!=typeof doNothing&&doNothing();const i=!0===o;function a(n,e={}){let t,o,a;const s=n=>{a&&clearTimeout(a),a=setTimeout((()=>{o(new Error(`The operation has timed out. timeoutValue  : ${n}`))}),n)};return n&&s(n),{startTimer:s,promise:new Promise(((n,a)=>{var s;s=n,t=i&&e.fixSyncResolve?n=>setTimeout((()=>s(n))):s,o=a})),resolver:t,reject:o}}},5627:(n,e,t)=>{t.d(e,{OH:()=>r,b2:()=>o.b2,bh:()=>l,f3:()=>o.f3,nC:()=>o.nC,tu:()=>a});var o=t(53266),i=t(91743);function a(n){let e;return()=>e||(e=n())}function s(){const n=(0,i.L)();return setTimeout((()=>{n.resolver()}),100),n.promise}async function l(n,e){await r([n]);const t=o.nC.resolve(n);await e(t)}async function r(n,e){let t=!1;for(;!t;)try{n.forEach((n=>o.nC.resolve(n))),t=!0}catch(n){await s()}await(null==e?void 0:e())}},38695:(n,e,t)=>{t.d(e,{T:()=>o});const o=Symbol.for("IFormValidator")},1937:(n,e,t)=>{t.d(e,{Ax:()=>i,v5:()=>o});const o=Symbol.for("IRouter");function i(n){}},83487:(n,e,t)=>{t.d(e,{y:()=>o});const o=Symbol.for("IUseCaseExecutor")},5730:(n,e,t)=>{t.r(e),t.d(e,{default:()=>nn});var o=t(71093),i=t(66190),a=t(73843),s=t(5627),l=t(1937),r=t(15428),u=t(19496);const c={class:"autocomplete"},p={class:"label"},d=["placeholder","value"],m={key:0,class:"autocomplete-items"},v={key:0},A=["onMousedown"],f=(0,o.aZ)({__name:"autocomplete",props:{options:{type:Array,required:!0},placeholder:{type:String,default:""},value:{type:String,default:""},label:{type:String}},emits:["changeValue"],setup(n,{emit:e}){const t=n,s=(0,a.iH)(t.value),l=(0,a.iH)(!1),r=(0,a.iH)([]);function u(n){const o=n.target.value;s.value=o,r.value=t.options.filter((n=>n.name.includes(o)));const i=t.options.find((n=>n.name===o));i?f(i):e("changeValue",o)}function f(n){s.value=n.name,l.value=!1,e("changeValue",n.value)}function I(){l.value=!l.value}function g(){l.value=!1}return(0,o.YP)((()=>t.options),(n=>{r.value=n})),(e,a)=>((0,o.wg)(),(0,o.iD)("div",c,[(0,o._)("div",{onClick:I,onFocusout:g,tabindex:"0"},[(0,o._)("span",p,(0,i.toDisplayString)(t.label),1),(0,o._)("input",{placeholder:n.placeholder,value:s.value,onInput:u},null,40,d),(0,o._)("span",{class:(0,i.normalizeClass)(["icon-arrow mdi",l.value?"mdi-chevron-up":"mdi-chevron-down"])},null,2)],32),l.value?((0,o.wg)(),(0,o.iD)("div",m,[(0,o._)("ul",null,[0===r.value.length?((0,o.wg)(),(0,o.iD)("li",v,"No data")):(0,o.kq)("v-if",!0),((0,o.wg)(!0),(0,o.iD)(o.HY,null,(0,o.Ko)(r.value,(n=>((0,o.wg)(),(0,o.iD)("li",{key:n.value,class:"option",onMousedown:e=>f(n)},(0,i.toDisplayString)(n.name),41,A)))),128))])])):(0,o.kq)("v-if",!0)]))}});var I=t(17450),g=t.n(I),b=t(29530),h=t.n(b),w=t(16199),C=t.n(w),x=t(40458),B=t.n(x),y=t(62916),U=t.n(y),E=t(92165),D=t.n(E),k=t(93405),O={};O.styleTagTransform=D(),O.setAttributes=B(),O.insert=C().bind(null,"head"),O.domAPI=h(),O.insertStyleElement=U(),g()(k.Z,O),k.Z&&k.Z.locals&&k.Z.locals;var S=t(32525);const F=(0,S.Z)(f,[["__scopeId","data-v-ce7ebd40"]]);var R=t(83487);const V=n=>((0,o.dD)("data-v-37946342"),n=n(),(0,o.Cn)(),n),M={class:"container d-flex justify-content-center align-items-center h-100"},_={class:"card w-full"},z=V((()=>(0,o._)("div",{class:"card-header"}," Select or Create User ",-1))),j={class:"card-body"},Z={class:"row"},T={class:"col"},N={class:"col"},H={class:"row mt-2"},q={class:"col"},L=V((()=>(0,o._)("span",{class:"select-name"},"Roles",-1))),P={class:"col"},W=V((()=>(0,o._)("span",{class:"select-name"},"Swimlane",-1))),Y={class:"card-footer d-flex justify-content-end"},X=["disabled"],J=(0,o.aZ)({__name:"preDashboard",setup(n){const e=s.nC.resolve(R.y),t=(0,a.iH)([]),c=(0,a.iH)([]),p=(0,a.iH)([]),d=(0,a.iH)([]),m=(0,a.iH)(""),v=(0,a.iH)(""),A=(0,a.iH)([]),f=(0,a.iH)([]),I=(0,a.iH)(!1),g=(0,a.iH)(!1),b=(0,a.iH)(!1),h=(0,a.iH)({name:{minAndMaxLength:{min:2,max:40},availableCharacters:!0,nonSpaceCharacter:!0}}),w=(0,a.iH)(!1),C=window.workflow;(0,o.bv)((async()=>{e.execute((async()=>{d.value=await C.listUsers(),function(){let n=[];d.value.forEach((e=>{n.push({name:e.name,value:e.id})})),t.value=n}(),c.value=C.listUserRoles().map((n=>({name:n,value:n}))),p.value=C.listSwimlanes().map((n=>({name:n,value:n})))}),{loading:!0})}));const x=(0,o.Fl)((()=>!w||!m.value||0==A.value.length||0==f.value.length));function B(n){m.value=n;const e=d.value.find((e=>e.id===n));I.value=g.value=b.value=!!e,e&&(v.value=e.unit,A.value=e.roles,f.value=e.swimlane||[])}function y(n){v.value=n}function U(n){A.value=n.map((n=>n.name))}function E(n){f.value=n.map((n=>n.name))}async function D(){e.execute((async()=>{var n;const e=(null===(n=d.value.find((n=>n.id===m.value)))||void 0===n?void 0:n.name)||"",t={id:m.value,unit:v.value,name:e,roles:A.value,swimlane:f.value};await C.insertUser(t);const o=s.nC.resolve(l.v5);await o.push("../processlivepreview/dashboard")}),{loading:!0})}function k(n){w.value=n}return(n,e)=>((0,o.wg)(),(0,o.iD)("div",M,[(0,o._)("div",_,[z,(0,o._)("div",j,[(0,o._)("div",Z,[(0,o._)("div",T,[(0,o.Wm)(F,{label:"Username",options:t.value,onChangeValue:B},null,8,["options"])]),(0,o._)("div",N,[(0,o.Wm)(r.Z,{"element-id":"preDashboardUnit",isRequired:!0,placeholder:"",type:"text","info-text":"Unit",value:v.value,onGetValue:y,isDisabled:I.value,onValidateStatus:k,validations:h.value.name},null,8,["value","isDisabled","validations"])])]),(0,o._)("div",H,[(0,o._)("div",q,[L,(0,o.Wm)(u.Z,{class:"role",options:c.value,multiple:!0,disabled:g.value,defaultMultiple:A.value.map((n=>({name:n}))),multipleSelectedClass:"role-tag-name",onInput:U},null,8,["options","disabled","defaultMultiple"])]),(0,o._)("div",P,[W,(0,o.Wm)(u.Z,{class:"role",options:p.value,multiple:!0,disabled:b.value,defaultMultiple:f.value.map((n=>({name:n}))),multipleSelectedClass:"role-tag-name",onInput:E},null,8,["options","disabled","defaultMultiple"])])])]),(0,o._)("div",Y,[(0,o._)("button",{class:"continue-button",style:(0,i.normalizeStyle)({opacity:(0,a.SU)(x)?"0.5":"1"}),disabled:(0,a.SU)(x),onClick:D},"Continue",12,X)])])]))}});var Q=t(57793),G={};G.styleTagTransform=D(),G.setAttributes=B(),G.insert=C().bind(null,"head"),G.domAPI=h(),G.insertStyleElement=U(),g()(Q.Z,G),Q.Z&&Q.Z.locals&&Q.Z.locals;var K=t(65013),$={};$.styleTagTransform=D(),$.setAttributes=B(),$.insert=C().bind(null,"head"),$.domAPI=h(),$.insertStyleElement=U(),g()(K.Z,$),K.Z&&K.Z.locals&&K.Z.locals;const nn=(0,S.Z)(J,[["__scopeId","data-v-37946342"]])}}]);
//# sourceMappingURL=9558.js.map?ver=0.0.313_1712307419382