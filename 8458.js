"use strict";(this.webpackChunkqcloud_shell=this.webpackChunkqcloud_shell||[]).push([[8458],{16869:(n,e,a)=>{a.d(e,{Z:()=>s});var o=a(34663),t=a.n(o),i=a(7638),p=a.n(i)()(t());p.push([n.id,'\n*[data-v-70bc658b] {\n        font-family: "Roboto";\n}\n.container[data-v-70bc658b] {\n        padding: 20px 20px 0 20px;\n        overflow: auto;\n        max-height: 650px;\n}\n.app-limit[data-v-70bc658b] {\n        display: flex;\n        align-items: center;\n}\n.app-limit span[data-v-70bc658b] {\n        font-size: 14px;\n        line-height: 16px;\n        color: #212121;\n}\n.app-limit input[data-v-70bc658b] {\n        border: 1px solid #BCBCBC;\n        border-radius: 4px;\n        padding: 8px 8px 8px 12px;\n        width: 70px;\n        height: 40px;\n        margin-left: 111px;\n        outline: none;\n        margin-left: auto;\n}\n.organization-prop[data-v-70bc658b] {\n        margin-bottom: 20px;\n}\n.organization-prop label[data-v-70bc658b] {\n        font-weight: 500;\n        font-size: 16px;\n        line-height: 24px;\n        color: #151233;\n        margin-bottom: 4px;\n}\n.buttons-div[data-v-70bc658b] {\n        display: flex;\n        justify-content: end;\n        position: sticky;\n        bottom: 0;\n        background: #FFFFFF;\n        padding: 40px 0 20px;\n}\n.cancel-button[data-v-70bc658b] {\n        font-weight: 500;\n        font-size: 16px;\n        text-align: center;\n        color: #757575;\n        display: flex;\n        align-items: center;\n        padding: 8px 16px;\n        border-radius: 4px;\n        margin-right: 4px;\n        border: none;\n        background: transparent;\n}\n.save-button[data-v-70bc658b] {\n        font-weight: 500;\n        font-size: 16px;\n        text-align: center;\n        color: #FFFFFF;\n        background: #151233;\n        display: flex;\n        align-items: center;\n        padding: 8px 16px;\n        border-radius: 4px;\n        border: none;\n}\n.prop-type-name[data-v-70bc658b] {\n        color: #212121;\n        font-size: 14px;\n        line-height: 16px;\n}\n.prop-type[data-v-70bc658b] {\n        display: flex;\n        align-items: center;\n        margin-bottom: 12px;\n}\n.select-account-type[data-v-70bc658b],\n    .select-organization-group[data-v-70bc658b],\n    .select-tags[data-v-70bc658b] {\n        width: 100%;\n        font-size: 15px;\n        height: 40px;\n        line-height: 40px;\n        border: 1px solid #BCBCBC;\n        border-radius: 4px;\n        padding: 0px 12px;\n}\n\n    /*Switch Toggle CSS */\n.prop-type-switch[data-v-70bc658b] {\n        position: relative;\n        cursor: pointer;\n        top: 0;\n        bottom: 0;\n        background-color: #ccc;\n        -webkit-transition: 0.4s;\n        transition: 0.4s;\n        margin-right: 13px;\n        margin-left: auto;\n}\n.prop-type-switch[data-v-70bc658b]:after {\n        position: absolute;\n        content: "";\n        height: 14px;\n        width: 14px;\n        background-color: white;\n        -webkit-transition: 0.4s;\n        transition: 0.4s;\n        border-radius: 50%;\n}\n.prop-type-switch[data-v-70bc658b]:disabled:after {\n        background-color: #757575;\n}\n.prop-type-switch[data-v-70bc658b]:checked {\n        background-color: #151233;\n}\ninput[type=checkbox][data-v-70bc658b] {\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n        -webkit-tap-highlight-color: transparent;\n        cursor: pointer;\n}\n.prop-type-switch[data-v-70bc658b]:checked:after {\n        transform: translatex(16px);\n}\n.prop-type-switch.round[data-v-70bc658b]::after {\n        left: 3px;\n        border-radius: 50%;\n}\n.prop-type-switch.round[data-v-70bc658b] {\n        width: 36px;\n        height: 20px;\n        border-radius: 34px;\n        padding: 3px;\n}\n.custom-select .selected[data-v-70bc658b] {\n        height: 40px\n}\n    ',"",{version:3,sources:["webpack://./src/presentation/vue3/components/dialogs/backoffice/manageOrganization.vue"],names:[],mappings:";AA0OI;QACI,qBAAqB;AACzB;AAEA;QACI,yBAAyB;QACzB,cAAc;QACd,iBAAiB;AACrB;AAEA;QACI,aAAa;QACb,mBAAmB;AACvB;AAEA;QACI,eAAe;QACf,iBAAiB;QACjB,cAAc;AAClB;AAEA;QACI,yBAAyB;QACzB,kBAAkB;QAClB,yBAAyB;QACzB,WAAW;QACX,YAAY;QACZ,kBAAkB;QAClB,aAAa;QACb,iBAAiB;AACrB;AAEA;QACI,mBAAmB;AACvB;AAEA;QACI,gBAAgB;QAChB,eAAe;QACf,iBAAiB;QACjB,cAAc;QACd,kBAAkB;AACtB;AAEA;QACI,aAAa;QACb,oBAAoB;QACpB,gBAAgB;QAChB,SAAS;QACT,mBAAmB;QACnB,oBAAoB;AACxB;AAEA;QACI,gBAAgB;QAChB,eAAe;QACf,kBAAkB;QAClB,cAAc;QACd,aAAa;QACb,mBAAmB;QACnB,iBAAiB;QACjB,kBAAkB;QAClB,iBAAiB;QACjB,YAAY;QACZ,uBAAuB;AAC3B;AAEA;QACI,gBAAgB;QAChB,eAAe;QACf,kBAAkB;QAClB,cAAc;QACd,mBAAmB;QACnB,aAAa;QACb,mBAAmB;QACnB,iBAAiB;QACjB,kBAAkB;QAClB,YAAY;AAChB;AAEA;QACI,cAAc;QACd,eAAe;QACf,iBAAiB;AACrB;AAEA;QACI,aAAa;QACb,mBAAmB;QACnB,mBAAmB;AACvB;AAEA;;;QAGI,WAAW;QACX,eAAe;QACf,YAAY;QACZ,iBAAiB;QACjB,yBAAyB;QACzB,kBAAkB;QAClB,iBAAiB;AACrB;;IAEA,qBAAqB;AACrB;QACI,kBAAkB;QAClB,eAAe;QACf,MAAM;QACN,SAAS;QACT,sBAAsB;QACtB,wBAAwB;QACxB,gBAAgB;QAChB,kBAAkB;QAClB,iBAAiB;AACrB;AAEA;QACI,kBAAkB;QAClB,WAAW;QACX,YAAY;QACZ,WAAW;QACX,uBAAuB;QACvB,wBAAwB;QACxB,gBAAgB;QAChB,kBAAkB;AACtB;AAEA;QACI,yBAAyB;AAC7B;AAEA;QACI,yBAAyB;AAC7B;AAEA;QACI,wBAAwB;QACxB,qBAAqB;QACrB,gBAAgB;QAChB,wCAAwC;QACxC,eAAe;AACnB;AAEA;QACI,2BAA2B;AAC/B;AAEA;QACI,SAAS;QACT,kBAAkB;AACtB;AAEA;QACI,WAAW;QACX,YAAY;QACZ,mBAAmB;QACnB,YAAY;AAChB;AAEA;QACI;AACJ",sourcesContent:['<script setup lang="ts">\nimport { IEditorTypes, IOrganization, IOrganizationFeatures } from "../../../../../../../common/qCloudTemp/membership";\nimport { IOrganizationActions, IOrganizationGroup } from "../../../../../../../common/qCloudTemp/quickCloud";\nimport { ref, computed, onBeforeMount } from "vue";\nimport { ITags } from "../../../../../../../common/qCloudTemp/quickCloud";\nimport { container } from "../../../../../domain/core/diContainer";\nimport { IBackofficeUseCase } from "../../../../../domain/useCase/backoffice/IBackofficeUseCase";\nimport { IUseCaseExecutor } from "../../../../../domain/useCase/IUseCaseExecutor";\nimport { IViewModel } from "../../../../../domain/viewModel/IViewModel";\nimport CustomSelect from "../../customSelect.vue"\n\ninterface IManageOrgData {\n    organization: IOrganization,\n}\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\nconst backofficeUseCase = container.resolve<IBackofficeUseCase>(IBackofficeUseCase);\nconst viewModel = container.resolve<IViewModel>(IViewModel);\n\nconst props = defineProps<IManageOrgData>();\nconst organization = ref(props.organization)\nconst selectableTags = ref<Array<ITags>>();\nconst organizationTags = ref<Array<ITags>>();\nconst selectedTags = ref<Array<ITags>>([]);\n// const orgTypeNameDict: Record<string, string> = {premium: "Premium", beta: "Free"};\n// const orgNameTypeDict: Record<string, string> = {Premium: "premium", Free: "beta"};\n\n\nconst orgGroupList = ref(viewModel.backoffice?.organizationGroups);\nconst accountTypeOptions = ["Free", "Premium"];\nconst createAppLimit = ref(organization.value.limits?.createApp);\nconst accountType = ref(organization.value.accountType);\nconst appQuick = ref(organization.value.applications.quick);\nconst appFlow = ref(organization.value.applications.flow);\nconst appWorkflow = ref(organization.value.applications.workflow);\nconst appStore = ref(organization.value.applications.store);\nconst appEntity = ref(organization.value.applications.entity);\nconst appProcess = ref(organization.value.applications.process);\nconst appImage = ref(organization.value.applications.image);\nconst appFont = ref(organization.value.applications.font);\nconst appLottie = ref(organization.value.applications.lottie);\nconst actionPublicCloud = ref(organization.value.actions?.publish?.targets?.azure);\nconst actionPlateauGCP = ref(organization.value.actions?.publish?.targets?.plateauGCP);\nconst qjsonLoading = ref(organization.value.features?.qjsonLoading);\nconst multipleCss = ref(organization.value.features?.multipleCss);\nconst aiSuggestions = ref(organization.value.features?.aiSuggestions);\nconst codeAssistant = ref(organization.value.features?.codeAssistant);\nconst appVersion = ref(organization.value.features?.appVersion);\nconst appExternalIntegration = ref(organization.value.features?.externalIntegration);\nconst orgGroupID = ref(organization.value.organizationGroupId);\nconst currentOrgGroup = ref<IOrganizationGroup>();\nconst currentOrgGroupisReady = ref(false);\nconst convertedAccountType = ref("");\nconst customSelectAccountType = ref(null);\n\nonBeforeMount(() => {\n    getOrganizationTags();\n    arrangeTags();\n    getOrgGroupList();\n    getAccountType();\n})\nconst emit = defineEmits(["close"]);\nfunction close() {\n    emit("close");\n}\nfunction setAccountType(value: string) {\n    switch (value) {\n        case \'Premium\': accountType.value = \'premium\'; break;\n        case \'Free\': accountType.value = \'beta\'; break;\n        default: accountType.value = \'beta\'; break;\n    }\n}\nfunction getAccountType() {\n    switch (accountType.value) {\n        case \'premium\': convertedAccountType.value = \'Premium\'; break;\n        default: convertedAccountType.value = \'Free\'; break;\n    }\n}\nfunction setOrganizationGroup(selectedOrgGroupID: string) {\n    orgGroupID.value = selectedOrgGroupID;\n    (<any>customSelectAccountType.value)?.setSelected?.("Premium");\n    setAccountType("Premium");\n}\nfunction getOrganizationTags() {\n    const tagsDict: Record<string, ITags> = {};\n    viewModel.backoffice?.tags?.forEach(tag => tagsDict[tag.ID] = tag);\n    organizationTags.value = organization.value?.tags?.map(tag => tagsDict[tag]);\n    organizationTags.value ? selectedTags.value = organizationTags.value : selectedTags.value = [];\n}\nfunction arrangeTags(remove?: boolean, toRemove?: ITags) {\n    if (remove) { organizationTags.value = organizationTags.value?.filter(tag => tag.ID != toRemove?.ID) }\n    const tagsInTheBox = organizationTags.value?.concat(selectedTags.value);\n    selectableTags.value = viewModel.backoffice?.tags?.filter(tag => !tagsInTheBox?.includes(tag));\n\n}\nfunction getOrgGroupList() {\n    executor.execute(async () => {\n        await backofficeUseCase.listOrganizationGroups();\n        orgGroupList.value = viewModel.backoffice?.organizationGroups;\n        if (organization.value.organizationGroupId) {\n            currentOrgGroup.value = orgGroupList.value!.find(orgGroup => orgGroup.ID == organization.value.organizationGroupId);\n        }\n        currentOrgGroupisReady.value = true;\n    }, { loading: true });\n}\nfunction setTags(tags: Array<ITags>) {\n    selectedTags.value = tags;\n}\nfunction save() {\n    executor.execute(async () => {\n        const applications: IEditorTypes = { quick: appQuick.value, flow: appFlow.value, entity: appEntity.value, process: appProcess.value, workflow: appWorkflow.value, image: appImage.value, font: appFont.value, lottie: appLottie.value, store: appStore.value};\n        const actions: IOrganizationActions = { publish: { targets: { azure: actionPublicCloud.value!, plateauGCP: actionPlateauGCP.value! } } };\n        const environmentPrefix = actionPlateauGCP.value ? \'studio-\' + organization.value.name.toLowerCase() : \'\';\n        const features: IOrganizationFeatures = { qjsonLoading: qjsonLoading.value, multipleCss: multipleCss.value, aiSuggestions: aiSuggestions.value, codeAssistant: codeAssistant.value, appVersion: appVersion.value, externalIntegration: appExternalIntegration.value };\n        const selectedTagIDs = selectedTags.value.map(tag => tag.ID);\n        const updatedOrg = await backofficeUseCase.updateOrganization(organization.value.id, {\n            accountType: accountType.value!, createAppLimit: createAppLimit.value!, actions,\n            applications, environmentPrefix, features, tags: selectedTagIDs, organizationGroupId: orgGroupID.value\n        });\n        organization.value = updatedOrg;\n        close();\n    }, { loading: true })\n}\n<\/script>\n\n<template>\n    <div class="container">\n        <div>\n            <div v-if="currentOrgGroupisReady" class="organization-prop">\n                <label>Organization Group</label>\n                <CustomSelect :options="orgGroupList" class="select-organization-group" :placeholder="\'Select\'" :defaultForObject="currentOrgGroup" @input="setOrganizationGroup"></CustomSelect>\n            </div>\n            <div class="organization-prop">\n                <label>Account Type</label>\n                <CustomSelect ref="customSelectAccountType" :options="accountTypeOptions" class="select-account-type" :placeholder="\'Select\'" :default="convertedAccountType"  @input="setAccountType"></CustomSelect>\n            </div>\n            <div class="organization-prop">\n                <label>Tags</label>\n                <div>\n                    <CustomSelect :options="selectableTags" class="select-tags" :placeholder="\'Insert Tags\'" :defaultMultiple="organizationTags"  :multiple="true"\n                                :multipleSelectedClass="\'org-tag-name\'" @afterClick="arrangeTags" @input="setTags"></CustomSelect>\n                </div>\n            </div>\n            <div class="organization-prop app-limit">\n                <span>Number of applications that can be created</span>\n                <input type="number" v-model="createAppLimit"/>\n            </div>\n        </div>\n        <div class="organization-prop">\n            <label>Editors</label>\n            <div class="prop-type">\n                <span class="prop-type-name">UI</span>\n                <input class="prop-type-switch round" type="checkbox" v-model="appQuick" />\n            </div>\n            <div class="prop-type">\n                <span class="prop-type-name">Flow</span>\n                <input class="prop-type-switch round" type="checkbox" v-model="appFlow"/>\n            </div>\n            <div class="prop-type">\n                <span class="prop-type-name">Data Model</span>\n                <input class="prop-type-switch round" type="checkbox" v-model="appEntity" />\n            </div>\n            <div class="prop-type">\n                <span class="prop-type-name">Workflow (New)</span>\n                <input class="prop-type-switch round" type="checkbox" v-model="appWorkflow"/>\n            </div>\n            <div class="prop-type">\n                <span class="prop-type-name">Store</span>\n                <input class="prop-type-switch round" type="checkbox" v-model="appStore"/>\n            </div>\n            <div class="prop-type">\n                <span class="prop-type-name">Process Wizard (Old)</span>\n                <input class="prop-type-switch round" type="checkbox" v-model="appProcess"/>\n            </div>\n            <div class="prop-type">\n                <span class="prop-type-name">Image</span>\n                <input class="prop-type-switch round" type="checkbox" v-model="appImage"/>\n            </div>\n            <div class="prop-type">\n                <span class="prop-type-name">Font</span>\n                <input class="prop-type-switch round" type="checkbox" v-model="appFont"/>\n            </div>\n            <div class="prop-type">\n                <span class="prop-type-name">Lottie</span>\n                <input class="prop-type-switch round" type="checkbox" v-model="appLottie"/>\n            </div>\n        </div>\n        <div class="organization-prop">\n            <label>Publish To</label>\n            <div class="prop-type">\n                <span class="prop-type-name">Public  Cloud</span>\n                <input class="prop-type-switch round" type="checkbox" v-model="actionPublicCloud"/>\n        </div>\n        <div class="prop-type">\n            <span class="prop-type-name">Plateau Platform Playground</span>\n            <input class="prop-type-switch round" type="checkbox" v-model="actionPlateauGCP" />\n        </div>\n        </div>\n        <div class="organization-prop">\n            <label>Features</label>\n            <div class="prop-type">\n                <span class="prop-type-name">Qjson Loading</span>\n                <input class="prop-type-switch round" type="checkbox" v-model="qjsonLoading" />\n            </div>\n            <div class="prop-type">\n                <span class="prop-type-name">Multiple CSS</span>\n                <input class="prop-type-switch round" type="checkbox" v-model="multipleCss" />\n            </div>\n            <div class="prop-type">\n                <span class="prop-type-name">AI Suggestions</span>\n                <input class="prop-type-switch round" type="checkbox" v-model="aiSuggestions" />\n            </div>\n            <div class="prop-type">\n                <span class="prop-type-name">Code Assistant</span>\n                <input class="prop-type-switch round" type="checkbox" v-model="codeAssistant" />\n            </div>\n            <div class="prop-type">\n                <span class="prop-type-name">App Version</span>\n                <input class="prop-type-switch round" type="checkbox" v-model="appVersion" />\n            </div>\n            <div class="prop-type">\n                <span class="prop-type-name">External Integration</span>\n                <input class="prop-type-switch round" type="checkbox" v-model="appExternalIntegration" />\n            </div>\n        </div>\n\n        <div class="buttons-div">\n            <button class="cancel-button" @click="close()">Cancel</button>\n            <button class="save-button" @click="save()">SAVE</button>\n        </div>\n    </div>\n</template>\n\n\n<style scoped>\n    * {\n        font-family: "Roboto";\n    }\n\n    .container {\n        padding: 20px 20px 0 20px;\n        overflow: auto;\n        max-height: 650px;\n    }\n\n    .app-limit {\n        display: flex;\n        align-items: center;\n    }\n\n    .app-limit span {\n        font-size: 14px;\n        line-height: 16px;\n        color: #212121;\n    }\n\n    .app-limit input {\n        border: 1px solid #BCBCBC;\n        border-radius: 4px;\n        padding: 8px 8px 8px 12px;\n        width: 70px;\n        height: 40px;\n        margin-left: 111px;\n        outline: none;\n        margin-left: auto;\n    }\n\n    .organization-prop {\n        margin-bottom: 20px;\n    }\n\n    .organization-prop label {\n        font-weight: 500;\n        font-size: 16px;\n        line-height: 24px;\n        color: #151233;\n        margin-bottom: 4px;\n    }\n\n    .buttons-div {\n        display: flex;\n        justify-content: end;\n        position: sticky;\n        bottom: 0;\n        background: #FFFFFF;\n        padding: 40px 0 20px;\n    }\n\n    .cancel-button {\n        font-weight: 500;\n        font-size: 16px;\n        text-align: center;\n        color: #757575;\n        display: flex;\n        align-items: center;\n        padding: 8px 16px;\n        border-radius: 4px;\n        margin-right: 4px;\n        border: none;\n        background: transparent;\n    }\n\n    .save-button {\n        font-weight: 500;\n        font-size: 16px;\n        text-align: center;\n        color: #FFFFFF;\n        background: #151233;\n        display: flex;\n        align-items: center;\n        padding: 8px 16px;\n        border-radius: 4px;\n        border: none;\n    }\n\n    .prop-type-name {\n        color: #212121;\n        font-size: 14px;\n        line-height: 16px;\n    }\n\n    .prop-type {\n        display: flex;\n        align-items: center;\n        margin-bottom: 12px;\n    }\n\n    .select-account-type,\n    .select-organization-group,\n    .select-tags {\n        width: 100%;\n        font-size: 15px;\n        height: 40px;\n        line-height: 40px;\n        border: 1px solid #BCBCBC;\n        border-radius: 4px;\n        padding: 0px 12px;\n    }\n\n    /*Switch Toggle CSS */\n    .prop-type-switch {\n        position: relative;\n        cursor: pointer;\n        top: 0;\n        bottom: 0;\n        background-color: #ccc;\n        -webkit-transition: 0.4s;\n        transition: 0.4s;\n        margin-right: 13px;\n        margin-left: auto;\n    }\n\n    .prop-type-switch:after {\n        position: absolute;\n        content: "";\n        height: 14px;\n        width: 14px;\n        background-color: white;\n        -webkit-transition: 0.4s;\n        transition: 0.4s;\n        border-radius: 50%;\n    }\n\n    .prop-type-switch:disabled:after {\n        background-color: #757575;\n    }\n\n    .prop-type-switch:checked {\n        background-color: #151233;\n    }\n\n    input[type=checkbox] {\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n        -webkit-tap-highlight-color: transparent;\n        cursor: pointer;\n    }\n\n    .prop-type-switch:checked:after {\n        transform: translatex(16px);\n    }\n\n    .prop-type-switch.round::after {\n        left: 3px;\n        border-radius: 50%;\n    }\n\n    .prop-type-switch.round {\n        width: 36px;\n        height: 20px;\n        border-radius: 34px;\n        padding: 3px;\n    }\n\n    .custom-select .selected {\n        height: 40px\n    }\n    </style>\n    <style>\n    .selected-type {\n        background-color: transparent;\n        color: #212121;\n    }\n\n    .custom-select .items {\n        color: #212121;\n        border-radius: 8px;\n        border: 1px solid #E3E3E3;\n        overflow: hidden;\n        background-color: #FFFFFF;\n        box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\n    }\n\n    .custom-select .items .option {\n        font-size: 14px;\n        padding-left: 12px;\n    }\n\n    .custom-select .items .option:hover {\n        background-color: #EEEEEE;\n        color: #212121;\n    }\n\n    .select-account-type i,\n    .select-organization-group i,\n    .select-tags i {\n        font-size: 16px;\n        color: #BCBCBC;\n    }\n\n    .org-tag-name {\n        align-items: center;\n        padding: 5px 8px;\n        background: #D0D1E9;\n        display: flex;\n        justify-content: center;\n        border-radius: 20px;\n        margin-right: 4px;\n        font-size: 14px;\n        color: #2F3160;\n        white-space: nowrap;\n        font-weight: 500;\n    }\n</style>'],sourceRoot:""}]);const s=p},57057:(n,e,a)=>{a.d(e,{Z:()=>s});var o=a(34663),t=a.n(o),i=a(7638),p=a.n(i)()(t());p.push([n.id,"\n.selected-type {\n        background-color: transparent;\n        color: #212121;\n}\n.custom-select .items {\n        color: #212121;\n        border-radius: 8px;\n        border: 1px solid #E3E3E3;\n        overflow: hidden;\n        background-color: #FFFFFF;\n        box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\n}\n.custom-select .items .option {\n        font-size: 14px;\n        padding-left: 12px;\n}\n.custom-select .items .option:hover {\n        background-color: #EEEEEE;\n        color: #212121;\n}\n.select-account-type i,\n    .select-organization-group i,\n    .select-tags i {\n        font-size: 16px;\n        color: #BCBCBC;\n}\n.org-tag-name {\n        align-items: center;\n        padding: 5px 8px;\n        background: #D0D1E9;\n        display: flex;\n        justify-content: center;\n        border-radius: 20px;\n        margin-right: 4px;\n        font-size: 14px;\n        color: #2F3160;\n        white-space: nowrap;\n        font-weight: 500;\n}\n","",{version:3,sources:["webpack://./src/presentation/vue3/components/dialogs/backoffice/manageOrganization.vue"],names:[],mappings:";AA+YI;QACI,6BAA6B;QAC7B,cAAc;AAClB;AAEA;QACI,cAAc;QACd,kBAAkB;QAClB,yBAAyB;QACzB,gBAAgB;QAChB,yBAAyB;QACzB,0CAA0C;AAC9C;AAEA;QACI,eAAe;QACf,kBAAkB;AACtB;AAEA;QACI,yBAAyB;QACzB,cAAc;AAClB;AAEA;;;QAGI,eAAe;QACf,cAAc;AAClB;AAEA;QACI,mBAAmB;QACnB,gBAAgB;QAChB,mBAAmB;QACnB,aAAa;QACb,uBAAuB;QACvB,mBAAmB;QACnB,iBAAiB;QACjB,eAAe;QACf,cAAc;QACd,mBAAmB;QACnB,gBAAgB;AACpB",sourcesContent:['<script setup lang="ts">\nimport { IEditorTypes, IOrganization, IOrganizationFeatures } from "../../../../../../../common/qCloudTemp/membership";\nimport { IOrganizationActions, IOrganizationGroup } from "../../../../../../../common/qCloudTemp/quickCloud";\nimport { ref, computed, onBeforeMount } from "vue";\nimport { ITags } from "../../../../../../../common/qCloudTemp/quickCloud";\nimport { container } from "../../../../../domain/core/diContainer";\nimport { IBackofficeUseCase } from "../../../../../domain/useCase/backoffice/IBackofficeUseCase";\nimport { IUseCaseExecutor } from "../../../../../domain/useCase/IUseCaseExecutor";\nimport { IViewModel } from "../../../../../domain/viewModel/IViewModel";\nimport CustomSelect from "../../customSelect.vue"\n\ninterface IManageOrgData {\n    organization: IOrganization,\n}\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\nconst backofficeUseCase = container.resolve<IBackofficeUseCase>(IBackofficeUseCase);\nconst viewModel = container.resolve<IViewModel>(IViewModel);\n\nconst props = defineProps<IManageOrgData>();\nconst organization = ref(props.organization)\nconst selectableTags = ref<Array<ITags>>();\nconst organizationTags = ref<Array<ITags>>();\nconst selectedTags = ref<Array<ITags>>([]);\n// const orgTypeNameDict: Record<string, string> = {premium: "Premium", beta: "Free"};\n// const orgNameTypeDict: Record<string, string> = {Premium: "premium", Free: "beta"};\n\n\nconst orgGroupList = ref(viewModel.backoffice?.organizationGroups);\nconst accountTypeOptions = ["Free", "Premium"];\nconst createAppLimit = ref(organization.value.limits?.createApp);\nconst accountType = ref(organization.value.accountType);\nconst appQuick = ref(organization.value.applications.quick);\nconst appFlow = ref(organization.value.applications.flow);\nconst appWorkflow = ref(organization.value.applications.workflow);\nconst appStore = ref(organization.value.applications.store);\nconst appEntity = ref(organization.value.applications.entity);\nconst appProcess = ref(organization.value.applications.process);\nconst appImage = ref(organization.value.applications.image);\nconst appFont = ref(organization.value.applications.font);\nconst appLottie = ref(organization.value.applications.lottie);\nconst actionPublicCloud = ref(organization.value.actions?.publish?.targets?.azure);\nconst actionPlateauGCP = ref(organization.value.actions?.publish?.targets?.plateauGCP);\nconst qjsonLoading = ref(organization.value.features?.qjsonLoading);\nconst multipleCss = ref(organization.value.features?.multipleCss);\nconst aiSuggestions = ref(organization.value.features?.aiSuggestions);\nconst codeAssistant = ref(organization.value.features?.codeAssistant);\nconst appVersion = ref(organization.value.features?.appVersion);\nconst appExternalIntegration = ref(organization.value.features?.externalIntegration);\nconst orgGroupID = ref(organization.value.organizationGroupId);\nconst currentOrgGroup = ref<IOrganizationGroup>();\nconst currentOrgGroupisReady = ref(false);\nconst convertedAccountType = ref("");\nconst customSelectAccountType = ref(null);\n\nonBeforeMount(() => {\n    getOrganizationTags();\n    arrangeTags();\n    getOrgGroupList();\n    getAccountType();\n})\nconst emit = defineEmits(["close"]);\nfunction close() {\n    emit("close");\n}\nfunction setAccountType(value: string) {\n    switch (value) {\n        case \'Premium\': accountType.value = \'premium\'; break;\n        case \'Free\': accountType.value = \'beta\'; break;\n        default: accountType.value = \'beta\'; break;\n    }\n}\nfunction getAccountType() {\n    switch (accountType.value) {\n        case \'premium\': convertedAccountType.value = \'Premium\'; break;\n        default: convertedAccountType.value = \'Free\'; break;\n    }\n}\nfunction setOrganizationGroup(selectedOrgGroupID: string) {\n    orgGroupID.value = selectedOrgGroupID;\n    (<any>customSelectAccountType.value)?.setSelected?.("Premium");\n    setAccountType("Premium");\n}\nfunction getOrganizationTags() {\n    const tagsDict: Record<string, ITags> = {};\n    viewModel.backoffice?.tags?.forEach(tag => tagsDict[tag.ID] = tag);\n    organizationTags.value = organization.value?.tags?.map(tag => tagsDict[tag]);\n    organizationTags.value ? selectedTags.value = organizationTags.value : selectedTags.value = [];\n}\nfunction arrangeTags(remove?: boolean, toRemove?: ITags) {\n    if (remove) { organizationTags.value = organizationTags.value?.filter(tag => tag.ID != toRemove?.ID) }\n    const tagsInTheBox = organizationTags.value?.concat(selectedTags.value);\n    selectableTags.value = viewModel.backoffice?.tags?.filter(tag => !tagsInTheBox?.includes(tag));\n\n}\nfunction getOrgGroupList() {\n    executor.execute(async () => {\n        await backofficeUseCase.listOrganizationGroups();\n        orgGroupList.value = viewModel.backoffice?.organizationGroups;\n        if (organization.value.organizationGroupId) {\n            currentOrgGroup.value = orgGroupList.value!.find(orgGroup => orgGroup.ID == organization.value.organizationGroupId);\n        }\n        currentOrgGroupisReady.value = true;\n    }, { loading: true });\n}\nfunction setTags(tags: Array<ITags>) {\n    selectedTags.value = tags;\n}\nfunction save() {\n    executor.execute(async () => {\n        const applications: IEditorTypes = { quick: appQuick.value, flow: appFlow.value, entity: appEntity.value, process: appProcess.value, workflow: appWorkflow.value, image: appImage.value, font: appFont.value, lottie: appLottie.value, store: appStore.value};\n        const actions: IOrganizationActions = { publish: { targets: { azure: actionPublicCloud.value!, plateauGCP: actionPlateauGCP.value! } } };\n        const environmentPrefix = actionPlateauGCP.value ? \'studio-\' + organization.value.name.toLowerCase() : \'\';\n        const features: IOrganizationFeatures = { qjsonLoading: qjsonLoading.value, multipleCss: multipleCss.value, aiSuggestions: aiSuggestions.value, codeAssistant: codeAssistant.value, appVersion: appVersion.value, externalIntegration: appExternalIntegration.value };\n        const selectedTagIDs = selectedTags.value.map(tag => tag.ID);\n        const updatedOrg = await backofficeUseCase.updateOrganization(organization.value.id, {\n            accountType: accountType.value!, createAppLimit: createAppLimit.value!, actions,\n            applications, environmentPrefix, features, tags: selectedTagIDs, organizationGroupId: orgGroupID.value\n        });\n        organization.value = updatedOrg;\n        close();\n    }, { loading: true })\n}\n<\/script>\n\n<template>\n    <div class="container">\n        <div>\n            <div v-if="currentOrgGroupisReady" class="organization-prop">\n                <label>Organization Group</label>\n                <CustomSelect :options="orgGroupList" class="select-organization-group" :placeholder="\'Select\'" :defaultForObject="currentOrgGroup" @input="setOrganizationGroup"></CustomSelect>\n            </div>\n            <div class="organization-prop">\n                <label>Account Type</label>\n                <CustomSelect ref="customSelectAccountType" :options="accountTypeOptions" class="select-account-type" :placeholder="\'Select\'" :default="convertedAccountType"  @input="setAccountType"></CustomSelect>\n            </div>\n            <div class="organization-prop">\n                <label>Tags</label>\n                <div>\n                    <CustomSelect :options="selectableTags" class="select-tags" :placeholder="\'Insert Tags\'" :defaultMultiple="organizationTags"  :multiple="true"\n                                :multipleSelectedClass="\'org-tag-name\'" @afterClick="arrangeTags" @input="setTags"></CustomSelect>\n                </div>\n            </div>\n            <div class="organization-prop app-limit">\n                <span>Number of applications that can be created</span>\n                <input type="number" v-model="createAppLimit"/>\n            </div>\n        </div>\n        <div class="organization-prop">\n            <label>Editors</label>\n            <div class="prop-type">\n                <span class="prop-type-name">UI</span>\n                <input class="prop-type-switch round" type="checkbox" v-model="appQuick" />\n            </div>\n            <div class="prop-type">\n                <span class="prop-type-name">Flow</span>\n                <input class="prop-type-switch round" type="checkbox" v-model="appFlow"/>\n            </div>\n            <div class="prop-type">\n                <span class="prop-type-name">Data Model</span>\n                <input class="prop-type-switch round" type="checkbox" v-model="appEntity" />\n            </div>\n            <div class="prop-type">\n                <span class="prop-type-name">Workflow (New)</span>\n                <input class="prop-type-switch round" type="checkbox" v-model="appWorkflow"/>\n            </div>\n            <div class="prop-type">\n                <span class="prop-type-name">Store</span>\n                <input class="prop-type-switch round" type="checkbox" v-model="appStore"/>\n            </div>\n            <div class="prop-type">\n                <span class="prop-type-name">Process Wizard (Old)</span>\n                <input class="prop-type-switch round" type="checkbox" v-model="appProcess"/>\n            </div>\n            <div class="prop-type">\n                <span class="prop-type-name">Image</span>\n                <input class="prop-type-switch round" type="checkbox" v-model="appImage"/>\n            </div>\n            <div class="prop-type">\n                <span class="prop-type-name">Font</span>\n                <input class="prop-type-switch round" type="checkbox" v-model="appFont"/>\n            </div>\n            <div class="prop-type">\n                <span class="prop-type-name">Lottie</span>\n                <input class="prop-type-switch round" type="checkbox" v-model="appLottie"/>\n            </div>\n        </div>\n        <div class="organization-prop">\n            <label>Publish To</label>\n            <div class="prop-type">\n                <span class="prop-type-name">Public  Cloud</span>\n                <input class="prop-type-switch round" type="checkbox" v-model="actionPublicCloud"/>\n        </div>\n        <div class="prop-type">\n            <span class="prop-type-name">Plateau Platform Playground</span>\n            <input class="prop-type-switch round" type="checkbox" v-model="actionPlateauGCP" />\n        </div>\n        </div>\n        <div class="organization-prop">\n            <label>Features</label>\n            <div class="prop-type">\n                <span class="prop-type-name">Qjson Loading</span>\n                <input class="prop-type-switch round" type="checkbox" v-model="qjsonLoading" />\n            </div>\n            <div class="prop-type">\n                <span class="prop-type-name">Multiple CSS</span>\n                <input class="prop-type-switch round" type="checkbox" v-model="multipleCss" />\n            </div>\n            <div class="prop-type">\n                <span class="prop-type-name">AI Suggestions</span>\n                <input class="prop-type-switch round" type="checkbox" v-model="aiSuggestions" />\n            </div>\n            <div class="prop-type">\n                <span class="prop-type-name">Code Assistant</span>\n                <input class="prop-type-switch round" type="checkbox" v-model="codeAssistant" />\n            </div>\n            <div class="prop-type">\n                <span class="prop-type-name">App Version</span>\n                <input class="prop-type-switch round" type="checkbox" v-model="appVersion" />\n            </div>\n            <div class="prop-type">\n                <span class="prop-type-name">External Integration</span>\n                <input class="prop-type-switch round" type="checkbox" v-model="appExternalIntegration" />\n            </div>\n        </div>\n\n        <div class="buttons-div">\n            <button class="cancel-button" @click="close()">Cancel</button>\n            <button class="save-button" @click="save()">SAVE</button>\n        </div>\n    </div>\n</template>\n\n\n<style scoped>\n    * {\n        font-family: "Roboto";\n    }\n\n    .container {\n        padding: 20px 20px 0 20px;\n        overflow: auto;\n        max-height: 650px;\n    }\n\n    .app-limit {\n        display: flex;\n        align-items: center;\n    }\n\n    .app-limit span {\n        font-size: 14px;\n        line-height: 16px;\n        color: #212121;\n    }\n\n    .app-limit input {\n        border: 1px solid #BCBCBC;\n        border-radius: 4px;\n        padding: 8px 8px 8px 12px;\n        width: 70px;\n        height: 40px;\n        margin-left: 111px;\n        outline: none;\n        margin-left: auto;\n    }\n\n    .organization-prop {\n        margin-bottom: 20px;\n    }\n\n    .organization-prop label {\n        font-weight: 500;\n        font-size: 16px;\n        line-height: 24px;\n        color: #151233;\n        margin-bottom: 4px;\n    }\n\n    .buttons-div {\n        display: flex;\n        justify-content: end;\n        position: sticky;\n        bottom: 0;\n        background: #FFFFFF;\n        padding: 40px 0 20px;\n    }\n\n    .cancel-button {\n        font-weight: 500;\n        font-size: 16px;\n        text-align: center;\n        color: #757575;\n        display: flex;\n        align-items: center;\n        padding: 8px 16px;\n        border-radius: 4px;\n        margin-right: 4px;\n        border: none;\n        background: transparent;\n    }\n\n    .save-button {\n        font-weight: 500;\n        font-size: 16px;\n        text-align: center;\n        color: #FFFFFF;\n        background: #151233;\n        display: flex;\n        align-items: center;\n        padding: 8px 16px;\n        border-radius: 4px;\n        border: none;\n    }\n\n    .prop-type-name {\n        color: #212121;\n        font-size: 14px;\n        line-height: 16px;\n    }\n\n    .prop-type {\n        display: flex;\n        align-items: center;\n        margin-bottom: 12px;\n    }\n\n    .select-account-type,\n    .select-organization-group,\n    .select-tags {\n        width: 100%;\n        font-size: 15px;\n        height: 40px;\n        line-height: 40px;\n        border: 1px solid #BCBCBC;\n        border-radius: 4px;\n        padding: 0px 12px;\n    }\n\n    /*Switch Toggle CSS */\n    .prop-type-switch {\n        position: relative;\n        cursor: pointer;\n        top: 0;\n        bottom: 0;\n        background-color: #ccc;\n        -webkit-transition: 0.4s;\n        transition: 0.4s;\n        margin-right: 13px;\n        margin-left: auto;\n    }\n\n    .prop-type-switch:after {\n        position: absolute;\n        content: "";\n        height: 14px;\n        width: 14px;\n        background-color: white;\n        -webkit-transition: 0.4s;\n        transition: 0.4s;\n        border-radius: 50%;\n    }\n\n    .prop-type-switch:disabled:after {\n        background-color: #757575;\n    }\n\n    .prop-type-switch:checked {\n        background-color: #151233;\n    }\n\n    input[type=checkbox] {\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n        -webkit-tap-highlight-color: transparent;\n        cursor: pointer;\n    }\n\n    .prop-type-switch:checked:after {\n        transform: translatex(16px);\n    }\n\n    .prop-type-switch.round::after {\n        left: 3px;\n        border-radius: 50%;\n    }\n\n    .prop-type-switch.round {\n        width: 36px;\n        height: 20px;\n        border-radius: 34px;\n        padding: 3px;\n    }\n\n    .custom-select .selected {\n        height: 40px\n    }\n    </style>\n    <style>\n    .selected-type {\n        background-color: transparent;\n        color: #212121;\n    }\n\n    .custom-select .items {\n        color: #212121;\n        border-radius: 8px;\n        border: 1px solid #E3E3E3;\n        overflow: hidden;\n        background-color: #FFFFFF;\n        box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\n    }\n\n    .custom-select .items .option {\n        font-size: 14px;\n        padding-left: 12px;\n    }\n\n    .custom-select .items .option:hover {\n        background-color: #EEEEEE;\n        color: #212121;\n    }\n\n    .select-account-type i,\n    .select-organization-group i,\n    .select-tags i {\n        font-size: 16px;\n        color: #BCBCBC;\n    }\n\n    .org-tag-name {\n        align-items: center;\n        padding: 5px 8px;\n        background: #D0D1E9;\n        display: flex;\n        justify-content: center;\n        border-radius: 20px;\n        margin-right: 4px;\n        font-size: 14px;\n        color: #2F3160;\n        white-space: nowrap;\n        font-weight: 500;\n    }\n</style>'],sourceRoot:""}]);const s=p},78458:(n,e,a)=>{a.r(e),a.d(e,{default:()=>zn});var o=a(71093),t=a(46233),i=a(73843),p=a(5627),s=a(58817),r=a(83487),l=a(88613),c=a(19496);const u=n=>((0,o.dD)("data-v-70bc658b"),n=n(),(0,o.Cn)(),n),d={class:"container"},g={key:0,class:"organization-prop"},v=u((()=>(0,o._)("label",null,"Organization Group",-1))),A={class:"organization-prop"},m=u((()=>(0,o._)("label",null,"Account Type",-1))),y={class:"organization-prop"},b=u((()=>(0,o._)("label",null,"Tags",-1))),f={class:"organization-prop app-limit"},x=u((()=>(0,o._)("span",null,"Number of applications that can be created",-1))),h={class:"organization-prop"},C=u((()=>(0,o._)("label",null,"Editors",-1))),B={class:"prop-type"},k=u((()=>(0,o._)("span",{class:"prop-type-name"},"UI",-1))),w={class:"prop-type"},z=u((()=>(0,o._)("span",{class:"prop-type-name"},"Flow",-1))),I={class:"prop-type"},T=u((()=>(0,o._)("span",{class:"prop-type-name"},"Data Model",-1))),Q={class:"prop-type"},F=u((()=>(0,o._)("span",{class:"prop-type-name"},"Workflow (New)",-1))),E={class:"prop-type"},G=u((()=>(0,o._)("span",{class:"prop-type-name"},"Store",-1))),S={class:"prop-type"},P=u((()=>(0,o._)("span",{class:"prop-type-name"},"Process Wizard (Old)",-1))),_={class:"prop-type"},O=u((()=>(0,o._)("span",{class:"prop-type-name"},"Image",-1))),M={class:"prop-type"},D=u((()=>(0,o._)("span",{class:"prop-type-name"},"Font",-1))),L={class:"prop-type"},V=u((()=>(0,o._)("span",{class:"prop-type-name"},"Lottie",-1))),U={class:"organization-prop"},q=u((()=>(0,o._)("label",null,"Publish To",-1))),j={class:"prop-type"},H=u((()=>(0,o._)("span",{class:"prop-type-name"},"Public Cloud",-1))),W={class:"prop-type"},R=u((()=>(0,o._)("span",{class:"prop-type-name"},"Plateau Platform Playground",-1))),Z={class:"organization-prop"},Y=u((()=>(0,o._)("label",null,"Features",-1))),N={class:"prop-type"},X=u((()=>(0,o._)("span",{class:"prop-type-name"},"Qjson Loading",-1))),J={class:"prop-type"},K=u((()=>(0,o._)("span",{class:"prop-type-name"},"Multiple CSS",-1))),$={class:"prop-type"},nn=u((()=>(0,o._)("span",{class:"prop-type-name"},"AI Suggestions",-1))),en={class:"prop-type"},an=u((()=>(0,o._)("span",{class:"prop-type-name"},"Code Assistant",-1))),on={class:"prop-type"},tn=u((()=>(0,o._)("span",{class:"prop-type-name"},"App Version",-1))),pn={class:"prop-type"},sn=u((()=>(0,o._)("span",{class:"prop-type-name"},"External Integration",-1))),rn={class:"buttons-div"},ln=(0,o.aZ)({__name:"manageOrganization",props:{organization:null},emits:["close"],setup(n,{emit:e}){var a,u,ln,cn,un,dn,gn,vn,An,mn,yn,bn,fn,xn;const hn=n,Cn=p.nC.resolve(r.y),Bn=p.nC.resolve(s.X),kn=p.nC.resolve(l.J),wn=(0,i.iH)(hn.organization),zn=(0,i.iH)(),In=(0,i.iH)(),Tn=(0,i.iH)([]),Qn=(0,i.iH)(null===(a=kn.backoffice)||void 0===a?void 0:a.organizationGroups),Fn=["Free","Premium"],En=(0,i.iH)(null===(u=wn.value.limits)||void 0===u?void 0:u.createApp),Gn=(0,i.iH)(wn.value.accountType),Sn=(0,i.iH)(wn.value.applications.quick),Pn=(0,i.iH)(wn.value.applications.flow),_n=(0,i.iH)(wn.value.applications.workflow),On=(0,i.iH)(wn.value.applications.store),Mn=(0,i.iH)(wn.value.applications.entity),Dn=(0,i.iH)(wn.value.applications.process),Ln=(0,i.iH)(wn.value.applications.image),Vn=(0,i.iH)(wn.value.applications.font),Un=(0,i.iH)(wn.value.applications.lottie),qn=(0,i.iH)(null===(un=null===(cn=null===(ln=wn.value.actions)||void 0===ln?void 0:ln.publish)||void 0===cn?void 0:cn.targets)||void 0===un?void 0:un.azure),jn=(0,i.iH)(null===(vn=null===(gn=null===(dn=wn.value.actions)||void 0===dn?void 0:dn.publish)||void 0===gn?void 0:gn.targets)||void 0===vn?void 0:vn.plateauGCP),Hn=(0,i.iH)(null===(An=wn.value.features)||void 0===An?void 0:An.qjsonLoading),Wn=(0,i.iH)(null===(mn=wn.value.features)||void 0===mn?void 0:mn.multipleCss),Rn=(0,i.iH)(null===(yn=wn.value.features)||void 0===yn?void 0:yn.aiSuggestions),Zn=(0,i.iH)(null===(bn=wn.value.features)||void 0===bn?void 0:bn.codeAssistant),Yn=(0,i.iH)(null===(fn=wn.value.features)||void 0===fn?void 0:fn.appVersion),Nn=(0,i.iH)(null===(xn=wn.value.features)||void 0===xn?void 0:xn.externalIntegration),Xn=(0,i.iH)(wn.value.organizationGroupId),Jn=(0,i.iH)(),Kn=(0,i.iH)(!1),$n=(0,i.iH)(""),ne=(0,i.iH)(null);function ee(){e("close")}function ae(n){Gn.value="Premium"===n?"premium":"beta"}function oe(n){var e,a;Xn.value=n,null===(a=null===(e=ne.value)||void 0===e?void 0:e.setSelected)||void 0===a||a.call(e,"Premium"),ae("Premium")}function te(n,e){var a,o,t,i;n&&(In.value=null===(a=In.value)||void 0===a?void 0:a.filter((n=>n.ID!=(null==e?void 0:e.ID))));const p=null===(o=In.value)||void 0===o?void 0:o.concat(Tn.value);zn.value=null===(i=null===(t=kn.backoffice)||void 0===t?void 0:t.tags)||void 0===i?void 0:i.filter((n=>!(null==p?void 0:p.includes(n))))}function ie(n){Tn.value=n}return(0,o.wF)((()=>{!function(){var n,e,a,o;const t={};null===(e=null===(n=kn.backoffice)||void 0===n?void 0:n.tags)||void 0===e||e.forEach((n=>t[n.ID]=n)),In.value=null===(o=null===(a=wn.value)||void 0===a?void 0:a.tags)||void 0===o?void 0:o.map((n=>t[n])),In.value?Tn.value=In.value:Tn.value=[]}(),te(),Cn.execute((async()=>{var n;await Bn.listOrganizationGroups(),Qn.value=null===(n=kn.backoffice)||void 0===n?void 0:n.organizationGroups,wn.value.organizationGroupId&&(Jn.value=Qn.value.find((n=>n.ID==wn.value.organizationGroupId))),Kn.value=!0}),{loading:!0}),"premium"===Gn.value?$n.value="Premium":$n.value="Free"})),(n,e)=>((0,o.wg)(),(0,o.iD)("div",d,[(0,o._)("div",null,[Kn.value?((0,o.wg)(),(0,o.iD)("div",g,[v,(0,o.Wm)(c.Z,{options:Qn.value,class:"select-organization-group",placeholder:"Select",defaultForObject:Jn.value,onInput:oe},null,8,["options","defaultForObject"])])):(0,o.kq)("v-if",!0),(0,o._)("div",A,[m,(0,o.Wm)(c.Z,{ref_key:"customSelectAccountType",ref:ne,options:Fn,class:"select-account-type",placeholder:"Select",default:$n.value,onInput:ae},null,8,["default"])]),(0,o._)("div",y,[b,(0,o._)("div",null,[(0,o.Wm)(c.Z,{options:zn.value,class:"select-tags",placeholder:"Insert Tags",defaultMultiple:In.value,multiple:!0,multipleSelectedClass:"org-tag-name",onAfterClick:te,onInput:ie},null,8,["options","defaultMultiple"])])]),(0,o._)("div",f,[x,(0,o.wy)((0,o._)("input",{type:"number","onUpdate:modelValue":e[0]||(e[0]=n=>En.value=n)},null,512),[[t.vModelText,En.value]])])]),(0,o._)("div",h,[C,(0,o._)("div",B,[k,(0,o.wy)((0,o._)("input",{class:"prop-type-switch round",type:"checkbox","onUpdate:modelValue":e[1]||(e[1]=n=>Sn.value=n)},null,512),[[t.vModelCheckbox,Sn.value]])]),(0,o._)("div",w,[z,(0,o.wy)((0,o._)("input",{class:"prop-type-switch round",type:"checkbox","onUpdate:modelValue":e[2]||(e[2]=n=>Pn.value=n)},null,512),[[t.vModelCheckbox,Pn.value]])]),(0,o._)("div",I,[T,(0,o.wy)((0,o._)("input",{class:"prop-type-switch round",type:"checkbox","onUpdate:modelValue":e[3]||(e[3]=n=>Mn.value=n)},null,512),[[t.vModelCheckbox,Mn.value]])]),(0,o._)("div",Q,[F,(0,o.wy)((0,o._)("input",{class:"prop-type-switch round",type:"checkbox","onUpdate:modelValue":e[4]||(e[4]=n=>_n.value=n)},null,512),[[t.vModelCheckbox,_n.value]])]),(0,o._)("div",E,[G,(0,o.wy)((0,o._)("input",{class:"prop-type-switch round",type:"checkbox","onUpdate:modelValue":e[5]||(e[5]=n=>On.value=n)},null,512),[[t.vModelCheckbox,On.value]])]),(0,o._)("div",S,[P,(0,o.wy)((0,o._)("input",{class:"prop-type-switch round",type:"checkbox","onUpdate:modelValue":e[6]||(e[6]=n=>Dn.value=n)},null,512),[[t.vModelCheckbox,Dn.value]])]),(0,o._)("div",_,[O,(0,o.wy)((0,o._)("input",{class:"prop-type-switch round",type:"checkbox","onUpdate:modelValue":e[7]||(e[7]=n=>Ln.value=n)},null,512),[[t.vModelCheckbox,Ln.value]])]),(0,o._)("div",M,[D,(0,o.wy)((0,o._)("input",{class:"prop-type-switch round",type:"checkbox","onUpdate:modelValue":e[8]||(e[8]=n=>Vn.value=n)},null,512),[[t.vModelCheckbox,Vn.value]])]),(0,o._)("div",L,[V,(0,o.wy)((0,o._)("input",{class:"prop-type-switch round",type:"checkbox","onUpdate:modelValue":e[9]||(e[9]=n=>Un.value=n)},null,512),[[t.vModelCheckbox,Un.value]])])]),(0,o._)("div",U,[q,(0,o._)("div",j,[H,(0,o.wy)((0,o._)("input",{class:"prop-type-switch round",type:"checkbox","onUpdate:modelValue":e[10]||(e[10]=n=>qn.value=n)},null,512),[[t.vModelCheckbox,qn.value]])]),(0,o._)("div",W,[R,(0,o.wy)((0,o._)("input",{class:"prop-type-switch round",type:"checkbox","onUpdate:modelValue":e[11]||(e[11]=n=>jn.value=n)},null,512),[[t.vModelCheckbox,jn.value]])])]),(0,o._)("div",Z,[Y,(0,o._)("div",N,[X,(0,o.wy)((0,o._)("input",{class:"prop-type-switch round",type:"checkbox","onUpdate:modelValue":e[12]||(e[12]=n=>Hn.value=n)},null,512),[[t.vModelCheckbox,Hn.value]])]),(0,o._)("div",J,[K,(0,o.wy)((0,o._)("input",{class:"prop-type-switch round",type:"checkbox","onUpdate:modelValue":e[13]||(e[13]=n=>Wn.value=n)},null,512),[[t.vModelCheckbox,Wn.value]])]),(0,o._)("div",$,[nn,(0,o.wy)((0,o._)("input",{class:"prop-type-switch round",type:"checkbox","onUpdate:modelValue":e[14]||(e[14]=n=>Rn.value=n)},null,512),[[t.vModelCheckbox,Rn.value]])]),(0,o._)("div",en,[an,(0,o.wy)((0,o._)("input",{class:"prop-type-switch round",type:"checkbox","onUpdate:modelValue":e[15]||(e[15]=n=>Zn.value=n)},null,512),[[t.vModelCheckbox,Zn.value]])]),(0,o._)("div",on,[tn,(0,o.wy)((0,o._)("input",{class:"prop-type-switch round",type:"checkbox","onUpdate:modelValue":e[16]||(e[16]=n=>Yn.value=n)},null,512),[[t.vModelCheckbox,Yn.value]])]),(0,o._)("div",pn,[sn,(0,o.wy)((0,o._)("input",{class:"prop-type-switch round",type:"checkbox","onUpdate:modelValue":e[17]||(e[17]=n=>Nn.value=n)},null,512),[[t.vModelCheckbox,Nn.value]])])]),(0,o._)("div",rn,[(0,o._)("button",{class:"cancel-button",onClick:e[18]||(e[18]=n=>ee())},"Cancel"),(0,o._)("button",{class:"save-button",onClick:e[19]||(e[19]=n=>{Cn.execute((async()=>{const n={quick:Sn.value,flow:Pn.value,entity:Mn.value,process:Dn.value,workflow:_n.value,image:Ln.value,font:Vn.value,lottie:Un.value,store:On.value},e={publish:{targets:{azure:qn.value,plateauGCP:jn.value}}},a=jn.value?"studio-"+wn.value.name.toLowerCase():"",o={qjsonLoading:Hn.value,multipleCss:Wn.value,aiSuggestions:Rn.value,codeAssistant:Zn.value,appVersion:Yn.value,externalIntegration:Nn.value},t=Tn.value.map((n=>n.ID)),i=await Bn.updateOrganization(wn.value.id,{accountType:Gn.value,createAppLimit:En.value,actions:e,applications:n,environmentPrefix:a,features:o,tags:t,organizationGroupId:Xn.value});wn.value=i,ee()}),{loading:!0})})},"SAVE")])]))}});var cn=a(17450),un=a.n(cn),dn=a(29530),gn=a.n(dn),vn=a(16199),An=a.n(vn),mn=a(40458),yn=a.n(mn),bn=a(62916),fn=a.n(bn),xn=a(92165),hn=a.n(xn),Cn=a(16869),Bn={};Bn.styleTagTransform=hn(),Bn.setAttributes=yn(),Bn.insert=An().bind(null,"head"),Bn.domAPI=gn(),Bn.insertStyleElement=fn(),un()(Cn.Z,Bn),Cn.Z&&Cn.Z.locals&&Cn.Z.locals;var kn=a(57057),wn={};wn.styleTagTransform=hn(),wn.setAttributes=yn(),wn.insert=An().bind(null,"head"),wn.domAPI=gn(),wn.insertStyleElement=fn(),un()(kn.Z,wn),kn.Z&&kn.Z.locals&&kn.Z.locals;const zn=(0,a(32525).Z)(ln,[["__scopeId","data-v-70bc658b"]])}}]);
//# sourceMappingURL=8458.js.map?ver=0.0.327_1721342263259