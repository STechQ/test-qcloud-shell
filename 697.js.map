{"version":3,"file":"697.js","mappings":"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","sources":["webpack://qcloud_shell/./src/presentation/vue3/components/customSelect.vue?9fb6","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/publishDialog.vue?2642","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/publishDialog.vue?ac41","webpack://qcloud_shell/./node_modules/@stechquick/algae/src/helpers/plateau/plateauHelper.ts","webpack://qcloud_shell/./src/presentation/vue3/components/customSelect.vue","webpack://qcloud_shell/./src/presentation/vue3/components/customSelect.vue?aa61","webpack://qcloud_shell/./src/presentation/vue3/components/customSelect.vue?31a9","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/publishDialog.vue?644f","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/publishDialog.vue?bfb6","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/publishDialog.vue?d31c","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/publishDialog.vue"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n  /*You should put other CSS properties with same class names in the parent component's style tag that is not scoped.*/\\n.custom-select[data-v-343a4995] {\\n    position: relative;\\n    width: 100%;\\n    text-align: left;\\n    outline: none;\\n}\\n.custom-select .selected[data-v-343a4995] {\\n\\n    cursor: pointer;\\n    user-select: none;\\n}\\n.custom-select .selected i[data-v-343a4995] {\\n    position: absolute;\\n    right: 10px;\\n    float: right;\\n}\\n.custom-select .items[data-v-343a4995] {\\n    position: absolute;\\n    left: 0;\\n    right: 0;\\n    z-index: 1;\\n}\\n.custom-select .items .option[data-v-343a4995] {\\n    cursor: pointer;\\n    user-select: none;\\n}\\n.custom-select .items .option.disabled[data-v-343a4995] {\\n    cursor: none;\\n    user-select: none;\\n    pointer-events: none;\\n    opacity: 0.4;\\n}\\n.selectHide[data-v-343a4995] {\\n    display: none;\\n}\\n.button-div[data-v-343a4995] {\\n    justify-content: center;\\n    display: grid;\\n    padding: 13px 0 19px;\\n    margin-top: 10px\\n}\\n.button[data-v-343a4995] {\\n    cursor: pointer;\\n}\\n.custom-placeholder[data-v-343a4995]:empty:before {\\n    content:attr(data-placeholder);\\n    color:#616161\\n}\\n.custom-placeholder[data-v-343a4995]:focus-visible {\\n    outline: none;\\n}\\n  \", \"\",{\"version\":3,\"sources\":[\"webpack://./src/presentation/vue3/components/customSelect.vue\"],\"names\":[],\"mappings\":\";EAkGE,oHAAoH;AACpH;IACE,kBAAkB;IAClB,WAAW;IACX,gBAAgB;IAChB,aAAa;AACf;AAEA;;IAEE,eAAe;IACf,iBAAiB;AACnB;AAEA;IACE,kBAAkB;IAClB,WAAW;IACX,YAAY;AACd;AAEA;IACE,kBAAkB;IAClB,OAAO;IACP,QAAQ;IACR,UAAU;AACZ;AAEA;IACE,eAAe;IACf,iBAAiB;AACnB;AAEA;IACE,YAAY;IACZ,iBAAiB;IACjB,oBAAoB;IACpB,YAAY;AACd;AAEA;IACE,aAAa;AACf;AACA;IACE,uBAAuB;IACvB,aAAa;IACb,oBAAoB;IACpB;AACF;AACA;IACE,eAAe;AACjB;AACA;IACE,8BAA8B;IAC9B;AACF;AACA;IACE,aAAa;AACf\",\"sourcesContent\":[\"<template>\\n  <div class=\\\"custom-select\\\" :tabindex=\\\"tabindex\\\" @blur=\\\"open = false\\\">\\n    <div :class=\\\"open ? 'open selected ' + selectedClass : 'selected ' + selectedClass\\\" @click=\\\"open = !open\\\">\\n      <div v-if = \\\"selected\\\">{{ typeof selected === 'object' ? selected.name : selected }}\\n        <i class=\\\"mdi mdi-chevron-down\\\"></i>\\n      </div>\\n      <div v-else>\\n        <span contenteditable=\\\"true\\\" :data-placeholder=\\\"placeholder\\\" class=\\\"custom-placeholder\\\"></span>\\n        <i class=\\\"mdi mdi-chevron-down\\\"></i>\\n      </div>\\n    </div>\\n    <div class=\\\"items\\\" :class=\\\"{ selectHide: !open }\\\" :style=\\\"{padding: extraButton ? '10px 0 0' : '10px 0'}\\\">\\n      <div v-for=\\\"(option, i) of options\\\" :key=\\\"i\\\" @click=\\\"handleClick(option)\\\" :class=\\\"['option' , i >= disabledOptionsIndex ? 'disabled' : '' ]\\\">\\n        {{typeof option === 'object' ? option.name : option }}\\n      </div>\\n      <div v-if=\\\"extraButton\\\" class=\\\"button-div\\\" :style=\\\"{borderTop: extraButton ? '1px solid #EEEEEE' :  'none'}\\\" >\\n        <div v-for=\\\"(button, index) in buttons\\\" :key=\\\"index\\\">\\n            <div :id=\\\"'option-button-' + index\\\" :class=\\\"button.buttonClass + ' button'\\\" @click=\\\"open=false\\\">{{ button.buttonText }}</div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</template>\\n\\n<script setup>\\nimport { ref } from 'vue'\\nconst emit = defineEmits([\\\"input\\\"]);\\nconst props = defineProps({\\n  options: {\\n    type: Array,\\n    required: true,\\n  },\\n  disabledOptionsIndex: {\\n    type: Number,\\n    required:false,\\n    default: 99\\n  },\\n  default: {\\n    type: String,\\n    required: false,\\n    default: '',\\n  },\\n  tabindex: {\\n    type: Number,\\n    required: false,\\n    default: 0,\\n  },\\n  placeholder: {\\n    type: String,\\n    required: false,\\n    default: \\\"\\\",\\n  },\\n  selectedClass: {\\n    type: String,\\n    required: true,\\n    default: \\\"\\\",\\n  },\\n  extraButton: {\\n    type: Boolean,\\n    required: false,\\n    default: false,\\n  },\\n  buttons: {\\n    type: Array,\\n    required: false,\\n    default: () => [],\\n    validator: (value) => {\\n      return value.every(\\n        (button) =>\\n          typeof button === \\\"object\\\" &&\\n          typeof button.buttonText === \\\"string\\\" &&\\n          typeof button.buttonClass === \\\"string\\\"\\n      );\\n    },\\n  },\\n})\\n\\nconst selected = ref(props.default ? props.default : null);\\nconst open = ref(false)\\n\\nconst handleClick = (option) => {\\n    if(typeof option === 'object'){\\n      emit('input', option.id);\\n      selected.value = option;\\n      open.value = false;\\n      emit('input', selected.value.id);\\n    }\\n    else if(typeof option === 'string') {\\n      emit('input', option);\\n      selected.value = option;\\n      open.value = false;\\n      emit('input', selected.value);\\n    }\\n}\\n</script>\\n\\n  \\n  <style scoped>\\n  /*You should put other CSS properties with same class names in the parent component's style tag that is not scoped.*/\\n  .custom-select {\\n    position: relative;\\n    width: 100%;\\n    text-align: left;\\n    outline: none;\\n  }\\n  \\n  .custom-select .selected {\\n\\n    cursor: pointer;\\n    user-select: none;\\n  }\\n  \\n  .custom-select .selected i {\\n    position: absolute;\\n    right: 10px;\\n    float: right;\\n  }\\n  \\n  .custom-select .items {\\n    position: absolute;\\n    left: 0;\\n    right: 0;\\n    z-index: 1;\\n  }\\n  \\n  .custom-select .items .option {\\n    cursor: pointer;\\n    user-select: none;\\n  }  \\n  \\n  .custom-select .items .option.disabled {\\n    cursor: none;\\n    user-select: none;\\n    pointer-events: none;\\n    opacity: 0.4;\\n  }\\n  \\n  .selectHide {\\n    display: none;\\n  }\\n  .button-div {\\n    justify-content: center;\\n    display: grid;\\n    padding: 13px 0 19px;\\n    margin-top: 10px\\n  }\\n  .button {\\n    cursor: pointer;\\n  }\\n  .custom-placeholder:empty:before {\\n    content:attr(data-placeholder);\\n    color:#616161\\n  }\\n  .custom-placeholder:focus-visible {\\n    outline: none;\\n  }\\n  </style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.settings-container[data-v-0f6bedce] {\\n    position: relative;\\n    top: 0px;\\n    left: 0px;\\n}\\n.custom-text[data-v-0f6bedce] {\\n    position: absolute;\\n    font-family: 'Roboto';\\n    font-style: normal;\\n    font-weight: 500;\\n    font-size: 15px;\\n    line-height: 18px;\\n    left: 24px;\\n    color: #212121;\\n}\\n.custom-text.title[data-v-0f6bedce]{\\n    top: 92px;\\n}\\n.custom-text.environment[data-v-0f6bedce]{\\n    top: 174px;\\n}\\n.radio-button[data-v-0f6bedce] {\\n    position: absolute;\\n    top: 60px;\\n    left: 20px;\\n    cursor: pointer;\\n}\\n.radio-text[data-v-0f6bedce] {\\n    position: absolute;\\n    top: 59px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n    user-select: none;\\n    cursor: pointer;\\n}\\n.existing-app-url[data-v-0f6bedce] {\\n    position: absolute;\\n    width: 760px;\\n    height: 40px;\\n    top: 114px;\\n    left: 20px;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #bcbcbc;\\n    border-radius: 4px;\\n    font: normal normal normal 14px/19px Roboto;\\n    letter-spacing: 0px;\\n    padding: 10px 0px 10px 10px;\\n}\\n.url-error[data-v-0f6bedce] {\\n    border: 1px solid red;\\n}\\n.url-disable[data-v-0f6bedce] {\\n    opacity: 0.5;\\n}\\n.existing-app-url[data-v-0f6bedce]::placeholder {\\n    color: #bcbcbc;\\n    user-select: none;\\n}\\n.modules-selected-checkbox[data-v-0f6bedce] {\\n    position: absolute;\\n    left: 22px;\\n    top: 88px;\\n    cursor: pointer;\\n}\\n.modules-selected-checkbox.deploy[data-v-0f6bedce] {\\n    top: 257px;\\n}\\n.modules-selected-text[data-v-0f6bedce] {\\n    position: absolute;\\n    left: 46px;\\n    top: 88px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #757575;\\n}\\n.modules-selected-text.deploy[data-v-0f6bedce] {\\n    top: 257px;\\n}\\n.text-number[data-v-0f6bedce] {\\n    font: normal normal bold 14px/19px Roboto;\\n    color: #212121;\\n}\\n.modules-datatable[data-v-0f6bedce] {\\n    position: absolute;\\n    left: 20px;\\n    top: 119px;\\n    width: 760px;\\n    height: 288px;\\n    border: 1px solid #bcbcbc;\\n    overflow-x: hidden;\\n    overflow-y: auto;\\n}\\n.modules-datatable.deploy[data-v-0f6bedce] {\\n    top: 286px;\\n}\\n.modules-datatable[data-v-0f6bedce]::-webkit-scrollbar {\\n    width: 4px;\\n}\\n.modules-datatable[data-v-0f6bedce]::-webkit-scrollbar-thumb {\\n    background: #bcbcbc 0% 0% no-repeat padding-box;\\n    border-radius: 10px;\\n}\\n.modules-datatable[data-v-0f6bedce]::-webkit-scrollbar-thumb:hover {\\n    background: #555;\\n}\\n.row-container[data-v-0f6bedce] {\\n    width: 100%;\\n    height: 36px;\\n    position: relative;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #e0e0e0;\\n}\\n.chevron[data-v-0f6bedce] {\\n    position: absolute;\\n    left: 4px;\\n    color: #bcbcbc;\\n    font-size: 24px;\\n}\\n.module-checkbox[data-v-0f6bedce] {\\n    position: absolute;\\n    top: 10px;\\n    left: 43px;\\n    cursor: pointer;\\n}\\n.module-name[data-v-0f6bedce] {\\n    position: absolute;\\n    top: 9px;\\n    left: 69px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n.model-checkbox[data-v-0f6bedce] {\\n    position: absolute;\\n    top: 10px;\\n    left: 59px;\\n    cursor: pointer;\\n}\\n.model-icon[data-v-0f6bedce] {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 85px;\\n}\\n.app-tier-model-icon[data-v-0f6bedce] {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 69px;\\n}\\n.app-tier-model-name[data-v-0f6bedce] {\\n    position: absolute;\\n    top: 10px;\\n    left: 87px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n.model-name[data-v-0f6bedce] {\\n    position: absolute;\\n    top: 9px;\\n    left: 103px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n.version-text[data-v-0f6bedce] {\\n    margin: 10px 7px 10px auto;\\n    display: table;\\n    font: normal normal normal 12px/16px Roboto;\\n    color: #757575;\\n    cursor: pointer;\\n    user-select: none;\\n}\\n.version-icon[data-v-0f6bedce] {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #151233;\\n}\\n.footer[data-v-0f6bedce] {\\n    position: relative;\\n    top: 459px;\\n    width: 100%;\\n}\\n.footer.deploy[data-v-0f6bedce] {\\n    position: relative;\\n    top: 550px;\\n    width: 100%;\\n}\\n.cancel-button[data-v-0f6bedce] {\\n    position: absolute;\\n    top: 10px;\\n    left: 544px;\\n    width: 86px;\\n    height: 40px;\\n    border-radius: 4px;\\n    user-select: none;\\n    font-style: normal;\\n    font-weight: 500;\\n    font-family: \\\"ROBOTO\\\";\\n    font-size: 15px;\\n    color: #757575;\\n    padding: 10px 20px 10px 20px;\\n    cursor: pointer;\\n}\\n.cancel-button.deploy[data-v-0f6bedce] {\\n    left: 565px;\\n}\\n.save-button[data-v-0f6bedce] {\\n    position: absolute;\\n    top: 10px;\\n    left: 658px;\\n    width: 112px;\\n    height: 40px;\\n    background: #151233 0% 0% no-repeat padding-box;\\n    border-radius: 4px;\\n    user-select: none;\\n    font-weight: 500;\\n    font-family: \\\"ROBOTO\\\";\\n    font-size: 15px;\\n    color: #ffffff;\\n    padding: 10px 0px 0px 10px;\\n    cursor: pointer;\\n}\\n.save-button.deploy[data-v-0f6bedce] {\\n    width: 101px;\\n    padding: 10px 0px 0px 20px;\\n}\\n.button-disable .save-button[data-v-0f6bedce] {\\n    opacity: 0.5;\\n    cursor: none;\\n    pointer-events: none;\\n}\\n.button-disable:hover .button-tooltip[data-v-0f6bedce],\\n.start-screen:hover .button-tooltip[data-v-0f6bedce] {\\n    visibility: visible;\\n    transition: opacity 0.3s ease-out 1s;\\n    opacity: 1;\\n}\\n.button-tooltip[data-v-0f6bedce] {\\n    visibility: hidden;\\n    position: absolute;\\n    background: #757575;\\n    color: #FFFFFF;\\n    font-size: 11px;\\n    font-family: 'Roboto';\\n    text-align: center;\\n    border-radius: 4px;\\n    letter-spacing: 0.2px;\\n    padding: 6px 8px 6px 8px;\\n    top: 56px;\\n    left: 63px;\\n    opacity: 0;\\n}\\n.qjson-color[data-v-0f6bedce] {\\n    color: #449dd1;\\n}\\n.yaml-color[data-v-0f6bedce] {\\n    color: #449dd1;\\n}\\n.js-color[data-v-0f6bedce] {\\n    color: #449dd1;\\n}\\n.process-color[data-v-0f6bedce] {\\n    color: #007c77;\\n}\\n.bpmn-color[data-v-0f6bedce] {\\n    color: #007c77;\\n}\\n.entity-designer-color[data-v-0f6bedce] {\\n    color: #e9724c;\\n}\\n.select-environment[data-v-0f6bedce] {\\n    position: absolute;\\n    top: 196px;\\n    left: 20px;\\n    width: 760px;\\n    font-size: 15px;\\n    height: 40px;\\n    line-height: 40px;\\n}\\n\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/presentation/vue3/components/dialogs/publish/publishDialog.vue\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"<template>\\n    <div class=\\\"container\\\">\\n        <span v-if=\\\"props.screenType == 'Deploy'\\\" class=\\\"custom-text environment\\\"> Environment </span>\\n        <CustomSelect \\n            :options=\\\"publishTargets\\\"\\n            @input=\\\"onTargetSelect\\\"\\n            :disabledOptionsIndex=\\\"disabledIndex\\\"\\n            selectedClass = \\\"selected-environment\\\" \\n            placeholder=\\\"Select the publish environment of your application\\\"\\n            class=\\\"select-environment\\\">\\n        </CustomSelect>\\n\\n        <CheckboxComp :class=\\\"['modules-selected-checkbox', props.screenType == 'Deploy' ? 'deploy' : '']\\\"\\n            :minus=\\\"false\\\" :check=\\\"false\\\"\\n            @click=\\\"handleModuleCountCheckboxEvent(checkedModuleCount != totalModuleCount && checkedModuleCount == 0)\\\" />\\n        <div :class=\\\"['modules-selected-text', props.screenType == 'Deploy' ? 'deploy' : '']\\\">\\n            <span class=\\\"text-number\\\">{{ checkedModuleCount }}</span> of <span class=\\\"text-number\\\">{{\\n                totalModuleCount\\n            }}</span> modules selected\\n        </div>\\n\\n        <div :class=\\\"['modules-datatable', props.screenType == 'Deploy' ? 'deploy' : '']\\\">\\n            <div v-for=\\\"item in items\\\">\\n                <div v-if=\\\"item?.type == 'module'\\\">\\n                    <div class=\\\"row-container\\\">\\n                        <i :class=\\\"'mdi mdi-menu' + (item.collapsed ? '-right' : '-down') + ' chevron'\\\"\\n                            @click=\\\"handleCollapse(item)\\\" />\\n                        <CheckboxComp class=\\\"module-checkbox\\\" :check=\\\"item.allChildChecked || item.checked\\\"\\n                            :minus=\\\"item.anyChildChecked && !item.allChildChecked\\\"\\n                            @click=\\\"handleItemCheckEvent(item)\\\" />\\n                        <span class=\\\"module-name\\\">{{ item.name }}</span>\\n                    </div>\\n                    <div class=\\\"row-container\\\" v-show=\\\"!item.collapsed\\\" v-for=\\\"child in item?.children\\\">\\n                        <CheckboxComp class=\\\"model-checkbox\\\" :check=\\\"child.checked\\\"\\n                            @click=\\\"handleItemCheckEvent(child)\\\" />\\n                        <i v-if=\\\"child.type == 'qjson'\\\" class=\\\"mdi mdi-palette qjson-color model-icon\\\" />\\n                        <i v-if=\\\"child.type == 'yaml'\\\" class=\\\"mdi mdi-cog-outline yaml-color model-icon\\\" />\\n                        <i v-if=\\\"child.type == 'js' || child?.type == 'css'\\\"\\n                            class=\\\"mdi mdi-cog-outline js-color model-icon\\\" />\\n                        <i v-if=\\\"child.type == 'process'\\\" class=\\\"mdi mdi-auto-fix process-color model-icon\\\" />\\n                        <i v-if=\\\"child.type == 'bpmn'\\\" class=\\\"mdi mdi-vector-polyline bpmn-color model-icon\\\" />\\n                        <i v-if=\\\"child.type == 'entityDesigner'\\\"\\n                            class=\\\"mdi mdi-database entity-designer-color model-icon\\\" />\\n                        <i v-if=\\\"child.type == 'flow'\\\" class=\\\"mdi mdi-step-forward bpmn-color model-icon\\\" />\\n                        <span class=\\\"model-name\\\">{{ child.name }}</span>\\n                        <div v-if=\\\"!child.usageType\\\" class=\\\"version-text\\\" @click=\\\"versionDialog(item)\\\">\\n                            {{ child.version }} <i v-if=\\\"!child.usageType\\\"\\n                                class=\\\"mdi mdi-pencil-outline version-icon\\\"></i>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div v-else>\\n                    <div class=\\\"row-container\\\">\\n                        <CheckboxComp class=\\\"module-checkbox\\\" :check=\\\"item?.checked\\\"\\n                            @click=\\\"handleItemCheckEvent(item)\\\" />\\n                        <i v-if=\\\"item?.type == 'qjson'\\\" class=\\\"mdi mdi-palette qjson-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'yaml'\\\" class=\\\"mdi mdi-cog-outline yaml-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'js' || item?.type == 'css'\\\"\\n                            class=\\\"mdi mdi-cog-outline js-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'process'\\\" class=\\\"mdi mdi-auto-fix process-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'bpmn'\\\" class=\\\"mdi mdi-vector-polyline bpmn-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'entityDesigner'\\\"\\n                            class=\\\"mdi mdi-database entity-designer-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'flow'\\\" class=\\\"mdi mdi-step-forward bpmn-color app-tier-model-icon\\\" />\\n                        <span class=\\\"app-tier-model-name\\\">{{ item?.name }}\\n                            <span class=\\\"start-screen\\\" v-if=\\\"startScreen?.ID == item.id\\\">\\n                                <i class=\\\"mdi mdi-home-outline\\\"></i>\\n                                <span class=\\\"button-tooltip\\\" style=\\\"top: -30px; left: 2px; z-index: 1; width: 80px;\\\">Start Screen</span>\\n                            </span>\\n                        </span>\\n   \\n                        <span v-if=\\\"!item.usageType\\\" class=\\\"version-text\\\" @click=\\\"versionDialog(item)\\\">\\n                            {{ item?.version }} <i v-if=\\\"!item.usageType\\\"\\n                                class=\\\"mdi mdi-pencil-outline version-icon\\\"></i>\\n                        </span>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div :class=\\\"['footer', props.screenType == 'Deploy' ? 'deploy' : '']\\\" class=\\\"footer\\\">\\n            <div :class=\\\"['cancel-button', props.screenType == 'Deploy' ? 'deploy' : '']\\\" @click=\\\"close\\\">Cancel</div>\\n            <div v-if=\\\"props.screenType == 'Export'\\\" :class=\\\"(saveButtonDisable ? ' button-disable' : '')\\\" @click=\\\"save\\\">\\n                <div class=\\\"save-button \\\">DOWNLOAD</div>\\n            </div>\\n            <div v-if=\\\"props.screenType == 'Deploy'\\\" :class=\\\"[(saveButtonDisable ? ' button-disable' : '')]\\\" @click=\\\"save\\\">\\n                <span class=\\\"save-button deploy\\\">PUBLISH</span>\\n                <span class=\\\"button-tooltip\\\" style=\\\"top: -40px; left: 648px; z-index: 1; width: 120px;\\\">You need to include your start screen.</span>\\n            </div>\\n            \\n        </div>\\n    </div>\\n</template>\\n\\n\\n<script setup lang=\\\"ts\\\">\\nimport { CryptoHelper } from \\\"@stechquick/algae/lib/helpers/cryptoHelper\\\";\\nimport { container } from \\\"../../../../../domain/core/diContainer\\\";\\nimport { IExportViewItem, IModel, IModule } from \\\"../../../../../domain/model/models\\\";\\nimport { IViewModel } from \\\"../../../../../domain/viewModel/IViewModel\\\";\\nimport CheckboxComp from \\\"../../checkboxComp.vue\\\";\\nimport { ref, computed, defineAsyncComponent, watch } from \\\"vue\\\";\\nimport { IDialog } from \\\"../../../../../domain/presentation/IDialog\\\";\\nimport { IUseCaseExecutor } from \\\"../../../../../domain/useCase/IUseCaseExecutor\\\";\\nimport { DeployType, ICreateDeployJobParam, ICreateExportJobParam, IExportItem, IExportJobData, IPlatformSelection, IProcessConfigModelItem } from \\\"@stechquick/algae/lib/qCloudTemp/exporter\\\";\\nimport { ICreateExportJob } from \\\"../../../../../domain/useCase/ICreateExportJob\\\";\\nimport { IDeployJobs } from \\\"../../../../../domain/useCase/IDeployJobs\\\";\\nimport { IQCloudApi } from \\\"../../../../../domain/infrastructure/IQCloudApi\\\";\\nimport { IPackJobs } from \\\"../../../../../domain/useCase/IPackJobs\\\";\\nimport { IJobUtils } from \\\"../../../../../domain/useCase/IJobUtils\\\";\\nimport { IQJsonAdditionals, UsageType } from \\\"@stechquick/algae/lib/qCloudTemp/quickCloud\\\";\\nimport { IPublish } from \\\"../../../../../domain/useCase/IPublish\\\";\\nimport { PlateauHelper } from \\\"@stechquick/algae/lib/helpers/plateau/plateauHelper\\\";\\nimport { IViewModelManager } from \\\"../../../../../domain/viewModel/IViewModelManager\\\";\\nimport CustomSelect from \\\"../../../components/customSelect.vue\\\"\\nimport { IOrganizationCloud } from \\\"@stechquick/algae/lib/clean/domain/useCases/ICloudProvider\\\";\\n\\ninterface ITableData {\\n    id: string;\\n    parentId?: string;\\n    collapsed?: boolean;\\n    anyChildChecked?: boolean;\\n    allChildChecked?: boolean;\\n    checked?: boolean;\\n    name: string;\\n    type: IModel[\\\"modelType\\\"] | IModule[\\\"objectType\\\"];\\n    version?: string;\\n    children?: Array<ITableData>;\\n    usageType?: UsageType;\\n}\\n\\ninterface IDeployScreenAdditionalProps {\\n    screenType: \\\"Export\\\" | \\\"Deploy\\\";\\n    platformSelection: IPlatformSelection;\\n}\\n\\nconst props = defineProps<IDeployScreenAdditionalProps>();\\nconst viewModel = container.resolve<IViewModel>(IViewModel);\\nconst viewModelManager = container.resolve<IViewModelManager>(IViewModelManager);\\nconst dialog = container.resolve<IDialog>(IDialog);\\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\\nconst deployJobsUseCase = container.resolve<IDeployJobs>(IDeployJobs);\\nconst qcloudApi = container.resolve<IQCloudApi>(IQCloudApi);\\nconst packJobsUseCase = container.resolve<IPackJobs>(IPackJobs);\\nconst publish = container.resolve<IPublish>(IPublish);\\nconst jobUtils = container.resolve<IJobUtils>(IJobUtils);\\nconst emit = defineEmits([\\\"close\\\"]);\\nconst items = ref<Array<ITableData>>([]);\\nconst validations = ref<boolean>(true);\\nconst selectedTarget = ref<keyof IOrganizationCloud>();\\nconst disabledIndex = ref<number>(99);\\n\\nhandleItems();\\n\\nconst totalModuleCount = computed(() => items.value.filter((item) => item.type == \\\"module\\\").length);\\nconst checkedModuleCount = computed(() => items.value.filter((item) => item.type == \\\"module\\\" && item.allChildChecked).length);\\nconst saveButtonDisable = computed(() => (props.screenType == \\\"Deploy\\\" && !selectedTarget.value) || !validations.value || !items.value.some((item) => item.checked || item.anyChildChecked));\\nconst startScreen = computed(() => (viewModel.studio.items as Array<IModel>).find(item => item.isRootPage == true));\\nconst publishTargets = computed(() => {\\n    const targets = viewModel.user?.selectedOrganization?.actions?.publish?.targets;\\n    if(!targets)\\n        return;\\n    const sortedTargets = Object.entries(targets).map((v,i) => {\\n            return { key : v[0], val: v[1] }\\n        }).sort((e, f) => ( e.val===f.val) ? 0 : e.val? -1 : 1);\\n\\n    let idx = sortedTargets.findIndex(e => !e.val);\\n    if(idx != -1)\\n        disabledIndex.value = idx;\\n    return sortedTargets.map(e => cloudTargetMap(e.key));\\n})\\n\\nwatch(items.value, (_new, _old) => {\\n    validations.value = validate();\\n});\\n\\n\\nfunction validate() {\\n    let result = true;\\n    const modules = items.value.filter(e => e.type == \\\"module\\\" && e.anyChildChecked);\\n    const appLayerItems = items.value.filter(e => e.type == \\\"qjson\\\" && e.checked);\\n\\n    if (props.screenType == \\\"Deploy\\\") {\\n        //FIXME: externalModules will be get from common places \\n        if (modules.length > 0)\\n            result = modules\\n                .filter(e => e.name != \\\"processmanager\\\").map(e => e.children).filter(e => !e?.find(f => f.type == \\\"entityDesigner\\\" && f.checked)).length <= 0\\n\\n        let isApplicationWillDeploy = appLayerItems.length > 0;\\n        if (isApplicationWillDeploy) {\\n            result = appLayerItems\\n                .map(e => viewModel.studio.items.find(item => item.ID == e.id) as IModel)\\n                .findIndex(e => ((e.additionals as IQJsonAdditionals).isRootPage)) != -1;\\n        }\\n    }\\n\\n    return result;\\n}\\n\\nfunction handleItems() {\\n    items.value = viewModel.studio.items\\n        .filter((item) => item.objectType == \\\"module\\\" && item.children.length > 0)\\n        .map(\\n            (item) =>\\n            ({\\n                id: item.ID,\\n                collapsed: true,\\n                name: item.name,\\n                type: \\\"module\\\",\\n                anyChildChecked: false,\\n                allChildChecked: false,\\n                children: (item as IModule).children\\n                    .filter((child) => child.objectType == \\\"model\\\")\\n                    .map(\\n                        (child) =>\\n                        ({\\n                            id: child.ID,\\n                            parentId: item.ID,\\n                            checked: false,\\n                            name: child.name,\\n                            type: (child as IModel).modelType,\\n                            version: \\\"latest\\\",\\n                        } as ITableData)\\n                    ),\\n            } as ITableData)\\n        );\\n    viewModel.studio.items\\n        .filter((item) => item.objectType == \\\"model\\\" && item.usageType != \\\"appSettings\\\")\\n        .forEach((item) => {\\n            items.value.push({\\n                id: item.ID,\\n                checked: false,\\n                name: item.name,\\n                type: (item as IModel).modelType,\\n                version: \\\"latest\\\",\\n            });\\n        });\\n    const uiSettingsID = CryptoHelper.CreateGuid();\\n    const appSettings = viewModel.studio.items.filter((item) => item.objectType == \\\"model\\\" && item.usageType == \\\"appSettings\\\") as Array<IModel>;\\n    const uiSettings: ITableData = {\\n        id: uiSettingsID,\\n        collapsed: true,\\n        name: \\\"UI Settings\\\",\\n        type: \\\"module\\\",\\n        anyChildChecked: false,\\n        allChildChecked: false,\\n        children: appSettings.map((setting) => ({\\n            id: setting.ID,\\n            parentId: uiSettingsID,\\n            name: setting.name,\\n            type: (setting as IModel).modelType,\\n            checked: false,\\n            usageType: setting?.usageType,\\n        })) as Array<ITableData>,\\n    };\\n    items.value.unshift(uiSettings);\\n}\\n\\nfunction handleModuleCountCheckboxEvent(value: boolean) {\\n    items.value.forEach((item) => {\\n        item.checked = value;\\n        if (item.allChildChecked != undefined) item.allChildChecked = value;\\n        if (item.anyChildChecked != undefined) item.anyChildChecked = value;\\n        if (item.children) item.children.forEach((child) => (child.checked = value));\\n    });\\n}\\n\\nfunction handleCollapse(item: ITableData) {\\n    item.collapsed = !item.collapsed;\\n}\\n\\nfunction handleItemCheckEvent(item: ITableData) {\\n    if (item.type != \\\"module\\\") {\\n        item.checked = !item.checked;\\n        if (item.parentId) {\\n            const parent = items.value.find((i) => i.id == item.parentId)!;\\n            handleParentCheckedStatus(parent);\\n        }\\n    } else {\\n        if(item.children && item.children.length > 0) {\\n            if (item.anyChildChecked) {\\n                item.children?.forEach((child) => (child.checked = false));\\n                item.checked = false;\\n            } else {\\n                item.children?.forEach((child) => (child.checked = true));\\n                item.checked = true;\\n            }\\n            handleParentCheckedStatus(item);\\n        }\\n        else {\\n            item.checked = !item.checked;\\n            item.allChildChecked = false;\\n        }\\n        \\n    }\\n}\\n\\nfunction handleParentCheckedStatus(item: ITableData) {\\n    item.allChildChecked = !item.children?.some((child) => !child.checked);\\n    item.anyChildChecked = item.children?.some((child) => child.checked);\\n    console.log(\\\"item => \\\", item);\\n}\\n\\nfunction versionDialog(item: ITableData) {\\n    const clickedNode = { id: item.id, state: { checked: item.checked }, text: item.name, type: item.type, version: item.version };\\n    dialog.showDialog(\\n        defineAsyncComponent(() => import(\\\"../../application/modelVersionDialog.vue\\\")),\\n        { closable: true, title: \\\"Change Version\\\", width: \\\"900px\\\", maxHeight: \\\"500px\\\", overflow: \\\"auto\\\" },\\n        { clickedNode }\\n    );\\n}\\n\\nfunction close() {\\n    emit(\\\"close\\\");\\n}\\n\\nasync function save() {\\n    executor.execute(\\n        async () => {\\n            const initAsGroup = async () => {\\n                const groupID = CryptoHelper.CreateGuid();\\n                await initHistory(groupID);\\n                await packJob(groupID);\\n                return groupID;\\n            }\\n\\n            switch (props.screenType) {\\n                case \\\"Export\\\":\\n                    const groupID = await initAsGroup();\\n                    await createExportJob(groupID);\\n                    break;\\n                case \\\"Deploy\\\":\\n                    switch (selectedTarget.value) {\\n                        case \\\"plateauGCP\\\":\\n                            const groupID = await initAsGroup();\\n                            await createDeployJob(groupID);\\n                            break;\\n                        case \\\"azure\\\":\\n                            await createAzureDeploy();\\n                            break;\\n                    }\\n            }\\n            emit(\\\"close\\\");\\n        },\\n        { loading: true });\\n}\\n\\nasync function createAzureDeploy() {\\n    const deployItems: Array<IExportItem> = [];\\n    const itemIdObj: Record<string, { item: IModel, path: string }> = {};\\n\\n    viewModelManager.flatMapItems(viewModel.studio.items, (item, path) => {\\n        if (item.objectType != \\\"model\\\") { return; }\\n        itemIdObj[item.ID] = { item, path };\\n        return item;\\n    });\\n\\n    const traverseSelectedItems = (items?: Array<ITableData>) => {\\n        if (!items || items.length == 0) { return; }\\n        items.forEach(item => {\\n            if (item.type == \\\"module\\\") {\\n                traverseSelectedItems(item.children);\\n                return;\\n            }\\n\\n            const itemMap = itemIdObj[item.id];\\n\\n            const deployItem: IExportItem = {\\n                id: item.id,\\n                name: jobUtils.getFileFullname(itemMap.item),\\n                path: itemMap.path,\\n                type: jobUtils.getItemType(itemMap.item),\\n                ver: item.version || \\\"latest\\\",\\n                isRootPage: itemMap.item.isRootPage,\\n                ownerType: 'application',\\n                ownerName: viewModel.studio.appName,\\n                size: itemMap.item.size,\\n            };\\n            deployItems.push(deployItem)\\n        });\\n    };\\n\\n    traverseSelectedItems(items.value);\\n\\n    await publish.createUI(deployItems, props.platformSelection);\\n}\\n\\nasync function initHistory(groupID: string) {\\n    return qcloudApi.initPublishHistory({\\n        appID: viewModel.studio.appId,\\n        ID: groupID,\\n        isMultiStep: true,\\n        type: props.screenType == \\\"Deploy\\\" ? \\\"publish\\\" : \\\"download\\\"\\n    });\\n}\\n\\nfunction isUsingPlateau() {\\n    const applications = viewModel.user!.selectedOrganization!.applications;\\n\\n    if (!applications)\\n        return false;\\n\\n    if (!applications.entity && !applications.process && !applications.bpmn)\\n        return false;\\n\\n    return true;\\n}\\n\\nfunction getItemPath(asset: ITableData, ownerName: string) {\\n    if (isUsingPlateau())\\n        return \\\"\\\";\\n    if (asset.type == \\\"qjson\\\")\\n        return ownerName;\\n    return \\\"\\\";\\n}\\n\\nfunction isUISettings(asset: ITableData) {\\n    return asset.name == \\\"UI Settings\\\";\\n}\\n\\n\\nasync function packJob(groupID: string) {\\n    let exportItemMap = new Map<string, Array<IExportItem>>();\\n\\n    items.value.forEach((asset) => {\\n        if (asset.checked) {\\n            //QUI\\n            if (asset.type == 'qjson') {\\n                const isThisrootPage = viewModel.studio.items.find(i => i.objectType == \\\"model\\\" && i.modelType == \\\"qjson\\\" && (i.additionals as IQJsonAdditionals).isRootPage && i.ID == asset.id);\\n\\n                const obj: IExportItem = {\\n                    id: asset.id,\\n                    ver: asset.version!,\\n                    type: jobUtils.getItemType({ usageType: asset.usageType, type: asset.type } as IExportViewItem),\\n                    path: \\\"\\\",\\n                    name: jobUtils.getFileFullname({ usageType: asset.usageType, type: asset.type, name: asset.name } as IExportViewItem),\\n                    ownerType: 'application',\\n                    ownerName: viewModel.studio.appName,\\n                    isRootPage: isThisrootPage ? true : undefined,\\n                };\\n\\n                let applicationModels = exportItemMap.get(viewModel.studio.appName);\\n                if (applicationModels && applicationModels.length > 0) {\\n                    applicationModels.push(obj);\\n                    exportItemMap.set(viewModel.studio.appName, applicationModels);\\n                }\\n                else\\n                    exportItemMap.set(viewModel.studio.appName, [obj]);\\n                return;\\n            }\\n        }\\n        if (asset.anyChildChecked && asset.children) {\\n            let checkedItems = Array<IExportItem>();\\n            asset.children!.forEach(child => {\\n                if (!child.checked || child.type == \\\"module\\\")\\n                    return;\\n                const exportItem: IExportItem = {\\n                    id: child.id,\\n                    ver: child.version!,\\n                    type: jobUtils.getItemType({ usageType: child.usageType, type: child.type, name: child.name } as IExportViewItem),\\n                    path: !isUISettings(asset) ? getItemPath(child, asset.name) : \\\"\\\",\\n                    name: jobUtils.getFileFullname({ usageType: child.usageType, type: child.type, name: child.name } as IExportViewItem),\\n                    ownerType: isUISettings(asset) || !isUsingPlateau() ? \\\"application\\\" : (asset.type === 'module' ? 'module' : 'application'),\\n                    ownerName: isUISettings(asset) || !isUsingPlateau() ? viewModel.studio.appName : asset.name\\n                };\\n                if (exportItem.type == \\\"entityDesigner\\\")\\n                    exportItem.entityGenerationDomain = viewModel.user!.selectedOrganization!.actions?.entityGenerationDomain;\\n                checkedItems.push(exportItem);\\n            });\\n\\n            if (checkedItems.length > 0) {\\n                if (!isUISettings(asset) && isUsingPlateau())\\n                    exportItemMap.set(asset.name, checkedItems);\\n                else {\\n                    let applicationModels = exportItemMap.get(viewModel.studio.appName);\\n                    if (applicationModels && applicationModels.length > 0) {\\n                        applicationModels.forEach(e => checkedItems.push(e));\\n                    }\\n                    exportItemMap.set(viewModel.studio.appName, checkedItems);\\n                }\\n            }\\n\\n        }\\n    })\\n\\n    let jobs = Array<ICreateExportJobParam>();\\n    exportItemMap.forEach((v, k) => {\\n        jobs.push({\\n            appID: viewModel.studio.appId,\\n            exportType: \\\"qui\\\",\\n            selectionData: v,\\n            layer: 0,\\n            groupID: groupID\\n        })\\n    })\\n\\n    await packJobsUseCase.createPackJobs(jobs);\\n}\\n\\nasync function createExportJob(groupID: string) {\\n    await executor.executeUseCase<ICreateExportJob>(ICreateExportJob, {\\n        appID: viewModel.studio.appId,\\n        exportType: \\\"qui\\\",\\n        selectionData: [],\\n        layer: 1,\\n        groupID: groupID\\n    });\\n}\\n\\nasync function createDeployJob(groupID: string) {\\n    //1-(n) L1- deployJob(build)\\n    let packages = await qcloudApi.getExportJobsByGroupId({ groupID })\\n        .then(jobs => jobs.jobs.filter(e => !isExternalModule(e.jobData as IExportJobData)).map(e => {\\n            const jobData = e.jobData as IExportJobData;\\n            return {\\n                ownerName: jobData.items[0].ownerName,\\n                jobID: e.jobID,\\n                type: jobData.items[0].ownerType,\\n                mainDir: getDeployableArchiveRoot(jobData)\\n            }\\n        }));\\n\\n    if (!packages || packages.length <= 0)\\n        return;\\n\\n    let buildJobs = Array<ICreateDeployJobParam>();\\n    packages.forEach(pack => {\\n        buildJobs.push({\\n            appID: viewModel.studio.appId,\\n            type: \\\"build\\\",\\n            package: {\\n                type: pack.type as DeployType,\\n                name: pack.ownerName!,\\n                mainDir: pack.mainDir!,\\n                zip: `${pack.jobID}.zip`,\\n            },\\n            layer: 1,\\n            groupID: groupID\\n        })\\n    })\\n\\n    await deployJobsUseCase.createBuildJobs(buildJobs);\\n\\n    //2-(1) L2- deployJob(deployment)\\n    let jobParam: ICreateDeployJobParam = {\\n        appID: viewModel.studio.appId,\\n        type: \\\"deployment\\\",\\n        deployConfig: {\\n            process: {\\n                configModelIDs: getProcessConfigList(),\\n                enabled: items.value.filter(asset => asset.checked && asset.children && asset.children.filter(child => child.checked && child.type == \\\"bpmn\\\")).length > 0\\n            }\\n        },\\n        layer: 2,\\n        groupID: groupID\\n    }\\n\\n    await deployJobsUseCase.startDeploymentJob(jobParam);\\n}\\n\\nfunction isExternalModule(jobData: IExportJobData){\\n    //FIXME: external modules may be dynamic\\n    return jobData.items[0].ownerType == \\\"module\\\" && jobData.items[0].ownerName == \\\"processmanager\\\";\\n}\\n\\nfunction getProcessConfigList() {\\n    let processConfigList = Array<IProcessConfigModelItem>();\\n    items.value.forEach((asset) => {\\n        if (asset.checked && asset.children) {\\n            const usingService = asset.children.find(c => c.type == \\\"entityDesigner\\\");\\n            if (!usingService)\\n                return;\\n\\n            const serviceName = PlateauHelper.getServiceNameFromModel(usingService.name);\\n            asset.children.forEach(child => {\\n                if (child.checked && child.type == \\\"process\\\") {\\n                    processConfigList.push({\\n                        moduleName: serviceName,\\n                        modelId: child.id,\\n                        modelName: child.name\\n                    })\\n                }\\n            })\\n        }\\n    })\\n    return processConfigList;\\n}\\n\\nfunction getDeployableArchiveRoot(jobData: IExportJobData) {\\n    //FIXME: change external modules\\n    if(jobData.items[0].ownerName == \\\"processmanager\\\")\\n        return \\\"\\\";\\n    if (jobData.items[0].ownerType == \\\"module\\\") {\\n        let edModel = jobData.items.find(e => e.type == \\\"entityDesigner\\\");\\n        if (!edModel)\\n            throw new Error(\\\"!!! this module cannot deploy. Because its have not a service\\\");\\n        return PlateauHelper.getServiceNameFromModel(edModel.name);\\n    }\\n    return PlateauHelper.getQuiPackageNameFromAppName(jobData.app.name);\\n}\\n\\nfunction cloudTargetMap(name: string, pureVal : boolean = false) {\\n    const map: Record<keyof IOrganizationCloud, string> = { azure: \\\"Azure\\\", plateauGCP: \\\"Plateau Google Cloud Platform\\\"};\\n    if(pureVal) {\\n        return Object.keys(map).find(e => {\\n            if(map[e as keyof IOrganizationCloud] === name){\\n                return true;\\n            }\\n        })\\n    }else {\\n        let key = Object.keys(map).includes(name);\\n        if(!key)\\n            return;\\n        return map[name as keyof IOrganizationCloud];\\n    }\\n}\\n\\nfunction onTargetSelect(value: string) {\\n    selectedTarget.value = cloudTargetMap(value, true) as keyof IOrganizationCloud;\\n}\\n</script>\\n\\n\\n<style scoped>\\n.settings-container {\\n    position: relative;\\n    top: 0px;\\n    left: 0px;\\n}\\n\\n.custom-text {\\n    position: absolute;\\n    font-family: 'Roboto';\\n    font-style: normal;\\n    font-weight: 500;\\n    font-size: 15px;\\n    line-height: 18px;\\n    left: 24px;\\n    color: #212121;\\n}\\n\\n.custom-text.title{\\n    top: 92px;\\n}\\n\\n.custom-text.environment{\\n    top: 174px;\\n}\\n\\n.radio-button {\\n    position: absolute;\\n    top: 60px;\\n    left: 20px;\\n    cursor: pointer;\\n}\\n\\n.radio-text {\\n    position: absolute;\\n    top: 59px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n    user-select: none;\\n    cursor: pointer;\\n}\\n\\n.existing-app-url {\\n    position: absolute;\\n    width: 760px;\\n    height: 40px;\\n    top: 114px;\\n    left: 20px;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #bcbcbc;\\n    border-radius: 4px;\\n    font: normal normal normal 14px/19px Roboto;\\n    letter-spacing: 0px;\\n    padding: 10px 0px 10px 10px;\\n}\\n\\n.url-error {\\n    border: 1px solid red;\\n}\\n\\n.url-disable {\\n    opacity: 0.5;\\n}\\n\\n.existing-app-url::placeholder {\\n    color: #bcbcbc;\\n    user-select: none;\\n}\\n\\n.modules-selected-checkbox {\\n    position: absolute;\\n    left: 22px;\\n    top: 88px;\\n    cursor: pointer;\\n}\\n\\n.modules-selected-checkbox.deploy {\\n    top: 257px;\\n}\\n\\n.modules-selected-text {\\n    position: absolute;\\n    left: 46px;\\n    top: 88px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #757575;\\n}\\n\\n.modules-selected-text.deploy {\\n    top: 257px;\\n}\\n\\n.text-number {\\n    font: normal normal bold 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.modules-datatable {\\n    position: absolute;\\n    left: 20px;\\n    top: 119px;\\n    width: 760px;\\n    height: 288px;\\n    border: 1px solid #bcbcbc;\\n    overflow-x: hidden;\\n    overflow-y: auto;\\n}\\n\\n.modules-datatable.deploy {\\n    top: 286px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar {\\n    width: 4px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar-thumb {\\n    background: #bcbcbc 0% 0% no-repeat padding-box;\\n    border-radius: 10px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar-thumb:hover {\\n    background: #555;\\n}\\n\\n.row-container {\\n    width: 100%;\\n    height: 36px;\\n    position: relative;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #e0e0e0;\\n}\\n\\n.chevron {\\n    position: absolute;\\n    left: 4px;\\n    color: #bcbcbc;\\n    font-size: 24px;\\n}\\n\\n.module-checkbox {\\n    position: absolute;\\n    top: 10px;\\n    left: 43px;\\n    cursor: pointer;\\n}\\n\\n.module-name {\\n    position: absolute;\\n    top: 9px;\\n    left: 69px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.model-checkbox {\\n    position: absolute;\\n    top: 10px;\\n    left: 59px;\\n    cursor: pointer;\\n}\\n\\n.model-icon {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 85px;\\n}\\n\\n.app-tier-model-icon {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 69px;\\n}\\n\\n.app-tier-model-name {\\n    position: absolute;\\n    top: 10px;\\n    left: 87px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.model-name {\\n    position: absolute;\\n    top: 9px;\\n    left: 103px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.version-text {\\n    margin: 10px 7px 10px auto;\\n    display: table;\\n    font: normal normal normal 12px/16px Roboto;\\n    color: #757575;\\n    cursor: pointer;\\n    user-select: none;\\n}\\n\\n.version-icon {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #151233;\\n}\\n\\n.footer {\\n    position: relative;\\n    top: 459px;\\n    width: 100%;\\n}\\n\\n.footer.deploy {\\n    position: relative;\\n    top: 550px;\\n    width: 100%;\\n}\\n\\n\\n.cancel-button {\\n    position: absolute;\\n    top: 10px;\\n    left: 544px;\\n    width: 86px;\\n    height: 40px;\\n    border-radius: 4px;\\n    user-select: none;\\n    font-style: normal;\\n    font-weight: 500;\\n    font-family: \\\"ROBOTO\\\";\\n    font-size: 15px;\\n    color: #757575;\\n    padding: 10px 20px 10px 20px;\\n    cursor: pointer;\\n}\\n\\n.cancel-button.deploy {\\n    left: 565px;\\n}\\n\\n.save-button {\\n    position: absolute;\\n    top: 10px;\\n    left: 658px;\\n    width: 112px;\\n    height: 40px;\\n    background: #151233 0% 0% no-repeat padding-box;\\n    border-radius: 4px;\\n    user-select: none;\\n    font-weight: 500;\\n    font-family: \\\"ROBOTO\\\";\\n    font-size: 15px;\\n    color: #ffffff;\\n    padding: 10px 0px 0px 10px;\\n    cursor: pointer;\\n}\\n\\n.save-button.deploy {\\n    width: 101px;\\n    padding: 10px 0px 0px 20px;\\n}\\n\\n.button-disable .save-button {\\n    opacity: 0.5;\\n    cursor: none;\\n    pointer-events: none;\\n}\\n.button-disable:hover .button-tooltip,\\n.start-screen:hover .button-tooltip {\\n    visibility: visible;\\n    transition: opacity 0.3s ease-out 1s;\\n    opacity: 1;\\n}\\n\\n.button-tooltip {\\n    visibility: hidden;\\n    position: absolute;\\n    background: #757575;\\n    color: #FFFFFF;\\n    font-size: 11px;\\n    font-family: 'Roboto';\\n    text-align: center;\\n    border-radius: 4px;\\n    letter-spacing: 0.2px;\\n    padding: 6px 8px 6px 8px;\\n    top: 56px;\\n    left: 63px;\\n    opacity: 0;\\n}\\n.qjson-color {\\n    color: #449dd1;\\n}\\n\\n.yaml-color {\\n    color: #449dd1;\\n}\\n\\n.js-color {\\n    color: #449dd1;\\n}\\n\\n.process-color {\\n    color: #007c77;\\n}\\n\\n.bpmn-color {\\n    color: #007c77;\\n}\\n\\n.entity-designer-color {\\n    color: #e9724c;\\n}\\n\\n.select-environment {\\n    position: absolute;\\n    top: 196px;\\n    left: 20px;\\n    width: 760px;\\n    font-size: 15px;\\n    height: 40px;\\n    line-height: 40px;\\n}\\n\\n</style>\\n\\n<style>\\n.selected-environment {\\n    background-color: transparent;\\n    border-radius: 4px;\\n    border: 1px solid #BCBCBC;\\n    color: #212121;\\n    padding-left: 12px;\\n}\\n.custom-placeholder:empty:before {\\n    color:#BCBCBC !important;\\n    font-weight: 400;\\n}\\n.custom-select .items .option {\\n    font-size: 14px;\\n    padding-left: 12px;\\n}\\n.custom-select .items .option:hover {\\n    background-color: #EEEEEE;\\n    color: #212121;\\n}\\n.custom-select .items {\\n    color: #212121;\\n    border-radius: 8px;\\n    border: 1px solid #E3E3E3;\\n    overflow: hidden;\\n    background-color: #FFFFFF;\\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.selected-environment {\\n    background-color: transparent;\\n    border-radius: 4px;\\n    border: 1px solid #BCBCBC;\\n    color: #212121;\\n    padding-left: 12px;\\n}\\n.custom-placeholder:empty:before {\\n    color:#BCBCBC !important;\\n    font-weight: 400;\\n}\\n.custom-select .items .option {\\n    font-size: 14px;\\n    padding-left: 12px;\\n}\\n.custom-select .items .option:hover {\\n    background-color: #EEEEEE;\\n    color: #212121;\\n}\\n.custom-select .items {\\n    color: #212121;\\n    border-radius: 8px;\\n    border: 1px solid #E3E3E3;\\n    overflow: hidden;\\n    background-color: #FFFFFF;\\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/presentation/vue3/components/dialogs/publish/publishDialog.vue\"],\"names\":[],\"mappings\":\";AAs7BA;IACI,6BAA6B;IAC7B,kBAAkB;IAClB,yBAAyB;IACzB,cAAc;IACd,kBAAkB;AACtB;AACA;IACI,wBAAwB;IACxB,gBAAgB;AACpB;AACA;IACI,eAAe;IACf,kBAAkB;AACtB;AACA;IACI,yBAAyB;IACzB,cAAc;AAClB;AACA;IACI,cAAc;IACd,kBAAkB;IAClB,yBAAyB;IACzB,gBAAgB;IAChB,yBAAyB;IACzB,0CAA0C;AAC9C\",\"sourcesContent\":[\"<template>\\n    <div class=\\\"container\\\">\\n        <span v-if=\\\"props.screenType == 'Deploy'\\\" class=\\\"custom-text environment\\\"> Environment </span>\\n        <CustomSelect \\n            :options=\\\"publishTargets\\\"\\n            @input=\\\"onTargetSelect\\\"\\n            :disabledOptionsIndex=\\\"disabledIndex\\\"\\n            selectedClass = \\\"selected-environment\\\" \\n            placeholder=\\\"Select the publish environment of your application\\\"\\n            class=\\\"select-environment\\\">\\n        </CustomSelect>\\n\\n        <CheckboxComp :class=\\\"['modules-selected-checkbox', props.screenType == 'Deploy' ? 'deploy' : '']\\\"\\n            :minus=\\\"false\\\" :check=\\\"false\\\"\\n            @click=\\\"handleModuleCountCheckboxEvent(checkedModuleCount != totalModuleCount && checkedModuleCount == 0)\\\" />\\n        <div :class=\\\"['modules-selected-text', props.screenType == 'Deploy' ? 'deploy' : '']\\\">\\n            <span class=\\\"text-number\\\">{{ checkedModuleCount }}</span> of <span class=\\\"text-number\\\">{{\\n                totalModuleCount\\n            }}</span> modules selected\\n        </div>\\n\\n        <div :class=\\\"['modules-datatable', props.screenType == 'Deploy' ? 'deploy' : '']\\\">\\n            <div v-for=\\\"item in items\\\">\\n                <div v-if=\\\"item?.type == 'module'\\\">\\n                    <div class=\\\"row-container\\\">\\n                        <i :class=\\\"'mdi mdi-menu' + (item.collapsed ? '-right' : '-down') + ' chevron'\\\"\\n                            @click=\\\"handleCollapse(item)\\\" />\\n                        <CheckboxComp class=\\\"module-checkbox\\\" :check=\\\"item.allChildChecked || item.checked\\\"\\n                            :minus=\\\"item.anyChildChecked && !item.allChildChecked\\\"\\n                            @click=\\\"handleItemCheckEvent(item)\\\" />\\n                        <span class=\\\"module-name\\\">{{ item.name }}</span>\\n                    </div>\\n                    <div class=\\\"row-container\\\" v-show=\\\"!item.collapsed\\\" v-for=\\\"child in item?.children\\\">\\n                        <CheckboxComp class=\\\"model-checkbox\\\" :check=\\\"child.checked\\\"\\n                            @click=\\\"handleItemCheckEvent(child)\\\" />\\n                        <i v-if=\\\"child.type == 'qjson'\\\" class=\\\"mdi mdi-palette qjson-color model-icon\\\" />\\n                        <i v-if=\\\"child.type == 'yaml'\\\" class=\\\"mdi mdi-cog-outline yaml-color model-icon\\\" />\\n                        <i v-if=\\\"child.type == 'js' || child?.type == 'css'\\\"\\n                            class=\\\"mdi mdi-cog-outline js-color model-icon\\\" />\\n                        <i v-if=\\\"child.type == 'process'\\\" class=\\\"mdi mdi-auto-fix process-color model-icon\\\" />\\n                        <i v-if=\\\"child.type == 'bpmn'\\\" class=\\\"mdi mdi-vector-polyline bpmn-color model-icon\\\" />\\n                        <i v-if=\\\"child.type == 'entityDesigner'\\\"\\n                            class=\\\"mdi mdi-database entity-designer-color model-icon\\\" />\\n                        <i v-if=\\\"child.type == 'flow'\\\" class=\\\"mdi mdi-step-forward bpmn-color model-icon\\\" />\\n                        <span class=\\\"model-name\\\">{{ child.name }}</span>\\n                        <div v-if=\\\"!child.usageType\\\" class=\\\"version-text\\\" @click=\\\"versionDialog(item)\\\">\\n                            {{ child.version }} <i v-if=\\\"!child.usageType\\\"\\n                                class=\\\"mdi mdi-pencil-outline version-icon\\\"></i>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div v-else>\\n                    <div class=\\\"row-container\\\">\\n                        <CheckboxComp class=\\\"module-checkbox\\\" :check=\\\"item?.checked\\\"\\n                            @click=\\\"handleItemCheckEvent(item)\\\" />\\n                        <i v-if=\\\"item?.type == 'qjson'\\\" class=\\\"mdi mdi-palette qjson-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'yaml'\\\" class=\\\"mdi mdi-cog-outline yaml-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'js' || item?.type == 'css'\\\"\\n                            class=\\\"mdi mdi-cog-outline js-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'process'\\\" class=\\\"mdi mdi-auto-fix process-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'bpmn'\\\" class=\\\"mdi mdi-vector-polyline bpmn-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'entityDesigner'\\\"\\n                            class=\\\"mdi mdi-database entity-designer-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'flow'\\\" class=\\\"mdi mdi-step-forward bpmn-color app-tier-model-icon\\\" />\\n                        <span class=\\\"app-tier-model-name\\\">{{ item?.name }}\\n                            <span class=\\\"start-screen\\\" v-if=\\\"startScreen?.ID == item.id\\\">\\n                                <i class=\\\"mdi mdi-home-outline\\\"></i>\\n                                <span class=\\\"button-tooltip\\\" style=\\\"top: -30px; left: 2px; z-index: 1; width: 80px;\\\">Start Screen</span>\\n                            </span>\\n                        </span>\\n   \\n                        <span v-if=\\\"!item.usageType\\\" class=\\\"version-text\\\" @click=\\\"versionDialog(item)\\\">\\n                            {{ item?.version }} <i v-if=\\\"!item.usageType\\\"\\n                                class=\\\"mdi mdi-pencil-outline version-icon\\\"></i>\\n                        </span>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div :class=\\\"['footer', props.screenType == 'Deploy' ? 'deploy' : '']\\\" class=\\\"footer\\\">\\n            <div :class=\\\"['cancel-button', props.screenType == 'Deploy' ? 'deploy' : '']\\\" @click=\\\"close\\\">Cancel</div>\\n            <div v-if=\\\"props.screenType == 'Export'\\\" :class=\\\"(saveButtonDisable ? ' button-disable' : '')\\\" @click=\\\"save\\\">\\n                <div class=\\\"save-button \\\">DOWNLOAD</div>\\n            </div>\\n            <div v-if=\\\"props.screenType == 'Deploy'\\\" :class=\\\"[(saveButtonDisable ? ' button-disable' : '')]\\\" @click=\\\"save\\\">\\n                <span class=\\\"save-button deploy\\\">PUBLISH</span>\\n                <span class=\\\"button-tooltip\\\" style=\\\"top: -40px; left: 648px; z-index: 1; width: 120px;\\\">You need to include your start screen.</span>\\n            </div>\\n            \\n        </div>\\n    </div>\\n</template>\\n\\n\\n<script setup lang=\\\"ts\\\">\\nimport { CryptoHelper } from \\\"@stechquick/algae/lib/helpers/cryptoHelper\\\";\\nimport { container } from \\\"../../../../../domain/core/diContainer\\\";\\nimport { IExportViewItem, IModel, IModule } from \\\"../../../../../domain/model/models\\\";\\nimport { IViewModel } from \\\"../../../../../domain/viewModel/IViewModel\\\";\\nimport CheckboxComp from \\\"../../checkboxComp.vue\\\";\\nimport { ref, computed, defineAsyncComponent, watch } from \\\"vue\\\";\\nimport { IDialog } from \\\"../../../../../domain/presentation/IDialog\\\";\\nimport { IUseCaseExecutor } from \\\"../../../../../domain/useCase/IUseCaseExecutor\\\";\\nimport { DeployType, ICreateDeployJobParam, ICreateExportJobParam, IExportItem, IExportJobData, IPlatformSelection, IProcessConfigModelItem } from \\\"@stechquick/algae/lib/qCloudTemp/exporter\\\";\\nimport { ICreateExportJob } from \\\"../../../../../domain/useCase/ICreateExportJob\\\";\\nimport { IDeployJobs } from \\\"../../../../../domain/useCase/IDeployJobs\\\";\\nimport { IQCloudApi } from \\\"../../../../../domain/infrastructure/IQCloudApi\\\";\\nimport { IPackJobs } from \\\"../../../../../domain/useCase/IPackJobs\\\";\\nimport { IJobUtils } from \\\"../../../../../domain/useCase/IJobUtils\\\";\\nimport { IQJsonAdditionals, UsageType } from \\\"@stechquick/algae/lib/qCloudTemp/quickCloud\\\";\\nimport { IPublish } from \\\"../../../../../domain/useCase/IPublish\\\";\\nimport { PlateauHelper } from \\\"@stechquick/algae/lib/helpers/plateau/plateauHelper\\\";\\nimport { IViewModelManager } from \\\"../../../../../domain/viewModel/IViewModelManager\\\";\\nimport CustomSelect from \\\"../../../components/customSelect.vue\\\"\\nimport { IOrganizationCloud } from \\\"@stechquick/algae/lib/clean/domain/useCases/ICloudProvider\\\";\\n\\ninterface ITableData {\\n    id: string;\\n    parentId?: string;\\n    collapsed?: boolean;\\n    anyChildChecked?: boolean;\\n    allChildChecked?: boolean;\\n    checked?: boolean;\\n    name: string;\\n    type: IModel[\\\"modelType\\\"] | IModule[\\\"objectType\\\"];\\n    version?: string;\\n    children?: Array<ITableData>;\\n    usageType?: UsageType;\\n}\\n\\ninterface IDeployScreenAdditionalProps {\\n    screenType: \\\"Export\\\" | \\\"Deploy\\\";\\n    platformSelection: IPlatformSelection;\\n}\\n\\nconst props = defineProps<IDeployScreenAdditionalProps>();\\nconst viewModel = container.resolve<IViewModel>(IViewModel);\\nconst viewModelManager = container.resolve<IViewModelManager>(IViewModelManager);\\nconst dialog = container.resolve<IDialog>(IDialog);\\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\\nconst deployJobsUseCase = container.resolve<IDeployJobs>(IDeployJobs);\\nconst qcloudApi = container.resolve<IQCloudApi>(IQCloudApi);\\nconst packJobsUseCase = container.resolve<IPackJobs>(IPackJobs);\\nconst publish = container.resolve<IPublish>(IPublish);\\nconst jobUtils = container.resolve<IJobUtils>(IJobUtils);\\nconst emit = defineEmits([\\\"close\\\"]);\\nconst items = ref<Array<ITableData>>([]);\\nconst validations = ref<boolean>(true);\\nconst selectedTarget = ref<keyof IOrganizationCloud>();\\nconst disabledIndex = ref<number>(99);\\n\\nhandleItems();\\n\\nconst totalModuleCount = computed(() => items.value.filter((item) => item.type == \\\"module\\\").length);\\nconst checkedModuleCount = computed(() => items.value.filter((item) => item.type == \\\"module\\\" && item.allChildChecked).length);\\nconst saveButtonDisable = computed(() => (props.screenType == \\\"Deploy\\\" && !selectedTarget.value) || !validations.value || !items.value.some((item) => item.checked || item.anyChildChecked));\\nconst startScreen = computed(() => (viewModel.studio.items as Array<IModel>).find(item => item.isRootPage == true));\\nconst publishTargets = computed(() => {\\n    const targets = viewModel.user?.selectedOrganization?.actions?.publish?.targets;\\n    if(!targets)\\n        return;\\n    const sortedTargets = Object.entries(targets).map((v,i) => {\\n            return { key : v[0], val: v[1] }\\n        }).sort((e, f) => ( e.val===f.val) ? 0 : e.val? -1 : 1);\\n\\n    let idx = sortedTargets.findIndex(e => !e.val);\\n    if(idx != -1)\\n        disabledIndex.value = idx;\\n    return sortedTargets.map(e => cloudTargetMap(e.key));\\n})\\n\\nwatch(items.value, (_new, _old) => {\\n    validations.value = validate();\\n});\\n\\n\\nfunction validate() {\\n    let result = true;\\n    const modules = items.value.filter(e => e.type == \\\"module\\\" && e.anyChildChecked);\\n    const appLayerItems = items.value.filter(e => e.type == \\\"qjson\\\" && e.checked);\\n\\n    if (props.screenType == \\\"Deploy\\\") {\\n        //FIXME: externalModules will be get from common places \\n        if (modules.length > 0)\\n            result = modules\\n                .filter(e => e.name != \\\"processmanager\\\").map(e => e.children).filter(e => !e?.find(f => f.type == \\\"entityDesigner\\\" && f.checked)).length <= 0\\n\\n        let isApplicationWillDeploy = appLayerItems.length > 0;\\n        if (isApplicationWillDeploy) {\\n            result = appLayerItems\\n                .map(e => viewModel.studio.items.find(item => item.ID == e.id) as IModel)\\n                .findIndex(e => ((e.additionals as IQJsonAdditionals).isRootPage)) != -1;\\n        }\\n    }\\n\\n    return result;\\n}\\n\\nfunction handleItems() {\\n    items.value = viewModel.studio.items\\n        .filter((item) => item.objectType == \\\"module\\\" && item.children.length > 0)\\n        .map(\\n            (item) =>\\n            ({\\n                id: item.ID,\\n                collapsed: true,\\n                name: item.name,\\n                type: \\\"module\\\",\\n                anyChildChecked: false,\\n                allChildChecked: false,\\n                children: (item as IModule).children\\n                    .filter((child) => child.objectType == \\\"model\\\")\\n                    .map(\\n                        (child) =>\\n                        ({\\n                            id: child.ID,\\n                            parentId: item.ID,\\n                            checked: false,\\n                            name: child.name,\\n                            type: (child as IModel).modelType,\\n                            version: \\\"latest\\\",\\n                        } as ITableData)\\n                    ),\\n            } as ITableData)\\n        );\\n    viewModel.studio.items\\n        .filter((item) => item.objectType == \\\"model\\\" && item.usageType != \\\"appSettings\\\")\\n        .forEach((item) => {\\n            items.value.push({\\n                id: item.ID,\\n                checked: false,\\n                name: item.name,\\n                type: (item as IModel).modelType,\\n                version: \\\"latest\\\",\\n            });\\n        });\\n    const uiSettingsID = CryptoHelper.CreateGuid();\\n    const appSettings = viewModel.studio.items.filter((item) => item.objectType == \\\"model\\\" && item.usageType == \\\"appSettings\\\") as Array<IModel>;\\n    const uiSettings: ITableData = {\\n        id: uiSettingsID,\\n        collapsed: true,\\n        name: \\\"UI Settings\\\",\\n        type: \\\"module\\\",\\n        anyChildChecked: false,\\n        allChildChecked: false,\\n        children: appSettings.map((setting) => ({\\n            id: setting.ID,\\n            parentId: uiSettingsID,\\n            name: setting.name,\\n            type: (setting as IModel).modelType,\\n            checked: false,\\n            usageType: setting?.usageType,\\n        })) as Array<ITableData>,\\n    };\\n    items.value.unshift(uiSettings);\\n}\\n\\nfunction handleModuleCountCheckboxEvent(value: boolean) {\\n    items.value.forEach((item) => {\\n        item.checked = value;\\n        if (item.allChildChecked != undefined) item.allChildChecked = value;\\n        if (item.anyChildChecked != undefined) item.anyChildChecked = value;\\n        if (item.children) item.children.forEach((child) => (child.checked = value));\\n    });\\n}\\n\\nfunction handleCollapse(item: ITableData) {\\n    item.collapsed = !item.collapsed;\\n}\\n\\nfunction handleItemCheckEvent(item: ITableData) {\\n    if (item.type != \\\"module\\\") {\\n        item.checked = !item.checked;\\n        if (item.parentId) {\\n            const parent = items.value.find((i) => i.id == item.parentId)!;\\n            handleParentCheckedStatus(parent);\\n        }\\n    } else {\\n        if(item.children && item.children.length > 0) {\\n            if (item.anyChildChecked) {\\n                item.children?.forEach((child) => (child.checked = false));\\n                item.checked = false;\\n            } else {\\n                item.children?.forEach((child) => (child.checked = true));\\n                item.checked = true;\\n            }\\n            handleParentCheckedStatus(item);\\n        }\\n        else {\\n            item.checked = !item.checked;\\n            item.allChildChecked = false;\\n        }\\n        \\n    }\\n}\\n\\nfunction handleParentCheckedStatus(item: ITableData) {\\n    item.allChildChecked = !item.children?.some((child) => !child.checked);\\n    item.anyChildChecked = item.children?.some((child) => child.checked);\\n    console.log(\\\"item => \\\", item);\\n}\\n\\nfunction versionDialog(item: ITableData) {\\n    const clickedNode = { id: item.id, state: { checked: item.checked }, text: item.name, type: item.type, version: item.version };\\n    dialog.showDialog(\\n        defineAsyncComponent(() => import(\\\"../../application/modelVersionDialog.vue\\\")),\\n        { closable: true, title: \\\"Change Version\\\", width: \\\"900px\\\", maxHeight: \\\"500px\\\", overflow: \\\"auto\\\" },\\n        { clickedNode }\\n    );\\n}\\n\\nfunction close() {\\n    emit(\\\"close\\\");\\n}\\n\\nasync function save() {\\n    executor.execute(\\n        async () => {\\n            const initAsGroup = async () => {\\n                const groupID = CryptoHelper.CreateGuid();\\n                await initHistory(groupID);\\n                await packJob(groupID);\\n                return groupID;\\n            }\\n\\n            switch (props.screenType) {\\n                case \\\"Export\\\":\\n                    const groupID = await initAsGroup();\\n                    await createExportJob(groupID);\\n                    break;\\n                case \\\"Deploy\\\":\\n                    switch (selectedTarget.value) {\\n                        case \\\"plateauGCP\\\":\\n                            const groupID = await initAsGroup();\\n                            await createDeployJob(groupID);\\n                            break;\\n                        case \\\"azure\\\":\\n                            await createAzureDeploy();\\n                            break;\\n                    }\\n            }\\n            emit(\\\"close\\\");\\n        },\\n        { loading: true });\\n}\\n\\nasync function createAzureDeploy() {\\n    const deployItems: Array<IExportItem> = [];\\n    const itemIdObj: Record<string, { item: IModel, path: string }> = {};\\n\\n    viewModelManager.flatMapItems(viewModel.studio.items, (item, path) => {\\n        if (item.objectType != \\\"model\\\") { return; }\\n        itemIdObj[item.ID] = { item, path };\\n        return item;\\n    });\\n\\n    const traverseSelectedItems = (items?: Array<ITableData>) => {\\n        if (!items || items.length == 0) { return; }\\n        items.forEach(item => {\\n            if (item.type == \\\"module\\\") {\\n                traverseSelectedItems(item.children);\\n                return;\\n            }\\n\\n            const itemMap = itemIdObj[item.id];\\n\\n            const deployItem: IExportItem = {\\n                id: item.id,\\n                name: jobUtils.getFileFullname(itemMap.item),\\n                path: itemMap.path,\\n                type: jobUtils.getItemType(itemMap.item),\\n                ver: item.version || \\\"latest\\\",\\n                isRootPage: itemMap.item.isRootPage,\\n                ownerType: 'application',\\n                ownerName: viewModel.studio.appName,\\n                size: itemMap.item.size,\\n            };\\n            deployItems.push(deployItem)\\n        });\\n    };\\n\\n    traverseSelectedItems(items.value);\\n\\n    await publish.createUI(deployItems, props.platformSelection);\\n}\\n\\nasync function initHistory(groupID: string) {\\n    return qcloudApi.initPublishHistory({\\n        appID: viewModel.studio.appId,\\n        ID: groupID,\\n        isMultiStep: true,\\n        type: props.screenType == \\\"Deploy\\\" ? \\\"publish\\\" : \\\"download\\\"\\n    });\\n}\\n\\nfunction isUsingPlateau() {\\n    const applications = viewModel.user!.selectedOrganization!.applications;\\n\\n    if (!applications)\\n        return false;\\n\\n    if (!applications.entity && !applications.process && !applications.bpmn)\\n        return false;\\n\\n    return true;\\n}\\n\\nfunction getItemPath(asset: ITableData, ownerName: string) {\\n    if (isUsingPlateau())\\n        return \\\"\\\";\\n    if (asset.type == \\\"qjson\\\")\\n        return ownerName;\\n    return \\\"\\\";\\n}\\n\\nfunction isUISettings(asset: ITableData) {\\n    return asset.name == \\\"UI Settings\\\";\\n}\\n\\n\\nasync function packJob(groupID: string) {\\n    let exportItemMap = new Map<string, Array<IExportItem>>();\\n\\n    items.value.forEach((asset) => {\\n        if (asset.checked) {\\n            //QUI\\n            if (asset.type == 'qjson') {\\n                const isThisrootPage = viewModel.studio.items.find(i => i.objectType == \\\"model\\\" && i.modelType == \\\"qjson\\\" && (i.additionals as IQJsonAdditionals).isRootPage && i.ID == asset.id);\\n\\n                const obj: IExportItem = {\\n                    id: asset.id,\\n                    ver: asset.version!,\\n                    type: jobUtils.getItemType({ usageType: asset.usageType, type: asset.type } as IExportViewItem),\\n                    path: \\\"\\\",\\n                    name: jobUtils.getFileFullname({ usageType: asset.usageType, type: asset.type, name: asset.name } as IExportViewItem),\\n                    ownerType: 'application',\\n                    ownerName: viewModel.studio.appName,\\n                    isRootPage: isThisrootPage ? true : undefined,\\n                };\\n\\n                let applicationModels = exportItemMap.get(viewModel.studio.appName);\\n                if (applicationModels && applicationModels.length > 0) {\\n                    applicationModels.push(obj);\\n                    exportItemMap.set(viewModel.studio.appName, applicationModels);\\n                }\\n                else\\n                    exportItemMap.set(viewModel.studio.appName, [obj]);\\n                return;\\n            }\\n        }\\n        if (asset.anyChildChecked && asset.children) {\\n            let checkedItems = Array<IExportItem>();\\n            asset.children!.forEach(child => {\\n                if (!child.checked || child.type == \\\"module\\\")\\n                    return;\\n                const exportItem: IExportItem = {\\n                    id: child.id,\\n                    ver: child.version!,\\n                    type: jobUtils.getItemType({ usageType: child.usageType, type: child.type, name: child.name } as IExportViewItem),\\n                    path: !isUISettings(asset) ? getItemPath(child, asset.name) : \\\"\\\",\\n                    name: jobUtils.getFileFullname({ usageType: child.usageType, type: child.type, name: child.name } as IExportViewItem),\\n                    ownerType: isUISettings(asset) || !isUsingPlateau() ? \\\"application\\\" : (asset.type === 'module' ? 'module' : 'application'),\\n                    ownerName: isUISettings(asset) || !isUsingPlateau() ? viewModel.studio.appName : asset.name\\n                };\\n                if (exportItem.type == \\\"entityDesigner\\\")\\n                    exportItem.entityGenerationDomain = viewModel.user!.selectedOrganization!.actions?.entityGenerationDomain;\\n                checkedItems.push(exportItem);\\n            });\\n\\n            if (checkedItems.length > 0) {\\n                if (!isUISettings(asset) && isUsingPlateau())\\n                    exportItemMap.set(asset.name, checkedItems);\\n                else {\\n                    let applicationModels = exportItemMap.get(viewModel.studio.appName);\\n                    if (applicationModels && applicationModels.length > 0) {\\n                        applicationModels.forEach(e => checkedItems.push(e));\\n                    }\\n                    exportItemMap.set(viewModel.studio.appName, checkedItems);\\n                }\\n            }\\n\\n        }\\n    })\\n\\n    let jobs = Array<ICreateExportJobParam>();\\n    exportItemMap.forEach((v, k) => {\\n        jobs.push({\\n            appID: viewModel.studio.appId,\\n            exportType: \\\"qui\\\",\\n            selectionData: v,\\n            layer: 0,\\n            groupID: groupID\\n        })\\n    })\\n\\n    await packJobsUseCase.createPackJobs(jobs);\\n}\\n\\nasync function createExportJob(groupID: string) {\\n    await executor.executeUseCase<ICreateExportJob>(ICreateExportJob, {\\n        appID: viewModel.studio.appId,\\n        exportType: \\\"qui\\\",\\n        selectionData: [],\\n        layer: 1,\\n        groupID: groupID\\n    });\\n}\\n\\nasync function createDeployJob(groupID: string) {\\n    //1-(n) L1- deployJob(build)\\n    let packages = await qcloudApi.getExportJobsByGroupId({ groupID })\\n        .then(jobs => jobs.jobs.filter(e => !isExternalModule(e.jobData as IExportJobData)).map(e => {\\n            const jobData = e.jobData as IExportJobData;\\n            return {\\n                ownerName: jobData.items[0].ownerName,\\n                jobID: e.jobID,\\n                type: jobData.items[0].ownerType,\\n                mainDir: getDeployableArchiveRoot(jobData)\\n            }\\n        }));\\n\\n    if (!packages || packages.length <= 0)\\n        return;\\n\\n    let buildJobs = Array<ICreateDeployJobParam>();\\n    packages.forEach(pack => {\\n        buildJobs.push({\\n            appID: viewModel.studio.appId,\\n            type: \\\"build\\\",\\n            package: {\\n                type: pack.type as DeployType,\\n                name: pack.ownerName!,\\n                mainDir: pack.mainDir!,\\n                zip: `${pack.jobID}.zip`,\\n            },\\n            layer: 1,\\n            groupID: groupID\\n        })\\n    })\\n\\n    await deployJobsUseCase.createBuildJobs(buildJobs);\\n\\n    //2-(1) L2- deployJob(deployment)\\n    let jobParam: ICreateDeployJobParam = {\\n        appID: viewModel.studio.appId,\\n        type: \\\"deployment\\\",\\n        deployConfig: {\\n            process: {\\n                configModelIDs: getProcessConfigList(),\\n                enabled: items.value.filter(asset => asset.checked && asset.children && asset.children.filter(child => child.checked && child.type == \\\"bpmn\\\")).length > 0\\n            }\\n        },\\n        layer: 2,\\n        groupID: groupID\\n    }\\n\\n    await deployJobsUseCase.startDeploymentJob(jobParam);\\n}\\n\\nfunction isExternalModule(jobData: IExportJobData){\\n    //FIXME: external modules may be dynamic\\n    return jobData.items[0].ownerType == \\\"module\\\" && jobData.items[0].ownerName == \\\"processmanager\\\";\\n}\\n\\nfunction getProcessConfigList() {\\n    let processConfigList = Array<IProcessConfigModelItem>();\\n    items.value.forEach((asset) => {\\n        if (asset.checked && asset.children) {\\n            const usingService = asset.children.find(c => c.type == \\\"entityDesigner\\\");\\n            if (!usingService)\\n                return;\\n\\n            const serviceName = PlateauHelper.getServiceNameFromModel(usingService.name);\\n            asset.children.forEach(child => {\\n                if (child.checked && child.type == \\\"process\\\") {\\n                    processConfigList.push({\\n                        moduleName: serviceName,\\n                        modelId: child.id,\\n                        modelName: child.name\\n                    })\\n                }\\n            })\\n        }\\n    })\\n    return processConfigList;\\n}\\n\\nfunction getDeployableArchiveRoot(jobData: IExportJobData) {\\n    //FIXME: change external modules\\n    if(jobData.items[0].ownerName == \\\"processmanager\\\")\\n        return \\\"\\\";\\n    if (jobData.items[0].ownerType == \\\"module\\\") {\\n        let edModel = jobData.items.find(e => e.type == \\\"entityDesigner\\\");\\n        if (!edModel)\\n            throw new Error(\\\"!!! this module cannot deploy. Because its have not a service\\\");\\n        return PlateauHelper.getServiceNameFromModel(edModel.name);\\n    }\\n    return PlateauHelper.getQuiPackageNameFromAppName(jobData.app.name);\\n}\\n\\nfunction cloudTargetMap(name: string, pureVal : boolean = false) {\\n    const map: Record<keyof IOrganizationCloud, string> = { azure: \\\"Azure\\\", plateauGCP: \\\"Plateau Google Cloud Platform\\\"};\\n    if(pureVal) {\\n        return Object.keys(map).find(e => {\\n            if(map[e as keyof IOrganizationCloud] === name){\\n                return true;\\n            }\\n        })\\n    }else {\\n        let key = Object.keys(map).includes(name);\\n        if(!key)\\n            return;\\n        return map[name as keyof IOrganizationCloud];\\n    }\\n}\\n\\nfunction onTargetSelect(value: string) {\\n    selectedTarget.value = cloudTargetMap(value, true) as keyof IOrganizationCloud;\\n}\\n</script>\\n\\n\\n<style scoped>\\n.settings-container {\\n    position: relative;\\n    top: 0px;\\n    left: 0px;\\n}\\n\\n.custom-text {\\n    position: absolute;\\n    font-family: 'Roboto';\\n    font-style: normal;\\n    font-weight: 500;\\n    font-size: 15px;\\n    line-height: 18px;\\n    left: 24px;\\n    color: #212121;\\n}\\n\\n.custom-text.title{\\n    top: 92px;\\n}\\n\\n.custom-text.environment{\\n    top: 174px;\\n}\\n\\n.radio-button {\\n    position: absolute;\\n    top: 60px;\\n    left: 20px;\\n    cursor: pointer;\\n}\\n\\n.radio-text {\\n    position: absolute;\\n    top: 59px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n    user-select: none;\\n    cursor: pointer;\\n}\\n\\n.existing-app-url {\\n    position: absolute;\\n    width: 760px;\\n    height: 40px;\\n    top: 114px;\\n    left: 20px;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #bcbcbc;\\n    border-radius: 4px;\\n    font: normal normal normal 14px/19px Roboto;\\n    letter-spacing: 0px;\\n    padding: 10px 0px 10px 10px;\\n}\\n\\n.url-error {\\n    border: 1px solid red;\\n}\\n\\n.url-disable {\\n    opacity: 0.5;\\n}\\n\\n.existing-app-url::placeholder {\\n    color: #bcbcbc;\\n    user-select: none;\\n}\\n\\n.modules-selected-checkbox {\\n    position: absolute;\\n    left: 22px;\\n    top: 88px;\\n    cursor: pointer;\\n}\\n\\n.modules-selected-checkbox.deploy {\\n    top: 257px;\\n}\\n\\n.modules-selected-text {\\n    position: absolute;\\n    left: 46px;\\n    top: 88px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #757575;\\n}\\n\\n.modules-selected-text.deploy {\\n    top: 257px;\\n}\\n\\n.text-number {\\n    font: normal normal bold 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.modules-datatable {\\n    position: absolute;\\n    left: 20px;\\n    top: 119px;\\n    width: 760px;\\n    height: 288px;\\n    border: 1px solid #bcbcbc;\\n    overflow-x: hidden;\\n    overflow-y: auto;\\n}\\n\\n.modules-datatable.deploy {\\n    top: 286px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar {\\n    width: 4px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar-thumb {\\n    background: #bcbcbc 0% 0% no-repeat padding-box;\\n    border-radius: 10px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar-thumb:hover {\\n    background: #555;\\n}\\n\\n.row-container {\\n    width: 100%;\\n    height: 36px;\\n    position: relative;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #e0e0e0;\\n}\\n\\n.chevron {\\n    position: absolute;\\n    left: 4px;\\n    color: #bcbcbc;\\n    font-size: 24px;\\n}\\n\\n.module-checkbox {\\n    position: absolute;\\n    top: 10px;\\n    left: 43px;\\n    cursor: pointer;\\n}\\n\\n.module-name {\\n    position: absolute;\\n    top: 9px;\\n    left: 69px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.model-checkbox {\\n    position: absolute;\\n    top: 10px;\\n    left: 59px;\\n    cursor: pointer;\\n}\\n\\n.model-icon {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 85px;\\n}\\n\\n.app-tier-model-icon {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 69px;\\n}\\n\\n.app-tier-model-name {\\n    position: absolute;\\n    top: 10px;\\n    left: 87px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.model-name {\\n    position: absolute;\\n    top: 9px;\\n    left: 103px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.version-text {\\n    margin: 10px 7px 10px auto;\\n    display: table;\\n    font: normal normal normal 12px/16px Roboto;\\n    color: #757575;\\n    cursor: pointer;\\n    user-select: none;\\n}\\n\\n.version-icon {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #151233;\\n}\\n\\n.footer {\\n    position: relative;\\n    top: 459px;\\n    width: 100%;\\n}\\n\\n.footer.deploy {\\n    position: relative;\\n    top: 550px;\\n    width: 100%;\\n}\\n\\n\\n.cancel-button {\\n    position: absolute;\\n    top: 10px;\\n    left: 544px;\\n    width: 86px;\\n    height: 40px;\\n    border-radius: 4px;\\n    user-select: none;\\n    font-style: normal;\\n    font-weight: 500;\\n    font-family: \\\"ROBOTO\\\";\\n    font-size: 15px;\\n    color: #757575;\\n    padding: 10px 20px 10px 20px;\\n    cursor: pointer;\\n}\\n\\n.cancel-button.deploy {\\n    left: 565px;\\n}\\n\\n.save-button {\\n    position: absolute;\\n    top: 10px;\\n    left: 658px;\\n    width: 112px;\\n    height: 40px;\\n    background: #151233 0% 0% no-repeat padding-box;\\n    border-radius: 4px;\\n    user-select: none;\\n    font-weight: 500;\\n    font-family: \\\"ROBOTO\\\";\\n    font-size: 15px;\\n    color: #ffffff;\\n    padding: 10px 0px 0px 10px;\\n    cursor: pointer;\\n}\\n\\n.save-button.deploy {\\n    width: 101px;\\n    padding: 10px 0px 0px 20px;\\n}\\n\\n.button-disable .save-button {\\n    opacity: 0.5;\\n    cursor: none;\\n    pointer-events: none;\\n}\\n.button-disable:hover .button-tooltip,\\n.start-screen:hover .button-tooltip {\\n    visibility: visible;\\n    transition: opacity 0.3s ease-out 1s;\\n    opacity: 1;\\n}\\n\\n.button-tooltip {\\n    visibility: hidden;\\n    position: absolute;\\n    background: #757575;\\n    color: #FFFFFF;\\n    font-size: 11px;\\n    font-family: 'Roboto';\\n    text-align: center;\\n    border-radius: 4px;\\n    letter-spacing: 0.2px;\\n    padding: 6px 8px 6px 8px;\\n    top: 56px;\\n    left: 63px;\\n    opacity: 0;\\n}\\n.qjson-color {\\n    color: #449dd1;\\n}\\n\\n.yaml-color {\\n    color: #449dd1;\\n}\\n\\n.js-color {\\n    color: #449dd1;\\n}\\n\\n.process-color {\\n    color: #007c77;\\n}\\n\\n.bpmn-color {\\n    color: #007c77;\\n}\\n\\n.entity-designer-color {\\n    color: #e9724c;\\n}\\n\\n.select-environment {\\n    position: absolute;\\n    top: 196px;\\n    left: 20px;\\n    width: 760px;\\n    font-size: 15px;\\n    height: 40px;\\n    line-height: 40px;\\n}\\n\\n</style>\\n\\n<style>\\n.selected-environment {\\n    background-color: transparent;\\n    border-radius: 4px;\\n    border: 1px solid #BCBCBC;\\n    color: #212121;\\n    padding-left: 12px;\\n}\\n.custom-placeholder:empty:before {\\n    color:#BCBCBC !important;\\n    font-weight: 400;\\n}\\n.custom-select .items .option {\\n    font-size: 14px;\\n    padding-left: 12px;\\n}\\n.custom-select .items .option:hover {\\n    background-color: #EEEEEE;\\n    color: #212121;\\n}\\n.custom-select .items {\\n    color: #212121;\\n    border-radius: 8px;\\n    border: 1px solid #E3E3E3;\\n    overflow: hidden;\\n    background-color: #FFFFFF;\\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import { IOrganization } from \"../../qCloudTemp/membership\";\n\nexport class PlateauHelper {\n    public static getPlateauEnvironmentName = (tenant: IOrganization, appName: string) => {\n        let envPrefix = tenant.cloud?.plateauGCP?.environmentPrefix;\n        if(!envPrefix || !appName)\n            throw new Error(\"Environment name prefix or application name not found!!!\" );\n\n        envPrefix = (envPrefix.endsWith(\"-\") ? envPrefix : (envPrefix + \"-\")).toLowerCase();\n        appName = PlateauHelper.purify(appName);\n        return `${envPrefix}${appName}`;\n    }\n\n    public static purify = (str: string) => str.replace(/[^a-zA-Z0-9]/g, \"\").toLowerCase();\n\n    public static getQuiPackageNameFromAppName = (appName: string) => `${PlateauHelper.purify(appName)}-qui`;\n\n    public static getApplicationUINameFromQuiPkg = (quiPackageName: string) => PlateauHelper.purify(quiPackageName.replace(\"-qui\", \"ui\"));\n    \n    public static getApplicationHostNamePrefix = (appName: string) => `${PlateauHelper.purify(appName)}ui`;\n\n    public static getServiceNameFromModel = (modelName: string) => PlateauHelper.purify(modelName.replace(\".dm\", \"\"));\n}","<template>\n  <div class=\"custom-select\" :tabindex=\"tabindex\" @blur=\"open = false\">\n    <div :class=\"open ? 'open selected ' + selectedClass : 'selected ' + selectedClass\" @click=\"open = !open\">\n      <div v-if = \"selected\">{{ typeof selected === 'object' ? selected.name : selected }}\n        <i class=\"mdi mdi-chevron-down\"></i>\n      </div>\n      <div v-else>\n        <span contenteditable=\"true\" :data-placeholder=\"placeholder\" class=\"custom-placeholder\"></span>\n        <i class=\"mdi mdi-chevron-down\"></i>\n      </div>\n    </div>\n    <div class=\"items\" :class=\"{ selectHide: !open }\" :style=\"{padding: extraButton ? '10px 0 0' : '10px 0'}\">\n      <div v-for=\"(option, i) of options\" :key=\"i\" @click=\"handleClick(option)\" :class=\"['option' , i >= disabledOptionsIndex ? 'disabled' : '' ]\">\n        {{typeof option === 'object' ? option.name : option }}\n      </div>\n      <div v-if=\"extraButton\" class=\"button-div\" :style=\"{borderTop: extraButton ? '1px solid #EEEEEE' :  'none'}\" >\n        <div v-for=\"(button, index) in buttons\" :key=\"index\">\n            <div :id=\"'option-button-' + index\" :class=\"button.buttonClass + ' button'\" @click=\"open=false\">{{ button.buttonText }}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nconst emit = defineEmits([\"input\"]);\nconst props = defineProps({\n  options: {\n    type: Array,\n    required: true,\n  },\n  disabledOptionsIndex: {\n    type: Number,\n    required:false,\n    default: 99\n  },\n  default: {\n    type: String,\n    required: false,\n    default: '',\n  },\n  tabindex: {\n    type: Number,\n    required: false,\n    default: 0,\n  },\n  placeholder: {\n    type: String,\n    required: false,\n    default: \"\",\n  },\n  selectedClass: {\n    type: String,\n    required: true,\n    default: \"\",\n  },\n  extraButton: {\n    type: Boolean,\n    required: false,\n    default: false,\n  },\n  buttons: {\n    type: Array,\n    required: false,\n    default: () => [],\n    validator: (value) => {\n      return value.every(\n        (button) =>\n          typeof button === \"object\" &&\n          typeof button.buttonText === \"string\" &&\n          typeof button.buttonClass === \"string\"\n      );\n    },\n  },\n})\n\nconst selected = ref(props.default ? props.default : null);\nconst open = ref(false)\n\nconst handleClick = (option) => {\n    if(typeof option === 'object'){\n      emit('input', option.id);\n      selected.value = option;\n      open.value = false;\n      emit('input', selected.value.id);\n    }\n    else if(typeof option === 'string') {\n      emit('input', option);\n      selected.value = option;\n      open.value = false;\n      emit('input', selected.value);\n    }\n}\n</script>\n\n  \n  <style scoped>\n  /*You should put other CSS properties with same class names in the parent component's style tag that is not scoped.*/\n  .custom-select {\n    position: relative;\n    width: 100%;\n    text-align: left;\n    outline: none;\n  }\n  \n  .custom-select .selected {\n\n    cursor: pointer;\n    user-select: none;\n  }\n  \n  .custom-select .selected i {\n    position: absolute;\n    right: 10px;\n    float: right;\n  }\n  \n  .custom-select .items {\n    position: absolute;\n    left: 0;\n    right: 0;\n    z-index: 1;\n  }\n  \n  .custom-select .items .option {\n    cursor: pointer;\n    user-select: none;\n  }  \n  \n  .custom-select .items .option.disabled {\n    cursor: none;\n    user-select: none;\n    pointer-events: none;\n    opacity: 0.4;\n  }\n  \n  .selectHide {\n    display: none;\n  }\n  .button-div {\n    justify-content: center;\n    display: grid;\n    padding: 13px 0 19px;\n    margin-top: 10px\n  }\n  .button {\n    cursor: pointer;\n  }\n  .custom-placeholder:empty:before {\n    content:attr(data-placeholder);\n    color:#616161\n  }\n  .custom-placeholder:focus-visible {\n    outline: none;\n  }\n  </style>","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./customSelect.vue?vue&type=style&index=0&id=343a4995&scoped=true&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./customSelect.vue?vue&type=style&index=0&id=343a4995&scoped=true&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","import script from \"./customSelect.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./customSelect.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./customSelect.vue?vue&type=style&index=0&id=343a4995&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/QCloud-Shell/QCloud-Shell/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-343a4995\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, unref as _unref, createVNode as _createVNode, normalizeClass as _normalizeClass, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, vShow as _vShow, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-0f6bedce\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"container\" }\nconst _hoisted_2 = {\n  key: 0,\n  class: \"custom-text environment\"\n}\nconst _hoisted_3 = { class: \"text-number\" }\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\" of \")\nconst _hoisted_5 = { class: \"text-number\" }\nconst _hoisted_6 = /*#__PURE__*/_createTextVNode(\" modules selected \")\nconst _hoisted_7 = { key: 0 }\nconst _hoisted_8 = { class: \"row-container\" }\nconst _hoisted_9 = [\"onClick\"]\nconst _hoisted_10 = { class: \"module-name\" }\nconst _hoisted_11 = { class: \"row-container\" }\nconst _hoisted_12 = {\n  key: 0,\n  class: \"mdi mdi-palette qjson-color model-icon\"\n}\nconst _hoisted_13 = {\n  key: 1,\n  class: \"mdi mdi-cog-outline yaml-color model-icon\"\n}\nconst _hoisted_14 = {\n  key: 2,\n  class: \"mdi mdi-cog-outline js-color model-icon\"\n}\nconst _hoisted_15 = {\n  key: 3,\n  class: \"mdi mdi-auto-fix process-color model-icon\"\n}\nconst _hoisted_16 = {\n  key: 4,\n  class: \"mdi mdi-vector-polyline bpmn-color model-icon\"\n}\nconst _hoisted_17 = {\n  key: 5,\n  class: \"mdi mdi-database entity-designer-color model-icon\"\n}\nconst _hoisted_18 = {\n  key: 6,\n  class: \"mdi mdi-step-forward bpmn-color model-icon\"\n}\nconst _hoisted_19 = { class: \"model-name\" }\nconst _hoisted_20 = [\"onClick\"]\nconst _hoisted_21 = {\n  key: 0,\n  class: \"mdi mdi-pencil-outline version-icon\"\n}\nconst _hoisted_22 = { key: 1 }\nconst _hoisted_23 = { class: \"row-container\" }\nconst _hoisted_24 = {\n  key: 0,\n  class: \"mdi mdi-palette qjson-color app-tier-model-icon\"\n}\nconst _hoisted_25 = {\n  key: 1,\n  class: \"mdi mdi-cog-outline yaml-color app-tier-model-icon\"\n}\nconst _hoisted_26 = {\n  key: 2,\n  class: \"mdi mdi-cog-outline js-color app-tier-model-icon\"\n}\nconst _hoisted_27 = {\n  key: 3,\n  class: \"mdi mdi-auto-fix process-color app-tier-model-icon\"\n}\nconst _hoisted_28 = {\n  key: 4,\n  class: \"mdi mdi-vector-polyline bpmn-color app-tier-model-icon\"\n}\nconst _hoisted_29 = {\n  key: 5,\n  class: \"mdi mdi-database entity-designer-color app-tier-model-icon\"\n}\nconst _hoisted_30 = {\n  key: 6,\n  class: \"mdi mdi-step-forward bpmn-color app-tier-model-icon\"\n}\nconst _hoisted_31 = { class: \"app-tier-model-name\" }\nconst _hoisted_32 = {\n  key: 0,\n  class: \"start-screen\"\n}\nconst _hoisted_33 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"mdi mdi-home-outline\" }, null, -1 /* HOISTED */))\nconst _hoisted_34 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"button-tooltip\",\n  style: {\"top\":\"-30px\",\"left\":\"2px\",\"z-index\":\"1\",\"width\":\"80px\"}\n}, \"Start Screen\", -1 /* HOISTED */))\nconst _hoisted_35 = [\n  _hoisted_33,\n  _hoisted_34\n]\nconst _hoisted_36 = [\"onClick\"]\nconst _hoisted_37 = {\n  key: 0,\n  class: \"mdi mdi-pencil-outline version-icon\"\n}\nconst _hoisted_38 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"save-button\" }, \"DOWNLOAD\", -1 /* HOISTED */))\nconst _hoisted_39 = [\n  _hoisted_38\n]\nconst _hoisted_40 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"save-button deploy\" }, \"PUBLISH\", -1 /* HOISTED */))\nconst _hoisted_41 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"button-tooltip\",\n  style: {\"top\":\"-40px\",\"left\":\"648px\",\"z-index\":\"1\",\"width\":\"120px\"}\n}, \"You need to include your start screen.\", -1 /* HOISTED */))\nconst _hoisted_42 = [\n  _hoisted_40,\n  _hoisted_41\n]\n\nimport { CryptoHelper } from \"@stechquick/algae/lib/helpers/cryptoHelper\";\nimport { container } from \"../../../../../domain/core/diContainer\";\nimport { IExportViewItem, IModel, IModule } from \"../../../../../domain/model/models\";\nimport { IViewModel } from \"../../../../../domain/viewModel/IViewModel\";\nimport CheckboxComp from \"../../checkboxComp.vue\";\nimport { ref, computed, defineAsyncComponent, watch } from \"vue\";\nimport { IDialog } from \"../../../../../domain/presentation/IDialog\";\nimport { IUseCaseExecutor } from \"../../../../../domain/useCase/IUseCaseExecutor\";\nimport { DeployType, ICreateDeployJobParam, ICreateExportJobParam, IExportItem, IExportJobData, IPlatformSelection, IProcessConfigModelItem } from \"@stechquick/algae/lib/qCloudTemp/exporter\";\nimport { ICreateExportJob } from \"../../../../../domain/useCase/ICreateExportJob\";\nimport { IDeployJobs } from \"../../../../../domain/useCase/IDeployJobs\";\nimport { IQCloudApi } from \"../../../../../domain/infrastructure/IQCloudApi\";\nimport { IPackJobs } from \"../../../../../domain/useCase/IPackJobs\";\nimport { IJobUtils } from \"../../../../../domain/useCase/IJobUtils\";\nimport { IQJsonAdditionals, UsageType } from \"@stechquick/algae/lib/qCloudTemp/quickCloud\";\nimport { IPublish } from \"../../../../../domain/useCase/IPublish\";\nimport { PlateauHelper } from \"@stechquick/algae/lib/helpers/plateau/plateauHelper\";\nimport { IViewModelManager } from \"../../../../../domain/viewModel/IViewModelManager\";\nimport CustomSelect from \"../../../components/customSelect.vue\"\nimport { IOrganizationCloud } from \"@stechquick/algae/lib/clean/domain/useCases/ICloudProvider\";\n\ninterface ITableData {\n    id: string;\n    parentId?: string;\n    collapsed?: boolean;\n    anyChildChecked?: boolean;\n    allChildChecked?: boolean;\n    checked?: boolean;\n    name: string;\n    type: IModel[\"modelType\"] | IModule[\"objectType\"];\n    version?: string;\n    children?: Array<ITableData>;\n    usageType?: UsageType;\n}\n\ninterface IDeployScreenAdditionalProps {\n    screenType: \"Export\" | \"Deploy\";\n    platformSelection: IPlatformSelection;\n}\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'publishDialog',\n  props: {\n    screenType: null,\n    platformSelection: null\n  },\n  emits: [\"close\"],\n  setup(__props: any, { emit }) {\n\nconst props = __props as {\n    screenType: \"Export\" | \"Deploy\";\n    platformSelection: IPlatformSelection;\n}\n\n\nconst viewModel = container.resolve<IViewModel>(IViewModel);\nconst viewModelManager = container.resolve<IViewModelManager>(IViewModelManager);\nconst dialog = container.resolve<IDialog>(IDialog);\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\nconst deployJobsUseCase = container.resolve<IDeployJobs>(IDeployJobs);\nconst qcloudApi = container.resolve<IQCloudApi>(IQCloudApi);\nconst packJobsUseCase = container.resolve<IPackJobs>(IPackJobs);\nconst publish = container.resolve<IPublish>(IPublish);\nconst jobUtils = container.resolve<IJobUtils>(IJobUtils);\n\nconst items = ref<Array<ITableData>>([]);\nconst validations = ref<boolean>(true);\nconst selectedTarget = ref<keyof IOrganizationCloud>();\nconst disabledIndex = ref<number>(99);\n\nhandleItems();\n\nconst totalModuleCount = computed(() => items.value.filter((item) => item.type == \"module\").length);\nconst checkedModuleCount = computed(() => items.value.filter((item) => item.type == \"module\" && item.allChildChecked).length);\nconst saveButtonDisable = computed(() => (props.screenType == \"Deploy\" && !selectedTarget.value) || !validations.value || !items.value.some((item) => item.checked || item.anyChildChecked));\nconst startScreen = computed(() => (viewModel.studio.items as Array<IModel>).find(item => item.isRootPage == true));\nconst publishTargets = computed(() => {\n    const targets = viewModel.user?.selectedOrganization?.actions?.publish?.targets;\n    if(!targets)\n        return;\n    const sortedTargets = Object.entries(targets).map((v,i) => {\n            return { key : v[0], val: v[1] }\n        }).sort((e, f) => ( e.val===f.val) ? 0 : e.val? -1 : 1);\n\n    let idx = sortedTargets.findIndex(e => !e.val);\n    if(idx != -1)\n        disabledIndex.value = idx;\n    return sortedTargets.map(e => cloudTargetMap(e.key));\n})\n\nwatch(items.value, (_new, _old) => {\n    validations.value = validate();\n});\n\n\nfunction validate() {\n    let result = true;\n    const modules = items.value.filter(e => e.type == \"module\" && e.anyChildChecked);\n    const appLayerItems = items.value.filter(e => e.type == \"qjson\" && e.checked);\n\n    if (props.screenType == \"Deploy\") {\n        //FIXME: externalModules will be get from common places \n        if (modules.length > 0)\n            result = modules\n                .filter(e => e.name != \"processmanager\").map(e => e.children).filter(e => !e?.find(f => f.type == \"entityDesigner\" && f.checked)).length <= 0\n\n        let isApplicationWillDeploy = appLayerItems.length > 0;\n        if (isApplicationWillDeploy) {\n            result = appLayerItems\n                .map(e => viewModel.studio.items.find(item => item.ID == e.id) as IModel)\n                .findIndex(e => ((e.additionals as IQJsonAdditionals).isRootPage)) != -1;\n        }\n    }\n\n    return result;\n}\n\nfunction handleItems() {\n    items.value = viewModel.studio.items\n        .filter((item) => item.objectType == \"module\" && item.children.length > 0)\n        .map(\n            (item) =>\n            ({\n                id: item.ID,\n                collapsed: true,\n                name: item.name,\n                type: \"module\",\n                anyChildChecked: false,\n                allChildChecked: false,\n                children: (item as IModule).children\n                    .filter((child) => child.objectType == \"model\")\n                    .map(\n                        (child) =>\n                        ({\n                            id: child.ID,\n                            parentId: item.ID,\n                            checked: false,\n                            name: child.name,\n                            type: (child as IModel).modelType,\n                            version: \"latest\",\n                        } as ITableData)\n                    ),\n            } as ITableData)\n        );\n    viewModel.studio.items\n        .filter((item) => item.objectType == \"model\" && item.usageType != \"appSettings\")\n        .forEach((item) => {\n            items.value.push({\n                id: item.ID,\n                checked: false,\n                name: item.name,\n                type: (item as IModel).modelType,\n                version: \"latest\",\n            });\n        });\n    const uiSettingsID = CryptoHelper.CreateGuid();\n    const appSettings = viewModel.studio.items.filter((item) => item.objectType == \"model\" && item.usageType == \"appSettings\") as Array<IModel>;\n    const uiSettings: ITableData = {\n        id: uiSettingsID,\n        collapsed: true,\n        name: \"UI Settings\",\n        type: \"module\",\n        anyChildChecked: false,\n        allChildChecked: false,\n        children: appSettings.map((setting) => ({\n            id: setting.ID,\n            parentId: uiSettingsID,\n            name: setting.name,\n            type: (setting as IModel).modelType,\n            checked: false,\n            usageType: setting?.usageType,\n        })) as Array<ITableData>,\n    };\n    items.value.unshift(uiSettings);\n}\n\nfunction handleModuleCountCheckboxEvent(value: boolean) {\n    items.value.forEach((item) => {\n        item.checked = value;\n        if (item.allChildChecked != undefined) item.allChildChecked = value;\n        if (item.anyChildChecked != undefined) item.anyChildChecked = value;\n        if (item.children) item.children.forEach((child) => (child.checked = value));\n    });\n}\n\nfunction handleCollapse(item: ITableData) {\n    item.collapsed = !item.collapsed;\n}\n\nfunction handleItemCheckEvent(item: ITableData) {\n    if (item.type != \"module\") {\n        item.checked = !item.checked;\n        if (item.parentId) {\n            const parent = items.value.find((i) => i.id == item.parentId)!;\n            handleParentCheckedStatus(parent);\n        }\n    } else {\n        if(item.children && item.children.length > 0) {\n            if (item.anyChildChecked) {\n                item.children?.forEach((child) => (child.checked = false));\n                item.checked = false;\n            } else {\n                item.children?.forEach((child) => (child.checked = true));\n                item.checked = true;\n            }\n            handleParentCheckedStatus(item);\n        }\n        else {\n            item.checked = !item.checked;\n            item.allChildChecked = false;\n        }\n        \n    }\n}\n\nfunction handleParentCheckedStatus(item: ITableData) {\n    item.allChildChecked = !item.children?.some((child) => !child.checked);\n    item.anyChildChecked = item.children?.some((child) => child.checked);\n    console.log(\"item => \", item);\n}\n\nfunction versionDialog(item: ITableData) {\n    const clickedNode = { id: item.id, state: { checked: item.checked }, text: item.name, type: item.type, version: item.version };\n    dialog.showDialog(\n        defineAsyncComponent(() => import(\"../../application/modelVersionDialog.vue\")),\n        { closable: true, title: \"Change Version\", width: \"900px\", maxHeight: \"500px\", overflow: \"auto\" },\n        { clickedNode }\n    );\n}\n\nfunction close() {\n    emit(\"close\");\n}\n\nasync function save() {\n    executor.execute(\n        async () => {\n            const initAsGroup = async () => {\n                const groupID = CryptoHelper.CreateGuid();\n                await initHistory(groupID);\n                await packJob(groupID);\n                return groupID;\n            }\n\n            switch (props.screenType) {\n                case \"Export\":\n                    const groupID = await initAsGroup();\n                    await createExportJob(groupID);\n                    break;\n                case \"Deploy\":\n                    switch (selectedTarget.value) {\n                        case \"plateauGCP\":\n                            const groupID = await initAsGroup();\n                            await createDeployJob(groupID);\n                            break;\n                        case \"azure\":\n                            await createAzureDeploy();\n                            break;\n                    }\n            }\n            emit(\"close\");\n        },\n        { loading: true });\n}\n\nasync function createAzureDeploy() {\n    const deployItems: Array<IExportItem> = [];\n    const itemIdObj: Record<string, { item: IModel, path: string }> = {};\n\n    viewModelManager.flatMapItems(viewModel.studio.items, (item, path) => {\n        if (item.objectType != \"model\") { return; }\n        itemIdObj[item.ID] = { item, path };\n        return item;\n    });\n\n    const traverseSelectedItems = (items?: Array<ITableData>) => {\n        if (!items || items.length == 0) { return; }\n        items.forEach(item => {\n            if (item.type == \"module\") {\n                traverseSelectedItems(item.children);\n                return;\n            }\n\n            const itemMap = itemIdObj[item.id];\n\n            const deployItem: IExportItem = {\n                id: item.id,\n                name: jobUtils.getFileFullname(itemMap.item),\n                path: itemMap.path,\n                type: jobUtils.getItemType(itemMap.item),\n                ver: item.version || \"latest\",\n                isRootPage: itemMap.item.isRootPage,\n                ownerType: 'application',\n                ownerName: viewModel.studio.appName,\n                size: itemMap.item.size,\n            };\n            deployItems.push(deployItem)\n        });\n    };\n\n    traverseSelectedItems(items.value);\n\n    await publish.createUI(deployItems, props.platformSelection);\n}\n\nasync function initHistory(groupID: string) {\n    return qcloudApi.initPublishHistory({\n        appID: viewModel.studio.appId,\n        ID: groupID,\n        isMultiStep: true,\n        type: props.screenType == \"Deploy\" ? \"publish\" : \"download\"\n    });\n}\n\nfunction isUsingPlateau() {\n    const applications = viewModel.user!.selectedOrganization!.applications;\n\n    if (!applications)\n        return false;\n\n    if (!applications.entity && !applications.process && !applications.bpmn)\n        return false;\n\n    return true;\n}\n\nfunction getItemPath(asset: ITableData, ownerName: string) {\n    if (isUsingPlateau())\n        return \"\";\n    if (asset.type == \"qjson\")\n        return ownerName;\n    return \"\";\n}\n\nfunction isUISettings(asset: ITableData) {\n    return asset.name == \"UI Settings\";\n}\n\n\nasync function packJob(groupID: string) {\n    let exportItemMap = new Map<string, Array<IExportItem>>();\n\n    items.value.forEach((asset) => {\n        if (asset.checked) {\n            //QUI\n            if (asset.type == 'qjson') {\n                const isThisrootPage = viewModel.studio.items.find(i => i.objectType == \"model\" && i.modelType == \"qjson\" && (i.additionals as IQJsonAdditionals).isRootPage && i.ID == asset.id);\n\n                const obj: IExportItem = {\n                    id: asset.id,\n                    ver: asset.version!,\n                    type: jobUtils.getItemType({ usageType: asset.usageType, type: asset.type } as IExportViewItem),\n                    path: \"\",\n                    name: jobUtils.getFileFullname({ usageType: asset.usageType, type: asset.type, name: asset.name } as IExportViewItem),\n                    ownerType: 'application',\n                    ownerName: viewModel.studio.appName,\n                    isRootPage: isThisrootPage ? true : undefined,\n                };\n\n                let applicationModels = exportItemMap.get(viewModel.studio.appName);\n                if (applicationModels && applicationModels.length > 0) {\n                    applicationModels.push(obj);\n                    exportItemMap.set(viewModel.studio.appName, applicationModels);\n                }\n                else\n                    exportItemMap.set(viewModel.studio.appName, [obj]);\n                return;\n            }\n        }\n        if (asset.anyChildChecked && asset.children) {\n            let checkedItems = Array<IExportItem>();\n            asset.children!.forEach(child => {\n                if (!child.checked || child.type == \"module\")\n                    return;\n                const exportItem: IExportItem = {\n                    id: child.id,\n                    ver: child.version!,\n                    type: jobUtils.getItemType({ usageType: child.usageType, type: child.type, name: child.name } as IExportViewItem),\n                    path: !isUISettings(asset) ? getItemPath(child, asset.name) : \"\",\n                    name: jobUtils.getFileFullname({ usageType: child.usageType, type: child.type, name: child.name } as IExportViewItem),\n                    ownerType: isUISettings(asset) || !isUsingPlateau() ? \"application\" : (asset.type === 'module' ? 'module' : 'application'),\n                    ownerName: isUISettings(asset) || !isUsingPlateau() ? viewModel.studio.appName : asset.name\n                };\n                if (exportItem.type == \"entityDesigner\")\n                    exportItem.entityGenerationDomain = viewModel.user!.selectedOrganization!.actions?.entityGenerationDomain;\n                checkedItems.push(exportItem);\n            });\n\n            if (checkedItems.length > 0) {\n                if (!isUISettings(asset) && isUsingPlateau())\n                    exportItemMap.set(asset.name, checkedItems);\n                else {\n                    let applicationModels = exportItemMap.get(viewModel.studio.appName);\n                    if (applicationModels && applicationModels.length > 0) {\n                        applicationModels.forEach(e => checkedItems.push(e));\n                    }\n                    exportItemMap.set(viewModel.studio.appName, checkedItems);\n                }\n            }\n\n        }\n    })\n\n    let jobs = Array<ICreateExportJobParam>();\n    exportItemMap.forEach((v, k) => {\n        jobs.push({\n            appID: viewModel.studio.appId,\n            exportType: \"qui\",\n            selectionData: v,\n            layer: 0,\n            groupID: groupID\n        })\n    })\n\n    await packJobsUseCase.createPackJobs(jobs);\n}\n\nasync function createExportJob(groupID: string) {\n    await executor.executeUseCase<ICreateExportJob>(ICreateExportJob, {\n        appID: viewModel.studio.appId,\n        exportType: \"qui\",\n        selectionData: [],\n        layer: 1,\n        groupID: groupID\n    });\n}\n\nasync function createDeployJob(groupID: string) {\n    //1-(n) L1- deployJob(build)\n    let packages = await qcloudApi.getExportJobsByGroupId({ groupID })\n        .then(jobs => jobs.jobs.filter(e => !isExternalModule(e.jobData as IExportJobData)).map(e => {\n            const jobData = e.jobData as IExportJobData;\n            return {\n                ownerName: jobData.items[0].ownerName,\n                jobID: e.jobID,\n                type: jobData.items[0].ownerType,\n                mainDir: getDeployableArchiveRoot(jobData)\n            }\n        }));\n\n    if (!packages || packages.length <= 0)\n        return;\n\n    let buildJobs = Array<ICreateDeployJobParam>();\n    packages.forEach(pack => {\n        buildJobs.push({\n            appID: viewModel.studio.appId,\n            type: \"build\",\n            package: {\n                type: pack.type as DeployType,\n                name: pack.ownerName!,\n                mainDir: pack.mainDir!,\n                zip: `${pack.jobID}.zip`,\n            },\n            layer: 1,\n            groupID: groupID\n        })\n    })\n\n    await deployJobsUseCase.createBuildJobs(buildJobs);\n\n    //2-(1) L2- deployJob(deployment)\n    let jobParam: ICreateDeployJobParam = {\n        appID: viewModel.studio.appId,\n        type: \"deployment\",\n        deployConfig: {\n            process: {\n                configModelIDs: getProcessConfigList(),\n                enabled: items.value.filter(asset => asset.checked && asset.children && asset.children.filter(child => child.checked && child.type == \"bpmn\")).length > 0\n            }\n        },\n        layer: 2,\n        groupID: groupID\n    }\n\n    await deployJobsUseCase.startDeploymentJob(jobParam);\n}\n\nfunction isExternalModule(jobData: IExportJobData){\n    //FIXME: external modules may be dynamic\n    return jobData.items[0].ownerType == \"module\" && jobData.items[0].ownerName == \"processmanager\";\n}\n\nfunction getProcessConfigList() {\n    let processConfigList = Array<IProcessConfigModelItem>();\n    items.value.forEach((asset) => {\n        if (asset.checked && asset.children) {\n            const usingService = asset.children.find(c => c.type == \"entityDesigner\");\n            if (!usingService)\n                return;\n\n            const serviceName = PlateauHelper.getServiceNameFromModel(usingService.name);\n            asset.children.forEach(child => {\n                if (child.checked && child.type == \"process\") {\n                    processConfigList.push({\n                        moduleName: serviceName,\n                        modelId: child.id,\n                        modelName: child.name\n                    })\n                }\n            })\n        }\n    })\n    return processConfigList;\n}\n\nfunction getDeployableArchiveRoot(jobData: IExportJobData) {\n    //FIXME: change external modules\n    if(jobData.items[0].ownerName == \"processmanager\")\n        return \"\";\n    if (jobData.items[0].ownerType == \"module\") {\n        let edModel = jobData.items.find(e => e.type == \"entityDesigner\");\n        if (!edModel)\n            throw new Error(\"!!! this module cannot deploy. Because its have not a service\");\n        return PlateauHelper.getServiceNameFromModel(edModel.name);\n    }\n    return PlateauHelper.getQuiPackageNameFromAppName(jobData.app.name);\n}\n\nfunction cloudTargetMap(name: string, pureVal : boolean = false) {\n    const map: Record<keyof IOrganizationCloud, string> = { azure: \"Azure\", plateauGCP: \"Plateau Google Cloud Platform\"};\n    if(pureVal) {\n        return Object.keys(map).find(e => {\n            if(map[e as keyof IOrganizationCloud] === name){\n                return true;\n            }\n        })\n    }else {\n        let key = Object.keys(map).includes(name);\n        if(!key)\n            return;\n        return map[name as keyof IOrganizationCloud];\n    }\n}\n\nfunction onTargetSelect(value: string) {\n    selectedTarget.value = cloudTargetMap(value, true) as keyof IOrganizationCloud;\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (props.screenType == 'Deploy')\n      ? (_openBlock(), _createElementBlock(\"span\", _hoisted_2, \" Environment \"))\n      : _createCommentVNode(\"v-if\", true),\n    _createVNode(CustomSelect, {\n      options: _unref(publishTargets),\n      onInput: onTargetSelect,\n      disabledOptionsIndex: disabledIndex.value,\n      selectedClass: \"selected-environment\",\n      placeholder: \"Select the publish environment of your application\",\n      class: \"select-environment\"\n    }, null, 8 /* PROPS */, [\"options\", \"disabledOptionsIndex\"]),\n    _createVNode(CheckboxComp, {\n      class: _normalizeClass(['modules-selected-checkbox', props.screenType == 'Deploy' ? 'deploy' : '']),\n      minus: false,\n      check: false,\n      onClick: _cache[0] || (_cache[0] = ($event: any) => (handleModuleCountCheckboxEvent(_unref(checkedModuleCount) != _unref(totalModuleCount) && _unref(checkedModuleCount) == 0)))\n    }, null, 8 /* PROPS */, [\"class\"]),\n    _createElementVNode(\"div\", {\n      class: _normalizeClass(['modules-selected-text', props.screenType == 'Deploy' ? 'deploy' : ''])\n    }, [\n      _createElementVNode(\"span\", _hoisted_3, _toDisplayString(_unref(checkedModuleCount)), 1 /* TEXT */),\n      _hoisted_4,\n      _createElementVNode(\"span\", _hoisted_5, _toDisplayString(_unref(totalModuleCount)), 1 /* TEXT */),\n      _hoisted_6\n    ], 2 /* CLASS */),\n    _createElementVNode(\"div\", {\n      class: _normalizeClass(['modules-datatable', props.screenType == 'Deploy' ? 'deploy' : ''])\n    }, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(items.value, (item) => {\n        return (_openBlock(), _createElementBlock(\"div\", null, [\n          (item?.type == 'module')\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [\n                _createElementVNode(\"div\", _hoisted_8, [\n                  _createElementVNode(\"i\", {\n                    class: _normalizeClass('mdi mdi-menu' + (item.collapsed ? '-right' : '-down') + ' chevron'),\n                    onClick: ($event: any) => (handleCollapse(item))\n                  }, null, 10 /* CLASS, PROPS */, _hoisted_9),\n                  _createVNode(CheckboxComp, {\n                    class: \"module-checkbox\",\n                    check: item.allChildChecked || item.checked,\n                    minus: item.anyChildChecked && !item.allChildChecked,\n                    onClick: ($event: any) => (handleItemCheckEvent(item))\n                  }, null, 8 /* PROPS */, [\"check\", \"minus\", \"onClick\"]),\n                  _createElementVNode(\"span\", _hoisted_10, _toDisplayString(item.name), 1 /* TEXT */)\n                ]),\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item?.children, (child) => {\n                  return _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_11, [\n                    _createVNode(CheckboxComp, {\n                      class: \"model-checkbox\",\n                      check: child.checked,\n                      onClick: ($event: any) => (handleItemCheckEvent(child))\n                    }, null, 8 /* PROPS */, [\"check\", \"onClick\"]),\n                    (child.type == 'qjson')\n                      ? (_openBlock(), _createElementBlock(\"i\", _hoisted_12))\n                      : _createCommentVNode(\"v-if\", true),\n                    (child.type == 'yaml')\n                      ? (_openBlock(), _createElementBlock(\"i\", _hoisted_13))\n                      : _createCommentVNode(\"v-if\", true),\n                    (child.type == 'js' || child?.type == 'css')\n                      ? (_openBlock(), _createElementBlock(\"i\", _hoisted_14))\n                      : _createCommentVNode(\"v-if\", true),\n                    (child.type == 'process')\n                      ? (_openBlock(), _createElementBlock(\"i\", _hoisted_15))\n                      : _createCommentVNode(\"v-if\", true),\n                    (child.type == 'bpmn')\n                      ? (_openBlock(), _createElementBlock(\"i\", _hoisted_16))\n                      : _createCommentVNode(\"v-if\", true),\n                    (child.type == 'entityDesigner')\n                      ? (_openBlock(), _createElementBlock(\"i\", _hoisted_17))\n                      : _createCommentVNode(\"v-if\", true),\n                    (child.type == 'flow')\n                      ? (_openBlock(), _createElementBlock(\"i\", _hoisted_18))\n                      : _createCommentVNode(\"v-if\", true),\n                    _createElementVNode(\"span\", _hoisted_19, _toDisplayString(child.name), 1 /* TEXT */),\n                    (!child.usageType)\n                      ? (_openBlock(), _createElementBlock(\"div\", {\n                          key: 7,\n                          class: \"version-text\",\n                          onClick: ($event: any) => (versionDialog(item))\n                        }, [\n                          _createTextVNode(_toDisplayString(child.version) + \" \", 1 /* TEXT */),\n                          (!child.usageType)\n                            ? (_openBlock(), _createElementBlock(\"i\", _hoisted_21))\n                            : _createCommentVNode(\"v-if\", true)\n                        ], 8 /* PROPS */, _hoisted_20))\n                      : _createCommentVNode(\"v-if\", true)\n                  ], 512 /* NEED_PATCH */)), [\n                    [_vShow, !item.collapsed]\n                  ])\n                }), 256 /* UNKEYED_FRAGMENT */))\n              ]))\n            : (_openBlock(), _createElementBlock(\"div\", _hoisted_22, [\n                _createElementVNode(\"div\", _hoisted_23, [\n                  _createVNode(CheckboxComp, {\n                    class: \"module-checkbox\",\n                    check: item?.checked,\n                    onClick: ($event: any) => (handleItemCheckEvent(item))\n                  }, null, 8 /* PROPS */, [\"check\", \"onClick\"]),\n                  (item?.type == 'qjson')\n                    ? (_openBlock(), _createElementBlock(\"i\", _hoisted_24))\n                    : _createCommentVNode(\"v-if\", true),\n                  (item?.type == 'yaml')\n                    ? (_openBlock(), _createElementBlock(\"i\", _hoisted_25))\n                    : _createCommentVNode(\"v-if\", true),\n                  (item?.type == 'js' || item?.type == 'css')\n                    ? (_openBlock(), _createElementBlock(\"i\", _hoisted_26))\n                    : _createCommentVNode(\"v-if\", true),\n                  (item?.type == 'process')\n                    ? (_openBlock(), _createElementBlock(\"i\", _hoisted_27))\n                    : _createCommentVNode(\"v-if\", true),\n                  (item?.type == 'bpmn')\n                    ? (_openBlock(), _createElementBlock(\"i\", _hoisted_28))\n                    : _createCommentVNode(\"v-if\", true),\n                  (item?.type == 'entityDesigner')\n                    ? (_openBlock(), _createElementBlock(\"i\", _hoisted_29))\n                    : _createCommentVNode(\"v-if\", true),\n                  (item?.type == 'flow')\n                    ? (_openBlock(), _createElementBlock(\"i\", _hoisted_30))\n                    : _createCommentVNode(\"v-if\", true),\n                  _createElementVNode(\"span\", _hoisted_31, [\n                    _createTextVNode(_toDisplayString(item?.name) + \" \", 1 /* TEXT */),\n                    (_unref(startScreen)?.ID == item.id)\n                      ? (_openBlock(), _createElementBlock(\"span\", _hoisted_32, _hoisted_35))\n                      : _createCommentVNode(\"v-if\", true)\n                  ]),\n                  (!item.usageType)\n                    ? (_openBlock(), _createElementBlock(\"span\", {\n                        key: 7,\n                        class: \"version-text\",\n                        onClick: ($event: any) => (versionDialog(item))\n                      }, [\n                        _createTextVNode(_toDisplayString(item?.version) + \" \", 1 /* TEXT */),\n                        (!item.usageType)\n                          ? (_openBlock(), _createElementBlock(\"i\", _hoisted_37))\n                          : _createCommentVNode(\"v-if\", true)\n                      ], 8 /* PROPS */, _hoisted_36))\n                    : _createCommentVNode(\"v-if\", true)\n                ])\n              ]))\n        ]))\n      }), 256 /* UNKEYED_FRAGMENT */))\n    ], 2 /* CLASS */),\n    _createElementVNode(\"div\", {\n      class: _normalizeClass([['footer', props.screenType == 'Deploy' ? 'deploy' : ''], \"footer\"])\n    }, [\n      _createElementVNode(\"div\", {\n        class: _normalizeClass(['cancel-button', props.screenType == 'Deploy' ? 'deploy' : '']),\n        onClick: close\n      }, \"Cancel\", 2 /* CLASS */),\n      (props.screenType == 'Export')\n        ? (_openBlock(), _createElementBlock(\"div\", {\n            key: 0,\n            class: _normalizeClass((_unref(saveButtonDisable) ? ' button-disable' : '')),\n            onClick: save\n          }, _hoisted_39, 2 /* CLASS */))\n        : _createCommentVNode(\"v-if\", true),\n      (props.screenType == 'Deploy')\n        ? (_openBlock(), _createElementBlock(\"div\", {\n            key: 1,\n            class: _normalizeClass([(_unref(saveButtonDisable) ? ' button-disable' : '')]),\n            onClick: save\n          }, _hoisted_42, 2 /* CLASS */))\n        : _createCommentVNode(\"v-if\", true)\n    ], 2 /* CLASS */)\n  ]))\n}\n}\n\n})","\n      import API from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./publishDialog.vue?vue&type=style&index=0&id=0f6bedce&scoped=true&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./publishDialog.vue?vue&type=style&index=0&id=0f6bedce&scoped=true&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./publishDialog.vue?vue&type=style&index=1&id=0f6bedce&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./publishDialog.vue?vue&type=style&index=1&id=0f6bedce&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","import script from \"./publishDialog.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./publishDialog.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./publishDialog.vue?vue&type=style&index=0&id=0f6bedce&scoped=true&lang=css\"\nimport \"./publishDialog.vue?vue&type=style&index=1&id=0f6bedce&lang=css\"\n\nimport exportComponent from \"/home/runner/work/QCloud-Shell/QCloud-Shell/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0f6bedce\"]])\n\nexport default __exports__"],"names":["___CSS_LOADER_EXPORT___","push","module","id","getPlateauEnvironmentName","tenant","appName","envPrefix","cloud","plateauGCP","environmentPrefix","Error","endsWith","toLowerCase","PlateauHelper","purify","str","replace","getQuiPackageNameFromAppName","getApplicationUINameFromQuiPkg","quiPackageName","getApplicationHostNamePrefix","getServiceNameFromModel","modelName","selected","props","default","open","option","emit","value","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","_withScopeId","n","_hoisted_1","class","_hoisted_2","key","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_35","_","style","_hoisted_36","_hoisted_37","_hoisted_39","_hoisted_42","__name","screenType","platformSelection","emits","setup","__props","viewModel","IViewModel","viewModelManager","IViewModelManager","dialog","IDialog","executor","IUseCaseExecutor","deployJobsUseCase","IDeployJobs","qcloudApi","IQCloudApi","packJobsUseCase","IPackJobs","publish","IPublish","jobUtils","IJobUtils","items","validations","selectedTarget","disabledIndex","studio","filter","item","objectType","children","length","map","ID","collapsed","name","type","anyChildChecked","allChildChecked","child","parentId","checked","modelType","version","usageType","forEach","uiSettingsID","appSettings","uiSettings","setting","unshift","handleItems","totalModuleCount","checkedModuleCount","saveButtonDisable","some","startScreen","find","isRootPage","publishTargets","targets","user","selectedOrganization","actions","sortedTargets","Object","entries","v","i","val","sort","e","f","idx","findIndex","cloudTargetMap","handleItemCheckEvent","handleParentCheckedStatus","console","log","versionDialog","clickedNode","state","text","showDialog","closable","title","width","maxHeight","overflow","close","async","save","execute","initAsGroup","groupID","initPublishHistory","appID","appId","isMultiStep","initHistory","exportItemMap","Map","asset","isThisrootPage","additionals","obj","ver","getItemType","path","getFileFullname","ownerType","ownerName","undefined","applicationModels","get","set","checkedItems","Array","exportItem","isUISettings","getItemPath","isUsingPlateau","entityGenerationDomain","jobs","k","exportType","selectionData","layer","createPackJobs","packJob","executeUseCase","ICreateExportJob","createExportJob","packages","getExportJobsByGroupId","then","jobData","jobID","mainDir","getDeployableArchiveRoot","buildJobs","pack","package","zip","createBuildJobs","jobParam","deployConfig","process","configModelIDs","getProcessConfigList","enabled","startDeploymentJob","createDeployJob","deployItems","itemIdObj","flatMapItems","traverseSelectedItems","itemMap","deployItem","size","createUI","createAzureDeploy","loading","applications","entity","bpmn","processConfigList","usingService","c","serviceName","moduleName","modelId","edModel","app","pureVal","azure","keys","includes","onTargetSelect","_new","_old","result","modules","appLayerItems","validate","_ctx","_cache","onInput","disabledOptionsIndex","selectedClass","placeholder","minus","check","onClick","$event"],"sourceRoot":""}