"use strict";(self.webpackChunkqcloud_shell=self.webpackChunkqcloud_shell||[]).push([[432],{6845:(n,e,t)=>{t.d(e,{Z:()=>r});var a=t(1864),o=t.n(a),i=t(352),s=t.n(i)()(o());s.push([n.id,"\n.content-area[data-v-7a86d4bf] {\n  overflow-y: scroll;\n  height: 100%;\n}\n.tables-area[data-v-7a86d4bf] {\n  width: 70%;\n  margin-left: 15%;\n  margin-top: 10px;\n}\n.section-area[data-v-7a86d4bf] {\n  margin-bottom: 25px;\n}\n.header-text[data-v-7a86d4bf] {\n  font-weight: bold;\n  margin-bottom: 5px;\n}\n\n/* .btn-new-item {\n  float: right;\n} */\n","",{version:3,sources:["webpack://./src/presentation/vue3/pages/superuser.vue"],names:[],mappings:";AAkOA;EACE,kBAAkB;EAClB,YAAY;AACd;AAEA;EACE,UAAU;EACV,gBAAgB;EAChB,gBAAgB;AAClB;AAEA;EACE,mBAAmB;AACrB;AAEA;EACE,iBAAiB;EACjB,kBAAkB;AACpB;;AAEA;;GAEG",sourcesContent:['<script setup lang="ts">\nimport { defineAsyncComponent, onMounted, ref } from "vue";\nimport { AuthenticationType, IDomain, ITenantUser } from \'@stechquick/algae/lib/qCloudTemp/quickCloud\';\nimport { container } from \'../../../domain/core/diContainer\';\nimport { routeDefinition } from \'../../../domain/presentation/IRouter\';\nimport { ISystemUserManagement } from \'../../../domain/useCase/ISystemUserManagement\';\nimport { IUseCaseExecutor } from \'../../../domain/useCase/IUseCaseExecutor\';\nimport { ILocalization } from "../../../domain/infrastructure/ILocalization";\nimport { IDialog } from "../../../domain/presentation/IDialog";\n\ninterface IInitOptions {\n  domains?: boolean;\n  tenants?: boolean;\n}\n\ninterface ITenantDomainRelation {\n  domainID: string;\n  tenantID: string;\n  domainName: string;\n  tenantName: string;\n  loginType: AuthenticationType;\n}\n\nrouteDefinition({ noAuth: true });\n\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\nconst systemUserManagement = container.resolve<ISystemUserManagement>(ISystemUserManagement);\nconst localization = container.resolve<ILocalization>(ILocalization);\nconst dialog = container.resolve<IDialog>(IDialog);\n\nconst domains = ref<Array<IDomain>>([]);\nconst tenants = ref<Array<ITenantUser>>([]);\nconst relations = ref<Array<ITenantDomainRelation>>([]);\n\nfunction fillRelationTableData(domains: Array<IDomain>, tenants: Array<ITenantUser>) {\n  const items: Array<ITenantDomainRelation> = [];\n\n  tenants.forEach(tenant => {\n    const relations = tenant.tenantRelations;\n    if (!relations) { return; }\n\n    relations.forEach(relation => {\n      const domain = domains.find(i => i.ID == relation.tenantID)!;\n      const item: ITenantDomainRelation = {\n        domainID: relation.tenantID,\n        domainName: domain.name,\n        tenantID: tenant.ID,\n        tenantName: tenant.name,\n        loginType: relation.loginType,\n      }\n      items.push(item);\n    });\n  });\n\n  relations.value = items;\n}\n\nasync function getData(options: IInitOptions) {\n  await executor.execute(async () => {\n    const domainsProm = options.domains ? systemUserManagement.listDomains() : (async () => domains.value)();\n    const tenantsProm = options.tenants ? systemUserManagement.listTenants() : (async () => tenants.value)();\n\n    [domains.value, tenants.value] = await Promise.all([domainsProm, tenantsProm]);\n\n    if (options.tenants) {\n      fillRelationTableData(domains.value, tenants.value);\n    }\n  }, { loading: true });\n}\n\nonMounted(async () => {\n  await getData({ domains: true, tenants: true });\n});\n\nconst dtBasicOptions = {\n  filterable: false, perPage: 10, perPageValues: [],\n  sortIcon: { base: \'mdi\', is: \'mdi mdi-unfold-less-horizontal\', up: \'mdi mdi-arrow-up\', down: \'mdi mdi-arrow-down\' },\n};\n\nconst domainsDtOptions = {\n  ...dtBasicOptions,\n  headings: {\n    ID: "Domain ID",\n    name: "Domain Name",\n    dbName: "Database Name",\n    createdBy: localization.get(\'applicationListcreatedByHeader\'),\n    createDate: localization.get(\'applicationListcreatedDateHeader\'),\n  }\n};\n\nconst tenantsDtOptions = {\n  ...dtBasicOptions,\n  headings: {\n    ID: "Tenant ID",\n    name: " Tenant Name",\n    createdBy: localization.get(\'applicationListcreatedByHeader\'),\n    createDate: localization.get(\'applicationListcreatedDateHeader\'),\n  }\n};\n\nconst relationsDtOptions = {\n  ...dtBasicOptions,\n  headings: {\n    domainID: "Domain ID",\n    domainName: "Domain Name",\n    tenantID: "Tenant ID",\n    tenantName: "Tenant Name",\n    loginType: "Login Type",\n  }\n};\n\nlet dtOptions: any = { month: \'2-digit\', day: \'2-digit\', year: \'numeric\', hour: \'numeric\', minute: \'numeric\', second: \'numeric\' };\nconst domainsDatatableColumns = ref([\'ID\', \'name\', \'dbName\', \'createdBy\', \'createDate\', "actions"]);\nconst tenantsDatatableColumns = ref([\'ID\', \'name\', \'createdBy\', \'createDate\', "actions"]);\nconst relationsDatatableColumns = ref([\'domainID\', \'domainName\', \'tenantID\', \'tenantName\', "loginType", "actions"]);\nconst domainsDataTable = ref(domainsDtOptions);\nconst tenantsDataTable = ref(tenantsDtOptions);\nconst relationsDataTable = ref(relationsDtOptions);\n\nasync function createNewDomian() {\n  const closeCb = async (reason: "close" | "outclick" | "component") => {\n    if (reason != "component") { return; }\n    await getData({ domains: true });\n  };\n\n  dialog.showDialog(defineAsyncComponent(() => import(`../components/dialogs/superuser/createDomain.vue`)), { closable: true, title: "Create Domain", closeCb }, {});\n}\n\nasync function createNewTenant() {\n  const closeCb = async (reason: "close" | "outclick" | "component") => {\n    if (reason != "component") { return; }\n    await getData({ tenants: true });\n  };\n\n  dialog.showDialog(defineAsyncComponent(() => import(`../components/dialogs/superuser/createTenant.vue`)), { closable: true, title: "Create Tenant", closeCb }, {});\n}\n\nasync function createNewRelation() {\n  const closeCb = async (reason: "close" | "outclick" | "component") => {\n    if (reason != "component") { return; }\n    await getData({ domains: true, tenants: true });\n  };\n\n  const domainOptions = domains.value.map(i => { return { text: i.name, value: i.ID } });\n  const tenantOptions = tenants.value.map(i => { return { text: i.name, value: i.ID } });\n\n  dialog.showDialog(defineAsyncComponent(\n    () => import(`../components/dialogs/superuser/attachDomainToTenant.vue`)),\n    { closable: true, title: "Attach Domain To Tenant", closeCb },\n    { domainOptions, tenantOptions },\n  );\n}\n\nasync function deleteDomian(domainID: string) {\n  await executor.execute(async () => {\n\n  }, { loading: true });\n}\n\nasync function deleteTenant(tenantID: string) {\n  await executor.execute(async () => {\n\n  }, { loading: true });\n}\n\nasync function removeRelation(domainID: string, tenantID: string) {\n  await executor.execute(async () => {\n    await systemUserManagement.detachDomainFromTenant(domainID, tenantID);\n    await getData({ tenants: true });\n  }, { loading: true });\n}\n\n<\/script>\n<template>\n  <div class="content-area">\n    <div class="tables-area">\n      <div class="section-area">\n        <div class="header-text">Domains <button @click="createNewDomian()" class="btn-new-item">Create New\n            Domain</button></div>\n        <div>\n          <v-client-table ref=\'table\' :data="domains" :columns="domainsDatatableColumns" :options="domainsDataTable">\n            <template #createdDate="props">\n              <span>{{ new Intl.DateTimeFormat("tr-TR", dtOptions).format(new Date(props.row.createDate)) }}</span>\n            </template>\n            <template #actions="props">\n              <div>\n                <button @click="deleteDomian(props.row.ID)">Delete</button>\n              </div>\n            </template>\n          </v-client-table>\n        </div>\n      </div>\n      <div class="section-area">\n        <div class="header-text">Tenants <button @click="createNewTenant()">Create New Tenant</button></div>\n        <div>\n          <v-client-table ref=\'table\' :data="tenants" :columns="tenantsDatatableColumns" :options="tenantsDataTable">\n            <template #createdDate="props">\n              <span>{{ new Intl.DateTimeFormat("tr-TR", dtOptions).format(new Date(props.row.createDate)) }}</span>\n            </template>\n            <template #actions="props">\n              <div>\n                <button @click="deleteTenant(props.row.ID)">Delete</button>\n              </div>\n            </template>\n          </v-client-table>\n        </div>\n      </div>\n      <div class="section-area">\n        <div class="header-text">Tenant & Domain Relations <button @click="createNewRelation()">Add New\n            Relation</button></div>\n        <div>\n          <v-client-table ref=\'table\' :data="relations" :columns="relationsDatatableColumns"\n            :options="relationsDataTable">\n            <template #actions="props">\n              <div>\n                <button @click="removeRelation(props.row.domainID, props.row.tenantID)">Remove</button>\n              </div>\n            </template>\n          </v-client-table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.content-area {\n  overflow-y: scroll;\n  height: 100%;\n}\n\n.tables-area {\n  width: 70%;\n  margin-left: 15%;\n  margin-top: 10px;\n}\n\n.section-area {\n  margin-bottom: 25px;\n}\n\n.header-text {\n  font-weight: bold;\n  margin-bottom: 5px;\n}\n\n/* .btn-new-item {\n  float: right;\n} */\n</style>'],sourceRoot:""}]);const r=s},4432:(n,e,t)=>{t.r(e),t.d(e,{default:()=>Z});var a=t(2068),o=t(9045),i=t(1407),s=t(3734),r=t(5078),l=t(1145),c=t(664),m=t(6595),d=t(2455);const u={class:"content-area"},p={class:"tables-area"},D={class:"section-area"},v={class:"header-text"},g=(0,a.Uk)("Domains "),b=["onClick"],I={class:"section-area"},y={class:"header-text"},f=(0,a.Uk)("Tenants "),w=["onClick"],T={class:"section-area"},A={class:"header-text"},C=(0,a.Uk)("Tenant & Domain Relations "),h=["onClick"],N=(0,a.aZ)({__name:"superuser",setup(n){(0,r.A)({noAuth:!0});const e=s.nC.resolve(c.y),N=s.nC.resolve(l.H),x=s.nC.resolve(m.w),B=s.nC.resolve(d.u),k=(0,i.iH)([]),_=(0,i.iH)([]),R=(0,i.iH)([]);async function E(n){await e.execute((async()=>{const e=n.domains?N.listDomains():(async()=>k.value)(),t=n.tenants?N.listTenants():(async()=>_.value)();[k.value,_.value]=await Promise.all([e,t]),n.tenants&&function(n,e){const t=[];e.forEach((e=>{const a=e.tenantRelations;a&&a.forEach((a=>{const o=n.find((n=>n.ID==a.tenantID)),i={domainID:a.tenantID,domainName:o.name,tenantID:e.ID,tenantName:e.name,loginType:a.loginType};t.push(i)}))})),R.value=t}(k.value,_.value)}),{loading:!0})}(0,a.bv)((async()=>{await E({domains:!0,tenants:!0})}));const O={filterable:!1,perPage:10,perPageValues:[],sortIcon:{base:"mdi",is:"mdi mdi-unfold-less-horizontal",up:"mdi mdi-arrow-up",down:"mdi mdi-arrow-down"}},U={...O,headings:{ID:"Domain ID",name:"Domain Name",dbName:"Database Name",createdBy:x.get("applicationListcreatedByHeader"),createDate:x.get("applicationListcreatedDateHeader")}},H={...O,headings:{ID:"Tenant ID",name:" Tenant Name",createdBy:x.get("applicationListcreatedByHeader"),createDate:x.get("applicationListcreatedDateHeader")}},L={...O,headings:{domainID:"Domain ID",domainName:"Domain Name",tenantID:"Tenant ID",tenantName:"Tenant Name",loginType:"Login Type"}};let z={month:"2-digit",day:"2-digit",year:"numeric",hour:"numeric",minute:"numeric",second:"numeric"};const P=(0,i.iH)(["ID","name","dbName","createdBy","createDate","actions"]),M=(0,i.iH)(["ID","name","createdBy","createDate","actions"]),S=(0,i.iH)(["domainID","domainName","tenantID","tenantName","loginType","actions"]),Z=(0,i.iH)(U),F=(0,i.iH)(H),q=(0,i.iH)(L);return(n,s)=>{const r=(0,a.up)("v-client-table");return(0,a.wg)(),(0,a.iD)("div",u,[(0,a._)("div",p,[(0,a._)("div",D,[(0,a._)("div",v,[g,(0,a._)("button",{onClick:s[0]||(s[0]=n=>async function(){B.showDialog((0,a.RC)((()=>t.e(749).then(t.bind(t,6512)))),{closable:!0,title:"Create Domain",closeCb:async n=>{"component"==n&&await E({domains:!0})}},{})}()),class:"btn-new-item"},"Create New Domain")]),(0,a._)("div",null,[(0,a.Wm)(r,{ref:"table",data:k.value,columns:P.value,options:Z.value},{createdDate:(0,a.w5)((n=>[(0,a._)("span",null,(0,o.toDisplayString)(new Intl.DateTimeFormat("tr-TR",(0,i.SU)(z)).format(new Date(n.row.createDate))),1)])),actions:(0,a.w5)((n=>[(0,a._)("div",null,[(0,a._)("button",{onClick:t=>async function(n){await e.execute((async()=>{}),{loading:!0})}(n.row.ID)},"Delete",8,b)])])),_:1},8,["data","columns","options"])])]),(0,a._)("div",I,[(0,a._)("div",y,[f,(0,a._)("button",{onClick:s[1]||(s[1]=n=>async function(){B.showDialog((0,a.RC)((()=>t.e(745).then(t.bind(t,745)))),{closable:!0,title:"Create Tenant",closeCb:async n=>{"component"==n&&await E({tenants:!0})}},{})}())},"Create New Tenant")]),(0,a._)("div",null,[(0,a.Wm)(r,{ref:"table",data:_.value,columns:M.value,options:F.value},{createdDate:(0,a.w5)((n=>[(0,a._)("span",null,(0,o.toDisplayString)(new Intl.DateTimeFormat("tr-TR",(0,i.SU)(z)).format(new Date(n.row.createDate))),1)])),actions:(0,a.w5)((n=>[(0,a._)("div",null,[(0,a._)("button",{onClick:t=>async function(n){await e.execute((async()=>{}),{loading:!0})}(n.row.ID)},"Delete",8,w)])])),_:1},8,["data","columns","options"])])]),(0,a._)("div",T,[(0,a._)("div",A,[C,(0,a._)("button",{onClick:s[2]||(s[2]=n=>async function(){const n=k.value.map((n=>({text:n.name,value:n.ID}))),e=_.value.map((n=>({text:n.name,value:n.ID})));B.showDialog((0,a.RC)((()=>t.e(801).then(t.bind(t,4801)))),{closable:!0,title:"Attach Domain To Tenant",closeCb:async n=>{"component"==n&&await E({domains:!0,tenants:!0})}},{domainOptions:n,tenantOptions:e})}())},"Add New Relation")]),(0,a._)("div",null,[(0,a.Wm)(r,{ref:"table",data:R.value,columns:S.value,options:q.value},{actions:(0,a.w5)((n=>[(0,a._)("div",null,[(0,a._)("button",{onClick:t=>async function(n,t){await e.execute((async()=>{await N.detachDomainFromTenant(n,t),await E({tenants:!0})}),{loading:!0})}(n.row.domainID,n.row.tenantID)},"Remove",8,h)])])),_:1},8,["data","columns","options"])])])])])}}});var x=t(5701),B=t.n(x),k=t(8236),_=t.n(k),R=t(6080),E=t.n(R),O=t(6850),U=t.n(O),H=t(7182),L=t.n(H),z=t(9213),P=t.n(z),M=t(6845),S={};S.styleTagTransform=P(),S.setAttributes=U(),S.insert=E().bind(null,"head"),S.domAPI=_(),S.insertStyleElement=L(),B()(M.Z,S),M.Z&&M.Z.locals&&M.Z.locals;const Z=(0,t(1419).Z)(N,[["__scopeId","data-v-7a86d4bf"]])}}]);
//# sourceMappingURL=432.js.map