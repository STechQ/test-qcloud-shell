{"version":3,"file":"6709.js","mappings":"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","sources":["webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/moveItem.vue?0857","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/moveItem.vue?2284","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/moveItem.vue?d26f","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/moveItem.vue?9601","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/moveItem.vue?7390","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/moveItem.vue"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n*[data-v-d4d4d1e2]{\\n  font-family: \\\"Roboto\\\";\\n}\\nul[data-v-d4d4d1e2] {\\n  list-style-type: none;\\n}\\n.move-to-target .mdi[data-v-d4d4d1e2] {\\n  font-size: 24px;\\n  margin-right: 10px;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/presentation/vue3/components/dialogs/moveItem.vue\"],\"names\":[],\"mappings\":\";AA2IA;EACE,qBAAqB;AACvB;AACA;EACE,qBAAqB;AACvB;AAEA;EACE,eAAe;EACf,kBAAkB;AACpB\",\"sourcesContent\":[\"<script setup lang=\\\"ts\\\">\\nimport { container } from '../../../../domain/core/diContainer';\\nimport { IModel, IModule } from '../../../../domain/model/models';\\nimport { IMoveItemProps } from '../../../../domain/presentation/dialogs/IMoveItemProps';\\nimport { ITreeItem, ITreeView } from '../../../../domain/presentation/ITreeView';\\nimport { IMoveUseCase } from '../../../../domain/useCase/IMoveUseCase';\\nimport { IUseCaseExecutor } from '../../../../domain/useCase/IUseCaseExecutor';\\nimport { IViewModel } from '../../../../domain/viewModel/IViewModel';\\n\\ninterface IMoveItemInline extends IMoveItemProps {\\n  id: string;\\n  name: string;\\n  description?: string;\\n  type: \\\"module\\\" | \\\"model\\\";\\n  prefix?: string;\\n  treeItems: Array<ITreeItem>;\\n}\\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\\nconst props = defineProps<IMoveItemInline>();\\nconst viewModel = container.resolve<IViewModel>(IViewModel);\\nconst emit = defineEmits([\\\"close\\\"]);\\n\\nlet actions: { path: Array<String>; icon: string; label: string; indent: number; id: String }[] = []\\nactions.push({ path: [], icon: \\\"mdi mdi-vector-polyline\\\", label: viewModel.studio.appName, indent: 0, id: viewModel.studio.appId })\\nlet items = viewModel.studio.items;\\nconst selectedItem = items.find(item => item.ID == props.id)! as IModel; \\n// const moduleItems = treeItems.filter(item => item.objectType === \\\"module\\\") as IModule[];\\n\\nconsole.log(\\\"ooops\\\", items)\\n\\nfunction move(targetFolderPath: Array<String>, targetFolderId: String) {\\n  if(isMoveable(targetFolderPath, targetFolderId, selectedItem )) {\\n    const moveUseCase = container.resolve<IMoveUseCase>(IMoveUseCase);\\n    const updatedPath: Array<String> = [];\\n    if(targetFolderId != viewModel.studio.appId){\\n      updatedPath.push(...targetFolderPath, targetFolderId);\\n    }\\n          \\n    executor.execute(async () => {\\n      const selectedItemId = props.id;\\n      let selectedItem = items.find(item => item.ID == selectedItemId)\\n      if(selectedItem && selectedItem.objectType == \\\"model\\\") {\\n        if(selectedItem.modelType == \\\"placeholder\\\") {\\n          moveUseCase.moveFolder(selectedItem, updatedPath, selectedItem.ID);\\n        }\\n        else {\\n          moveUseCase.moveModel(selectedItem, updatedPath, selectedItem.ID);\\n        }\\n      }\\n      else return;\\n    }, { loading: true });\\n    emit(\\\"close\\\");\\n\\n  }\\n  \\n}\\nfunction isMoveable(targetFolderPath: Array<String>, targetFolderId: String, selectedItem: IModel) {\\n  if((selectedItem.path && selectedItem.path[selectedItem.path.length - 1] == targetFolderId) ) {\\n    return false;\\n  }\\n  else if(selectedItem.ID == targetFolderId) {\\n    return false;\\n  }\\n  else if(targetFolderPath.includes(selectedItem.ID)) {\\n    return false;\\n  }\\n  else \\n    return true;\\n}\\nfunction getSortedItems(items: Array<IModel | IModule>) {\\n  items.sort((a, b) => {\\n    let aPath = a.path ?? [];\\n    let bPath = b.path ?? [];\\n    if (aPath.length !== bPath.length) {\\n      return aPath.length - bPath.length;\\n    }\\n\\n    return 0;\\n  });\\n\\n  function getChildren(parentId: string) {\\n    return items.filter(item => (item.path ? item.path[item.path.length - 1] === parentId.toString() : false) || (item.parent ? item.parent.ID == parentId : false));\\n  }\\n\\n  function sortItems(parentId: string) {\\n    const result: Array<IModel | IModule> = [];\\n\\n    const directChildren = getChildren(parentId);\\n    for (const child of directChildren) {\\n      result.push(child);\\n      result.push(...sortItems(child.ID));\\n    }\\n\\n    return result;\\n  }\\n\\n  return items.filter(item => item.path ? item.path.length === 0 : true)\\n    .reduce<Array<IModel | IModule>>((acc, rootItem) => {\\n      acc.push(rootItem);\\n      acc.push(...sortItems(rootItem.ID));\\n      return acc;\\n    }, []);\\n}\\nconsole.log(\\\"ooops1\\\", getSortedItems(items))\\nconst sortedItems = getSortedItems(items);\\n\\nfor (let sortedItem of sortedItems) {\\n    if(sortedItem.objectType == \\\"model\\\") {\\n      if (sortedItem.modelType == \\\"placeholder\\\") {\\n        let indentCalculated = sortedItem.path ? (sortedItem.path.length * 20 + 20) : 20;\\n        actions.push({ path: sortedItem.path ?? [], icon: \\\"mdi mdi-folder-open\\\", label: sortedItem.name, indent: indentCalculated, id: sortedItem.ID })\\n      }\\n    }\\n    else if(sortedItem.objectType == \\\"module\\\") {\\n      actions.push({ path: sortedItem.path ?? [], icon: \\\"mdi mdi-puzzle\\\", label: sortedItem.name, indent: 20, id: sortedItem.ID })\\n    }\\n}\\n\\n</script> \\n\\n<template>\\n  <div>\\n    <div id=\\\"content-area\\\" class=\\\"popover__content\\\">\\n      <div style=\\\"height: 100%\\\" class=\\\"errorDiv\\\">\\n        <ul style=\\\"padding-left: 0px; margin-bottom: 0px; padding-top: 5px; padding-bottom: 10px;\\\">\\n          <li v-for=\\\"action in actions\\\" :key=\\\"action.label\\\" class=\\\"move-to-item\\\" :class=\\\"isMoveable(action.path, action.id, selectedItem) ? '' : 'item-disabled'\\\" @click=\\\"move(action.path, action.id)\\\"\\n            :style=\\\"{ 'padding-left': (action.indent + 20) + 'px' }\\\">\\n            <div class=\\\"move-to-target\\\">\\n              <i :class=\\\"action.icon\\\" style=\\\"margin-right: 10px;\\\"></i><span>{{ action.label }}</span>\\n            </div>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n</template>\\n\\n\\n<style scoped>\\n*{\\n  font-family: \\\"Roboto\\\";\\n}\\nul {\\n  list-style-type: none;\\n}\\n\\n.move-to-target .mdi {\\n  font-size: 24px;\\n  margin-right: 10px;\\n}\\n</style>\\n\\n\\n \\n\\n<style scoped>\\n.move-to-target {\\n  margin: 0;\\n  color: #151233;\\n  font-weight: 400;\\n  font-size: 14px;\\n  letter-spacing: 0px;\\n  cursor: pointer;\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.createLi {\\n  cursor: pointer;\\n}\\n\\n.move-to-item {\\n  padding-top: 1px;\\n  padding-right: 20px;\\n}\\n.move-to-item:not(.item-disabled):hover {\\n  background: #D5D5D5;\\n}\\n.item-disabled {\\n  opacity: 0.5;\\n}\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.move-to-target[data-v-d4d4d1e2] {\\n  margin: 0;\\n  color: #151233;\\n  font-weight: 400;\\n  font-size: 14px;\\n  letter-spacing: 0px;\\n  cursor: pointer;\\n  display: flex;\\n  align-items: center;\\n}\\n.createLi[data-v-d4d4d1e2] {\\n  cursor: pointer;\\n}\\n.move-to-item[data-v-d4d4d1e2] {\\n  padding-top: 1px;\\n  padding-right: 20px;\\n}\\n.move-to-item[data-v-d4d4d1e2]:not(.item-disabled):hover {\\n  background: #D5D5D5;\\n}\\n.item-disabled[data-v-d4d4d1e2] {\\n  opacity: 0.5;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/presentation/vue3/components/dialogs/moveItem.vue\"],\"names\":[],\"mappings\":\";AA4JA;EACE,SAAS;EACT,cAAc;EACd,gBAAgB;EAChB,eAAe;EACf,mBAAmB;EACnB,eAAe;EACf,aAAa;EACb,mBAAmB;AACrB;AAEA;EACE,eAAe;AACjB;AAEA;EACE,gBAAgB;EAChB,mBAAmB;AACrB;AACA;EACE,mBAAmB;AACrB;AACA;EACE,YAAY;AACd\",\"sourcesContent\":[\"<script setup lang=\\\"ts\\\">\\nimport { container } from '../../../../domain/core/diContainer';\\nimport { IModel, IModule } from '../../../../domain/model/models';\\nimport { IMoveItemProps } from '../../../../domain/presentation/dialogs/IMoveItemProps';\\nimport { ITreeItem, ITreeView } from '../../../../domain/presentation/ITreeView';\\nimport { IMoveUseCase } from '../../../../domain/useCase/IMoveUseCase';\\nimport { IUseCaseExecutor } from '../../../../domain/useCase/IUseCaseExecutor';\\nimport { IViewModel } from '../../../../domain/viewModel/IViewModel';\\n\\ninterface IMoveItemInline extends IMoveItemProps {\\n  id: string;\\n  name: string;\\n  description?: string;\\n  type: \\\"module\\\" | \\\"model\\\";\\n  prefix?: string;\\n  treeItems: Array<ITreeItem>;\\n}\\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\\nconst props = defineProps<IMoveItemInline>();\\nconst viewModel = container.resolve<IViewModel>(IViewModel);\\nconst emit = defineEmits([\\\"close\\\"]);\\n\\nlet actions: { path: Array<String>; icon: string; label: string; indent: number; id: String }[] = []\\nactions.push({ path: [], icon: \\\"mdi mdi-vector-polyline\\\", label: viewModel.studio.appName, indent: 0, id: viewModel.studio.appId })\\nlet items = viewModel.studio.items;\\nconst selectedItem = items.find(item => item.ID == props.id)! as IModel; \\n// const moduleItems = treeItems.filter(item => item.objectType === \\\"module\\\") as IModule[];\\n\\nconsole.log(\\\"ooops\\\", items)\\n\\nfunction move(targetFolderPath: Array<String>, targetFolderId: String) {\\n  if(isMoveable(targetFolderPath, targetFolderId, selectedItem )) {\\n    const moveUseCase = container.resolve<IMoveUseCase>(IMoveUseCase);\\n    const updatedPath: Array<String> = [];\\n    if(targetFolderId != viewModel.studio.appId){\\n      updatedPath.push(...targetFolderPath, targetFolderId);\\n    }\\n          \\n    executor.execute(async () => {\\n      const selectedItemId = props.id;\\n      let selectedItem = items.find(item => item.ID == selectedItemId)\\n      if(selectedItem && selectedItem.objectType == \\\"model\\\") {\\n        if(selectedItem.modelType == \\\"placeholder\\\") {\\n          moveUseCase.moveFolder(selectedItem, updatedPath, selectedItem.ID);\\n        }\\n        else {\\n          moveUseCase.moveModel(selectedItem, updatedPath, selectedItem.ID);\\n        }\\n      }\\n      else return;\\n    }, { loading: true });\\n    emit(\\\"close\\\");\\n\\n  }\\n  \\n}\\nfunction isMoveable(targetFolderPath: Array<String>, targetFolderId: String, selectedItem: IModel) {\\n  if((selectedItem.path && selectedItem.path[selectedItem.path.length - 1] == targetFolderId) ) {\\n    return false;\\n  }\\n  else if(selectedItem.ID == targetFolderId) {\\n    return false;\\n  }\\n  else if(targetFolderPath.includes(selectedItem.ID)) {\\n    return false;\\n  }\\n  else \\n    return true;\\n}\\nfunction getSortedItems(items: Array<IModel | IModule>) {\\n  items.sort((a, b) => {\\n    let aPath = a.path ?? [];\\n    let bPath = b.path ?? [];\\n    if (aPath.length !== bPath.length) {\\n      return aPath.length - bPath.length;\\n    }\\n\\n    return 0;\\n  });\\n\\n  function getChildren(parentId: string) {\\n    return items.filter(item => (item.path ? item.path[item.path.length - 1] === parentId.toString() : false) || (item.parent ? item.parent.ID == parentId : false));\\n  }\\n\\n  function sortItems(parentId: string) {\\n    const result: Array<IModel | IModule> = [];\\n\\n    const directChildren = getChildren(parentId);\\n    for (const child of directChildren) {\\n      result.push(child);\\n      result.push(...sortItems(child.ID));\\n    }\\n\\n    return result;\\n  }\\n\\n  return items.filter(item => item.path ? item.path.length === 0 : true)\\n    .reduce<Array<IModel | IModule>>((acc, rootItem) => {\\n      acc.push(rootItem);\\n      acc.push(...sortItems(rootItem.ID));\\n      return acc;\\n    }, []);\\n}\\nconsole.log(\\\"ooops1\\\", getSortedItems(items))\\nconst sortedItems = getSortedItems(items);\\n\\nfor (let sortedItem of sortedItems) {\\n    if(sortedItem.objectType == \\\"model\\\") {\\n      if (sortedItem.modelType == \\\"placeholder\\\") {\\n        let indentCalculated = sortedItem.path ? (sortedItem.path.length * 20 + 20) : 20;\\n        actions.push({ path: sortedItem.path ?? [], icon: \\\"mdi mdi-folder-open\\\", label: sortedItem.name, indent: indentCalculated, id: sortedItem.ID })\\n      }\\n    }\\n    else if(sortedItem.objectType == \\\"module\\\") {\\n      actions.push({ path: sortedItem.path ?? [], icon: \\\"mdi mdi-puzzle\\\", label: sortedItem.name, indent: 20, id: sortedItem.ID })\\n    }\\n}\\n\\n</script> \\n\\n<template>\\n  <div>\\n    <div id=\\\"content-area\\\" class=\\\"popover__content\\\">\\n      <div style=\\\"height: 100%\\\" class=\\\"errorDiv\\\">\\n        <ul style=\\\"padding-left: 0px; margin-bottom: 0px; padding-top: 5px; padding-bottom: 10px;\\\">\\n          <li v-for=\\\"action in actions\\\" :key=\\\"action.label\\\" class=\\\"move-to-item\\\" :class=\\\"isMoveable(action.path, action.id, selectedItem) ? '' : 'item-disabled'\\\" @click=\\\"move(action.path, action.id)\\\"\\n            :style=\\\"{ 'padding-left': (action.indent + 20) + 'px' }\\\">\\n            <div class=\\\"move-to-target\\\">\\n              <i :class=\\\"action.icon\\\" style=\\\"margin-right: 10px;\\\"></i><span>{{ action.label }}</span>\\n            </div>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n</template>\\n\\n\\n<style scoped>\\n*{\\n  font-family: \\\"Roboto\\\";\\n}\\nul {\\n  list-style-type: none;\\n}\\n\\n.move-to-target .mdi {\\n  font-size: 24px;\\n  margin-right: 10px;\\n}\\n</style>\\n\\n\\n \\n\\n<style scoped>\\n.move-to-target {\\n  margin: 0;\\n  color: #151233;\\n  font-weight: 400;\\n  font-size: 14px;\\n  letter-spacing: 0px;\\n  cursor: pointer;\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.createLi {\\n  cursor: pointer;\\n}\\n\\n.move-to-item {\\n  padding-top: 1px;\\n  padding-right: 20px;\\n}\\n.move-to-item:not(.item-disabled):hover {\\n  background: #D5D5D5;\\n}\\n.item-disabled {\\n  opacity: 0.5;\\n}\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-d4d4d1e2\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = {\n  id: \"content-area\",\n  class: \"popover__content\"\n}\nconst _hoisted_2 = {\n  style: {\"height\":\"100%\"},\n  class: \"errorDiv\"\n}\nconst _hoisted_3 = { style: {\"padding-left\":\"0px\",\"margin-bottom\":\"0px\",\"padding-top\":\"5px\",\"padding-bottom\":\"10px\"} }\nconst _hoisted_4 = [\"onClick\"]\nconst _hoisted_5 = { class: \"move-to-target\" }\n\nimport { container } from '../../../../domain/core/diContainer';\nimport { IModel, IModule } from '../../../../domain/model/models';\nimport { IMoveItemProps } from '../../../../domain/presentation/dialogs/IMoveItemProps';\nimport { ITreeItem, ITreeView } from '../../../../domain/presentation/ITreeView';\nimport { IMoveUseCase } from '../../../../domain/useCase/IMoveUseCase';\nimport { IUseCaseExecutor } from '../../../../domain/useCase/IUseCaseExecutor';\nimport { IViewModel } from '../../../../domain/viewModel/IViewModel';\n\ninterface IMoveItemInline extends IMoveItemProps {\n  id: string;\n  name: string;\n  description?: string;\n  type: \"module\" | \"model\";\n  prefix?: string;\n  treeItems: Array<ITreeItem>;\n}\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'moveItem',\n  props: {\n    id: null,\n    name: null,\n    description: null,\n    type: null,\n    prefix: null,\n    treeItems: null\n  },\n  emits: [\"close\"],\n  setup(__props: any, { emit }) {\n\nconst props = __props as {\n  id: string;\n  name: string;\n  description?: string;\n  type: \"module\" | \"model\";\n  prefix?: string;\n  treeItems: Array<ITreeItem>;\n};\n\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\n\nconst viewModel = container.resolve<IViewModel>(IViewModel);\n\n\nlet actions: { path: Array<String>; icon: string; label: string; indent: number; id: String }[] = []\nactions.push({ path: [], icon: \"mdi mdi-vector-polyline\", label: viewModel.studio.appName, indent: 0, id: viewModel.studio.appId })\nlet items = viewModel.studio.items;\nconst selectedItem = items.find(item => item.ID == props.id)! as IModel; \n// const moduleItems = treeItems.filter(item => item.objectType === \"module\") as IModule[];\n\nconsole.log(\"ooops\", items)\n\nfunction move(targetFolderPath: Array<String>, targetFolderId: String) {\n  if(isMoveable(targetFolderPath, targetFolderId, selectedItem )) {\n    const moveUseCase = container.resolve<IMoveUseCase>(IMoveUseCase);\n    const updatedPath: Array<String> = [];\n    if(targetFolderId != viewModel.studio.appId){\n      updatedPath.push(...targetFolderPath, targetFolderId);\n    }\n          \n    executor.execute(async () => {\n      const selectedItemId = props.id;\n      let selectedItem = items.find(item => item.ID == selectedItemId)\n      if(selectedItem && selectedItem.objectType == \"model\") {\n        if(selectedItem.modelType == \"placeholder\") {\n          moveUseCase.moveFolder(selectedItem, updatedPath, selectedItem.ID);\n        }\n        else {\n          moveUseCase.moveModel(selectedItem, updatedPath, selectedItem.ID);\n        }\n      }\n      else return;\n    }, { loading: true });\n    emit(\"close\");\n\n  }\n  \n}\nfunction isMoveable(targetFolderPath: Array<String>, targetFolderId: String, selectedItem: IModel) {\n  if((selectedItem.path && selectedItem.path[selectedItem.path.length - 1] == targetFolderId) ) {\n    return false;\n  }\n  else if(selectedItem.ID == targetFolderId) {\n    return false;\n  }\n  else if(targetFolderPath.includes(selectedItem.ID)) {\n    return false;\n  }\n  else \n    return true;\n}\nfunction getSortedItems(items: Array<IModel | IModule>) {\n  items.sort((a, b) => {\n    let aPath = a.path ?? [];\n    let bPath = b.path ?? [];\n    if (aPath.length !== bPath.length) {\n      return aPath.length - bPath.length;\n    }\n\n    return 0;\n  });\n\n  function getChildren(parentId: string) {\n    return items.filter(item => (item.path ? item.path[item.path.length - 1] === parentId.toString() : false) || (item.parent ? item.parent.ID == parentId : false));\n  }\n\n  function sortItems(parentId: string) {\n    const result: Array<IModel | IModule> = [];\n\n    const directChildren = getChildren(parentId);\n    for (const child of directChildren) {\n      result.push(child);\n      result.push(...sortItems(child.ID));\n    }\n\n    return result;\n  }\n\n  return items.filter(item => item.path ? item.path.length === 0 : true)\n    .reduce<Array<IModel | IModule>>((acc, rootItem) => {\n      acc.push(rootItem);\n      acc.push(...sortItems(rootItem.ID));\n      return acc;\n    }, []);\n}\nconsole.log(\"ooops1\", getSortedItems(items))\nconst sortedItems = getSortedItems(items);\n\nfor (let sortedItem of sortedItems) {\n    if(sortedItem.objectType == \"model\") {\n      if (sortedItem.modelType == \"placeholder\") {\n        let indentCalculated = sortedItem.path ? (sortedItem.path.length * 20 + 20) : 20;\n        actions.push({ path: sortedItem.path ?? [], icon: \"mdi mdi-folder-open\", label: sortedItem.name, indent: indentCalculated, id: sortedItem.ID })\n      }\n    }\n    else if(sortedItem.objectType == \"module\") {\n      actions.push({ path: sortedItem.path ?? [], icon: \"mdi mdi-puzzle\", label: sortedItem.name, indent: 20, id: sortedItem.ID })\n    }\n}\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"ul\", _hoisted_3, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(actions), (action) => {\n            return (_openBlock(), _createElementBlock(\"li\", {\n              key: action.label,\n              class: _normalizeClass([\"move-to-item\", isMoveable(action.path, action.id, _unref(selectedItem)) ? '' : 'item-disabled']),\n              onClick: ($event: any) => (move(action.path, action.id)),\n              style: _normalizeStyle({ 'padding-left': (action.indent + 20) + 'px' })\n            }, [\n              _createElementVNode(\"div\", _hoisted_5, [\n                _createElementVNode(\"i\", {\n                  class: _normalizeClass(action.icon),\n                  style: {\"margin-right\":\"10px\"}\n                }, null, 2 /* CLASS */),\n                _createElementVNode(\"span\", null, _toDisplayString(action.label), 1 /* TEXT */)\n              ])\n            ], 14 /* CLASS, STYLE, PROPS */, _hoisted_4))\n          }), 128 /* KEYED_FRAGMENT */))\n        ])\n      ])\n    ])\n  ]))\n}\n}\n\n})","\n      import API from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./moveItem.vue?vue&type=style&index=0&id=d4d4d1e2&scoped=true&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./moveItem.vue?vue&type=style&index=0&id=d4d4d1e2&scoped=true&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./moveItem.vue?vue&type=style&index=1&id=d4d4d1e2&scoped=true&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./moveItem.vue?vue&type=style&index=1&id=d4d4d1e2&scoped=true&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","import script from \"./moveItem.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./moveItem.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./moveItem.vue?vue&type=style&index=0&id=d4d4d1e2&scoped=true&lang=css\"\nimport \"./moveItem.vue?vue&type=style&index=1&id=d4d4d1e2&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/studio/studio/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-d4d4d1e2\"]])\n\nexport default __exports__"],"names":["___CSS_LOADER_EXPORT___","push","module","id","_hoisted_1","class","_hoisted_2","style","_hoisted_3","_hoisted_4","_hoisted_5","__name","props","name","description","type","prefix","treeItems","emits","setup","__props","emit","executor","resolve","IUseCaseExecutor","viewModel","IViewModel","actions","path","icon","label","studio","appName","indent","appId","items","selectedItem","find","item","ID","isMoveable","targetFolderPath","targetFolderId","length","includes","getSortedItems","sortItems","parentId","result","directChildren","filter","toString","parent","getChildren","child","sort","a","b","aPath","bPath","reduce","acc","rootItem","console","log","sortedItems","sortedItem","objectType","modelType","indentCalculated","_ctx","_cache","_","action","key","onClick","$event","moveUseCase","IMoveUseCase","updatedPath","execute","async","selectedItemId","moveFolder","moveModel","loading","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals"],"sourceRoot":""}