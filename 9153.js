"use strict";(this.webpackChunkqcloud_shell=this.webpackChunkqcloud_shell||[]).push([[9153],{962:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(4663),a=t.n(o),s=t(7638),r=t.n(s)()(a());r.push([e.id,"\n.avatarLogo[data-v-a5b7f1a8] {\n    vertical-align: middle;\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n}\n.ExportBtn[data-v-a5b7f1a8] {\n    border: unset;\n    background: unset;\n    font-style: normal;\n    font-weight: bold;\n    font-size: 16px;\n    letter-spacing: 0.02px;\n    opacity: 1;\n    font-family: 'ROBOTO';\n}\n.VueTables__sort-icon[data-v-a5b7f1a8]{\n    float: right;\n    font-size: 15px;\n    font-weight: 600;\n}\n","",{version:3,sources:["webpack://./src/presentation/vue3/components/application/modelVersionDialog.vue"],names:[],mappings:";AAoGA;IACI,sBAAsB;IACtB,WAAW;IACX,YAAY;IACZ,kBAAkB;AAEtB;AAEA;IACI,aAAa;IACb,iBAAiB;IACjB,kBAAkB;IAClB,iBAAiB;IACjB,eAAe;IACf,sBAAsB;IACtB,UAAU;IACV,qBAAqB;AACzB;AACA;IACI,YAAY;IACZ,eAAe;IACf,gBAAgB;AACpB",sourcesContent:["\n<template>\n    <div v-if=\"histories\">\n        <v-client-table :data=\"histories\" :columns=\"appDatatableColumns\" :options=\"optionsDataTable\">\n            <template #createDate=\"props\">\n                <span>{{new Intl.DateTimeFormat(\"tr-TR\",options).format(new Date(props.row.createDate))}}</span>\n            </template>\n            <template #updateDate=\"props\">\n                <span>{{ new Intl.DateTimeFormat(\"tr-TR\",options).format(new Date(props.row.updateDate)) }}</span>\n            </template>\n            <template #actions=\"props\">\n                <button class='ExportBtn'\n                    :style=\"{ 'color':parseInt(props.row.version) == computedVersion() ? '#A1A1A1' : '#151233'}\"\n                    @click=\"selectVersion(props.row.version)\">{{ parseInt(props.row.version) == computedVersion() ?\n                            'Selected' : 'Select'\n                    }}</button>\n            </template>\n        </v-client-table>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { container } from 'tsyringe';\nimport { ref } from 'vue';\nimport { IModelHistoryInfo } from '../../../../domain/model/models';\nimport { IListModelVersions } from '../../../../domain/useCase/IListModelVersions';\nimport { IUseCaseExecutor } from '../../../../domain/useCase/IUseCaseExecutor';\nimport { ILocalization } from \"../../../../domain/infrastructure/ILocalization\";\nconst props = defineProps<IModelVersionProp>();\nconst histories = ref<Array<IModelHistoryInfo>>([])\nconst selectedModel = ref(props.clickedNode);\nlet allversion: any = [];\nconst appDatatableColumns = ref(['name', 'createDate', 'createdBy', 'updateDate', 'updatedBy', 'shortComment', 'version', 'actions']);\nconst localization = container.resolve<ILocalization>(ILocalization)\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\nlet options :any = { month:'2-digit',day:'2-digit', year:'numeric', hour: 'numeric', minute: 'numeric',second: 'numeric'};\nconst optionsDataTable = ref({\n    filterable: false, // omit the `id` column,\n    headings: {\n        name: localization.get('exportName'),\n        createDate: localization.get('exportcreateDate'),\n        createdBy: localization.get('exportcreatedBy'),\n        updateDate: localization.get('exportupdateDate'),\n        updatedBy: localization.get('exportupdatedBy'),\n        shortComment: localization.get('exportshortComment'),\n        version: localization.get('exportversion'),\n    },\n    dateColumns: ['createDate', 'updateDate'],\n        sortIcon:{\n            base:'mdi',\n            is:'mdi mdi-unfold-less-horizontal',\n            up: 'mdi mdi-arrow-up',\n            down: 'mdi mdi-arrow-down'\n          },\n    texts: {\n        count: '',\n        noResults: \"Saved version could not be found in the system, the last saved model of the file will be released.\"\n    }\n});\n\n\n\ninterface ISelectedModel {\n    id: string,\n    state: { checked: boolean },\n    text: string,\n    type: string,\n    version: string\n}\ninterface IModelVersionProp {\n    clickedNode: ISelectedModel,\n    versions?:Array<IModelHistoryInfo>,\n    cb?:(version : string) => void;\n}\n\nif(props.versions) {\n    histories.value = props.versions;\n} else {\n    executor.execute(async () => {\n        histories.value = await executor.executeUseCase<IListModelVersions>(IListModelVersions, { modelID: selectedModel.value.id, versionType: \"major\" });\n        allversion = histories.value.map(item => parseInt(item.version!));\n    }, { loading: true });\n}\n\n\nfunction computedVersion() {\n    if (selectedModel.value.version != 'System latest') {\n        return selectedModel.value.version\n    }\n    else {\n        return Math.max(...allversion)\n    }\n\n}\nfunction selectVersion(n: string) {\n    selectedModel.value.version = n\n    props.cb && props.cb(n);\n}\n<\/script>\n<style scoped>\n.avatarLogo {\n    vertical-align: middle;\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n\n}\n\n.ExportBtn {\n    border: unset;\n    background: unset;\n    font-style: normal;\n    font-weight: bold;\n    font-size: 16px;\n    letter-spacing: 0.02px;\n    opacity: 1;\n    font-family: 'ROBOTO';\n}\n.VueTables__sort-icon{\n    float: right;\n    font-size: 15px;\n    font-weight: 600;\n}\n</style>"],sourceRoot:""}]);const i=r},985:(e,n,t)=>{t.d(n,{w:()=>o});const o=Symbol.for("ILocalization")},7348:(e,n,t)=>{t.d(n,{u:()=>o});const o=Symbol.for("IListModelVersions")},9153:(e,n,t)=>{t.r(n),t.d(n,{default:()=>k});var o=t(1093),a=t(6190),s=t(3843),r=t(3266),i=t(7348),l=t(3487),d=t(985);const c={key:0},p=["onClick"],u=(0,o.aZ)({__name:"modelVersionDialog",props:{clickedNode:null,versions:null,cb:{type:Function}},setup(e){const n=e,t=(0,s.iH)([]),u=(0,s.iH)(n.clickedNode);let m=[];const v=(0,s.iH)(["name","createDate","createdBy","updateDate","updatedBy","shortComment","version","actions"]),A=r.nC.resolve(d.w),f=r.nC.resolve(l.y);let I={month:"2-digit",day:"2-digit",year:"numeric",hour:"numeric",minute:"numeric",second:"numeric"};const g=(0,s.iH)({filterable:!1,headings:{name:A.get("exportName"),createDate:A.get("exportcreateDate"),createdBy:A.get("exportcreatedBy"),updateDate:A.get("exportupdateDate"),updatedBy:A.get("exportupdatedBy"),shortComment:A.get("exportshortComment"),version:A.get("exportversion")},dateColumns:["createDate","updateDate"],sortIcon:{base:"mdi",is:"mdi mdi-unfold-less-horizontal",up:"mdi mdi-arrow-up",down:"mdi mdi-arrow-down"},texts:{count:"",noResults:"Saved version could not be found in the system, the last saved model of the file will be released."}});function y(){return"System latest"!=u.value.version?u.value.version:Math.max(...m)}function h(e){u.value.version=e,n.cb&&n.cb(e)}return n.versions?t.value=n.versions:f.execute((async()=>{t.value=await f.executeUseCase(i.u,{modelID:u.value.id,versionType:"major"}),m=t.value.map((e=>parseInt(e.version)))}),{loading:!0}),(e,n)=>{const r=(0,o.up)("v-client-table");return t.value?((0,o.wg)(),(0,o.iD)("div",c,[(0,o.Wm)(r,{data:t.value,columns:v.value,options:g.value},{createDate:(0,o.w5)((e=>[(0,o._)("span",null,(0,a.toDisplayString)(new Intl.DateTimeFormat("tr-TR",(0,s.SU)(I)).format(new Date(e.row.createDate))),1)])),updateDate:(0,o.w5)((e=>[(0,o._)("span",null,(0,a.toDisplayString)(new Intl.DateTimeFormat("tr-TR",(0,s.SU)(I)).format(new Date(e.row.updateDate))),1)])),actions:(0,o.w5)((e=>[(0,o._)("button",{class:"ExportBtn",style:(0,a.normalizeStyle)({color:parseInt(e.row.version)==y()?"#A1A1A1":"#151233"}),onClick:n=>h(e.row.version)},(0,a.toDisplayString)(parseInt(e.row.version)==y()?"Selected":"Select"),13,p)])),_:1},8,["data","columns","options"])])):(0,o.kq)("v-if",!0)}}});var m=t(7450),v=t.n(m),A=t(9530),f=t.n(A),I=t(6199),g=t.n(I),y=t(458),h=t.n(y),b=t(2916),w=t.n(b),x=t(2165),D=t.n(x),C=t(962),B={};B.styleTagTransform=D(),B.setAttributes=h(),B.insert=g().bind(null,"head"),B.domAPI=f(),B.insertStyleElement=w(),v()(C.Z,B),C.Z&&C.Z.locals&&C.Z.locals;const k=(0,t(2525).Z)(u,[["__scopeId","data-v-a5b7f1a8"]])}}]);
//# sourceMappingURL=9153.js.map