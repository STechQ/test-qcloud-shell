"use strict";(this.webpackChunkqcloud_shell=this.webpackChunkqcloud_shell||[]).push([[7621],{96826:(e,n,o)=>{o.d(n,{Z:()=>p});var t=o(34663),a=o.n(t),i=o(7638),r=o.n(i),l=o(79240),s=r()(a());s.i(l.Z),s.push([e.id,"\n.container[data-v-03aca015] {\n        padding: 32px 20px 20px;\n}\n.table-name[data-v-03aca015] {\n        color: #151233;\n        font-size: 16px;\n        font-weight: 500;\n        line-height: 18px;\n        margin-bottom: 12px;\n}\n.select-module-btn[data-v-03aca015] {\n        border: none;\n        background: none;\n        color: #212121;\n        font-size: 20px;\n}\n.back-button[data-v-03aca015] {\n        font-size: 28px;\n        color: #151233;\n        cursor: pointer;\n        margin-right: 16px;\n}\n.module-name-div[data-v-03aca015] {\n        display: flex;\n        align-items: center;\n        margin-bottom: 16px;\n}\n.module-name[data-v-03aca015] {\n        color: #151233;\n        font-size: 16px;\n        font-weight: 500;\n}\n.remove-module[data-v-03aca015] {\n        background: none;\n        border: none;\n        font-size: 20px;\n        color: #212121;\n        width: 100%;\n        display: flex;\n        justify-content: end;\n        align-items: center;\n}\n.imported-version[data-v-03aca015] {\n        color: #2C5A86;\n        font-size: 14px;\n        font-weight: 500;\n        margin-right: 22px;\n        cursor: pointer;\n}\n.import-btn[data-v-03aca015] {\n        background: none;\n        border: none;\n        font-size: 14px;\n        font-weight: 500;\n        color: #2C5A86;\n        cursor: pointer;\n}\n.add-ref-module-btn[data-v-03aca015] {\n        font-size: 13px;\n        text-align: center;\n        color: #FFFFFF;\n        background: #151233;\n        display: flex;\n        align-items: center;\n        padding: 4px 8px;\n        border-radius: 4px;\n        border: none;\n}\n.remove-module:hover .button-tooltip[data-v-03aca015] {\n        opacity: 1;\n        visibility: visible;\n}\n.button-tooltip[data-v-03aca015] {\n        visibility: hidden;\n        position: absolute;\n        background: #757575;\n        color: #FFFFFF;\n        font-size: 9px;\n        font-family: 'Roboto';\n        text-align: center;\n        border-radius: 4px;\n        letter-spacing: 0.2px;\n        padding: 6px 8px 6px 8px;\n        opacity: 0;\n}\n","",{version:3,sources:["webpack://./src/presentation/vue3/components/dialogs/attachModuleToApp.vue"],names:[],mappings:";AA+OI;QACI,uBAAuB;AAC3B;AACA;QACI,cAAc;QACd,eAAe;QACf,gBAAgB;QAChB,iBAAiB;QACjB,mBAAmB;AACvB;AACA;QACI,YAAY;QACZ,gBAAgB;QAChB,cAAc;QACd,eAAe;AACnB;AACA;QACI,eAAe;QACf,cAAc;QACd,eAAe;QACf,kBAAkB;AACtB;AACA;QACI,aAAa;QACb,mBAAmB;QACnB,mBAAmB;AACvB;AACA;QACI,cAAc;QACd,eAAe;QACf,gBAAgB;AACpB;AACA;QACI,gBAAgB;QAChB,YAAY;QACZ,eAAe;QACf,cAAc;QACd,WAAW;QACX,aAAa;QACb,oBAAoB;QACpB,mBAAmB;AACvB;AACA;QACI,cAAc;QACd,eAAe;QACf,gBAAgB;QAChB,kBAAkB;QAClB,eAAe;AACnB;AACA;QACI,gBAAgB;QAChB,YAAY;QACZ,eAAe;QACf,gBAAgB;QAChB,cAAc;QACd,eAAe;AACnB;AACA;QACI,eAAe;QACf,kBAAkB;QAClB,cAAc;QACd,mBAAmB;QACnB,aAAa;QACb,mBAAmB;QACnB,gBAAgB;QAChB,kBAAkB;QAClB,YAAY;AAChB;AACA;QACI,UAAU;QACV,mBAAmB;AACvB;AACA;QACI,kBAAkB;QAClB,kBAAkB;QAClB,mBAAmB;QACnB,cAAc;QACd,cAAc;QACd,qBAAqB;QACrB,kBAAkB;QAClB,kBAAkB;QAClB,qBAAqB;QACrB,wBAAwB;QACxB,UAAU;AACd",sourcesContent:['<script setup lang="ts">\nimport { computed } from \'@vue/reactivity\';\nimport { ref, watch } from \'vue\';\nimport { container } from \'../../../../domain/core/diContainer\';\nimport { ILocalization } from \'../../../../domain/infrastructure/ILocalization\';\nimport { IModule, IModuleVersion } from \'../../../../domain/model/models\';\nimport { IModuleVersionUseCase } from \'../../../../domain/useCase/IModuleVersionUseCase\';\nimport { IObjectUseCase } from \'../../../../domain/useCase/IObjectUseCase\';\nimport { IStudio } from \'../../../../domain/useCase/IStudio\';\nimport { IUseCaseExecutor } from \'../../../../domain/useCase/IUseCaseExecutor\';\nimport { IViewModel } from \'../../../../domain/viewModel/IViewModel\';\n\ninterface IExtendedModuleItem extends IModule {\n    ownerApp?: string;\n    relatedAppNames?: string;\n}\n\nconst viewModel = container.resolve<IViewModel>(IViewModel);\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\nconst localization = container.resolve<ILocalization>(ILocalization);\nconst objectUseCase = container.resolve<IObjectUseCase>(IObjectUseCase);\nconst studio = container.resolve<IStudio>(IStudio);\nconst moduleVersionUseCase = container.resolve<IModuleVersionUseCase>(IModuleVersionUseCase);\n\nconst importedModulesData = ref<Array<IExtendedModuleItem>>([]);\nconst avaliableModulesData = ref<Array<IExtendedModuleItem>>([]);\nconst importNewOrChange = ref(false);\nconst selectedModule = ref<IExtendedModuleItem>();\nconst moduleVersions = ref<Array<IModuleVersion>>([]);\n\nconst tableColumns = ref(["name", "description", "ownerApp", "relatedAppNames", "createdBy", "createDate", "shareType", "actions"]);\nconst moduleVersionTableColumns = ref(["version", "description", "createdBy", "createDate", "state"]);\nconst tableOptions = ref({\n    filterable: true,\n    perPage: 5,\n    perPageValues: [],\n    headings: {\n        name: localization.get("moduleName"),\n        description: localization.get("description"),\n        ownerApp: localization.get("ownerApp"),\n        relatedAppNames: localization.get("relatedApplications"),\n        createdBy: localization.get("createdBy"),\n        createDate: localization.get("createDate"),\n        shareType: localization.get("shareType"),\n        actions: "",\n    },\n    resizableColumns: false,\n    skin: \'import-module\',\n    // sortIcon: {\n    //     base: \'mdi\',\n    //     is: \'mdi mdi-unfold-less-horizontal\',\n    //     up: \'mdi mdi-arrow-up\',\n    //     down: \'mdi mdi-arrow-down\'\n    // },\n    texts: {\n        count: "",\n        noResults: "No matching records",\n    },\n});\nconst moduleVersionTableOptions = ref({\n    filterable: false,\n    perPage: 5,\n    perPageValues: [],\n    headings: {\n        version: localization.get("version"),\n        description: localization.get("description"),\n        createdBy: localization.get("createdBy"),\n        createDate: localization.get("createDate"),\n        state: "",\n    },\n    resizableColumns: false,\n    skin: \'module-versions\',\n    texts: {\n        count: "",\n        noResults: "No matching records",\n    },\n})\nconst dateOptions: any = { month: \'2-digit\', day: \'2-digit\', year: \'numeric\', hour: \'numeric\', minute: \'numeric\', second: \'numeric\' };\n\nfunction refreshTable(){\n    executor.execute(async () => {\n    const modules: Array<IExtendedModuleItem> = await objectUseCase.listModules();\n    const appsDict: Record<string, string> = {};\n    viewModel.apps.forEach(app => appsDict[app.ID] = app.name);\n\n    modules.forEach(module => {\n        module.ownerApp = module.mainOwner ? appsDict[module.mainOwner] : \'\'\n        const appNamesArr = module.relatedApplications.map(i => appsDict[i.applicationID]).filter(appName => appName != module.ownerApp);\n        module.relatedAppNames = appNamesArr.join(", ");\n    });\n\n    importedModulesData.value = modules.filter(module => isAddedtoCurrentApp(module) == true && module.mainOwner && module.mainOwner != viewModel.studio.appId);\n    avaliableModulesData.value = modules.filter(module => isAddedtoCurrentApp(module) == false && module.shareType);\n}, { loading: true });\n}\n\nrefreshTable()\nfunction add(module: IModule, version?: string ) {\n    \n    executor.execute(async () => {\n        const applicationID = viewModel.studio.appId;\n        if(version) {\n            if(isAddedtoCurrentApp(module)) {\n                await studio.detachModuleFromApplication(module, applicationID, true);\n                const curModule = importedModulesData.value.find(i => i.ID == module.ID)!;\n                curModule.relatedApplications = curModule.relatedApplications.filter(i => i.applicationID != applicationID);\n                refreshTable();\n            }\n            await studio.attachModuletoApplication(module, applicationID, true, version);\n            const curModule = avaliableModulesData.value.find(i => i.ID == module.ID);\n            curModule!.relatedApplications.push({ applicationID, importedVersion: version });\n            const curModuleVersion = moduleVersions.value.find(modVersion => modVersion.version == version);\n            curModuleVersion!.relatedApplications!.push({applicationID, importedVersion: version});\n            selectedModule.value!.currentVersion = version;\n        }\n        else {\n            await studio.attachModuletoApplication(module, applicationID, false);\n            const curModule = avaliableModulesData.value.find(i => i.ID == module.ID);\n            curModule!.relatedApplications.push({ applicationID });\n        }\n        refreshTable()\n    }, { loading: true });\n}\n\nfunction remove(module: IModule, version?: string) {\n    executor.execute(async () => {\n        const applicationID = viewModel.studio.appId;\n        await studio.detachModuleFromApplication(module, applicationID, false, version);\n        const curModule = importedModulesData.value.find(i => i.ID == module.ID)!;\n        curModule.relatedApplications = curModule.relatedApplications.filter(i => i.applicationID != applicationID);\n        const curModuleVersion = moduleVersions.value.find(modVersion => modVersion.version == version);\n        curModuleVersion!.relatedApplications = curModule.relatedApplications.filter(i => i.applicationID != applicationID);\n        refreshTable()\n    }, { loading: true });\n}\n\nfunction isAddedtoCurrentApp(module: IModule) {\n    const appID = viewModel.studio.appId;\n    const isAdded = module.relatedApplications?.some(i => i.applicationID == appID);\n    return !!isAdded;\n}\n\nfunction selectModule(module: IModule) {\n    getVersions(module.ID);\n    selectedModule.value = module;\n    selectedModule.value.currentVersion = getImportedVersion(module);\n    importNewOrChange.value = true;\n}\nfunction getVersions(moduleID: string) {\n    executor.execute(async () => {\n        moduleVersions.value = await moduleVersionUseCase.listModuleVersions(moduleID);\n    }, {loading: true})\n}\nfunction getImportedVersion(module: IModule) {\n    const applicationID = viewModel.studio.appId;\n    const importedVersion = module.relatedApplications.find(app => applicationID == app.applicationID)?.importedVersion;\n    return importedVersion;\n}\nfunction computeImportedVersion() {\n    return selectedModule.value?.currentVersion;\n}\nfunction goBack() {\n    importNewOrChange.value = false;\n    refreshTable();\n}\n\n<\/script> \n \n<template>\n    <div class="container vue-table">\n        <div v-if="!importNewOrChange">\n            <div class="table-name">\n                <span>Imported Modules</span>\n            </div>\n            <v-client-table ref="table" :data="importedModulesData" :columns="tableColumns" :options="tableOptions">\n                <template #createDate="props">\n                    <span>{{ new Intl.DateTimeFormat("tr-TR", dateOptions).format(new Date(props.row.createDate)) }}</span>\n                </template>\n                <template #ownerApp="props">\n                    <span>{{ props.row.ownerApp }}</span>\n                </template>\n                <template #relatedAppNames="props">\n                    <span>{{props.row.relatedAppNames}}</span>\n                </template>\n                <template #actions="props">\n                    <div style="display: flex; align-items: center;" >\n                        <div v-show=" getImportedVersion(props.row)" class="imported-version" @click="selectModule(props.row)">\n                            <i class="mdi mdi-pencil" style="font-size: 16px; margin-right: 4px"></i>\n                            <span>{{ getImportedVersion(props.row) }}</span>\n                        </div>\n                        <button class="remove-module" @click="remove(props.row, getImportedVersion(props.row))">\n                            <i class="mdi mdi-close-circle-outline"></i>\n                            <span class="button-tooltip" style="right: 48px; z-index: 1; width: 80px;">Remove Module</span>\n                        </button>\n                    </div>\n                </template>\n            </v-client-table>\n            <div class="table-name">\n                <span>Avaliable Modules</span>\n            </div>\n            <v-client-table ref="table" :data="avaliableModulesData" :columns="tableColumns" :options="tableOptions">\n                <template #createDate="props">\n                    <span>{{ new Intl.DateTimeFormat("tr-TR", dateOptions).format(new Date(props.row.createDate)) }}</span>\n                </template>\n                <template #ownerApp="props">\n                    <span>{{ props.row.ownerApp }}</span>\n                </template>\n                <template #relatedAppNames="props">\n                    <span>{{props.row.relatedAppNames}}</span>\n                </template>\n                <template #actions="props">\n                    <button v-show = "props.row.shareType == \'version\' " class="select-module-btn"  @click="selectModule(props.row)"><i class="mdi mdi-chevron-right"></i></button>\n                    <button v-show = "props.row.shareType == \'reference\' " class="add-ref-module-btn"  @click="add(props.row)">ADD</button>\n                </template>\n            </v-client-table>\n        </div>\n        <div v-if="importNewOrChange">\n            <div class="module-name-div" >\n                <i class="mdi mdi-arrow-left-box back-button" @click="goBack()"></i>\n                <span class="module-name">{{ selectedModule?.name }}</span>\n            </div>\n            <div>\n                <span style="color: #212121; font-size: 14px">Choose the module version you want to import.</span>\n            </div>\n            <v-client-table ref="table" :data="moduleVersions" :columns="moduleVersionTableColumns" :options="moduleVersionTableOptions">\n                <template #createDate="props">\n                    <span>{{ new Intl.DateTimeFormat("tr-TR", dateOptions).format(new Date(props.row.createDate)) }}</span>\n                </template>\n                <template #state="props">\n                    <button v-if="props.row.version == computeImportedVersion()" class="import-btn" style="color: #D5D5D5; cursor: default;">Imported</button>\n                    <button v-else class="import-btn"  @click="add(selectedModule as IModule, props.row.version)">Import</button>\n                </template>\n            </v-client-table>,\n        </div>\n    </div>\n</template> \n<style scoped>\n    @import url("../../../../styles/IDE3.css");\n\n    .container {\n        padding: 32px 20px 20px;\n    }\n    .table-name {\n        color: #151233;\n        font-size: 16px;\n        font-weight: 500;\n        line-height: 18px;\n        margin-bottom: 12px;\n    }\n    .select-module-btn {\n        border: none;\n        background: none;\n        color: #212121;\n        font-size: 20px;\n    }\n    .back-button {\n        font-size: 28px;\n        color: #151233;\n        cursor: pointer;\n        margin-right: 16px;\n    }\n    .module-name-div {\n        display: flex;\n        align-items: center;\n        margin-bottom: 16px;\n    }\n    .module-name {\n        color: #151233;\n        font-size: 16px;\n        font-weight: 500;\n    }\n    .remove-module {\n        background: none;\n        border: none;\n        font-size: 20px;\n        color: #212121;\n        width: 100%;\n        display: flex;\n        justify-content: end;\n        align-items: center;\n    }\n    .imported-version {\n        color: #2C5A86;\n        font-size: 14px;\n        font-weight: 500;\n        margin-right: 22px;\n        cursor: pointer;\n    }\n    .import-btn {\n        background: none;\n        border: none;\n        font-size: 14px;\n        font-weight: 500;\n        color: #2C5A86;\n        cursor: pointer;\n    }\n    .add-ref-module-btn {\n        font-size: 13px;\n        text-align: center;\n        color: #FFFFFF;\n        background: #151233;\n        display: flex;\n        align-items: center;\n        padding: 4px 8px;\n        border-radius: 4px;\n        border: none;\n    }\n    .remove-module:hover .button-tooltip {\n        opacity: 1;\n        visibility: visible;\n    }\n    .button-tooltip {\n        visibility: hidden;\n        position: absolute;\n        background: #757575;\n        color: #FFFFFF;\n        font-size: 9px;\n        font-family: \'Roboto\';\n        text-align: center;\n        border-radius: 4px;\n        letter-spacing: 0.2px;\n        padding: 6px 8px 6px 8px;\n        opacity: 0;\n    }\n</style>'],sourceRoot:""}]);const p=s},70985:(e,n,o)=>{o.d(n,{w:()=>t});const t=Symbol.for("ILocalization")},83240:(e,n,o)=>{o.d(n,{e:()=>t});const t=Symbol.for("IModuleVersionUseCase")},77621:(e,n,o)=>{o.r(n),o.d(n,{default:()=>W});var t=o(71093),a=o(66190),i=o(46233),r=o(73843),l=o(5627),s=o(70985),p=o(83240),d=o(29633),c=o(6488),u=o(83487),m=o(88613);const A=e=>((0,t.dD)("data-v-03aca015"),e=e(),(0,t.Cn)(),e),v={class:"container vue-table"},f={key:0},g=A((()=>(0,t._)("div",{class:"table-name"},[(0,t._)("span",null,"Imported Modules")],-1))),w={style:{display:"flex","align-items":"center"}},C=["onClick"],b=A((()=>(0,t._)("i",{class:"mdi mdi-pencil",style:{"font-size":"16px","margin-right":"4px"}},null,-1))),I=["onClick"],D=[A((()=>(0,t._)("i",{class:"mdi mdi-close-circle-outline"},null,-1))),A((()=>(0,t._)("span",{class:"button-tooltip",style:{right:"48px","z-index":"1",width:"80px"}},"Remove Module",-1)))],h=A((()=>(0,t._)("div",{class:"table-name"},[(0,t._)("span",null,"Avaliable Modules")],-1))),B=["onClick"],x=[A((()=>(0,t._)("i",{class:"mdi mdi-chevron-right"},null,-1)))],y=["onClick"],M={key:1},k={class:"module-name-div"},Q={class:"module-name"},V=A((()=>(0,t._)("div",null,[(0,t._)("span",{style:{color:"#212121","font-size":"14px"}},"Choose the module version you want to import.")],-1))),z={key:0,class:"import-btn",style:{color:"#D5D5D5",cursor:"default"}},T=["onClick"],_=(0,t.aZ)({__name:"attachModuleToApp",setup(e){const n=l.nC.resolve(m.J),o=l.nC.resolve(u.y),A=l.nC.resolve(s.w),_=l.nC.resolve(d._),F=l.nC.resolve(c.c),N=l.nC.resolve(p.e),O=(0,r.iH)([]),U=(0,r.iH)([]),S=(0,r.iH)(!1),R=(0,r.iH)(),E=(0,r.iH)([]),j=(0,r.iH)(["name","description","ownerApp","relatedAppNames","createdBy","createDate","shareType","actions"]),Z=(0,r.iH)(["version","description","createdBy","createDate","state"]),H=(0,r.iH)({filterable:!0,perPage:5,perPageValues:[],headings:{name:A.get("moduleName"),description:A.get("description"),ownerApp:A.get("ownerApp"),relatedAppNames:A.get("relatedApplications"),createdBy:A.get("createdBy"),createDate:A.get("createDate"),shareType:A.get("shareType"),actions:""},resizableColumns:!1,skin:"import-module",texts:{count:"",noResults:"No matching records"}}),P=(0,r.iH)({filterable:!1,perPage:5,perPageValues:[],headings:{version:A.get("version"),description:A.get("description"),createdBy:A.get("createdBy"),createDate:A.get("createDate"),state:""},resizableColumns:!1,skin:"module-versions",texts:{count:"",noResults:"No matching records"}}),q={month:"2-digit",day:"2-digit",year:"numeric",hour:"numeric",minute:"numeric",second:"numeric"};function Y(){o.execute((async()=>{const e=await _.listModules(),o={};n.apps.forEach((e=>o[e.ID]=e.name)),e.forEach((e=>{e.ownerApp=e.mainOwner?o[e.mainOwner]:"";const n=e.relatedApplications.map((e=>o[e.applicationID])).filter((n=>n!=e.ownerApp));e.relatedAppNames=n.join(", ")})),O.value=e.filter((e=>1==W(e)&&e.mainOwner&&e.mainOwner!=n.studio.appId)),U.value=e.filter((e=>0==W(e)&&e.shareType))}),{loading:!0})}function L(e,t){o.execute((async()=>{const o=n.studio.appId;if(t){if(W(e)){await F.detachModuleFromApplication(e,o,!0);const n=O.value.find((n=>n.ID==e.ID));n.relatedApplications=n.relatedApplications.filter((e=>e.applicationID!=o)),Y()}await F.attachModuletoApplication(e,o,!0,t),U.value.find((n=>n.ID==e.ID)).relatedApplications.push({applicationID:o,importedVersion:t}),E.value.find((e=>e.version==t)).relatedApplications.push({applicationID:o,importedVersion:t}),R.value.currentVersion=t}else await F.attachModuletoApplication(e,o,!1),U.value.find((n=>n.ID==e.ID)).relatedApplications.push({applicationID:o});Y()}),{loading:!0})}function W(e){var o;const t=n.studio.appId;return!!(null===(o=e.relatedApplications)||void 0===o?void 0:o.some((e=>e.applicationID==t)))}function J(e){var n;n=e.ID,o.execute((async()=>{E.value=await N.listModuleVersions(n)}),{loading:!0}),R.value=e,R.value.currentVersion=X(e),S.value=!0}function X(e){var o;const t=n.studio.appId;return null===(o=e.relatedApplications.find((e=>t==e.applicationID)))||void 0===o?void 0:o.importedVersion}function G(){var e;return null===(e=R.value)||void 0===e?void 0:e.currentVersion}return Y(),(e,r)=>{var l;const s=(0,t.up)("v-client-table");return(0,t.wg)(),(0,t.iD)("div",v,[S.value?(0,t.kq)("v-if",!0):((0,t.wg)(),(0,t.iD)("div",f,[g,(0,t.Wm)(s,{ref:"table",data:O.value,columns:j.value,options:H.value},{createDate:(0,t.w5)((e=>[(0,t._)("span",null,(0,a.toDisplayString)(new Intl.DateTimeFormat("tr-TR",q).format(new Date(e.row.createDate))),1)])),ownerApp:(0,t.w5)((e=>[(0,t._)("span",null,(0,a.toDisplayString)(e.row.ownerApp),1)])),relatedAppNames:(0,t.w5)((e=>[(0,t._)("span",null,(0,a.toDisplayString)(e.row.relatedAppNames),1)])),actions:(0,t.w5)((e=>[(0,t._)("div",w,[(0,t.wy)((0,t._)("div",{class:"imported-version",onClick:n=>J(e.row)},[b,(0,t._)("span",null,(0,a.toDisplayString)(X(e.row)),1)],8,C),[[i.vShow,X(e.row)]]),(0,t._)("button",{class:"remove-module",onClick:t=>{return a=e.row,i=X(e.row),void o.execute((async()=>{const e=n.studio.appId;await F.detachModuleFromApplication(a,e,!1,i);const o=O.value.find((e=>e.ID==a.ID));o.relatedApplications=o.relatedApplications.filter((n=>n.applicationID!=e)),E.value.find((e=>e.version==i)).relatedApplications=o.relatedApplications.filter((n=>n.applicationID!=e)),Y()}),{loading:!0});var a,i}},D,8,I)])])),_:1},8,["data","columns","options"]),h,(0,t.Wm)(s,{ref:"table",data:U.value,columns:j.value,options:H.value},{createDate:(0,t.w5)((e=>[(0,t._)("span",null,(0,a.toDisplayString)(new Intl.DateTimeFormat("tr-TR",q).format(new Date(e.row.createDate))),1)])),ownerApp:(0,t.w5)((e=>[(0,t._)("span",null,(0,a.toDisplayString)(e.row.ownerApp),1)])),relatedAppNames:(0,t.w5)((e=>[(0,t._)("span",null,(0,a.toDisplayString)(e.row.relatedAppNames),1)])),actions:(0,t.w5)((e=>[(0,t.wy)((0,t._)("button",{class:"select-module-btn",onClick:n=>J(e.row)},x,8,B),[[i.vShow,"version"==e.row.shareType]]),(0,t.wy)((0,t._)("button",{class:"add-ref-module-btn",onClick:n=>L(e.row)},"ADD",8,y),[[i.vShow,"reference"==e.row.shareType]])])),_:1},8,["data","columns","options"])])),S.value?((0,t.wg)(),(0,t.iD)("div",M,[(0,t._)("div",k,[(0,t._)("i",{class:"mdi mdi-arrow-left-box back-button",onClick:r[0]||(r[0]=e=>(S.value=!1,void Y()))}),(0,t._)("span",Q,(0,a.toDisplayString)(null===(l=R.value)||void 0===l?void 0:l.name),1)]),V,(0,t.Wm)(s,{ref:"table",data:E.value,columns:Z.value,options:P.value},{createDate:(0,t.w5)((e=>[(0,t._)("span",null,(0,a.toDisplayString)(new Intl.DateTimeFormat("tr-TR",q).format(new Date(e.row.createDate))),1)])),state:(0,t.w5)((e=>[e.row.version==G()?((0,t.wg)(),(0,t.iD)("button",z,"Imported")):((0,t.wg)(),(0,t.iD)("button",{key:1,class:"import-btn",onClick:n=>L(R.value,e.row.version)},"Import",8,T))])),_:1},8,["data","columns","options"]),(0,t.Uk)(", ")])):(0,t.kq)("v-if",!0)])}}});var F=o(17450),N=o.n(F),O=o(29530),U=o.n(O),S=o(16199),R=o.n(S),E=o(40458),j=o.n(E),Z=o(62916),H=o.n(Z),P=o(92165),q=o.n(P),Y=o(96826),L={};L.styleTagTransform=q(),L.setAttributes=j(),L.insert=R().bind(null,"head"),L.domAPI=U(),L.insertStyleElement=H(),N()(Y.Z,L),Y.Z&&Y.Z.locals&&Y.Z.locals;const W=(0,o(32525).Z)(_,[["__scopeId","data-v-03aca015"]])}}]);
//# sourceMappingURL=7621.js.map?ver=0.0.311_1710773334697