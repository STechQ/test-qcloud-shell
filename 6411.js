"use strict";(self.webpackChunkqcloud_shell=self.webpackChunkqcloud_shell||[]).push([[6411],{6054:(e,t,n)=>{n.d(t,{Z:()=>i});var o=n(1864),a=n.n(o),r=n(352),s=n.n(r)()(a());s.push([e.id,"\n.avatarLogo[data-v-4b439dd4] {\n    vertical-align: middle;\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n}\n.ExportBtn[data-v-4b439dd4] {\n    border: unset;\n    background: unset;\n    font-style: normal;\n    font-weight: bold;\n    font-size: 16px;\n    letter-spacing: 0.02px;\n    opacity: 1;\n    font-family: 'ROBOTO';\n}\n.VueTables__sort-icon[data-v-4b439dd4]{\n    float: right;\n    font-size: 15px;\n    font-weight: 600;\n}\n","",{version:3,sources:["webpack://./src/presentation/vue3/components/application/modelVersionDialog.vue"],names:[],mappings:";AAuGA;IACI,sBAAsB;IACtB,WAAW;IACX,YAAY;IACZ,kBAAkB;AAEtB;AAEA;IACI,aAAa;IACb,iBAAiB;IACjB,kBAAkB;IAClB,iBAAiB;IACjB,eAAe;IACf,sBAAsB;IACtB,UAAU;IACV,qBAAqB;AACzB;AACA;IACI,YAAY;IACZ,eAAe;IACf,gBAAgB;AACpB",sourcesContent:["\n<template>\n    <div v-if=\"histories\">\n        <v-client-table :data=\"histories\" :columns=\"appDatatableColumns\" :options=\"optionsDataTable\">\n            <template #createDate=\"props\">\n                <span>{{new Intl.DateTimeFormat(\"tr-TR\",options).format(new Date(props.row.createDate))}}</span>\n            </template>\n            <template #updateDate=\"props\">\n                <span>{{ new Intl.DateTimeFormat(\"tr-TR\",options).format(new Date(props.row.updateDate)) }}</span>\n            </template>\n            <template #actions=\"props\">\n                <button class='ExportBtn'\n                    :style=\"{ 'color':parseInt(props.row.version) == computedVersion() ? '#A1A1A1' : '#151233'}\"\n                    @click=\"selectVersion(props.row.version)\">{{ parseInt(props.row.version) == computedVersion() ?\n                            'Selected' : 'Select'\n                    }}</button>\n            </template>\n        </v-client-table>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { container } from 'tsyringe';\nimport { ref } from 'vue';\nimport { IModelHistoryInfo } from '../../../../domain/model/models';\nimport { IListModelVersions } from '../../../../domain/useCase/IListModelVersions';\nimport { IUseCaseExecutor } from '../../../../domain/useCase/IUseCaseExecutor';\nimport { ILocalization } from \"../../../../domain/infrastructure/ILocalization\";\nconst props = defineProps<IModelVersionProp>();\nconst histories = ref<Array<IModelHistoryInfo>>([])\nconst selectedModel = ref(props.clickedNode);\nlet allversion: any = [];\nconst appDatatableColumns = ref(['name', 'createDate', 'createdBy', 'updateDate', 'updatedBy', 'shortComment', 'version', 'actions']);\nconst localization = container.resolve<ILocalization>(ILocalization)\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\nlet options :any = { month:'2-digit',day:'2-digit', year:'numeric', hour: 'numeric', minute: 'numeric',second: 'numeric'};\nconst optionsDataTable = ref({\n    filterable: false, // omit the `id` column,\n    headings: {\n        name: localization.get('exportName'),\n        createDate: localization.get('exportcreateDate'),\n        createdBy: localization.get('exportcreatedBy'),\n        updateDate: localization.get('exportupdateDate'),\n        updatedBy: localization.get('exportupdatedBy'),\n        shortComment: localization.get('exportshortComment'),\n        version: localization.get('exportversion'),\n    },\n    dateColumns: ['createDate', 'updateDate'],\n        sortIcon:{\n            base:'mdi',\n            is:'mdi mdi-unfold-less-horizontal',\n            up: 'mdi mdi-arrow-up',\n            down: 'mdi mdi-arrow-down'\n          },\n    texts: {\n        count: '',\n        noResults: \"Saved version could not be found in the system, the last saved model of the file will be released.\"\n    }\n});\n\n\n\ninterface ISelectedModel {\n    id: string,\n    state: { checked: boolean },\n    text: string,\n    type: string,\n    version: string\n}\ninterface IModelVersionProp {\n    // versions: Array<IModelHistoryInfo>,\n    clickedNode: ISelectedModel\n}\n\ninterface IDataTable {\n    name: string,\n    lastModified: string\n    modifiedBy: string\n    version: string\n    synced: string\n}\nexecutor.execute(async () => {\n    histories.value = await executor.executeUseCase<IListModelVersions>(IListModelVersions, { modelID: selectedModel.value.id, versionType: \"major\" });\n    //  versions.value = [{ text: '1.0', value: '1.0' }, { text: '2.0', value: '2.0' }, { text: '3.0', value: '3.0' }];\n    allversion = histories.value.map(item => parseInt(item.version!))\n}, { loading: true });\n\nfunction computedVersion() {\n    if (selectedModel.value.version != 'System latest') {\n        return selectedModel.value.version\n    }\n    else {\n        return Math.max(...allversion)\n    }\n\n}\nfunction selectVersion(n: string) {\n    selectedModel.value.version = n\n}\n<\/script>\n<style>\n</style>\n<style scoped>\n.avatarLogo {\n    vertical-align: middle;\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n\n}\n\n.ExportBtn {\n    border: unset;\n    background: unset;\n    font-style: normal;\n    font-weight: bold;\n    font-size: 16px;\n    letter-spacing: 0.02px;\n    opacity: 1;\n    font-family: 'ROBOTO';\n}\n.VueTables__sort-icon{\n    float: right;\n    font-size: 15px;\n    font-weight: 600;\n}\n</style>"],sourceRoot:""}]);const i=s},6411:(e,t,n)=>{n.r(t),n.d(t,{default:()=>k});var o=n(2068),a=n(9045),r=n(1407),s=n(4217),i=n(6330),l=n(664),d=n(6595);const c={key:0},p=["onClick"],u=(0,o.aZ)({__name:"modelVersionDialog",props:{clickedNode:null},setup(e){const t=e,n=(0,r.iH)([]),u=(0,r.iH)(t.clickedNode);let m=[];const v=(0,r.iH)(["name","createDate","createdBy","updateDate","updatedBy","shortComment","version","actions"]),A=s.nC.resolve(d.w),f=s.nC.resolve(l.y);let g={month:"2-digit",day:"2-digit",year:"numeric",hour:"numeric",minute:"numeric",second:"numeric"};const I=(0,r.iH)({filterable:!1,headings:{name:A.get("exportName"),createDate:A.get("exportcreateDate"),createdBy:A.get("exportcreatedBy"),updateDate:A.get("exportupdateDate"),updatedBy:A.get("exportupdatedBy"),shortComment:A.get("exportshortComment"),version:A.get("exportversion")},dateColumns:["createDate","updateDate"],sortIcon:{base:"mdi",is:"mdi mdi-unfold-less-horizontal",up:"mdi mdi-arrow-up",down:"mdi mdi-arrow-down"},texts:{count:"",noResults:"Saved version could not be found in the system, the last saved model of the file will be released."}});function y(){return"System latest"!=u.value.version?u.value.version:Math.max(...m)}return f.execute((async()=>{n.value=await f.executeUseCase(i.u,{modelID:u.value.id,versionType:"major"}),m=n.value.map((e=>parseInt(e.version)))}),{loading:!0}),(e,t)=>{const s=(0,o.up)("v-client-table");return n.value?((0,o.wg)(),(0,o.iD)("div",c,[(0,o.Wm)(s,{data:n.value,columns:v.value,options:I.value},{createDate:(0,o.w5)((e=>[(0,o._)("span",null,(0,a.toDisplayString)(new Intl.DateTimeFormat("tr-TR",(0,r.SU)(g)).format(new Date(e.row.createDate))),1)])),updateDate:(0,o.w5)((e=>[(0,o._)("span",null,(0,a.toDisplayString)(new Intl.DateTimeFormat("tr-TR",(0,r.SU)(g)).format(new Date(e.row.updateDate))),1)])),actions:(0,o.w5)((e=>[(0,o._)("button",{class:"ExportBtn",style:(0,a.normalizeStyle)({color:parseInt(e.row.version)==y()?"#A1A1A1":"#151233"}),onClick:t=>{return n=e.row.version,void(u.value.version=n);var n}},(0,a.toDisplayString)(parseInt(e.row.version)==y()?"Selected":"Select"),13,p)])),_:1},8,["data","columns","options"])])):(0,o.kq)("v-if",!0)}}});var m=n(5701),v=n.n(m),A=n(8236),f=n.n(A),g=n(6080),I=n.n(g),y=n(6850),h=n.n(y),x=n(7182),D=n.n(x),w=n(9213),B=n.n(w),C=n(6054),b={};b.styleTagTransform=B(),b.setAttributes=h(),b.insert=I().bind(null,"head"),b.domAPI=f(),b.insertStyleElement=D(),v()(C.Z,b),C.Z&&C.Z.locals&&C.Z.locals;const k=(0,n(1419).Z)(u,[["__scopeId","data-v-4b439dd4"]])}}]);
//# sourceMappingURL=6411.js.map