{"version":3,"file":"6789.js?ver=0.0.286_1702797533329","mappings":"6HAWO,MAAMA,EAAUC,OAAOC,IAAI,U,mCCS3B,MAAMC,EAAiBF,OAAOC,IAAI,iB","sources":["webpack://qcloud_shell/./src/domain/infrastructure/IConfig.ts","webpack://qcloud_shell/./src/domain/infrastructure/IFormValidator.ts"],"sourcesContent":["import { ISettings } from \"../model/ISettings\";\nimport * as environmentData from \"../../environment\";\nexport interface IConfig {\n    readonly basePath: string;\n    readonly urlOrigin: string;\n\n    getValue<TKey extends keyof ISettings>(key: TKey): Readonly<ISettings[TKey]>;\n    getVersion(): string;\n    getPresentationLayer(): typeof environmentData[\"presentationLayer\"];\n    getEnvironmentName(): string;\n}\nexport const IConfig = Symbol.for(\"IConfig\");","export interface IFormValidatorOptions {\n    maxLength?: number;\n    minLength?: number;\n    minAndMaxLength?: { min: number; max: number; };\n    email?: boolean;\n    availableCharacters?: boolean;\n    nonSpaceCharacter?: boolean;\n    customRegex?: { regex: RegExp; message: string; };\n}\n\nexport interface IFormValidatorResponseItem {\n    key: keyof IFormValidatorOptions;\n    message: string;\n    isValid: boolean;\n}\n\nexport interface IFormValidator {\n    validate(value: string, options: IFormValidatorOptions): Array<IFormValidatorResponseItem>;\n}\n\nexport const IFormValidator = Symbol.for(\"IFormValidator\");"],"names":["IConfig","Symbol","for","IFormValidator"],"sourceRoot":""}