{"version":3,"file":"8691.js","mappings":"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","sources":["webpack://qcloud_shell/./src/presentation/vue3/components/customSelect.vue?e033","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/publishDialog.vue?c494","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/publishDialog.vue?e8b0","webpack://qcloud_shell/../node_modules/@stechquick/algae/src/helpers/cryptoHelper.ts","webpack://qcloud_shell/../node_modules/@stechquick/algae/src/helpers/plateau/plateauHelper.ts","webpack://qcloud_shell/../common/qCloudTemp/modelContants.ts","webpack://qcloud_shell/./src/domain/infrastructure/IQCloudApi.ts","webpack://qcloud_shell/./src/domain/useCase/ICreateExportJob.ts","webpack://qcloud_shell/./src/domain/useCase/IDeployJobs.ts","webpack://qcloud_shell/./src/domain/useCase/IJobUtils.ts","webpack://qcloud_shell/./src/domain/useCase/IListMultiModelVersions.ts","webpack://qcloud_shell/./src/domain/useCase/IPackJobs.ts","webpack://qcloud_shell/./src/presentation/vue3/components/customSelect.vue","webpack://qcloud_shell/./src/presentation/vue3/components/customSelect.vue?0402","webpack://qcloud_shell/./src/presentation/vue3/components/customSelect.vue?043d","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/publishDialog.vue?3bef","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/publishDialog.vue?9273","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/publishDialog.vue?2db3","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/publishDialog.vue"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n  /*You should put other CSS properties with same class names in the parent component's style tag that is not scoped.*/\\n*[data-v-237b87c3] {\\n    font-family: \\\"Roboto\\\"\\n}\\n.custom-select[data-v-237b87c3] {\\n    position: relative;\\n    width: 100%;\\n    text-align: left;\\n    outline: none;\\n}\\n.custom-select .selected[data-v-237b87c3] {\\n\\n    cursor: pointer;\\n    user-select: none;\\n}\\n.custom-select .selected i[data-v-237b87c3] {\\n    position: absolute;\\n    right: 10px;\\n    float: right;\\n}\\n.custom-select .items[data-v-237b87c3] {\\n    position: absolute;\\n    left: 0;\\n    right: 0;\\n    z-index: 1;\\n}\\n.custom-select .items .option[data-v-237b87c3] {\\n    cursor: pointer;\\n    user-select: none;\\n}\\n.custom-select .items .option.disabled div[data-v-237b87c3] {\\n    cursor: default;\\n    user-select: none;\\n    opacity: 0.4;\\n}\\n.custom-select .items .option.disabled[data-v-237b87c3]:active {\\n    pointer-events: none;\\n}\\n.selectHide[data-v-237b87c3] {\\n    display: none;\\n}\\n.button-div[data-v-237b87c3] {\\n    justify-content: center;\\n    display: grid;\\n    padding: 13px 0 19px;\\n    margin-top: 10px\\n}\\n.button[data-v-237b87c3] {\\n    cursor: pointer;\\n}\\n.custom-placeholder[data-v-237b87c3]:empty:before {\\n    content:attr(data-placeholder);\\n    color:#616161\\n}\\n.custom-placeholder[data-v-237b87c3]:focus-visible {\\n    outline: none;\\n}\\n.button-tooltip[data-v-237b87c3] {\\n    visibility: hidden;\\n    display: flex;\\n    flex-direction: row;\\n    align-items: flex-start;\\n    padding: 8px;\\n    top: 39px;\\n    left: 65px;\\n    height: 30px;\\n    position: absolute;\\n    background: #757575;\\n    color: #FFFFFF;\\n    font-size: 12px;\\n    line-height: 14px;\\n    text-align: center;\\n    border-radius: 4px;\\n    letter-spacing: 0.2px;\\n    opacity: 0;\\n    z-index: 1;\\n}\\n.custom-select .items .option:hover .button-tooltip[data-v-237b87c3] {\\n    visibility: visible;\\n    transition: opacity 0.3s ease-out 0.5s;\\n    opacity: 1;\\n}\\n  \", \"\",{\"version\":3,\"sources\":[\"webpack://./src/presentation/vue3/components/customSelect.vue\"],\"names\":[],\"mappings\":\";EAoHE,oHAAoH;AACpH;IACE;AACF;AACA;IACE,kBAAkB;IAClB,WAAW;IACX,gBAAgB;IAChB,aAAa;AACf;AAEA;;IAEE,eAAe;IACf,iBAAiB;AACnB;AAEA;IACE,kBAAkB;IAClB,WAAW;IACX,YAAY;AACd;AAEA;IACE,kBAAkB;IAClB,OAAO;IACP,QAAQ;IACR,UAAU;AACZ;AAEA;IACE,eAAe;IACf,iBAAiB;AACnB;AAEA;IACE,eAAe;IACf,iBAAiB;IACjB,YAAY;AACd;AACA;IACE,oBAAoB;AACtB;AAEA;IACE,aAAa;AACf;AACA;IACE,uBAAuB;IACvB,aAAa;IACb,oBAAoB;IACpB;AACF;AACA;IACE,eAAe;AACjB;AACA;IACE,8BAA8B;IAC9B;AACF;AACA;IACE,aAAa;AACf;AACA;IACE,kBAAkB;IAClB,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,YAAY;IACZ,SAAS;IACT,UAAU;IACV,YAAY;IACZ,kBAAkB;IAClB,mBAAmB;IACnB,cAAc;IACd,eAAe;IACf,iBAAiB;IACjB,kBAAkB;IAClB,kBAAkB;IAClB,qBAAqB;IACrB,UAAU;IACV,UAAU;AACZ;AACA;IACE,mBAAmB;IACnB,sCAAsC;IACtC,UAAU;AACZ\",\"sourcesContent\":[\"<template>\\n  <div class=\\\"custom-select\\\" :tabindex=\\\"tabindex\\\" @blur=\\\"open = false\\\">\\n    <div :class=\\\"open ? 'open selected ' + selectedClass : 'selected ' + selectedClass\\\" @click=\\\"open = !open\\\">\\n      <div v-if = \\\"selected\\\">{{ typeof selected === 'object' ? selected.name : selected }}\\n        <i class=\\\"mdi mdi-chevron-down\\\"></i>\\n      </div>\\n      <div v-else>\\n        <span contenteditable=\\\"true\\\" :data-placeholder=\\\"placeholder\\\" class=\\\"custom-placeholder\\\"></span>\\n        <i class=\\\"mdi mdi-chevron-down\\\"></i>\\n      </div>\\n    </div>\\n    <div class=\\\"items\\\" :class=\\\"{ selectHide: !open }\\\" :style=\\\"{padding: extraButton ? '10px 0 0' : '10px 0'}\\\">\\n      <div v-for=\\\"(option, i) of options\\\" :key=\\\"i\\\" @click=\\\"handleClick(option)\\\" :class=\\\"['option' , (props.disabledOptions && getDisabledOptionsText(i)) ? 'disabled' : '' ]\\\">\\n        <span v-if=\\\"props.disabledOptions && getDisabledOptionsText(i)\\\" class=\\\"button-tooltip\\\" :style=\\\"{top: (i*32) + 85 + 'px'}\\\">{{getDisabledOptionsText(i)}}</span>\\n        <div>{{typeof option === 'object' ? option.name : option }}</div>\\n      </div>\\n      <div v-if=\\\"extraButton\\\" class=\\\"button-div\\\" :style=\\\"{borderTop: extraButton ? '1px solid #EEEEEE' :  'none'}\\\" >\\n        <div v-for=\\\"(button, index) in buttons\\\" :key=\\\"index\\\">\\n            <div :id=\\\"'option-button-' + index\\\" :class=\\\"button.buttonClass + ' button'\\\" @click=\\\"open=false\\\">{{ button.buttonText }}</div>\\n        </div>\\n      </div>\\n    </div>  \\n  </div>\\n</template>\\n\\n<script setup>\\nimport { ref, watchEffect } from 'vue'\\nconst emit = defineEmits([\\\"input\\\"]);\\nconst props = defineProps({\\n  options: {\\n    type: Array,\\n    required: true,\\n  },\\n  disabledOptions: {\\n    type: Array,\\n    required: false\\n  },\\n  default: {\\n    type: String,\\n    required: false,\\n    default: '',\\n  },\\n  selectedOption: {\\n    type: String,\\n    required: false\\n  },\\n  tabindex: {\\n    type: Number,\\n    required: false,\\n    default: 0,\\n  },\\n  placeholder: {\\n    type: String,\\n    required: false,\\n    default: \\\"\\\",\\n  },\\n  selectedClass: {\\n    type: String,\\n    required: true,\\n    default: \\\"\\\",\\n  },\\n  extraButton: {\\n    type: Boolean,\\n    required: false,\\n    default: false,\\n  },\\n  buttons: {\\n    type: Array,\\n    required: false,\\n    default: () => [],\\n    validator: (value) => {\\n      return value.every(\\n        (button) =>\\n          typeof button === \\\"object\\\" &&\\n          typeof button.buttonText === \\\"string\\\" &&\\n          typeof button.buttonClass === \\\"string\\\"\\n      );\\n    },\\n  },\\n})\\n\\nconst open = ref(false);\\nconst selected = ref(props.default ? props.default : null);\\n\\nwatchEffect(() => {\\n  if(props && props.selectedOption){\\n    selected.value = props.selectedOption;\\n    open.value = false;\\n  }\\n});\\n\\nconst handleClick = (option) => {\\n    if(typeof option === 'object'){\\n      emit('input', option.id);\\n      selected.value = option;\\n      open.value = false;\\n      emit('input', selected.value.id);\\n    }\\n    else if(typeof option === 'string') {\\n      emit('input', option);\\n      selected.value = option;\\n      open.value = false;\\n      emit('input', selected.value);\\n    }\\n}\\n\\nconst getDisabledOptionsText = (index) => {\\n  const opt = props.disabledOptions.find(e => e.index == index);\\n  if(opt)\\n    return opt.cause;\\n  return undefined;\\n}\\n</script>\\n\\n  \\n  <style scoped>\\n  /*You should put other CSS properties with same class names in the parent component's style tag that is not scoped.*/\\n  * {\\n    font-family: \\\"Roboto\\\"\\n  }\\n  .custom-select {\\n    position: relative;\\n    width: 100%;\\n    text-align: left;\\n    outline: none;\\n  }\\n  \\n  .custom-select .selected {\\n\\n    cursor: pointer;\\n    user-select: none;\\n  }\\n  \\n  .custom-select .selected i {\\n    position: absolute;\\n    right: 10px;\\n    float: right;\\n  }\\n  \\n  .custom-select .items {\\n    position: absolute;\\n    left: 0;\\n    right: 0;\\n    z-index: 1;\\n  }\\n  \\n  .custom-select .items .option {\\n    cursor: pointer;\\n    user-select: none;\\n  }  \\n  \\n  .custom-select .items .option.disabled div {\\n    cursor: default;\\n    user-select: none;\\n    opacity: 0.4;\\n  } \\n  .custom-select .items .option.disabled:active {\\n    pointer-events: none;\\n  }\\n  \\n  .selectHide {\\n    display: none;\\n  }\\n  .button-div {\\n    justify-content: center;\\n    display: grid;\\n    padding: 13px 0 19px;\\n    margin-top: 10px\\n  }\\n  .button {\\n    cursor: pointer;\\n  }\\n  .custom-placeholder:empty:before {\\n    content:attr(data-placeholder);\\n    color:#616161\\n  }\\n  .custom-placeholder:focus-visible {\\n    outline: none;\\n  }\\n  .button-tooltip {\\n    visibility: hidden;\\n    display: flex;\\n    flex-direction: row;\\n    align-items: flex-start;\\n    padding: 8px;\\n    top: 39px;\\n    left: 65px;\\n    height: 30px;\\n    position: absolute;\\n    background: #757575;\\n    color: #FFFFFF;\\n    font-size: 12px;\\n    line-height: 14px;\\n    text-align: center;\\n    border-radius: 4px;\\n    letter-spacing: 0.2px;\\n    opacity: 0;\\n    z-index: 1;\\n  }\\n  .custom-select .items .option:hover .button-tooltip {\\n    visibility: visible;\\n    transition: opacity 0.3s ease-out 0.5s;\\n    opacity: 1;\\n  }\\n  </style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.container[data-v-6f7eccee] {\\n    padding: 32px 20px 20px;\\n}\\n.settings-container[data-v-6f7eccee] {\\n    position: relative;\\n    top: 0px;\\n    left: 0px;\\n}\\n.custom-text[data-v-6f7eccee] {\\n    /* position: absolute; */\\n    font-family: 'Roboto';\\n    font-style: normal;\\n    font-weight: 500;\\n    font-size: 15px;\\n    line-height: 18px;\\n    /* left: 24px; */\\n    color: #212121;\\n}\\n\\n/* .custom-text.title{\\n    top: 92px;\\n}\\n\\n.custom-text.environment{\\n    top: 174px;\\n} */\\n.radio-button[data-v-6f7eccee] {\\n    position: absolute;\\n    top: 60px;\\n    left: 20px;\\n    cursor: pointer;\\n}\\n.radio-text[data-v-6f7eccee] {\\n    position: absolute;\\n    top: 59px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n    user-select: none;\\n    cursor: pointer;\\n}\\n.existing-app-url[data-v-6f7eccee] {\\n    position: absolute;\\n    width: 760px;\\n    height: 40px;\\n    top: 114px;\\n    left: 20px;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #bcbcbc;\\n    border-radius: 4px;\\n    font: normal normal normal 14px/19px Roboto;\\n    letter-spacing: 0px;\\n    padding: 10px 0px 10px 10px;\\n}\\n.url-error[data-v-6f7eccee] {\\n    border: 1px solid red;\\n}\\n.url-disable[data-v-6f7eccee] {\\n    opacity: 0.5;\\n}\\n.existing-app-url[data-v-6f7eccee]::placeholder {\\n    color: #bcbcbc;\\n    user-select: none;\\n}\\n.modules-selected-checkbox[data-v-6f7eccee] {\\n    cursor: pointer;\\n}\\n.modules-selected-text[data-v-6f7eccee] {\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #757575;\\n    margin: 0 0 13px 30px;\\n}\\n\\n/* .modules-selected-text.deploy {\\n    top: 257px;\\n} */\\n.text-number[data-v-6f7eccee] {\\n    font: normal normal bold 14px/19px Roboto;\\n    color: #212121;\\n}\\n.modules-datatable[data-v-6f7eccee] {\\n    width: 760px;\\n    height: 288px;\\n    border: 1px solid #bcbcbc;\\n    overflow-x: hidden;\\n    overflow-y: auto;\\n    margin-bottom: 20px;\\n}\\n\\n/* .modules-datatable.deploy {\\n    top: 286px;\\n} */\\n.modules-datatable[data-v-6f7eccee]::-webkit-scrollbar {\\n    width: 4px;\\n}\\n.modules-datatable[data-v-6f7eccee]::-webkit-scrollbar-thumb {\\n    background: #bcbcbc 0% 0% no-repeat padding-box;\\n    border-radius: 10px;\\n}\\n.modules-datatable[data-v-6f7eccee]::-webkit-scrollbar-thumb:hover {\\n    background: #555;\\n}\\n.row-container[data-v-6f7eccee] {\\n    width: 100%;\\n    height: 36px;\\n    position: relative;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #e0e0e0;\\n}\\n.chevron[data-v-6f7eccee] {\\n    position: absolute;\\n    left: 4px;\\n    color: #757575;\\n    font-size: 24px;\\n}\\n.chevron.disabled[data-v-6f7eccee] {\\n    pointer-events: none;\\n    color: #D5D5D5;\\n}\\n.module-checkbox[data-v-6f7eccee] {\\n    position: absolute;\\n    top: 10px;\\n    left: 43px;\\n    cursor: pointer;\\n}\\n.module-name[data-v-6f7eccee] {\\n    position: absolute;\\n    top: 9px;\\n    left: 69px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n.module-name.disabled[data-v-6f7eccee] {\\n    color: #D5D5D5;\\n}\\n.model-checkbox[data-v-6f7eccee] {\\n    position: absolute;\\n    top: 10px;\\n    left: 59px;\\n    cursor: pointer;\\n}\\n.model-icon[data-v-6f7eccee] {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 85px;\\n}\\n.app-tier-model-icon[data-v-6f7eccee] {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 69px;\\n}\\n.app-tier-model-name[data-v-6f7eccee] {\\n    position: absolute;\\n    top: 10px;\\n    left: 87px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n.app-tier-model-name.disabled[data-v-6f7eccee] {\\n    color: #D5D5D5;\\n}\\n.model-name[data-v-6f7eccee] {\\n    position: absolute;\\n    top: 9px;\\n    left: 103px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n.model-name.disabled[data-v-6f7eccee] {\\n    color: #D5D5D5;\\n}\\n.version-text[data-v-6f7eccee] {\\n    margin: 10px 7px 10px auto;\\n    display: table;\\n    font: normal normal normal 12px/16px Roboto;\\n    color: #757575;\\n    cursor: pointer;\\n    user-select: none;\\n}\\n.version-text.disabled[data-v-6f7eccee] {\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n.version-icon[data-v-6f7eccee] {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #D5D5D5;\\n}\\n.version-icon.disabled[data-v-6f7eccee] {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #EEEEEE;\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n.footer[data-v-6f7eccee] {\\n    position: relative;\\n    width: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: end;\\n}\\n.footer.deploy[data-v-6f7eccee] {\\n    position: relative;\\n    width: 100%;\\n}\\n.footer.export[data-v-6f7eccee] {\\n    margin-top: 102px;\\n}\\n.cancel-button[data-v-6f7eccee] {\\n    border-radius: 4px;\\n    user-select: none;\\n    font-style: normal;\\n    font-weight: 500;\\n    font-family: \\\"ROBOTO\\\";\\n    font-size: 15px;\\n    color: #757575;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n.save-button[data-v-6f7eccee] {\\n    background: #151233 0% 0% no-repeat padding-box;\\n    border-radius: 4px;\\n    user-select: none;\\n    font-weight: 500;\\n    font-size: 15px;\\n    color: #ffffff;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n.mobile-publish-text[data-v-6f7eccee],\\n.web-publish-text[data-v-6f7eccee] {\\n    padding: 5px 12px;\\n    margin-bottom: 52px;\\n    width: 100%;\\n    color: #757575;\\n    font-size: 14px;\\n    background: #F5F5FA;\\n    border-radius: 4px;\\n    display: flex;\\n    align-items: center;\\n}\\n.mobile-publish-text i[data-v-6f7eccee],\\n.web-publish-text i[data-v-6f7eccee] {\\n    font-size: 24px;\\n    color: #151233;\\n    margin-right: 4px;\\n}\\n.save-button.deploy[data-v-6f7eccee] {\\n    padding: 10px 16px;\\n}\\n.button-disable .save-button[data-v-6f7eccee] {\\n    color: #757575;\\n    cursor: default;\\n}\\n.button-disable .save-button:hover+.button-tooltip[data-v-6f7eccee],\\n.start-screen:hover .button-tooltip[data-v-6f7eccee],\\n.publish-info:hover .button-tooltip[data-v-6f7eccee] {\\n    visibility: visible;\\n    transition: opacity 0.3s ease-out 1s;\\n    opacity: 1;\\n}\\n.button-tooltip[data-v-6f7eccee] {\\n    visibility: hidden;\\n    position: absolute;\\n    background: #757575;\\n    color: #FFFFFF;\\n    font-size: 11px;\\n    font-family: 'Roboto';\\n    text-align: center;\\n    border-radius: 4px;\\n    letter-spacing: 0.2px;\\n    padding: 6px 8px 6px 8px;\\n    top: 56px;\\n    left: 63px;\\n    opacity: 0;\\n}\\n.publish-info[data-v-6f7eccee] {\\n    color: #757575;\\n    font-size: 20px;\\n    margin-left: 10px;\\n}\\n.qjson-color[data-v-6f7eccee] {\\n    color: #449dd1;\\n}\\n.yaml-color[data-v-6f7eccee] {\\n    color: #449dd1;\\n}\\n.js-color[data-v-6f7eccee] {\\n    color: #449dd1;\\n}\\n.process-color[data-v-6f7eccee] {\\n    color: #007c77;\\n}\\n.bpmn-color[data-v-6f7eccee] {\\n    color: #007c77;\\n}\\n.entity-designer-color[data-v-6f7eccee] {\\n    color: #e9724c;\\n}\\n.select-environment[data-v-6f7eccee] {\\n    width: 100%;\\n    font-size: 15px;\\n    height: 40px;\\n    line-height: 40px;\\n    margin-top: 4px\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/presentation/vue3/components/dialogs/publish/publishDialog.vue\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"<template>\\n    <div class=\\\"container\\\">\\n        <div>\\n            <CheckboxComp :class=\\\"['modules-selected-checkbox', props.screenType == 'Deploy' ? 'deploy' : '']\\\"\\n                :minus=\\\"mainCheckboxState == false\\\" :check=\\\"mainCheckboxState == true\\\"\\n                @click=\\\"handleModuleCountCheckboxEvent(mainCheckboxState == undefined)\\\" />\\n            <div :class=\\\"['modules-selected-text', props.screenType == 'Deploy' ? 'deploy' : '']\\\">\\n                <span class=\\\"text-number\\\">{{  allChildCheckedModulesCount + anyChildCheckedModulesCount + checkedRootLevelModelsCount }}</span>\\n                of <span class=\\\"text-number\\\">{{ totalRootLevelCount }}</span> items selected\\n            </div>\\n        </div>\\n\\n        <div :class=\\\"['modules-datatable', props.screenType == 'Deploy' ? 'deploy' : '']\\\">\\n            <div v-for=\\\"item in items\\\">\\n                <div v-if=\\\"item?.type == 'module'\\\">\\n                    <div class=\\\"row-container\\\">\\n                        <i :class=\\\"'mdi mdi-menu' + (item.collapsed ? '-right' : '-down') + ' chevron' + (!item.children || item.children.length == 0 ? ' disabled': '')\\\"\\n                            @click=\\\"handleCollapse(item)\\\" />\\n                        <CheckboxComp class=\\\"module-checkbox\\\" :check=\\\"item.allChildChecked\\\"\\n                            :minus=\\\"!item.allChildChecked && item.anyChildChecked\\\" :disabled=\\\"item.disabled\\\"\\n                            @click=\\\"handleItemCheckEvent(item)\\\" />\\n                        <span :class=\\\"['module-name', item.disabled ? ' disabled': '']\\\">{{ item.name }}</span>\\n                    </div>\\n                    <div class=\\\"row-container\\\" v-show=\\\"!item.collapsed\\\" v-for=\\\"child in item?.children\\\">\\n                        <CheckboxComp class=\\\"model-checkbox\\\" :check=\\\"child.checked\\\" :disabled=\\\"child.disabled\\\"\\n                            @click=\\\"handleItemCheckEvent(child)\\\" />\\n                        <i v-if=\\\"child.type != 'module'\\\" :class=\\\"'model-icon ' + ModelContants.getModelVisualInfo(child.type, undefined).icon\\\" \\n                            :style=\\\"{ color: ModelContants.getModelVisualInfo(child.type, undefined).color }\\\" />\\n                        \\n                        <span :class=\\\"['model-name', child.disabled ? ' disabled' : '']\\\">{{ child.name }}</span>\\n                        <div v-if=\\\"!child.usageType || child.usageType == 'appSettings'\\\" :class=\\\"['version-text', child.disabled ? 'disabled' : '']\\\" @click=\\\"versionDialog(child)\\\">\\n                            {{ child.version ? child.version : 'No version' }} <i v-if=\\\"!child.usageType || child.usageType == 'appSettings'\\\" :class=\\\"['mdi mdi-pencil-outline version-icon', child.disabled ? 'disabled' : '']\\\"></i>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div v-else>\\n                    <div class=\\\"row-container\\\">\\n                        <CheckboxComp class=\\\"module-checkbox\\\" :check=\\\"item?.checked\\\" :disabled=\\\"item.disabled\\\"\\n                            @click=\\\"handleItemCheckEvent(item)\\\" />\\n                        <i v-if=\\\"item?.type == 'qjson'\\\" class=\\\"mdi mdi-palette qjson-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'yaml'\\\" class=\\\"mdi mdi-cog-outline yaml-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'js' || item?.type == 'css'\\\"\\n                            class=\\\"mdi mdi-cog-outline js-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'process'\\\" class=\\\"mdi mdi-auto-fix process-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'bpmn'\\\" class=\\\"mdi mdi-vector-polyline bpmn-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'entityDesigner'\\\"\\n                            class=\\\"mdi mdi-database entity-designer-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'flow'\\\" class=\\\"mdi mdi-step-forward bpmn-color app-tier-model-icon\\\" />\\n                        <span class=\\\"app-tier-model-name\\\">{{ item?.name }}\\n                            <span class=\\\"start-screen\\\" v-if=\\\"startScreen?.ID == item.id\\\">\\n                                <i class=\\\"mdi mdi-home-outline\\\"></i>\\n                                <span class=\\\"button-tooltip\\\" style=\\\"top: -30px; left: 2px; z-index: 1; width: 80px;\\\">Start\\n                                    Screen</span>\\n                            </span>\\n                        </span>\\n\\n                        <span v-if=\\\"!item.usageType\\\" :class=\\\"['version-text', item.disabled ? 'disabled' : '']\\\" @click=\\\"versionDialog(item)\\\">\\n                            {{ item.version ? item.version : 'No version' }} <i v-if=\\\"!item.usageType\\\" :class=\\\"['mdi mdi-pencil-outline version-icon', item.disabled ? 'disabled' : '']\\\"></i>\\n                        </span>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div v-if=\\\"props.screenType == 'Deploy' && props.platformSelection.web\\\" style=\\\"margin-bottom: 102px\\\">\\n            <div style=\\\"display: flex; align-items: center;\\\">\\n                <span class=\\\"custom-text environment\\\"> Publish To </span>\\n                <span class=\\\"publish-info\\\">\\n                    <i class=\\\"mdi mdi-information\\\"></i>\\n                    <span class=\\\"button-tooltip\\\" style=\\\"top: 460px; left: 96px; z-index: 1; width: 231px;\\\">Publish To\\n                        options may change depending on the module type you choose.</span>\\n                </span>\\n            </div>\\n\\n            <CustomSelect :options=\\\"publishTargets\\\" @input=\\\"onTargetSelect\\\" :selectedOption=\\\"selectedTarget\\\"\\n                :default=\\\"selectedTarget\\\" :disabledOptions=\\\"disabledOptions\\\" selectedClass=\\\"selected-environment\\\"\\n                placeholder=\\\"Select the publish environment of your application\\\" class=\\\"select-environment\\\">\\n            </CustomSelect>\\n        </div>\\n        <div v-if=\\\"props.screenType == 'Deploy' && !props.platformSelection.web && props.platformSelection.mobile\\\"\\n            class=\\\"mobile-publish-text\\\">\\n            <i class=\\\"mdi mdi-information\\\"></i>\\n            <span>Models and static files of your mobile application will be served from Public Cloud.</span>\\n\\n        </div>\\n        <div :class=\\\"['footer', props.screenType == 'Deploy' ? 'deploy' : 'export']\\\">\\n            <div :class=\\\"['cancel-button', props.screenType == 'Deploy' ? 'deploy' : '']\\\" @click=\\\"close\\\">Cancel</div>\\n            <div v-if=\\\"props.screenType == 'Export'\\\" :class=\\\"(saveButtonDisable ? ' button-disable' : '')\\\" @click=\\\"save\\\">\\n                <span class=\\\"save-button \\\">DOWNLOAD</span>\\n                <span v-if=\\\"!isThereVersion\\\" class=\\\"button-tooltip\\\" \\n                style=\\\"top: -80px; left: 626px; z-index: 1; width: 145px;\\\">There are no items ready to publish. At least one of your items must be ready to publish.</span>\\n                <span v-if=\\\"isThereVersion\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -46px; left: 640px; z-index: 1; width: 120px;\\\">You need to include your start screen.</span>\\n            </div>\\n            <div v-if=\\\"props.screenType == 'Deploy'\\\" :class=\\\"[(saveButtonDisable ? ' button-disable' : '')]\\\" @click=\\\"save\\\">\\n                <span class=\\\"save-button deploy\\\">PUBLISH</span>\\n                <span v-if=\\\"selectedTarget && isThereVersion\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -46px; left: 652px; z-index: 1; width: 120px;\\\">You need to include your start screen.</span>\\n                <span v-if=\\\"!selectedTarget\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -46px; left: 644px; z-index: 1; width: 123px;\\\">You need to select a publish environment.</span>\\n                <span v-if=\\\"!isThereVersion\\\" class=\\\"button-tooltip\\\" \\n                style=\\\"top: -95px; left: 644px; z-index: 1; width: 135px;\\\">There are no items ready to publish. At least one of your items must be ready to publish.</span>\\n            </div>\\n\\n        </div>\\n    </div>\\n</template>\\n\\n\\n<script setup lang=\\\"ts\\\">\\nimport { CryptoHelper } from \\\"@stechquick/algae/lib/helpers/cryptoHelper\\\";\\nimport { container } from \\\"../../../../../domain/core/diContainer\\\";\\nimport { IExportViewItem, IModel, IModelHistoryInfo, IModule } from \\\"../../../../../domain/model/models\\\";\\nimport { IViewModel } from \\\"../../../../../domain/viewModel/IViewModel\\\";\\nimport CheckboxComp from \\\"../../checkboxComp.vue\\\";\\nimport { ref, computed, defineAsyncComponent, watch, onMounted, onBeforeMount } from \\\"vue\\\";\\nimport { IDialog } from \\\"../../../../../domain/presentation/IDialog\\\";\\nimport { IUseCaseExecutor } from \\\"../../../../../domain/useCase/IUseCaseExecutor\\\";\\nimport { DeployType, ICreateDeployJobParam, ICreateExportJobParam, IExportItem, IExportJobData, IPlatformSelection, IProcessConfigModelItem } from \\\"../../../../../../../common/qCloudTemp/exporter\\\";\\nimport { ICreateExportJob } from \\\"../../../../../domain/useCase/ICreateExportJob\\\";\\nimport { IDeployJobs } from \\\"../../../../../domain/useCase/IDeployJobs\\\";\\nimport { IQCloudApi } from \\\"../../../../../domain/infrastructure/IQCloudApi\\\";\\nimport { IPackJobs } from \\\"../../../../../domain/useCase/IPackJobs\\\";\\nimport { IJobUtils } from \\\"../../../../../domain/useCase/IJobUtils\\\";\\nimport { IQJsonAdditionals, UsageType } from \\\"../../../../../../../common/qCloudTemp/quickCloud\\\";\\nimport { PlateauHelper } from \\\"@stechquick/algae/lib/helpers/plateau/plateauHelper\\\";\\nimport { IViewModelManager } from \\\"../../../../../domain/viewModel/IViewModelManager\\\";\\nimport CustomSelect from \\\"../../../components/customSelect.vue\\\"\\nimport { IOrganizationCloud } from \\\"../../../../../../../common/clean/domain/useCases/ICloudProvider\\\";\\nimport { IListMultiModelVersions } from \\\"../../../../../domain/useCase/IListMultiModelVersions\\\";\\nimport { ModelContants } from \\\"../../../../../../../common/qCloudTemp/modelContants\\\";\\n\\ninterface ITableData {\\n    id: string;\\n    parentId?: string;\\n    collapsed?: boolean;\\n    anyChildChecked?: boolean;\\n    allChildChecked?: boolean;\\n    checked?: boolean;\\n    name: string;\\n    type: IModel[\\\"modelType\\\"] | IModule[\\\"objectType\\\"];\\n    version?: string;\\n    disabled?: boolean | true;\\n    children?: Array<ITableData>;\\n    usageType?: UsageType;\\n}\\n\\ninterface IDeployScreenAdditionalProps {\\n    screenType: \\\"Export\\\" | \\\"Deploy\\\";\\n    platformSelection: IPlatformSelection;\\n}\\n\\ninterface IDisabledOptions {\\n    index: number\\n    cause: string;\\n}\\n\\nconst props = defineProps<IDeployScreenAdditionalProps>();\\nconst viewModel = container.resolve<IViewModel>(IViewModel);\\nconst viewModelManager = container.resolve<IViewModelManager>(IViewModelManager);\\nconst dialog = container.resolve<IDialog>(IDialog);\\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\\nconst deployJobsUseCase = container.resolve<IDeployJobs>(IDeployJobs);\\nconst qcloudApi = container.resolve<IQCloudApi>(IQCloudApi);\\nconst packJobsUseCase = container.resolve<IPackJobs>(IPackJobs);\\nconst jobUtils = container.resolve<IJobUtils>(IJobUtils);\\nconst emit = defineEmits([\\\"close\\\"]);\\nconst items = ref<Array<ITableData>>([]);\\nconst validations = ref<boolean>(true);\\nconst selectedTarget = ref<string>(\\\"\\\");\\nconst disabledOptions = ref<Array<IDisabledOptions>>();\\nconst publishTargets = ref<Array<string>>();\\nconst modelHistories = ref<Map<string, Array<IModelHistoryInfo>>>();\\nconst startScreen = ref<IModel>();\\n\\n\\nonMounted(async () => {\\n    await initVersions();\\n    handleItems();\\n    props.screenType == \\\"Deploy\\\" && syncPublishTargets();\\n    validations.value = validate();\\n})\\n\\nconst allChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == \\\"module\\\" && e.allChildChecked).length);\\nconst anyChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == \\\"module\\\" && !e.allChildChecked && e.anyChildChecked).length);\\nconst checkedRootLevelModelsCount = computed(() => items.value.filter(e => e.type != \\\"module\\\" && e.checked).length);\\nconst totalRootLevelCount = computed(() => items.value.length);\\nconst saveButtonDisable = computed(() => (props.screenType == \\\"Deploy\\\" && props.platformSelection.web && selectedTarget.value == \\\"\\\") || !validations.value || !items.value.some((item) => item.checked || item.anyChildChecked) || (props.screenType == \\\"Export\\\" && !(items.value.find((item) => item.id == startScreen.value?.ID))?.checked));\\nconst mainCheckboxState = computed(() => items.value.length == allChildCheckedModulesCount.value ? true \\n        : (anyChildCheckedModulesCount.value + checkedRootLevelModelsCount.value > 0  ? false : undefined));\\nconst isThereVersion = computed(() => checkMaxVersionOfAllItems());\\nfunction validate() {\\n    let result = true;\\n    const modules = items.value.filter(e => e.type == \\\"module\\\" && e.anyChildChecked);\\n    const appLayerItems = items.value.filter(e => e.type == \\\"qjson\\\" && e.checked);\\n\\n    startScreen.value = (viewModel.studio.items as Array<IModel>).find(item => item.isRootPage);\\n    if(!startScreen.value)\\n        return false;\\n\\n    if (props.screenType == \\\"Deploy\\\") {\\n        if (modules.length > 0)\\n            result = modules.map(e => e.children).filter(e => !e?.find(f => f.type == \\\"entityDesigner\\\" && f.checked)).length <= 0\\n\\n        let isApplicationWillDeploy = appLayerItems.length > 0;\\n        if (isApplicationWillDeploy) {\\n            result = appLayerItems\\n                .map(e => viewModel.studio.items.find(item => item.ID == e.id) as IModel)\\n                .findIndex(e => ((e.additionals as IQJsonAdditionals).isRootPage)) != -1;\\n        }\\n    }\\n\\n    return result;\\n}\\n\\nfunction mobileFilter(model: IModel) {\\n    return props.platformSelection.web || !props.platformSelection.mobile ||\\n        !(model.modelType == \\\"bpmn\\\" || model.modelType == \\\"entityDesigner\\\" || model.modelType == \\\"process\\\");\\n}\\n\\nasync function initVersions() {\\n    const modelIDs = Array<string>();\\n    viewModelManager.flatMapItems(viewModel.studio.items, (item, path) => {\\n        if (item.objectType != \\\"model\\\") { return; }\\n        modelIDs.push(item.ID);\\n        return item;\\n    });\\n\\n    modelHistories.value = await executor.executeUseCase<IListMultiModelVersions>(IListMultiModelVersions, { modelIDs });\\n}\\n\\nasync function handleItems() {\\n    items.value = viewModel.studio.items\\n        .filter((item) => item.objectType == \\\"module\\\" && item.children.length > 0)\\n        .map((item) => {\\n            const tableData: ITableData = {\\n                id: item.ID,\\n                collapsed: true,\\n                name: item.name,\\n                type: \\\"module\\\",\\n                children: (item as IModule).children\\n                    .filter((child) => child.objectType == \\\"model\\\")\\n                    .filter(e => !props || props.screenType == \\\"Export\\\" || mobileFilter(e as IModel))\\n                    .map(child => {\\n                        const maxVersion = getItemMaxVersion(child as IModel)\\n                        return {\\n                            id: child.ID,\\n                            parentId: item.ID,\\n                            checked: maxVersion != undefined,\\n                            disabled: !maxVersion,\\n                            name: child.name,\\n                            type: (child as IModel).modelType,\\n                            version: maxVersion\\n                        } as ITableData\\n                    })\\n            }\\n            handleParentCheckedStatus(tableData);\\n            return tableData;\\n        });\\n\\n    viewModel.studio.items\\n        .filter((item) => item.objectType == \\\"model\\\" && item.usageType != \\\"appSettings\\\" && item.usageType != \\\"appAssetList\\\")\\n        .forEach((item) => {\\n            const maxVersion = getItemMaxVersion(item as IModel)\\n            items.value.push(\\n                {\\n                    id: item.ID,\\n                    checked: maxVersion != undefined,\\n                    name: item.name,\\n                    disabled: !maxVersion,\\n                    type: (item as IModel).modelType,\\n                    version: maxVersion,\\n                });\\n        });\\n    const uiSettingsID = CryptoHelper.CreateGuid();\\n    const appSettings = viewModel.studio.items.filter((item) => item.objectType == \\\"model\\\" && item.usageType == \\\"appSettings\\\") as Array<IModel>;\\n    const uiSettings: ITableData = {\\n        id: uiSettingsID,\\n        collapsed: true,\\n        name: \\\"UI Settings\\\",\\n        type: \\\"module\\\",\\n        children: appSettings.map(settings => {\\n            const maxVersion = getItemMaxVersion(settings as IModel)\\n            return {\\n                id: settings.ID,\\n                parentId: uiSettingsID,\\n                name: settings.name,\\n                type: (settings as IModel).modelType,\\n                checked: maxVersion != undefined,\\n                usageType: settings?.usageType,\\n                disabled: !maxVersion,\\n                version: maxVersion,\\n            }\\n        }) as Array<ITableData>,\\n    };\\n    handleParentCheckedStatus(uiSettings);\\n\\n    const uiAssetID = CryptoHelper.CreateGuid();\\n    const appAssetList = viewModel.studio.items.filter((item) => item.objectType == \\\"model\\\" && item.usageType == \\\"appAssetList\\\") as Array<IModel>;\\n    const uiAssetList: ITableData = {\\n        id: uiAssetID,\\n        collapsed: true,\\n        name: \\\"Styled Components\\\",\\n        type: \\\"module\\\",\\n        anyChildChecked: true,\\n        allChildChecked: true,\\n        children: appAssetList.map((asset) => ({\\n            id: asset.ID,\\n            parentId: uiSettingsID,\\n            name: asset.name,\\n            type: (asset as IModel).modelType,\\n            checked: true,\\n            usageType: asset?.usageType,\\n        })) as Array<ITableData>,\\n    };\\n    handleParentCheckedStatus(uiAssetList);\\n\\n    items.value.unshift(uiAssetList);\\n    items.value.unshift(uiSettings);\\n    console.log(\\\"items => \\\", items.value);\\n}\\n\\nfunction getItemMaxVersion(item: IModel): string | undefined {\\n    if (!modelHistories.value?.has(item.ID))\\n        return undefined;\\n\\n    const versions = modelHistories.value.get(item.ID);\\n    if (!versions)\\n        return undefined;\\n\\n    const findMaxVersion = (versions: Array<string>) => {\\n        const versionNumbers = versions.map(v => {\\n            const parts: Array<string> = v.split(\\\".\\\");\\n            return parseInt(parts[0]) * 10 + parseInt(parts[1]) * 1;\\n        })\\n\\n        versionNumbers.sort((a, b) => b - a);\\n\\n        const maxVersion = versionNumbers[0];\\n        return `${Math.floor(maxVersion / 10)}.${maxVersion % 10}`;\\n    }\\n\\n    return findMaxVersion(versions.map(e => e.version!));\\n\\n}\\nfunction checkMaxVersionOfAllItems() {\\n    let isThereVersion: boolean = false;\\n    items.value.forEach(item => {\\n        if(item.type == \\\"module\\\") {\\n            item.children?.forEach(child => {\\n                if(child.version) {\\n                    isThereVersion = true;\\n                }\\n                \\n            })\\n        }\\n        else {\\n            if(item.version) {\\n                isThereVersion = true;\\n            }\\n        }\\n    })\\n    return isThereVersion;\\n}\\nfunction handleModuleCountCheckboxEvent(value: boolean) {\\n    items.value.filter(e => !e.disabled).forEach((item) => {\\n        item.checked = value;\\n        const allItemsCheckable = item.allChildChecked != undefined && item.children && item.children.length > 0 && !item.children.some(c => c.disabled);\\n        if (allItemsCheckable) item.allChildChecked = value;\\n        if (item.anyChildChecked != undefined) item.anyChildChecked = value;\\n        if (item.children) item.children.filter(c => !c.disabled).forEach((child) => (child.checked = value));\\n    });\\n\\n    validations.value = validate();\\n    props.screenType == \\\"Deploy\\\" && syncPublishTargets();\\n}\\n\\nfunction handleCollapse(item: ITableData) {\\n    item.collapsed = !item.collapsed;\\n}\\n\\nfunction handleItemCheckEvent(item: ITableData) {\\n    if(item.disabled)\\n        return;\\n\\n    if (item.type != \\\"module\\\") {\\n        item.checked = !item.checked;\\n        if (item.parentId) {\\n            const parent = items.value.find((i) => i.id == item.parentId)!;\\n            handleParentCheckedStatus(parent);\\n        }\\n    } else {\\n        if (item.children && item.children.filter(c => !c.disabled).length > 0) {\\n            if (item.anyChildChecked) {\\n                item.children?.filter(c => !c.disabled).forEach((child) => (child.checked = false));\\n                item.checked = false;\\n            } else {\\n                item.children?.filter(e => !e.disabled).forEach((child) => (child.checked = true));\\n                item.checked = true;\\n            }\\n            handleParentCheckedStatus(item);\\n        }\\n        else {\\n            item.checked = !item.checked;\\n            item.allChildChecked = false;\\n        }\\n    }\\n\\n    validations.value = validate();\\n    props.screenType == \\\"Deploy\\\" && syncPublishTargets();\\n}\\n\\nfunction handleParentCheckedStatus(item: ITableData) {\\n    item.disabled = item.children && (item.children.length == 0 || !item.children?.some(child => !child.disabled))\\n    item.allChildChecked = item.children && item.children.length > 0 && !item.children.some((child) => !child.checked || child.disabled);\\n    item.anyChildChecked = item.children?.some((child) => child.checked && !child.disabled);\\n}\\n\\nfunction syncPublishTargets() {\\n    publishTargets.value = []; disabledOptions.value = [];\\n\\n    const targets = viewModel.user?.selectedOrganization?.actions?.publish?.targets;\\n    if (!targets)\\n        return;\\n\\n    const isSelectAnyItem = items.value.find(e => e.anyChildChecked || e.checked);\\n    if (!isSelectAnyItem) {\\n        publishTargets.value = Object.entries(targets).map(e => cloudTargetMap(e[0])!);\\n        const disabledOptionList = Array<IDisabledOptions>();\\n        for (let i = 0; i < publishTargets.value.length; i++) {\\n            disabledOptionList.push({ index: i, cause: \\\"You need to include items to publish.\\\" })\\n        }\\n        disabledOptions.value = disabledOptionList;\\n        return;\\n    }\\n\\n    const checkedPublishTargets = checkAndSetDisabledCauses(targets);\\n    const sortedTargets = checkedPublishTargets.sort((e, f) => (!e.cause === !f.cause) ? 0 : e.cause ? 1 : -1);\\n\\n    const disabledOptionList = Array<IDisabledOptions>();\\n    for (let i = 0; i < sortedTargets.length; i++) {\\n        const cause = sortedTargets[i].cause;\\n        if (cause) disabledOptionList.push({ index: i, cause })\\n    }\\n    disabledOptions.value = disabledOptionList;\\n    publishTargets.value = sortedTargets.map(e => e.optionName);\\n\\n    selectedTarget.value = !sortedTargets[0].cause ? sortedTargets[0].optionName : \\\"\\\";\\n}\\n\\nfunction checkAndSetDisabledCauses(targets: Record<keyof IOrganizationCloud, boolean>) {\\n    const list = Array<{ optionName: string, cause?: string }>();\\n\\n    Object.keys(targets).forEach(e => {\\n        const key = e as keyof IOrganizationCloud;\\n        const value = targets[key];\\n        const optionName = cloudTargetMap(key)!;\\n        if (!value)\\n            return list.push({ optionName, cause: \\\"You are not authorized to publish to this target.\\\" });\\n\\n\\n        switch (key) {\\n            case \\\"azure\\\":\\n                const traverseSelectedItems = (status: boolean, items?: Array<ITableData>) => {\\n                    if (!items || items.length == 0) { return status; }\\n                    for (const item of items) {\\n                        if (item.checked || item.anyChildChecked) {\\n                            if (item.type == \\\"module\\\") {\\n                                status = traverseSelectedItems(status, item.children);\\n                            }\\n                            if (item.type == \\\"entityDesigner\\\" || item.type == \\\"bpmn\\\" || item.type == \\\"process\\\") {\\n                                status = false;\\n                                break;\\n                            }\\n                        }\\n\\n                    }\\n                    return status;\\n                }\\n\\n                const status = traverseSelectedItems(true, items.value);\\n                if (!status)\\n                    return list.push({ optionName, cause: \\\"Entity and process models cannot be published to this target.\\\" });\\n                break;\\n            case \\\"plateauGCP\\\":\\n                if (props.platformSelection.mobile)\\n                    return list.push({ optionName, cause: \\\"This target is not available for mobile publishing.\\\" });\\n\\n                const modulesHasNotAnEDModel =  items.value.filter(e => e.name != \\\"UI Settings\\\").find(e => e.type == \\\"module\\\" && e.anyChildChecked && e.children?.some(c => c.checked && (c.type == \\\"bpmn\\\" || c.type == \\\"process\\\")) && !e.children?.some(c => c.type == \\\"entityDesigner\\\" && c.checked))\\n                if (modulesHasNotAnEDModel)\\n                    return list.push({optionName, cause: `This target not available. Selected module '${modulesHasNotAnEDModel.name}' has not any Data Model.`})\\n                break;\\n        }\\n\\n        list.push({ optionName });\\n    })\\n\\n    return list;\\n}\\n\\nfunction versionDialog(item: ITableData) {\\n    const clickedNode = { id: item.id, state: { checked: item.checked }, text: item.name, type: item.type, version: item.version };\\n    const hasAnyVersion = modelHistories.value?.has(item.id);\\n    const options = { clickedNode, cb: (version: string) => { item.version = version } } as any;\\n    if (hasAnyVersion) {\\n        options.versions = modelHistories.value?.get(item.id)\\n    }\\n    dialog.showDialog(\\n        defineAsyncComponent(() => import(\\\"../../application/modelVersionDialog.vue\\\")),\\n        { closable: true, title: \\\"Change Version\\\", width: \\\"900px\\\", maxHeight: \\\"500px\\\", overflow: \\\"auto\\\" }, options\\n    );\\n}\\n\\nfunction close() {\\n    emit(\\\"close\\\");\\n}\\n\\nasync function save() {\\n    executor.execute(\\n        async () => {\\n            const initAsGroup = async () => {\\n                const groupID = CryptoHelper.CreateGuid();\\n                await initHistory(groupID);\\n                await packJob(groupID);\\n                return groupID;\\n            }\\n\\n            const isFlowBackend = viewModel.user?.selectedOrganization?.applications.flow;\\n\\n            switch (props.screenType) {\\n                case \\\"Export\\\":\\n                    //FIXME: Export backende tasinmali. layer, groupId backendde setlenmeli.\\n                    if(isFlowBackend) {\\n                        const deployItems = await createAzureDeployItems();\\n                        await packJobsUseCase.createPackJobs([{\\n                            appID: viewModel.studio.appId,\\n                            exportType: \\\"qui\\\",\\n                            selectionData: deployItems\\n                        }]);\\n                        break;\\n                    }\\n\\n                    const groupID = await initAsGroup();\\n                    await createExportJob(groupID);\\n                    break;\\n                case \\\"Deploy\\\":\\n                    if(props.platformSelection.mobile) {\\n                        const deployItems = await createAzureDeployItems();\\n                        await deployJobsUseCase.createAppDeployJob(deployItems, props.platformSelection);\\n                    }\\n                    switch (cloudTargetMap(selectedTarget.value!, true) as keyof IOrganizationCloud) {\\n                        case \\\"plateauGCP\\\":\\n                            const groupID = await initAsGroup();\\n                            await createDeployJob(groupID);\\n                            break;\\n                        case \\\"azure\\\":\\n                            const deployItems = await createAzureDeployItems();\\n                            await deployJobsUseCase.createAppDeployJob(deployItems, props.platformSelection);\\n                            break;\\n                    }\\n            }\\n            emit(\\\"close\\\");\\n        },\\n        { loading: true });\\n}\\n\\nasync function createAzureDeployItems() {\\n    const deployItems: Array<IExportItem> = [];\\n    const itemIdObj: Record<string, { item: IModel, path: string }> = {};\\n\\n    viewModelManager.flatMapItems(viewModel.studio.items, (item, path) => {\\n        if (item.objectType != \\\"model\\\") { return; }\\n        itemIdObj[item.ID] = { item, path };\\n        return item;\\n    });\\n\\n    const traverseSelectedItems = (items?: Array<ITableData>) => {\\n        if (!items || items.length == 0) { return; }\\n        items.filter(e => e.checked || e.anyChildChecked).forEach(item => {\\n            if (item.type == \\\"module\\\") {\\n                traverseSelectedItems(item.children);\\n                return;\\n            }\\n\\n            const itemMap = itemIdObj[item.id];\\n\\n            const deployItem: IExportItem = {\\n                id: item.id,\\n                name: jobUtils.getFileFullname(itemMap.item),\\n                path: itemMap.path,\\n                type: jobUtils.getItemType(itemMap.item),\\n                ver: item.version || \\\"latest\\\",\\n                isRootPage: itemMap.item.isRootPage,\\n                ownerType: 'application',\\n                ownerName: viewModel.studio.appName,\\n                size: itemMap.item.size,\\n            };\\n            deployItems.push(deployItem)\\n        });\\n    };\\n\\n    traverseSelectedItems(items.value);\\n\\n    return deployItems;\\n}\\n\\nasync function initHistory(groupID: string) {\\n    return qcloudApi.initPublishHistory({\\n        appID: viewModel.studio.appId,\\n        ID: groupID,\\n        isMultiStep: true,\\n        type: props.screenType == \\\"Deploy\\\" ? \\\"publish\\\" : \\\"download\\\",\\n        cloudProvider: props.screenType == \\\"Deploy\\\" ? cloudTargetMap(selectedTarget.value!, true) as keyof IOrganizationCloud : undefined,\\n        platform: props.platformSelection\\n    });\\n}\\n\\nasync function packJob(groupID: string) {\\n    let exportItemMap = new Map<string, Array<IExportItem>>();\\n    const appName = viewModel.studio.appName;\\n\\n    const itemIdObj: Record<string, { item: IModel, path: string }> = {};\\n    viewModelManager.flatMapItems(viewModel.studio.items, (item, path) => {\\n        if (item.objectType != \\\"model\\\") { return; }\\n        itemIdObj[item.ID] = { item, path };\\n        return item;\\n    });\\n\\n    const createExportObject = (tableItem: ITableData) => {\\n        const item = itemIdObj[tableItem.id].item;\\n        const isAppItem = item.modelType == 'qjson' ;\\n        return {\\n            id: tableItem.id,\\n            ver: tableItem.version,\\n            type: jobUtils.getItemType(item),\\n            path: itemIdObj[tableItem.id].path,\\n            name: jobUtils.getFileFullname(item),\\n            ownerType: isAppItem ? 'application' : item.parent.objectType,\\n            ownerName: isAppItem ? appName : item.parent.name,\\n        } as IExportItem;\\n    }\\n\\n    const addToExportItem = (key: string, obj: IExportItem) => {\\n        key = obj.ownerType == 'module' ? `mdl-${key}` : key; // for same named module and app\\n        let items = exportItemMap.get(key);\\n        if(items && items.length > 0){\\n            items.push(obj);\\n            exportItemMap.set(key, items);\\n        } else\\n            exportItemMap.set(key, [obj]);\\n    }\\n\\n    items.value.filter(e => e.checked ?? e.anyChildChecked).forEach((asset) => {\\n        if (asset.type == 'qjson') {\\n            const obj = createExportObject(asset);\\n            const isRootPage = viewModel.studio.items.find(i => i.objectType == \\\"model\\\" && i.modelType == \\\"qjson\\\" && (i.additionals as IQJsonAdditionals).isRootPage && i.ID == asset.id);\\n            obj.isRootPage = isRootPage ? true : undefined;\\n\\n            addToExportItem(appName, obj);\\n        }\\n        else if (asset.type == 'module') {\\n            asset.children!.filter(e => e.checked).forEach(child => {\\n                const obj = createExportObject(child);\\n                if (obj.type == \\\"entityDesigner\\\")\\n                    obj.entityGenerationDomain = viewModel.user!.selectedOrganization!.actions?.entityGenerationDomain;\\n\\n                const useSeperateModule = obj.type == 'bpmn' || obj.type == 'entityDesigner' || obj.type == 'process';\\n                addToExportItem(useSeperateModule ? asset.name : appName, obj);\\n            });\\n        }\\n    })\\n\\n    let jobs = Array<ICreateExportJobParam>();\\n    exportItemMap.forEach((v, k) => {\\n        jobs.push({\\n            appID: viewModel.studio.appId,\\n            exportType: \\\"qui\\\",\\n            selectionData: v,\\n            cause: props.screenType == 'Export' ? 'download': \\\"publish\\\",\\n            layer: 0,\\n            groupID: groupID\\n        })\\n    })\\n\\n    await packJobsUseCase.createPackJobs(jobs);\\n}\\n\\nasync function createExportJob(groupID: string) {\\n    await executor.executeUseCase<ICreateExportJob>(ICreateExportJob, {\\n        appID: viewModel.studio.appId,\\n        exportType: \\\"qui\\\",\\n        selectionData: [],\\n        layer: 1,\\n        groupID: groupID\\n    });\\n}\\n\\nasync function createDeployJob(groupID: string) {\\n    //1-(n) L1- deployJob(build)\\n    let packages = await qcloudApi.getExportJobsByGroupId({ groupID })\\n        .then(jobs => jobs.jobs.map(e => {\\n            const jobData = e.jobData as IExportJobData;\\n            return {\\n                ownerName: jobData.items[0].ownerName,\\n                jobID: e.jobID,\\n                type: jobData.items[0].ownerType,\\n                mainDir: getDeployableArchiveRoot(jobData)\\n            }\\n        }));\\n\\n    if (!packages || packages.length <= 0)\\n        return;\\n\\n    let buildJobs = Array<ICreateDeployJobParam>();\\n    packages.forEach(pack => {\\n        buildJobs.push({\\n            appID: viewModel.studio.appId,\\n            type: \\\"build\\\",\\n            package: {\\n                type: pack.type as DeployType,\\n                name: pack.ownerName!,\\n                mainDir: pack.mainDir!,\\n                zip: `${pack.jobID}.zip`,\\n            },\\n            layer: 1,\\n            groupID: groupID\\n        })\\n    })\\n\\n    await deployJobsUseCase.createBuildJobs(buildJobs);\\n\\n    //2-(1) L2- deployJob(deployment)\\n    let jobParam: ICreateDeployJobParam = {\\n        appID: viewModel.studio.appId,\\n        type: \\\"deployment\\\",\\n        deployConfig: {\\n            process: {\\n                configModelIDs: getProcessConfigList(),\\n                enabled: items.value.some(e => e.anyChildChecked && e.children?.some(e => e.checked && e.type == \\\"bpmn\\\"))\\n            }\\n        },\\n        layer: 2,\\n        groupID: groupID\\n    }\\n\\n    await deployJobsUseCase.startDeploymentJob(jobParam);\\n}\\n\\nfunction getProcessConfigList() {\\n    let processConfigList = Array<IProcessConfigModelItem>();\\n    items.value.forEach((asset) => {\\n        if (asset.type == \\\"module\\\" && asset.anyChildChecked && asset.children) {\\n            const usingService = asset.children.find(c => c.type == \\\"entityDesigner\\\");\\n            if (!usingService)\\n                return;\\n\\n            const serviceName = PlateauHelper.getServiceNameFromModel(usingService.name);\\n            asset.children.forEach(child => {\\n                if (child.checked && child.type == \\\"process\\\") {\\n                    processConfigList.push({\\n                        moduleName: serviceName,\\n                        modelId: child.id,\\n                        modelName: child.name\\n                    })\\n                }\\n            })\\n        }\\n    })\\n    return processConfigList;\\n}\\n\\nfunction getDeployableArchiveRoot(jobData: IExportJobData) {\\n    if (jobData.items[0].ownerType == \\\"module\\\") {\\n        let edModel = jobData.items.find(e => e.type == \\\"entityDesigner\\\");\\n        if (!edModel)\\n            throw new Error(\\\"!!! this module cannot deploy. Because its have not a service\\\");\\n        return PlateauHelper.getServiceNameFromModel(edModel.name);\\n    }\\n    return PlateauHelper.getQuiPackageNameFromAppName(jobData.app.name);\\n}\\n\\nfunction cloudTargetMap(name: string, pureVal: boolean = false) {\\n    const map: Record<keyof IOrganizationCloud, string> = { azure: \\\"Public Cloud\\\", plateauGCP: \\\"Plateau Platform Playground\\\" };\\n    if (pureVal) {\\n        return Object.keys(map).find(e => {\\n            if (map[e as keyof IOrganizationCloud] === name) {\\n                return true;\\n            }\\n        })\\n    } else {\\n        let key = Object.keys(map).includes(name);\\n        if (!key)\\n            return;\\n        return map[name as keyof IOrganizationCloud];\\n    }\\n}\\n\\nfunction onTargetSelect(value: string) {\\n    selectedTarget.value = value\\n}\\n\\n</script>\\n\\n\\n<style scoped>\\n.container {\\n    padding: 32px 20px 20px;\\n}\\n\\n.settings-container {\\n    position: relative;\\n    top: 0px;\\n    left: 0px;\\n}\\n\\n.custom-text {\\n    /* position: absolute; */\\n    font-family: 'Roboto';\\n    font-style: normal;\\n    font-weight: 500;\\n    font-size: 15px;\\n    line-height: 18px;\\n    /* left: 24px; */\\n    color: #212121;\\n}\\n\\n/* .custom-text.title{\\n    top: 92px;\\n}\\n\\n.custom-text.environment{\\n    top: 174px;\\n} */\\n\\n.radio-button {\\n    position: absolute;\\n    top: 60px;\\n    left: 20px;\\n    cursor: pointer;\\n}\\n\\n.radio-text {\\n    position: absolute;\\n    top: 59px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n    user-select: none;\\n    cursor: pointer;\\n}\\n\\n.existing-app-url {\\n    position: absolute;\\n    width: 760px;\\n    height: 40px;\\n    top: 114px;\\n    left: 20px;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #bcbcbc;\\n    border-radius: 4px;\\n    font: normal normal normal 14px/19px Roboto;\\n    letter-spacing: 0px;\\n    padding: 10px 0px 10px 10px;\\n}\\n\\n.url-error {\\n    border: 1px solid red;\\n}\\n\\n.url-disable {\\n    opacity: 0.5;\\n}\\n\\n.existing-app-url::placeholder {\\n    color: #bcbcbc;\\n    user-select: none;\\n}\\n\\n.modules-selected-checkbox {\\n    cursor: pointer;\\n}\\n\\n.modules-selected-text {\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #757575;\\n    margin: 0 0 13px 30px;\\n    ;\\n}\\n\\n/* .modules-selected-text.deploy {\\n    top: 257px;\\n} */\\n\\n.text-number {\\n    font: normal normal bold 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.modules-datatable {\\n    width: 760px;\\n    height: 288px;\\n    border: 1px solid #bcbcbc;\\n    overflow-x: hidden;\\n    overflow-y: auto;\\n    margin-bottom: 20px;\\n}\\n\\n/* .modules-datatable.deploy {\\n    top: 286px;\\n} */\\n\\n.modules-datatable::-webkit-scrollbar {\\n    width: 4px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar-thumb {\\n    background: #bcbcbc 0% 0% no-repeat padding-box;\\n    border-radius: 10px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar-thumb:hover {\\n    background: #555;\\n}\\n\\n.row-container {\\n    width: 100%;\\n    height: 36px;\\n    position: relative;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #e0e0e0;\\n}\\n\\n.chevron {\\n    position: absolute;\\n    left: 4px;\\n    color: #757575;\\n    font-size: 24px;\\n}\\n\\n.chevron.disabled {\\n    pointer-events: none;\\n    color: #D5D5D5;\\n}\\n\\n.module-checkbox {\\n    position: absolute;\\n    top: 10px;\\n    left: 43px;\\n    cursor: pointer;\\n}\\n\\n.module-name {\\n    position: absolute;\\n    top: 9px;\\n    left: 69px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.module-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.model-checkbox {\\n    position: absolute;\\n    top: 10px;\\n    left: 59px;\\n    cursor: pointer;\\n}\\n\\n.model-icon {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 85px;\\n}\\n\\n.app-tier-model-icon {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 69px;\\n}\\n\\n.app-tier-model-name {\\n    position: absolute;\\n    top: 10px;\\n    left: 87px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.app-tier-model-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.model-name {\\n    position: absolute;\\n    top: 9px;\\n    left: 103px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.model-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.version-text {\\n    margin: 10px 7px 10px auto;\\n    display: table;\\n    font: normal normal normal 12px/16px Roboto;\\n    color: #757575;\\n    cursor: pointer;\\n    user-select: none;\\n}\\n\\n.version-text.disabled {\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n\\n.version-icon {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #D5D5D5;\\n}\\n\\n.version-icon.disabled {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #EEEEEE;\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n\\n.footer {\\n    position: relative;\\n    width: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: end;\\n}\\n\\n.footer.deploy {\\n    position: relative;\\n    width: 100%;\\n}\\n\\n.footer.export {\\n    margin-top: 102px;\\n}\\n\\n.cancel-button {\\n    border-radius: 4px;\\n    user-select: none;\\n    font-style: normal;\\n    font-weight: 500;\\n    font-family: \\\"ROBOTO\\\";\\n    font-size: 15px;\\n    color: #757575;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n\\n\\n\\n.save-button {\\n    background: #151233 0% 0% no-repeat padding-box;\\n    border-radius: 4px;\\n    user-select: none;\\n    font-weight: 500;\\n    font-size: 15px;\\n    color: #ffffff;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n\\n.mobile-publish-text,\\n.web-publish-text {\\n    padding: 5px 12px;\\n    margin-bottom: 52px;\\n    width: 100%;\\n    color: #757575;\\n    font-size: 14px;\\n    background: #F5F5FA;\\n    border-radius: 4px;\\n    display: flex;\\n    align-items: center;\\n}\\n\\n.mobile-publish-text i,\\n.web-publish-text i {\\n    font-size: 24px;\\n    color: #151233;\\n    margin-right: 4px;\\n}\\n\\n.save-button.deploy {\\n    padding: 10px 16px;\\n}\\n\\n.button-disable .save-button {\\n    color: #757575;\\n    cursor: default;\\n}\\n\\n.button-disable .save-button:hover+.button-tooltip,\\n.start-screen:hover .button-tooltip,\\n.publish-info:hover .button-tooltip {\\n    visibility: visible;\\n    transition: opacity 0.3s ease-out 1s;\\n    opacity: 1;\\n}\\n\\n.button-tooltip {\\n    visibility: hidden;\\n    position: absolute;\\n    background: #757575;\\n    color: #FFFFFF;\\n    font-size: 11px;\\n    font-family: 'Roboto';\\n    text-align: center;\\n    border-radius: 4px;\\n    letter-spacing: 0.2px;\\n    padding: 6px 8px 6px 8px;\\n    top: 56px;\\n    left: 63px;\\n    opacity: 0;\\n}\\n\\n.publish-info {\\n    color: #757575;\\n    font-size: 20px;\\n    margin-left: 10px;\\n}\\n\\n.qjson-color {\\n    color: #449dd1;\\n}\\n\\n.yaml-color {\\n    color: #449dd1;\\n}\\n\\n.js-color {\\n    color: #449dd1;\\n}\\n\\n.process-color {\\n    color: #007c77;\\n}\\n\\n.bpmn-color {\\n    color: #007c77;\\n}\\n\\n.entity-designer-color {\\n    color: #e9724c;\\n}\\n\\n.select-environment {\\n    width: 100%;\\n    font-size: 15px;\\n    height: 40px;\\n    line-height: 40px;\\n    margin-top: 4px\\n}\\n</style>\\n\\n<style>\\n.selected-environment {\\n    background-color: transparent;\\n    border-radius: 4px;\\n    border: 1px solid #BCBCBC;\\n    color: #212121;\\n    padding-left: 12px;\\n}\\n\\n.custom-placeholder:empty:before {\\n    color: #BCBCBC !important;\\n    font-weight: 400;\\n}\\n\\n.custom-select .items .option {\\n    font-size: 14px;\\n    padding-left: 12px;\\n    line-height: 32px;\\n}\\n\\n.custom-select .items .option:hover {\\n    background-color: #EEEEEE;\\n    color: #212121;\\n}\\n\\n.custom-select .items .option.disabled:hover {\\n    background-color: #FFFFFF;\\n    color: #212121;\\n}\\n\\n.custom-select.select-environment .items {\\n    margin-top: 4px;\\n    color: #212121;\\n    border-radius: 4px;\\n    border: 1px solid #E3E3E3;\\n    overflow: hidden;\\n    background-color: #FFFFFF;\\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\\n    position: static !important;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.selected-environment {\\n    background-color: transparent;\\n    border-radius: 4px;\\n    border: 1px solid #BCBCBC;\\n    color: #212121;\\n    padding-left: 12px;\\n}\\n.custom-placeholder:empty:before {\\n    color: #BCBCBC !important;\\n    font-weight: 400;\\n}\\n.custom-select .items .option {\\n    font-size: 14px;\\n    padding-left: 12px;\\n    line-height: 32px;\\n}\\n.custom-select .items .option:hover {\\n    background-color: #EEEEEE;\\n    color: #212121;\\n}\\n.custom-select .items .option.disabled:hover {\\n    background-color: #FFFFFF;\\n    color: #212121;\\n}\\n.custom-select.select-environment .items {\\n    margin-top: 4px;\\n    color: #212121;\\n    border-radius: 4px;\\n    border: 1px solid #E3E3E3;\\n    overflow: hidden;\\n    background-color: #FFFFFF;\\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\\n    position: static !important;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/presentation/vue3/components/dialogs/publish/publishDialog.vue\"],\"names\":[],\"mappings\":\";AAipCA;IACI,6BAA6B;IAC7B,kBAAkB;IAClB,yBAAyB;IACzB,cAAc;IACd,kBAAkB;AACtB;AAEA;IACI,yBAAyB;IACzB,gBAAgB;AACpB;AAEA;IACI,eAAe;IACf,kBAAkB;IAClB,iBAAiB;AACrB;AAEA;IACI,yBAAyB;IACzB,cAAc;AAClB;AAEA;IACI,yBAAyB;IACzB,cAAc;AAClB;AAEA;IACI,eAAe;IACf,cAAc;IACd,kBAAkB;IAClB,yBAAyB;IACzB,gBAAgB;IAChB,yBAAyB;IACzB,0CAA0C;IAC1C,2BAA2B;AAC/B\",\"sourcesContent\":[\"<template>\\n    <div class=\\\"container\\\">\\n        <div>\\n            <CheckboxComp :class=\\\"['modules-selected-checkbox', props.screenType == 'Deploy' ? 'deploy' : '']\\\"\\n                :minus=\\\"mainCheckboxState == false\\\" :check=\\\"mainCheckboxState == true\\\"\\n                @click=\\\"handleModuleCountCheckboxEvent(mainCheckboxState == undefined)\\\" />\\n            <div :class=\\\"['modules-selected-text', props.screenType == 'Deploy' ? 'deploy' : '']\\\">\\n                <span class=\\\"text-number\\\">{{  allChildCheckedModulesCount + anyChildCheckedModulesCount + checkedRootLevelModelsCount }}</span>\\n                of <span class=\\\"text-number\\\">{{ totalRootLevelCount }}</span> items selected\\n            </div>\\n        </div>\\n\\n        <div :class=\\\"['modules-datatable', props.screenType == 'Deploy' ? 'deploy' : '']\\\">\\n            <div v-for=\\\"item in items\\\">\\n                <div v-if=\\\"item?.type == 'module'\\\">\\n                    <div class=\\\"row-container\\\">\\n                        <i :class=\\\"'mdi mdi-menu' + (item.collapsed ? '-right' : '-down') + ' chevron' + (!item.children || item.children.length == 0 ? ' disabled': '')\\\"\\n                            @click=\\\"handleCollapse(item)\\\" />\\n                        <CheckboxComp class=\\\"module-checkbox\\\" :check=\\\"item.allChildChecked\\\"\\n                            :minus=\\\"!item.allChildChecked && item.anyChildChecked\\\" :disabled=\\\"item.disabled\\\"\\n                            @click=\\\"handleItemCheckEvent(item)\\\" />\\n                        <span :class=\\\"['module-name', item.disabled ? ' disabled': '']\\\">{{ item.name }}</span>\\n                    </div>\\n                    <div class=\\\"row-container\\\" v-show=\\\"!item.collapsed\\\" v-for=\\\"child in item?.children\\\">\\n                        <CheckboxComp class=\\\"model-checkbox\\\" :check=\\\"child.checked\\\" :disabled=\\\"child.disabled\\\"\\n                            @click=\\\"handleItemCheckEvent(child)\\\" />\\n                        <i v-if=\\\"child.type != 'module'\\\" :class=\\\"'model-icon ' + ModelContants.getModelVisualInfo(child.type, undefined).icon\\\" \\n                            :style=\\\"{ color: ModelContants.getModelVisualInfo(child.type, undefined).color }\\\" />\\n                        \\n                        <span :class=\\\"['model-name', child.disabled ? ' disabled' : '']\\\">{{ child.name }}</span>\\n                        <div v-if=\\\"!child.usageType || child.usageType == 'appSettings'\\\" :class=\\\"['version-text', child.disabled ? 'disabled' : '']\\\" @click=\\\"versionDialog(child)\\\">\\n                            {{ child.version ? child.version : 'No version' }} <i v-if=\\\"!child.usageType || child.usageType == 'appSettings'\\\" :class=\\\"['mdi mdi-pencil-outline version-icon', child.disabled ? 'disabled' : '']\\\"></i>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div v-else>\\n                    <div class=\\\"row-container\\\">\\n                        <CheckboxComp class=\\\"module-checkbox\\\" :check=\\\"item?.checked\\\" :disabled=\\\"item.disabled\\\"\\n                            @click=\\\"handleItemCheckEvent(item)\\\" />\\n                        <i v-if=\\\"item?.type == 'qjson'\\\" class=\\\"mdi mdi-palette qjson-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'yaml'\\\" class=\\\"mdi mdi-cog-outline yaml-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'js' || item?.type == 'css'\\\"\\n                            class=\\\"mdi mdi-cog-outline js-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'process'\\\" class=\\\"mdi mdi-auto-fix process-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'bpmn'\\\" class=\\\"mdi mdi-vector-polyline bpmn-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'entityDesigner'\\\"\\n                            class=\\\"mdi mdi-database entity-designer-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'flow'\\\" class=\\\"mdi mdi-step-forward bpmn-color app-tier-model-icon\\\" />\\n                        <span class=\\\"app-tier-model-name\\\">{{ item?.name }}\\n                            <span class=\\\"start-screen\\\" v-if=\\\"startScreen?.ID == item.id\\\">\\n                                <i class=\\\"mdi mdi-home-outline\\\"></i>\\n                                <span class=\\\"button-tooltip\\\" style=\\\"top: -30px; left: 2px; z-index: 1; width: 80px;\\\">Start\\n                                    Screen</span>\\n                            </span>\\n                        </span>\\n\\n                        <span v-if=\\\"!item.usageType\\\" :class=\\\"['version-text', item.disabled ? 'disabled' : '']\\\" @click=\\\"versionDialog(item)\\\">\\n                            {{ item.version ? item.version : 'No version' }} <i v-if=\\\"!item.usageType\\\" :class=\\\"['mdi mdi-pencil-outline version-icon', item.disabled ? 'disabled' : '']\\\"></i>\\n                        </span>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div v-if=\\\"props.screenType == 'Deploy' && props.platformSelection.web\\\" style=\\\"margin-bottom: 102px\\\">\\n            <div style=\\\"display: flex; align-items: center;\\\">\\n                <span class=\\\"custom-text environment\\\"> Publish To </span>\\n                <span class=\\\"publish-info\\\">\\n                    <i class=\\\"mdi mdi-information\\\"></i>\\n                    <span class=\\\"button-tooltip\\\" style=\\\"top: 460px; left: 96px; z-index: 1; width: 231px;\\\">Publish To\\n                        options may change depending on the module type you choose.</span>\\n                </span>\\n            </div>\\n\\n            <CustomSelect :options=\\\"publishTargets\\\" @input=\\\"onTargetSelect\\\" :selectedOption=\\\"selectedTarget\\\"\\n                :default=\\\"selectedTarget\\\" :disabledOptions=\\\"disabledOptions\\\" selectedClass=\\\"selected-environment\\\"\\n                placeholder=\\\"Select the publish environment of your application\\\" class=\\\"select-environment\\\">\\n            </CustomSelect>\\n        </div>\\n        <div v-if=\\\"props.screenType == 'Deploy' && !props.platformSelection.web && props.platformSelection.mobile\\\"\\n            class=\\\"mobile-publish-text\\\">\\n            <i class=\\\"mdi mdi-information\\\"></i>\\n            <span>Models and static files of your mobile application will be served from Public Cloud.</span>\\n\\n        </div>\\n        <div :class=\\\"['footer', props.screenType == 'Deploy' ? 'deploy' : 'export']\\\">\\n            <div :class=\\\"['cancel-button', props.screenType == 'Deploy' ? 'deploy' : '']\\\" @click=\\\"close\\\">Cancel</div>\\n            <div v-if=\\\"props.screenType == 'Export'\\\" :class=\\\"(saveButtonDisable ? ' button-disable' : '')\\\" @click=\\\"save\\\">\\n                <span class=\\\"save-button \\\">DOWNLOAD</span>\\n                <span v-if=\\\"!isThereVersion\\\" class=\\\"button-tooltip\\\" \\n                style=\\\"top: -80px; left: 626px; z-index: 1; width: 145px;\\\">There are no items ready to publish. At least one of your items must be ready to publish.</span>\\n                <span v-if=\\\"isThereVersion\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -46px; left: 640px; z-index: 1; width: 120px;\\\">You need to include your start screen.</span>\\n            </div>\\n            <div v-if=\\\"props.screenType == 'Deploy'\\\" :class=\\\"[(saveButtonDisable ? ' button-disable' : '')]\\\" @click=\\\"save\\\">\\n                <span class=\\\"save-button deploy\\\">PUBLISH</span>\\n                <span v-if=\\\"selectedTarget && isThereVersion\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -46px; left: 652px; z-index: 1; width: 120px;\\\">You need to include your start screen.</span>\\n                <span v-if=\\\"!selectedTarget\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -46px; left: 644px; z-index: 1; width: 123px;\\\">You need to select a publish environment.</span>\\n                <span v-if=\\\"!isThereVersion\\\" class=\\\"button-tooltip\\\" \\n                style=\\\"top: -95px; left: 644px; z-index: 1; width: 135px;\\\">There are no items ready to publish. At least one of your items must be ready to publish.</span>\\n            </div>\\n\\n        </div>\\n    </div>\\n</template>\\n\\n\\n<script setup lang=\\\"ts\\\">\\nimport { CryptoHelper } from \\\"@stechquick/algae/lib/helpers/cryptoHelper\\\";\\nimport { container } from \\\"../../../../../domain/core/diContainer\\\";\\nimport { IExportViewItem, IModel, IModelHistoryInfo, IModule } from \\\"../../../../../domain/model/models\\\";\\nimport { IViewModel } from \\\"../../../../../domain/viewModel/IViewModel\\\";\\nimport CheckboxComp from \\\"../../checkboxComp.vue\\\";\\nimport { ref, computed, defineAsyncComponent, watch, onMounted, onBeforeMount } from \\\"vue\\\";\\nimport { IDialog } from \\\"../../../../../domain/presentation/IDialog\\\";\\nimport { IUseCaseExecutor } from \\\"../../../../../domain/useCase/IUseCaseExecutor\\\";\\nimport { DeployType, ICreateDeployJobParam, ICreateExportJobParam, IExportItem, IExportJobData, IPlatformSelection, IProcessConfigModelItem } from \\\"../../../../../../../common/qCloudTemp/exporter\\\";\\nimport { ICreateExportJob } from \\\"../../../../../domain/useCase/ICreateExportJob\\\";\\nimport { IDeployJobs } from \\\"../../../../../domain/useCase/IDeployJobs\\\";\\nimport { IQCloudApi } from \\\"../../../../../domain/infrastructure/IQCloudApi\\\";\\nimport { IPackJobs } from \\\"../../../../../domain/useCase/IPackJobs\\\";\\nimport { IJobUtils } from \\\"../../../../../domain/useCase/IJobUtils\\\";\\nimport { IQJsonAdditionals, UsageType } from \\\"../../../../../../../common/qCloudTemp/quickCloud\\\";\\nimport { PlateauHelper } from \\\"@stechquick/algae/lib/helpers/plateau/plateauHelper\\\";\\nimport { IViewModelManager } from \\\"../../../../../domain/viewModel/IViewModelManager\\\";\\nimport CustomSelect from \\\"../../../components/customSelect.vue\\\"\\nimport { IOrganizationCloud } from \\\"../../../../../../../common/clean/domain/useCases/ICloudProvider\\\";\\nimport { IListMultiModelVersions } from \\\"../../../../../domain/useCase/IListMultiModelVersions\\\";\\nimport { ModelContants } from \\\"../../../../../../../common/qCloudTemp/modelContants\\\";\\n\\ninterface ITableData {\\n    id: string;\\n    parentId?: string;\\n    collapsed?: boolean;\\n    anyChildChecked?: boolean;\\n    allChildChecked?: boolean;\\n    checked?: boolean;\\n    name: string;\\n    type: IModel[\\\"modelType\\\"] | IModule[\\\"objectType\\\"];\\n    version?: string;\\n    disabled?: boolean | true;\\n    children?: Array<ITableData>;\\n    usageType?: UsageType;\\n}\\n\\ninterface IDeployScreenAdditionalProps {\\n    screenType: \\\"Export\\\" | \\\"Deploy\\\";\\n    platformSelection: IPlatformSelection;\\n}\\n\\ninterface IDisabledOptions {\\n    index: number\\n    cause: string;\\n}\\n\\nconst props = defineProps<IDeployScreenAdditionalProps>();\\nconst viewModel = container.resolve<IViewModel>(IViewModel);\\nconst viewModelManager = container.resolve<IViewModelManager>(IViewModelManager);\\nconst dialog = container.resolve<IDialog>(IDialog);\\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\\nconst deployJobsUseCase = container.resolve<IDeployJobs>(IDeployJobs);\\nconst qcloudApi = container.resolve<IQCloudApi>(IQCloudApi);\\nconst packJobsUseCase = container.resolve<IPackJobs>(IPackJobs);\\nconst jobUtils = container.resolve<IJobUtils>(IJobUtils);\\nconst emit = defineEmits([\\\"close\\\"]);\\nconst items = ref<Array<ITableData>>([]);\\nconst validations = ref<boolean>(true);\\nconst selectedTarget = ref<string>(\\\"\\\");\\nconst disabledOptions = ref<Array<IDisabledOptions>>();\\nconst publishTargets = ref<Array<string>>();\\nconst modelHistories = ref<Map<string, Array<IModelHistoryInfo>>>();\\nconst startScreen = ref<IModel>();\\n\\n\\nonMounted(async () => {\\n    await initVersions();\\n    handleItems();\\n    props.screenType == \\\"Deploy\\\" && syncPublishTargets();\\n    validations.value = validate();\\n})\\n\\nconst allChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == \\\"module\\\" && e.allChildChecked).length);\\nconst anyChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == \\\"module\\\" && !e.allChildChecked && e.anyChildChecked).length);\\nconst checkedRootLevelModelsCount = computed(() => items.value.filter(e => e.type != \\\"module\\\" && e.checked).length);\\nconst totalRootLevelCount = computed(() => items.value.length);\\nconst saveButtonDisable = computed(() => (props.screenType == \\\"Deploy\\\" && props.platformSelection.web && selectedTarget.value == \\\"\\\") || !validations.value || !items.value.some((item) => item.checked || item.anyChildChecked) || (props.screenType == \\\"Export\\\" && !(items.value.find((item) => item.id == startScreen.value?.ID))?.checked));\\nconst mainCheckboxState = computed(() => items.value.length == allChildCheckedModulesCount.value ? true \\n        : (anyChildCheckedModulesCount.value + checkedRootLevelModelsCount.value > 0  ? false : undefined));\\nconst isThereVersion = computed(() => checkMaxVersionOfAllItems());\\nfunction validate() {\\n    let result = true;\\n    const modules = items.value.filter(e => e.type == \\\"module\\\" && e.anyChildChecked);\\n    const appLayerItems = items.value.filter(e => e.type == \\\"qjson\\\" && e.checked);\\n\\n    startScreen.value = (viewModel.studio.items as Array<IModel>).find(item => item.isRootPage);\\n    if(!startScreen.value)\\n        return false;\\n\\n    if (props.screenType == \\\"Deploy\\\") {\\n        if (modules.length > 0)\\n            result = modules.map(e => e.children).filter(e => !e?.find(f => f.type == \\\"entityDesigner\\\" && f.checked)).length <= 0\\n\\n        let isApplicationWillDeploy = appLayerItems.length > 0;\\n        if (isApplicationWillDeploy) {\\n            result = appLayerItems\\n                .map(e => viewModel.studio.items.find(item => item.ID == e.id) as IModel)\\n                .findIndex(e => ((e.additionals as IQJsonAdditionals).isRootPage)) != -1;\\n        }\\n    }\\n\\n    return result;\\n}\\n\\nfunction mobileFilter(model: IModel) {\\n    return props.platformSelection.web || !props.platformSelection.mobile ||\\n        !(model.modelType == \\\"bpmn\\\" || model.modelType == \\\"entityDesigner\\\" || model.modelType == \\\"process\\\");\\n}\\n\\nasync function initVersions() {\\n    const modelIDs = Array<string>();\\n    viewModelManager.flatMapItems(viewModel.studio.items, (item, path) => {\\n        if (item.objectType != \\\"model\\\") { return; }\\n        modelIDs.push(item.ID);\\n        return item;\\n    });\\n\\n    modelHistories.value = await executor.executeUseCase<IListMultiModelVersions>(IListMultiModelVersions, { modelIDs });\\n}\\n\\nasync function handleItems() {\\n    items.value = viewModel.studio.items\\n        .filter((item) => item.objectType == \\\"module\\\" && item.children.length > 0)\\n        .map((item) => {\\n            const tableData: ITableData = {\\n                id: item.ID,\\n                collapsed: true,\\n                name: item.name,\\n                type: \\\"module\\\",\\n                children: (item as IModule).children\\n                    .filter((child) => child.objectType == \\\"model\\\")\\n                    .filter(e => !props || props.screenType == \\\"Export\\\" || mobileFilter(e as IModel))\\n                    .map(child => {\\n                        const maxVersion = getItemMaxVersion(child as IModel)\\n                        return {\\n                            id: child.ID,\\n                            parentId: item.ID,\\n                            checked: maxVersion != undefined,\\n                            disabled: !maxVersion,\\n                            name: child.name,\\n                            type: (child as IModel).modelType,\\n                            version: maxVersion\\n                        } as ITableData\\n                    })\\n            }\\n            handleParentCheckedStatus(tableData);\\n            return tableData;\\n        });\\n\\n    viewModel.studio.items\\n        .filter((item) => item.objectType == \\\"model\\\" && item.usageType != \\\"appSettings\\\" && item.usageType != \\\"appAssetList\\\")\\n        .forEach((item) => {\\n            const maxVersion = getItemMaxVersion(item as IModel)\\n            items.value.push(\\n                {\\n                    id: item.ID,\\n                    checked: maxVersion != undefined,\\n                    name: item.name,\\n                    disabled: !maxVersion,\\n                    type: (item as IModel).modelType,\\n                    version: maxVersion,\\n                });\\n        });\\n    const uiSettingsID = CryptoHelper.CreateGuid();\\n    const appSettings = viewModel.studio.items.filter((item) => item.objectType == \\\"model\\\" && item.usageType == \\\"appSettings\\\") as Array<IModel>;\\n    const uiSettings: ITableData = {\\n        id: uiSettingsID,\\n        collapsed: true,\\n        name: \\\"UI Settings\\\",\\n        type: \\\"module\\\",\\n        children: appSettings.map(settings => {\\n            const maxVersion = getItemMaxVersion(settings as IModel)\\n            return {\\n                id: settings.ID,\\n                parentId: uiSettingsID,\\n                name: settings.name,\\n                type: (settings as IModel).modelType,\\n                checked: maxVersion != undefined,\\n                usageType: settings?.usageType,\\n                disabled: !maxVersion,\\n                version: maxVersion,\\n            }\\n        }) as Array<ITableData>,\\n    };\\n    handleParentCheckedStatus(uiSettings);\\n\\n    const uiAssetID = CryptoHelper.CreateGuid();\\n    const appAssetList = viewModel.studio.items.filter((item) => item.objectType == \\\"model\\\" && item.usageType == \\\"appAssetList\\\") as Array<IModel>;\\n    const uiAssetList: ITableData = {\\n        id: uiAssetID,\\n        collapsed: true,\\n        name: \\\"Styled Components\\\",\\n        type: \\\"module\\\",\\n        anyChildChecked: true,\\n        allChildChecked: true,\\n        children: appAssetList.map((asset) => ({\\n            id: asset.ID,\\n            parentId: uiSettingsID,\\n            name: asset.name,\\n            type: (asset as IModel).modelType,\\n            checked: true,\\n            usageType: asset?.usageType,\\n        })) as Array<ITableData>,\\n    };\\n    handleParentCheckedStatus(uiAssetList);\\n\\n    items.value.unshift(uiAssetList);\\n    items.value.unshift(uiSettings);\\n    console.log(\\\"items => \\\", items.value);\\n}\\n\\nfunction getItemMaxVersion(item: IModel): string | undefined {\\n    if (!modelHistories.value?.has(item.ID))\\n        return undefined;\\n\\n    const versions = modelHistories.value.get(item.ID);\\n    if (!versions)\\n        return undefined;\\n\\n    const findMaxVersion = (versions: Array<string>) => {\\n        const versionNumbers = versions.map(v => {\\n            const parts: Array<string> = v.split(\\\".\\\");\\n            return parseInt(parts[0]) * 10 + parseInt(parts[1]) * 1;\\n        })\\n\\n        versionNumbers.sort((a, b) => b - a);\\n\\n        const maxVersion = versionNumbers[0];\\n        return `${Math.floor(maxVersion / 10)}.${maxVersion % 10}`;\\n    }\\n\\n    return findMaxVersion(versions.map(e => e.version!));\\n\\n}\\nfunction checkMaxVersionOfAllItems() {\\n    let isThereVersion: boolean = false;\\n    items.value.forEach(item => {\\n        if(item.type == \\\"module\\\") {\\n            item.children?.forEach(child => {\\n                if(child.version) {\\n                    isThereVersion = true;\\n                }\\n                \\n            })\\n        }\\n        else {\\n            if(item.version) {\\n                isThereVersion = true;\\n            }\\n        }\\n    })\\n    return isThereVersion;\\n}\\nfunction handleModuleCountCheckboxEvent(value: boolean) {\\n    items.value.filter(e => !e.disabled).forEach((item) => {\\n        item.checked = value;\\n        const allItemsCheckable = item.allChildChecked != undefined && item.children && item.children.length > 0 && !item.children.some(c => c.disabled);\\n        if (allItemsCheckable) item.allChildChecked = value;\\n        if (item.anyChildChecked != undefined) item.anyChildChecked = value;\\n        if (item.children) item.children.filter(c => !c.disabled).forEach((child) => (child.checked = value));\\n    });\\n\\n    validations.value = validate();\\n    props.screenType == \\\"Deploy\\\" && syncPublishTargets();\\n}\\n\\nfunction handleCollapse(item: ITableData) {\\n    item.collapsed = !item.collapsed;\\n}\\n\\nfunction handleItemCheckEvent(item: ITableData) {\\n    if(item.disabled)\\n        return;\\n\\n    if (item.type != \\\"module\\\") {\\n        item.checked = !item.checked;\\n        if (item.parentId) {\\n            const parent = items.value.find((i) => i.id == item.parentId)!;\\n            handleParentCheckedStatus(parent);\\n        }\\n    } else {\\n        if (item.children && item.children.filter(c => !c.disabled).length > 0) {\\n            if (item.anyChildChecked) {\\n                item.children?.filter(c => !c.disabled).forEach((child) => (child.checked = false));\\n                item.checked = false;\\n            } else {\\n                item.children?.filter(e => !e.disabled).forEach((child) => (child.checked = true));\\n                item.checked = true;\\n            }\\n            handleParentCheckedStatus(item);\\n        }\\n        else {\\n            item.checked = !item.checked;\\n            item.allChildChecked = false;\\n        }\\n    }\\n\\n    validations.value = validate();\\n    props.screenType == \\\"Deploy\\\" && syncPublishTargets();\\n}\\n\\nfunction handleParentCheckedStatus(item: ITableData) {\\n    item.disabled = item.children && (item.children.length == 0 || !item.children?.some(child => !child.disabled))\\n    item.allChildChecked = item.children && item.children.length > 0 && !item.children.some((child) => !child.checked || child.disabled);\\n    item.anyChildChecked = item.children?.some((child) => child.checked && !child.disabled);\\n}\\n\\nfunction syncPublishTargets() {\\n    publishTargets.value = []; disabledOptions.value = [];\\n\\n    const targets = viewModel.user?.selectedOrganization?.actions?.publish?.targets;\\n    if (!targets)\\n        return;\\n\\n    const isSelectAnyItem = items.value.find(e => e.anyChildChecked || e.checked);\\n    if (!isSelectAnyItem) {\\n        publishTargets.value = Object.entries(targets).map(e => cloudTargetMap(e[0])!);\\n        const disabledOptionList = Array<IDisabledOptions>();\\n        for (let i = 0; i < publishTargets.value.length; i++) {\\n            disabledOptionList.push({ index: i, cause: \\\"You need to include items to publish.\\\" })\\n        }\\n        disabledOptions.value = disabledOptionList;\\n        return;\\n    }\\n\\n    const checkedPublishTargets = checkAndSetDisabledCauses(targets);\\n    const sortedTargets = checkedPublishTargets.sort((e, f) => (!e.cause === !f.cause) ? 0 : e.cause ? 1 : -1);\\n\\n    const disabledOptionList = Array<IDisabledOptions>();\\n    for (let i = 0; i < sortedTargets.length; i++) {\\n        const cause = sortedTargets[i].cause;\\n        if (cause) disabledOptionList.push({ index: i, cause })\\n    }\\n    disabledOptions.value = disabledOptionList;\\n    publishTargets.value = sortedTargets.map(e => e.optionName);\\n\\n    selectedTarget.value = !sortedTargets[0].cause ? sortedTargets[0].optionName : \\\"\\\";\\n}\\n\\nfunction checkAndSetDisabledCauses(targets: Record<keyof IOrganizationCloud, boolean>) {\\n    const list = Array<{ optionName: string, cause?: string }>();\\n\\n    Object.keys(targets).forEach(e => {\\n        const key = e as keyof IOrganizationCloud;\\n        const value = targets[key];\\n        const optionName = cloudTargetMap(key)!;\\n        if (!value)\\n            return list.push({ optionName, cause: \\\"You are not authorized to publish to this target.\\\" });\\n\\n\\n        switch (key) {\\n            case \\\"azure\\\":\\n                const traverseSelectedItems = (status: boolean, items?: Array<ITableData>) => {\\n                    if (!items || items.length == 0) { return status; }\\n                    for (const item of items) {\\n                        if (item.checked || item.anyChildChecked) {\\n                            if (item.type == \\\"module\\\") {\\n                                status = traverseSelectedItems(status, item.children);\\n                            }\\n                            if (item.type == \\\"entityDesigner\\\" || item.type == \\\"bpmn\\\" || item.type == \\\"process\\\") {\\n                                status = false;\\n                                break;\\n                            }\\n                        }\\n\\n                    }\\n                    return status;\\n                }\\n\\n                const status = traverseSelectedItems(true, items.value);\\n                if (!status)\\n                    return list.push({ optionName, cause: \\\"Entity and process models cannot be published to this target.\\\" });\\n                break;\\n            case \\\"plateauGCP\\\":\\n                if (props.platformSelection.mobile)\\n                    return list.push({ optionName, cause: \\\"This target is not available for mobile publishing.\\\" });\\n\\n                const modulesHasNotAnEDModel =  items.value.filter(e => e.name != \\\"UI Settings\\\").find(e => e.type == \\\"module\\\" && e.anyChildChecked && e.children?.some(c => c.checked && (c.type == \\\"bpmn\\\" || c.type == \\\"process\\\")) && !e.children?.some(c => c.type == \\\"entityDesigner\\\" && c.checked))\\n                if (modulesHasNotAnEDModel)\\n                    return list.push({optionName, cause: `This target not available. Selected module '${modulesHasNotAnEDModel.name}' has not any Data Model.`})\\n                break;\\n        }\\n\\n        list.push({ optionName });\\n    })\\n\\n    return list;\\n}\\n\\nfunction versionDialog(item: ITableData) {\\n    const clickedNode = { id: item.id, state: { checked: item.checked }, text: item.name, type: item.type, version: item.version };\\n    const hasAnyVersion = modelHistories.value?.has(item.id);\\n    const options = { clickedNode, cb: (version: string) => { item.version = version } } as any;\\n    if (hasAnyVersion) {\\n        options.versions = modelHistories.value?.get(item.id)\\n    }\\n    dialog.showDialog(\\n        defineAsyncComponent(() => import(\\\"../../application/modelVersionDialog.vue\\\")),\\n        { closable: true, title: \\\"Change Version\\\", width: \\\"900px\\\", maxHeight: \\\"500px\\\", overflow: \\\"auto\\\" }, options\\n    );\\n}\\n\\nfunction close() {\\n    emit(\\\"close\\\");\\n}\\n\\nasync function save() {\\n    executor.execute(\\n        async () => {\\n            const initAsGroup = async () => {\\n                const groupID = CryptoHelper.CreateGuid();\\n                await initHistory(groupID);\\n                await packJob(groupID);\\n                return groupID;\\n            }\\n\\n            const isFlowBackend = viewModel.user?.selectedOrganization?.applications.flow;\\n\\n            switch (props.screenType) {\\n                case \\\"Export\\\":\\n                    //FIXME: Export backende tasinmali. layer, groupId backendde setlenmeli.\\n                    if(isFlowBackend) {\\n                        const deployItems = await createAzureDeployItems();\\n                        await packJobsUseCase.createPackJobs([{\\n                            appID: viewModel.studio.appId,\\n                            exportType: \\\"qui\\\",\\n                            selectionData: deployItems\\n                        }]);\\n                        break;\\n                    }\\n\\n                    const groupID = await initAsGroup();\\n                    await createExportJob(groupID);\\n                    break;\\n                case \\\"Deploy\\\":\\n                    if(props.platformSelection.mobile) {\\n                        const deployItems = await createAzureDeployItems();\\n                        await deployJobsUseCase.createAppDeployJob(deployItems, props.platformSelection);\\n                    }\\n                    switch (cloudTargetMap(selectedTarget.value!, true) as keyof IOrganizationCloud) {\\n                        case \\\"plateauGCP\\\":\\n                            const groupID = await initAsGroup();\\n                            await createDeployJob(groupID);\\n                            break;\\n                        case \\\"azure\\\":\\n                            const deployItems = await createAzureDeployItems();\\n                            await deployJobsUseCase.createAppDeployJob(deployItems, props.platformSelection);\\n                            break;\\n                    }\\n            }\\n            emit(\\\"close\\\");\\n        },\\n        { loading: true });\\n}\\n\\nasync function createAzureDeployItems() {\\n    const deployItems: Array<IExportItem> = [];\\n    const itemIdObj: Record<string, { item: IModel, path: string }> = {};\\n\\n    viewModelManager.flatMapItems(viewModel.studio.items, (item, path) => {\\n        if (item.objectType != \\\"model\\\") { return; }\\n        itemIdObj[item.ID] = { item, path };\\n        return item;\\n    });\\n\\n    const traverseSelectedItems = (items?: Array<ITableData>) => {\\n        if (!items || items.length == 0) { return; }\\n        items.filter(e => e.checked || e.anyChildChecked).forEach(item => {\\n            if (item.type == \\\"module\\\") {\\n                traverseSelectedItems(item.children);\\n                return;\\n            }\\n\\n            const itemMap = itemIdObj[item.id];\\n\\n            const deployItem: IExportItem = {\\n                id: item.id,\\n                name: jobUtils.getFileFullname(itemMap.item),\\n                path: itemMap.path,\\n                type: jobUtils.getItemType(itemMap.item),\\n                ver: item.version || \\\"latest\\\",\\n                isRootPage: itemMap.item.isRootPage,\\n                ownerType: 'application',\\n                ownerName: viewModel.studio.appName,\\n                size: itemMap.item.size,\\n            };\\n            deployItems.push(deployItem)\\n        });\\n    };\\n\\n    traverseSelectedItems(items.value);\\n\\n    return deployItems;\\n}\\n\\nasync function initHistory(groupID: string) {\\n    return qcloudApi.initPublishHistory({\\n        appID: viewModel.studio.appId,\\n        ID: groupID,\\n        isMultiStep: true,\\n        type: props.screenType == \\\"Deploy\\\" ? \\\"publish\\\" : \\\"download\\\",\\n        cloudProvider: props.screenType == \\\"Deploy\\\" ? cloudTargetMap(selectedTarget.value!, true) as keyof IOrganizationCloud : undefined,\\n        platform: props.platformSelection\\n    });\\n}\\n\\nasync function packJob(groupID: string) {\\n    let exportItemMap = new Map<string, Array<IExportItem>>();\\n    const appName = viewModel.studio.appName;\\n\\n    const itemIdObj: Record<string, { item: IModel, path: string }> = {};\\n    viewModelManager.flatMapItems(viewModel.studio.items, (item, path) => {\\n        if (item.objectType != \\\"model\\\") { return; }\\n        itemIdObj[item.ID] = { item, path };\\n        return item;\\n    });\\n\\n    const createExportObject = (tableItem: ITableData) => {\\n        const item = itemIdObj[tableItem.id].item;\\n        const isAppItem = item.modelType == 'qjson' ;\\n        return {\\n            id: tableItem.id,\\n            ver: tableItem.version,\\n            type: jobUtils.getItemType(item),\\n            path: itemIdObj[tableItem.id].path,\\n            name: jobUtils.getFileFullname(item),\\n            ownerType: isAppItem ? 'application' : item.parent.objectType,\\n            ownerName: isAppItem ? appName : item.parent.name,\\n        } as IExportItem;\\n    }\\n\\n    const addToExportItem = (key: string, obj: IExportItem) => {\\n        key = obj.ownerType == 'module' ? `mdl-${key}` : key; // for same named module and app\\n        let items = exportItemMap.get(key);\\n        if(items && items.length > 0){\\n            items.push(obj);\\n            exportItemMap.set(key, items);\\n        } else\\n            exportItemMap.set(key, [obj]);\\n    }\\n\\n    items.value.filter(e => e.checked ?? e.anyChildChecked).forEach((asset) => {\\n        if (asset.type == 'qjson') {\\n            const obj = createExportObject(asset);\\n            const isRootPage = viewModel.studio.items.find(i => i.objectType == \\\"model\\\" && i.modelType == \\\"qjson\\\" && (i.additionals as IQJsonAdditionals).isRootPage && i.ID == asset.id);\\n            obj.isRootPage = isRootPage ? true : undefined;\\n\\n            addToExportItem(appName, obj);\\n        }\\n        else if (asset.type == 'module') {\\n            asset.children!.filter(e => e.checked).forEach(child => {\\n                const obj = createExportObject(child);\\n                if (obj.type == \\\"entityDesigner\\\")\\n                    obj.entityGenerationDomain = viewModel.user!.selectedOrganization!.actions?.entityGenerationDomain;\\n\\n                const useSeperateModule = obj.type == 'bpmn' || obj.type == 'entityDesigner' || obj.type == 'process';\\n                addToExportItem(useSeperateModule ? asset.name : appName, obj);\\n            });\\n        }\\n    })\\n\\n    let jobs = Array<ICreateExportJobParam>();\\n    exportItemMap.forEach((v, k) => {\\n        jobs.push({\\n            appID: viewModel.studio.appId,\\n            exportType: \\\"qui\\\",\\n            selectionData: v,\\n            cause: props.screenType == 'Export' ? 'download': \\\"publish\\\",\\n            layer: 0,\\n            groupID: groupID\\n        })\\n    })\\n\\n    await packJobsUseCase.createPackJobs(jobs);\\n}\\n\\nasync function createExportJob(groupID: string) {\\n    await executor.executeUseCase<ICreateExportJob>(ICreateExportJob, {\\n        appID: viewModel.studio.appId,\\n        exportType: \\\"qui\\\",\\n        selectionData: [],\\n        layer: 1,\\n        groupID: groupID\\n    });\\n}\\n\\nasync function createDeployJob(groupID: string) {\\n    //1-(n) L1- deployJob(build)\\n    let packages = await qcloudApi.getExportJobsByGroupId({ groupID })\\n        .then(jobs => jobs.jobs.map(e => {\\n            const jobData = e.jobData as IExportJobData;\\n            return {\\n                ownerName: jobData.items[0].ownerName,\\n                jobID: e.jobID,\\n                type: jobData.items[0].ownerType,\\n                mainDir: getDeployableArchiveRoot(jobData)\\n            }\\n        }));\\n\\n    if (!packages || packages.length <= 0)\\n        return;\\n\\n    let buildJobs = Array<ICreateDeployJobParam>();\\n    packages.forEach(pack => {\\n        buildJobs.push({\\n            appID: viewModel.studio.appId,\\n            type: \\\"build\\\",\\n            package: {\\n                type: pack.type as DeployType,\\n                name: pack.ownerName!,\\n                mainDir: pack.mainDir!,\\n                zip: `${pack.jobID}.zip`,\\n            },\\n            layer: 1,\\n            groupID: groupID\\n        })\\n    })\\n\\n    await deployJobsUseCase.createBuildJobs(buildJobs);\\n\\n    //2-(1) L2- deployJob(deployment)\\n    let jobParam: ICreateDeployJobParam = {\\n        appID: viewModel.studio.appId,\\n        type: \\\"deployment\\\",\\n        deployConfig: {\\n            process: {\\n                configModelIDs: getProcessConfigList(),\\n                enabled: items.value.some(e => e.anyChildChecked && e.children?.some(e => e.checked && e.type == \\\"bpmn\\\"))\\n            }\\n        },\\n        layer: 2,\\n        groupID: groupID\\n    }\\n\\n    await deployJobsUseCase.startDeploymentJob(jobParam);\\n}\\n\\nfunction getProcessConfigList() {\\n    let processConfigList = Array<IProcessConfigModelItem>();\\n    items.value.forEach((asset) => {\\n        if (asset.type == \\\"module\\\" && asset.anyChildChecked && asset.children) {\\n            const usingService = asset.children.find(c => c.type == \\\"entityDesigner\\\");\\n            if (!usingService)\\n                return;\\n\\n            const serviceName = PlateauHelper.getServiceNameFromModel(usingService.name);\\n            asset.children.forEach(child => {\\n                if (child.checked && child.type == \\\"process\\\") {\\n                    processConfigList.push({\\n                        moduleName: serviceName,\\n                        modelId: child.id,\\n                        modelName: child.name\\n                    })\\n                }\\n            })\\n        }\\n    })\\n    return processConfigList;\\n}\\n\\nfunction getDeployableArchiveRoot(jobData: IExportJobData) {\\n    if (jobData.items[0].ownerType == \\\"module\\\") {\\n        let edModel = jobData.items.find(e => e.type == \\\"entityDesigner\\\");\\n        if (!edModel)\\n            throw new Error(\\\"!!! this module cannot deploy. Because its have not a service\\\");\\n        return PlateauHelper.getServiceNameFromModel(edModel.name);\\n    }\\n    return PlateauHelper.getQuiPackageNameFromAppName(jobData.app.name);\\n}\\n\\nfunction cloudTargetMap(name: string, pureVal: boolean = false) {\\n    const map: Record<keyof IOrganizationCloud, string> = { azure: \\\"Public Cloud\\\", plateauGCP: \\\"Plateau Platform Playground\\\" };\\n    if (pureVal) {\\n        return Object.keys(map).find(e => {\\n            if (map[e as keyof IOrganizationCloud] === name) {\\n                return true;\\n            }\\n        })\\n    } else {\\n        let key = Object.keys(map).includes(name);\\n        if (!key)\\n            return;\\n        return map[name as keyof IOrganizationCloud];\\n    }\\n}\\n\\nfunction onTargetSelect(value: string) {\\n    selectedTarget.value = value\\n}\\n\\n</script>\\n\\n\\n<style scoped>\\n.container {\\n    padding: 32px 20px 20px;\\n}\\n\\n.settings-container {\\n    position: relative;\\n    top: 0px;\\n    left: 0px;\\n}\\n\\n.custom-text {\\n    /* position: absolute; */\\n    font-family: 'Roboto';\\n    font-style: normal;\\n    font-weight: 500;\\n    font-size: 15px;\\n    line-height: 18px;\\n    /* left: 24px; */\\n    color: #212121;\\n}\\n\\n/* .custom-text.title{\\n    top: 92px;\\n}\\n\\n.custom-text.environment{\\n    top: 174px;\\n} */\\n\\n.radio-button {\\n    position: absolute;\\n    top: 60px;\\n    left: 20px;\\n    cursor: pointer;\\n}\\n\\n.radio-text {\\n    position: absolute;\\n    top: 59px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n    user-select: none;\\n    cursor: pointer;\\n}\\n\\n.existing-app-url {\\n    position: absolute;\\n    width: 760px;\\n    height: 40px;\\n    top: 114px;\\n    left: 20px;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #bcbcbc;\\n    border-radius: 4px;\\n    font: normal normal normal 14px/19px Roboto;\\n    letter-spacing: 0px;\\n    padding: 10px 0px 10px 10px;\\n}\\n\\n.url-error {\\n    border: 1px solid red;\\n}\\n\\n.url-disable {\\n    opacity: 0.5;\\n}\\n\\n.existing-app-url::placeholder {\\n    color: #bcbcbc;\\n    user-select: none;\\n}\\n\\n.modules-selected-checkbox {\\n    cursor: pointer;\\n}\\n\\n.modules-selected-text {\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #757575;\\n    margin: 0 0 13px 30px;\\n    ;\\n}\\n\\n/* .modules-selected-text.deploy {\\n    top: 257px;\\n} */\\n\\n.text-number {\\n    font: normal normal bold 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.modules-datatable {\\n    width: 760px;\\n    height: 288px;\\n    border: 1px solid #bcbcbc;\\n    overflow-x: hidden;\\n    overflow-y: auto;\\n    margin-bottom: 20px;\\n}\\n\\n/* .modules-datatable.deploy {\\n    top: 286px;\\n} */\\n\\n.modules-datatable::-webkit-scrollbar {\\n    width: 4px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar-thumb {\\n    background: #bcbcbc 0% 0% no-repeat padding-box;\\n    border-radius: 10px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar-thumb:hover {\\n    background: #555;\\n}\\n\\n.row-container {\\n    width: 100%;\\n    height: 36px;\\n    position: relative;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #e0e0e0;\\n}\\n\\n.chevron {\\n    position: absolute;\\n    left: 4px;\\n    color: #757575;\\n    font-size: 24px;\\n}\\n\\n.chevron.disabled {\\n    pointer-events: none;\\n    color: #D5D5D5;\\n}\\n\\n.module-checkbox {\\n    position: absolute;\\n    top: 10px;\\n    left: 43px;\\n    cursor: pointer;\\n}\\n\\n.module-name {\\n    position: absolute;\\n    top: 9px;\\n    left: 69px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.module-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.model-checkbox {\\n    position: absolute;\\n    top: 10px;\\n    left: 59px;\\n    cursor: pointer;\\n}\\n\\n.model-icon {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 85px;\\n}\\n\\n.app-tier-model-icon {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 69px;\\n}\\n\\n.app-tier-model-name {\\n    position: absolute;\\n    top: 10px;\\n    left: 87px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.app-tier-model-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.model-name {\\n    position: absolute;\\n    top: 9px;\\n    left: 103px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.model-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.version-text {\\n    margin: 10px 7px 10px auto;\\n    display: table;\\n    font: normal normal normal 12px/16px Roboto;\\n    color: #757575;\\n    cursor: pointer;\\n    user-select: none;\\n}\\n\\n.version-text.disabled {\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n\\n.version-icon {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #D5D5D5;\\n}\\n\\n.version-icon.disabled {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #EEEEEE;\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n\\n.footer {\\n    position: relative;\\n    width: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: end;\\n}\\n\\n.footer.deploy {\\n    position: relative;\\n    width: 100%;\\n}\\n\\n.footer.export {\\n    margin-top: 102px;\\n}\\n\\n.cancel-button {\\n    border-radius: 4px;\\n    user-select: none;\\n    font-style: normal;\\n    font-weight: 500;\\n    font-family: \\\"ROBOTO\\\";\\n    font-size: 15px;\\n    color: #757575;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n\\n\\n\\n.save-button {\\n    background: #151233 0% 0% no-repeat padding-box;\\n    border-radius: 4px;\\n    user-select: none;\\n    font-weight: 500;\\n    font-size: 15px;\\n    color: #ffffff;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n\\n.mobile-publish-text,\\n.web-publish-text {\\n    padding: 5px 12px;\\n    margin-bottom: 52px;\\n    width: 100%;\\n    color: #757575;\\n    font-size: 14px;\\n    background: #F5F5FA;\\n    border-radius: 4px;\\n    display: flex;\\n    align-items: center;\\n}\\n\\n.mobile-publish-text i,\\n.web-publish-text i {\\n    font-size: 24px;\\n    color: #151233;\\n    margin-right: 4px;\\n}\\n\\n.save-button.deploy {\\n    padding: 10px 16px;\\n}\\n\\n.button-disable .save-button {\\n    color: #757575;\\n    cursor: default;\\n}\\n\\n.button-disable .save-button:hover+.button-tooltip,\\n.start-screen:hover .button-tooltip,\\n.publish-info:hover .button-tooltip {\\n    visibility: visible;\\n    transition: opacity 0.3s ease-out 1s;\\n    opacity: 1;\\n}\\n\\n.button-tooltip {\\n    visibility: hidden;\\n    position: absolute;\\n    background: #757575;\\n    color: #FFFFFF;\\n    font-size: 11px;\\n    font-family: 'Roboto';\\n    text-align: center;\\n    border-radius: 4px;\\n    letter-spacing: 0.2px;\\n    padding: 6px 8px 6px 8px;\\n    top: 56px;\\n    left: 63px;\\n    opacity: 0;\\n}\\n\\n.publish-info {\\n    color: #757575;\\n    font-size: 20px;\\n    margin-left: 10px;\\n}\\n\\n.qjson-color {\\n    color: #449dd1;\\n}\\n\\n.yaml-color {\\n    color: #449dd1;\\n}\\n\\n.js-color {\\n    color: #449dd1;\\n}\\n\\n.process-color {\\n    color: #007c77;\\n}\\n\\n.bpmn-color {\\n    color: #007c77;\\n}\\n\\n.entity-designer-color {\\n    color: #e9724c;\\n}\\n\\n.select-environment {\\n    width: 100%;\\n    font-size: 15px;\\n    height: 40px;\\n    line-height: 40px;\\n    margin-top: 4px\\n}\\n</style>\\n\\n<style>\\n.selected-environment {\\n    background-color: transparent;\\n    border-radius: 4px;\\n    border: 1px solid #BCBCBC;\\n    color: #212121;\\n    padding-left: 12px;\\n}\\n\\n.custom-placeholder:empty:before {\\n    color: #BCBCBC !important;\\n    font-weight: 400;\\n}\\n\\n.custom-select .items .option {\\n    font-size: 14px;\\n    padding-left: 12px;\\n    line-height: 32px;\\n}\\n\\n.custom-select .items .option:hover {\\n    background-color: #EEEEEE;\\n    color: #212121;\\n}\\n\\n.custom-select .items .option.disabled:hover {\\n    background-color: #FFFFFF;\\n    color: #212121;\\n}\\n\\n.custom-select.select-environment .items {\\n    margin-top: 4px;\\n    color: #212121;\\n    border-radius: 4px;\\n    border: 1px solid #E3E3E3;\\n    overflow: hidden;\\n    background-color: #FFFFFF;\\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\\n    position: static !important;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","export class CryptoHelper {\n    private static guidCounter = 0;\n\n    /**\n     * \n     * @param base number layout (number of distinct digits) (10'luk sayı düzeni, 16'lık sayı düzeni)\n     * @param length length of word. Max value: 16\n     */\n    public static GetRandomWord(base: number, length: number) {\n        return Math.random().toString(base).substring(2, length + 2);\n    }\n\n    /**\n     * Ex: be945482-jf10-40d1-a50d-rzxa2c41fdcu\n     */\n    public static CreateGuid() {\n        return [8, 4, 4, 4, 6].map(length => this.GetRandomWord(36, length)).join(\"-\") + ((++CryptoHelper.guidCounter) % 2150000000).toString(36);\n    }\n}","\nexport class PlateauHelper {\n    public static purify = (str: string) => str.replace(/[^a-zA-Z0-9]/g, \"\").toLowerCase();\n\n    public static getPlateauEnvironmentName = (envPrefix: string, appName: string) => {\n        if(!envPrefix || !appName)\n            throw new Error(\"Environment name prefix or application name not found!!!\" );\n\n        envPrefix = (envPrefix.endsWith(\"-\") ? envPrefix : (envPrefix + \"-\")).toLowerCase();\n        appName = PlateauHelper.purify(appName);\n        return `${envPrefix}${appName}`;\n    }\n\n    public static getQuiPackageNameFromAppName = (appName: string) => `${PlateauHelper.purify(appName)}-qui`;\n\n    public static getApplicationUINameFromQuiPkg = (quiPackageName: string) => PlateauHelper.purify(quiPackageName.replace(\"-qui\", \"ui\"));\n    \n    public static getApplicationHostNamePrefix = (appName: string) => `${PlateauHelper.purify(appName)}ui`;\n\n    public static getServiceNameFromModel = (modelName: string) => PlateauHelper.purify(modelName.replace(\".dm\", \"\"));\n}\n","import { IQJsonAdditionals, ModelAdditionals, ModelType } from \"./quickCloud\";\n\ntype ValueOf<Type> = Type extends any ? Type[keyof Type] : never;\ntype FieldValueOf<Type extends typeof typeSafety, Field extends keyof Type[keyof Type]> = Type[keyof Type][Field]\nexport type EditorModelTypes = ValueOf<FieldValueOf<typeof EditorConsts, \"modelKeys\">>;\nlet typeSafety: Record<string, { modelKeys: Record<string, string> }>;\nexport const EditorConsts = typeSafety = {\n    quick: {\n        modelKeys: {\n            self: \"qjson\" as \"qjson\",\n        }\n    },\n    flow: {\n        modelKeys: {\n            design: \"flow-design\" as \"flow-design\",\n            runtime: \"flow-runtime\" as \"flow-runtime\",\n        }\n    },\n    flowEntity: {\n        modelKeys: {\n            single: \"flow-entity\" as \"flow-entity\",\n        }\n    },\n};\n\ninterface ModelVisualInfo {\n    icon: string;\n    color: string;\n}\nconst cssJsTsYaml: ModelVisualInfo = { color: \"#449DD1\", icon: \"mdi mdi-cog-outline\" };\nconst jpegJpgPngSvgGif: ModelVisualInfo = { color: \"#212121\", icon: \"mdi mdi-image-outline \" }\nconst modelVisuals: Record<ModelType, ModelVisualInfo | Error | ((additional: ModelAdditionals | undefined) => ModelVisualInfo)> = {\n    qjson: (additionals) => {\n        if (additionals && (additionals as IQJsonAdditionals).qjsonType == \"quickComponent\") {\n            return { color: \"#449DD1\", icon: \"mdi mdi-palette-outline\" };\n        }\n        return { color: \"#449DD1\", icon: \"mdi mdi-palette\" };\n    },\n    css: cssJsTsYaml,\n    js: cssJsTsYaml,\n    ts: cssJsTsYaml,\n    yaml: cssJsTsYaml,\n    entityDesigner: { color: \"#E9724C\", icon: \"mdi mdi-database\" },\n    bpmn: { color: \"#007C77\", icon: \"mdi mdi-vector-polyline\" },\n    process: { color: \"#007C77\", icon: \"mdi mdi-auto-fix\" },\n    flow: { color: \"#007C77\", icon: \"mdi mdi-step-forward\" },\n    flowEntity: { color: \"blue\", icon: \"mdi mdi-step-forward\" },\n    namedComponent: { color: \"#212121\", icon: \"mdi mdi-cube-outline\" },\n    step: new Error(\"unimplemented for namedComponent\"),\n    jpeg: jpegJpgPngSvgGif,\n    jpg: jpegJpgPngSvgGif,\n    png: jpegJpgPngSvgGif,\n    svg: jpegJpgPngSvgGif,\n    gif: jpegJpgPngSvgGif,\n}\n\nexport class ModelContants {\n    public static getModelVisualInfo(modelType: ModelType, modelAdditionals: ModelAdditionals | undefined): ModelVisualInfo {\n        const retVal = modelVisuals[modelType];\n        if (retVal instanceof Error) { throw retVal; }\n        return typeof retVal == \"function\" ? retVal(modelAdditionals) : retVal;\n    }\n}","import { ExportType, ICreateDeployJobParam, ICreateExportJobParam, IDeployJobItem, IExportItem, IExportJobData, IExportJobDbItem, IExportJobHistoryDbItem, IExportJobHistoryRequest, IGetExportJobsByGroupIDRequest, IInitJobHistoryRequest, IListExportJobsResponse, JobType } from \"../../../../common/qCloudTemp/exporter\";\nimport { AppSettingsModelKeys, AuthenticationType, IAppDeployParameters, IModelBody, IModelBodyObject, IModelInfo, IQCloudLogItem, ISystemUser, ITenantDefinitions, ModelType, UsageType, IApplicationExportSettings, ModelAdditionals } from \"../../../../common/qCloudTemp/quickCloud\";\nimport { IModuleProduct, IModuleProductVer } from \"../../../../common/qCloudTemp/store\";\nimport { ICustomLivePreview, IDefaultLivePreview, ILivePreview, ILivePreviewSettingsRetval } from \"../../../../common/qCloudTemp/livePreview\";\nimport { IApplication, IFolder, IModel, IModule, IExportViewItem, ILoggedInUser, IExportJobItem, ModelHistoryType, IModelHistoryInfo, IExportJobStepItem, ITreeviewItem, IExportJobArtifactInfoItem, IModuleSettingsItem, IApplicationSettingsItem } from \"../model/models\";\nimport { TemplateType, ITemplateInfo } from '../../../../common/qCloudTemp/template';\nimport { IOrganization } from \"../../../../common/qCloudTemp/membership\";\nimport { IAddFeedbackRequest, IAddFeedbackResponse, IAddOrUpdatePreferencesResponse, ICreateOrganizationResponse, IDeleteInvitationRequest, IGetModelResponse, IGetOrganizationUsersRequest, IGetOrganizationUsersResponse, IGetPreferencesResponse, IGetProfileResponse, IInvitationRequest, IListInvitationsResponse, IListOrganizationsResponse, IRemoveUserFromOrganizationRequest, ISignInResponse, IUpdateApplicationRequest, IUpdateInvitationRequest, IUpdateProfileResponse } from \"../../../../common/qCloudTemp/symDtoObjects\";\n\nexport interface IGetModelHistoryResponse extends IGetModelResponse {\n    modelID: string;\n    historyType: string;\n    ownerItem: string;\n    version: string\n}\nexport interface IlistExportJobStepLogsResponse {\n    logs: Array<string>;\n}\nexport interface IDublicateModelResponse {\n    modelInfo: IModelInfo;\n    modelBody: Array<IModelBody>;\n}\n\nexport interface IUpdateLivePreviewRequest {\n    links?: ICustomLivePreview[\"links\"];\n    deepLinkParam?: ICustomLivePreview[\"deepLinkParam\"];\n    models?: ICustomLivePreview[\"models\"];\n    expiryDate?: ICustomLivePreview[\"expiryDate\"];\n    password?: ICustomLivePreview[\"password\"];\n    selected?: ICustomLivePreview[\"selected\"];\n}\n\nexport interface ICreateLivePreviewRequest {\n    appID: string;\n    type: ILivePreview[\"type\"];\n    links?: ICustomLivePreview[\"links\"];\n    deepLinkParam?: ICustomLivePreview[\"deepLinkParam\"];\n    models?: ICustomLivePreview[\"models\"];\n    expiryDate?: ICustomLivePreview[\"expiryDate\"];\n    password?: ICustomLivePreview[\"password\"];\n    selected: ICustomLivePreview[\"selected\"];\n}\n\nexport interface ICreateModelFromTemplateParam {\n    name: string;\n    parentObjectId: string;\n    modelInfoID: string;\n    modelType: ModelType;\n    modelAdditionals: ModelAdditionals;\n}\n\nexport interface IListModelsRequest {\n    applicationID: string;\n    getModelBodies?: boolean;\n    usageType?: UsageType;\n}\n\nexport interface ICreateUserRequest { \n    name: string;\n    mailAddress: string;\n    password: string;\n}\n\n// export interface IUpdateApplicationRequestParams {\n//     name?: string;\n//     description?: string;\n//     logo?: string;\n//     color?: string;\n//     ownerUser?: ILoggedInUser;\n//     deployParameters?: IAppDeployParameters;\n//     shortID24?: string;\n//     exportSettings?: IApplicationExportSettings;\n// }\n\nexport interface IQCloudApi {\n    signIn(invitationId?: string): Promise<ISignInResponse>;\n    signOut(): Promise<void>;\n    getProfile(): Promise<IGetProfileResponse>;\n    updateProfile(properties: { name: string, lastName: string, role: string, }): Promise<IUpdateProfileResponse>;\n    getPreferences(): Promise<IGetPreferencesResponse>;\n    updatePreferences(preferences: { emailConsent: boolean; }): Promise<IAddOrUpdatePreferencesResponse>\n    listOrganizations(): Promise<Array<IListOrganizationsResponse>>;\n    getOrganization(organizationId: IOrganization[\"id\"]): Promise<IOrganization>;\n    listUserInvitations(): Promise<IListInvitationsResponse>;\n    createOrganization(name: IOrganization[\"name\"]): Promise<ICreateOrganizationResponse>;\n\n\n\n    createModel(params: { name: string, parentObject: IApplication | IModule | IFolder, modelBody: Array<IModelBodyObject> | undefined, modelType: ModelType, modelAdditionals?: ModelAdditionals, usageType?: UsageType, key?: AppSettingsModelKeys }): PromiseLike<IModel>;\n    createModule(name: string, options: { description?: string; applicationID?: string }): Promise<IModule>;\n    createApplication(params: { name: string, description?: string, logo?: string, color?: string, deployParameters?: IAppDeployParameters }): PromiseLike<{ application: IApplication, organization: IOrganization }>;\n    createLog(logItem: IQCloudLogItem): Promise<{ ID: string; }>;\n    getModelInfo(ID: string, params?: { checkoutControl?: boolean; createCheckout?: boolean; isGetCheckoutUserInfo?: boolean }): Promise<IGetModelResponse>;\n    getModel(ID: string, params?: { checkoutControl?: boolean, createCheckout?: boolean, retrieveBody?: boolean, isGetCheckoutUserInfo?:boolean }): Promise<IGetModelResponse>;\n    getModelBody(ID: string): Promise<{ ID: string, model: IGetModelResponse[\"model\"] }>;\n    updateModel(ID: string, params: {\n        name?: string, model?: Array<IModelBodyObject>, checkin?: boolean, release?: boolean, publish?: boolean, shortComment?: string, comment?: string,\n        parentObject?: IApplication | IModule | IFolder, modelType?: ModelType, modelAdditionals?: ModelAdditionals, ownerUser?: ILoggedInUser\n    }): PromiseLike<void>;\n    updateModule(ID: string, params: { name?: string, description?: string, ownerUser?: ILoggedInUser, }): PromiseLike<{ module: IModule }>;\n    updateFolder(ID: string, params: { name: string }): Promise<void>;\n    updateApplication(ID: string, params: IUpdateApplicationRequest): PromiseLike<{ app: IApplication }>;\n    deleteModel(ID: string, addHistory?: boolean): PromiseLike<void>;\n    deleteModule(ID: string, addHistory?: boolean): PromiseLike<void>;\n    deleteFolder(ID: string, addHistory?: boolean): PromiseLike<void>;\n    addDeleteApplicationJob(ID: string, addHistory?: boolean): PromiseLike<void>;\n    duplicateModel(sourceModel: IModel, name: string): Promise<IModel>;\n    listApplications(getDetails?: boolean): PromiseLike<Array<IApplication>>;\n    listModules(applicationID?: string): Promise<Array<IModule>>;\n    listModels(options: IListModelsRequest): Promise<Array<IGetModelResponse>>;\n    getLPSettings(appID: string): Promise<Record<AppSettingsModelKeys, ILivePreviewSettingsRetval>>;\n    listModuleChildItems(module: IModule): Promise<Array<IModel>>;\n    listModelBodies(modelIDs: Array<string>): Promise<Array<IModelBody>>;\n    getApplicationDetails(appID: string): PromiseLike<IApplication[\"details\"]>;\n    getApplication(appID: string): Promise<IApplication>;\n    getExportTypes(): Promise<Array<{ name: ExportType; text: string; }>>;\n    getExportSelectionData(applicationID: string, exportType: ExportType): Promise<Array<IExportViewItem>>;\n    listModelHistories(modelID: string, historyType?: ModelHistoryType | undefined): Promise<IModelHistoryInfo[]>;\n    listMultiModelHistories(modelIDs: Array<string>, historyType?: ModelHistoryType | undefined): Promise<IModelHistoryInfo[]>;\n    getModelHistory(historyID: string): Promise<IGetModelHistoryResponse>;\n    createExportJob(appID: string, exportType: ExportType, exportItems: Array<IExportItem>, groupID?: string, layer?: number): Promise<IExportJobItem>;\n    createDeployJobs(deployJobs: Array<IDeployJobItem>, isGroup: boolean): Promise<void>;\n    createBuildJobs(jobs: Array<ICreateDeployJobParam>): Promise<Array<IExportJobDbItem>>;\n    addDeletePlateauEnvJob(appID: string): Promise<void>;\n    startDeploymentJob(param: ICreateDeployJobParam): Promise<IExportJobDbItem>;\n    createPackJobs(jobs: Array<ICreateExportJobParam>): Promise<Array<IExportJobDbItem>>;\n    getExportJobsByGroupId(req: IGetExportJobsByGroupIDRequest): Promise<IListExportJobsResponse>;\n    listExportJobs(jobType: JobType, options?: { appID?: string }): Promise<Array<IExportJobItem>>;\n    initPublishHistory(request: IInitJobHistoryRequest): Promise<IExportJobHistoryDbItem>;\n    listApplicationJobHistory(request: IExportJobHistoryRequest): Promise<Array<IExportJobHistoryDbItem>>;\n    listExportJobSteps(ID: string, isMultiStep?: boolean): Promise<Array<IExportJobStepItem>>;\n    listExportJobStepLogs(stepID: string): Promise<IlistExportJobStepLogsResponse>;\n    listExportJobArtifacts(ID: string): Promise<Array<IExportJobArtifactInfoItem>>;\n    listTreeviewItems(applicationID: string): Promise<Array<ITreeviewItem>>;\n    updateApplicationSettings(settings: { modulesSettings?: Array<IModuleSettingsItem>, applicationSettings?: IApplicationSettingsItem }): Promise<void>;\n    attachModuletoApplication(appID: string, moduleID: string): Promise<void>;\n    detachModuleFromApplication(appID: string, moduleID: string): Promise<void>;\n    getApplicationUISettings(applicationID?: string): Promise<Array<ITenantDefinitions>>;\n    getApplicationDeploySettings(applicationID: string): Promise<ITenantDefinitions[]>;\n    getTenantDefinition(ID: string): Promise<ITenantDefinitions>;\n    setRootScreen(ID: string): Promise<void>;\n    putModuleInStore(objectID: string): Promise<{ product: IModuleProduct; productVer: IModuleProductVer }>;\n    createLivePreview(options?: ICreateLivePreviewRequest): Promise<ILivePreview>;\n    updateLivePreview(ID: string, options?: IUpdateLivePreviewRequest): PromiseLike<void>;\n    updateSelectedLivePreview(appID: string): PromiseLike<void>;\n    getLivePreviewInfo(appID: string, options?: { selected?: boolean; type?: ILivePreview[\"type\"]; }): Promise<ICustomLivePreview | IDefaultLivePreview>;\n    listLivePreviewInfo(appID: string): Promise<Array<ICustomLivePreview | IDefaultLivePreview>>;\n    listTemplateInfos(type?: TemplateType): Promise<Array<ITemplateInfo>>;\n    createModelFromTemplate(params: {modelInfoID: ITemplateInfo[\"ID\"], modelType: ModelType, name: string, parentObject: IApplication | IModule | IFolder, modelAdditionals?: ModelAdditionals }): Promise<IModel>;\n\n    createInvitation(request: IInvitationRequest): Promise<void>;\n    listOrganizationUsers(request: IGetOrganizationUsersRequest): Promise<IGetOrganizationUsersResponse>;\n    listOrganizationInvitations(): Promise<IListInvitationsResponse>;\n    deleteInvitation(request: IDeleteInvitationRequest): Promise<void>;\n    removeUserFromOrganization(request: IRemoveUserFromOrganizationRequest): Promise<void>;\n    updateInvitation(request: IUpdateInvitationRequest): Promise<void>;\n\n    createFeedback(request: IAddFeedbackRequest): Promise<IAddFeedbackResponse>\n}\n\nexport const IQCloudApi = Symbol.for(\"IQCloudApi\");","import { ICreateExportJobParam } from \"../../../../common/qCloudTemp/exporter\";\nimport { IUseCase } from \"./IUseCase\";\n\nexport interface ICreateExportJob extends IUseCase<void, ICreateExportJobParam> {}\n\nexport const ICreateExportJob = Symbol.for(\"ICreateExportJob\");","import { ICreateDeployJobParam, IDeployJobItem, IExportItem, IPlatformSelection } from \"../../../../common/qCloudTemp/exporter\";\nimport { IProviderGetLastBuildStatusResponse } from \"../infrastructure/IProviderApi\";\n\nexport interface IDeployJobs {\n    createAppDeployJob(deployItems: Array<IExportItem>, platformSelection?: IPlatformSelection ): Promise<void>;\n    startDeploymentJob(deployJobs: ICreateDeployJobParam): Promise<void>;\n    createBuildJobs(deployJobs: Array<ICreateDeployJobParam>): Promise<void>;\n    checkRepoHasService(repoIds: Array<number>): Promise<Array<{ repoId: number; exist: boolean }>>;\n    getRepoNameById(repoId: number): Promise<string>;\n    getProductConfigInfo(productRepoId: number, quiRepoId?: number): Promise<{ domain: string; quiName?: string }>;\n    getLastBuildStatus(jobName: string): Promise<IProviderGetLastBuildStatusResponse>;\n}\n\nexport const IDeployJobs = Symbol.for(\"IDeployJobs\");","import { IExportItem } from \"../../../../common/qCloudTemp/exporter\";\nimport { IExportViewItem, IModel } from \"../model/models\";\n\nexport interface IJobUtils {\n    //settingTypeMapper(fileName: string): IExportItem[\"type\"];\n    getItemType(item: IExportViewItem | IModel): IExportItem[\"type\"];\n    getFileFullname(item: IExportViewItem | IModel): string;\n}\n\nexport const IJobUtils = Symbol.for(\"IJobUtils\");","import { IModelHistoryInfo } from \"../model/models\";\nimport { IUseCase } from \"./IUseCase\";\n\nexport interface IListMultiModelVersionsParam {\n    modelIDs: Array<string>;\n}\nexport interface IListMultiModelVersions extends IUseCase<Map<string, Array<IModelHistoryInfo>>, IListMultiModelVersionsParam> {\n\n}\nexport const IListMultiModelVersions = Symbol.for(\"IListMultiModelVersions\");","import { ICreateExportJobParam, IExportJobDbItem } from \"../../../../common/qCloudTemp/exporter\";\nexport interface IPackJobs {\n    createPackJobs(jobs: Array<ICreateExportJobParam>): Promise<Array<IExportJobDbItem>>;\n}\n\nexport const IPackJobs = Symbol.for(\"IPackJobs\");","<template>\n  <div class=\"custom-select\" :tabindex=\"tabindex\" @blur=\"open = false\">\n    <div :class=\"open ? 'open selected ' + selectedClass : 'selected ' + selectedClass\" @click=\"open = !open\">\n      <div v-if = \"selected\">{{ typeof selected === 'object' ? selected.name : selected }}\n        <i class=\"mdi mdi-chevron-down\"></i>\n      </div>\n      <div v-else>\n        <span contenteditable=\"true\" :data-placeholder=\"placeholder\" class=\"custom-placeholder\"></span>\n        <i class=\"mdi mdi-chevron-down\"></i>\n      </div>\n    </div>\n    <div class=\"items\" :class=\"{ selectHide: !open }\" :style=\"{padding: extraButton ? '10px 0 0' : '10px 0'}\">\n      <div v-for=\"(option, i) of options\" :key=\"i\" @click=\"handleClick(option)\" :class=\"['option' , (props.disabledOptions && getDisabledOptionsText(i)) ? 'disabled' : '' ]\">\n        <span v-if=\"props.disabledOptions && getDisabledOptionsText(i)\" class=\"button-tooltip\" :style=\"{top: (i*32) + 85 + 'px'}\">{{getDisabledOptionsText(i)}}</span>\n        <div>{{typeof option === 'object' ? option.name : option }}</div>\n      </div>\n      <div v-if=\"extraButton\" class=\"button-div\" :style=\"{borderTop: extraButton ? '1px solid #EEEEEE' :  'none'}\" >\n        <div v-for=\"(button, index) in buttons\" :key=\"index\">\n            <div :id=\"'option-button-' + index\" :class=\"button.buttonClass + ' button'\" @click=\"open=false\">{{ button.buttonText }}</div>\n        </div>\n      </div>\n    </div>  \n  </div>\n</template>\n\n<script setup>\nimport { ref, watchEffect } from 'vue'\nconst emit = defineEmits([\"input\"]);\nconst props = defineProps({\n  options: {\n    type: Array,\n    required: true,\n  },\n  disabledOptions: {\n    type: Array,\n    required: false\n  },\n  default: {\n    type: String,\n    required: false,\n    default: '',\n  },\n  selectedOption: {\n    type: String,\n    required: false\n  },\n  tabindex: {\n    type: Number,\n    required: false,\n    default: 0,\n  },\n  placeholder: {\n    type: String,\n    required: false,\n    default: \"\",\n  },\n  selectedClass: {\n    type: String,\n    required: true,\n    default: \"\",\n  },\n  extraButton: {\n    type: Boolean,\n    required: false,\n    default: false,\n  },\n  buttons: {\n    type: Array,\n    required: false,\n    default: () => [],\n    validator: (value) => {\n      return value.every(\n        (button) =>\n          typeof button === \"object\" &&\n          typeof button.buttonText === \"string\" &&\n          typeof button.buttonClass === \"string\"\n      );\n    },\n  },\n})\n\nconst open = ref(false);\nconst selected = ref(props.default ? props.default : null);\n\nwatchEffect(() => {\n  if(props && props.selectedOption){\n    selected.value = props.selectedOption;\n    open.value = false;\n  }\n});\n\nconst handleClick = (option) => {\n    if(typeof option === 'object'){\n      emit('input', option.id);\n      selected.value = option;\n      open.value = false;\n      emit('input', selected.value.id);\n    }\n    else if(typeof option === 'string') {\n      emit('input', option);\n      selected.value = option;\n      open.value = false;\n      emit('input', selected.value);\n    }\n}\n\nconst getDisabledOptionsText = (index) => {\n  const opt = props.disabledOptions.find(e => e.index == index);\n  if(opt)\n    return opt.cause;\n  return undefined;\n}\n</script>\n\n  \n  <style scoped>\n  /*You should put other CSS properties with same class names in the parent component's style tag that is not scoped.*/\n  * {\n    font-family: \"Roboto\"\n  }\n  .custom-select {\n    position: relative;\n    width: 100%;\n    text-align: left;\n    outline: none;\n  }\n  \n  .custom-select .selected {\n\n    cursor: pointer;\n    user-select: none;\n  }\n  \n  .custom-select .selected i {\n    position: absolute;\n    right: 10px;\n    float: right;\n  }\n  \n  .custom-select .items {\n    position: absolute;\n    left: 0;\n    right: 0;\n    z-index: 1;\n  }\n  \n  .custom-select .items .option {\n    cursor: pointer;\n    user-select: none;\n  }  \n  \n  .custom-select .items .option.disabled div {\n    cursor: default;\n    user-select: none;\n    opacity: 0.4;\n  } \n  .custom-select .items .option.disabled:active {\n    pointer-events: none;\n  }\n  \n  .selectHide {\n    display: none;\n  }\n  .button-div {\n    justify-content: center;\n    display: grid;\n    padding: 13px 0 19px;\n    margin-top: 10px\n  }\n  .button {\n    cursor: pointer;\n  }\n  .custom-placeholder:empty:before {\n    content:attr(data-placeholder);\n    color:#616161\n  }\n  .custom-placeholder:focus-visible {\n    outline: none;\n  }\n  .button-tooltip {\n    visibility: hidden;\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n    padding: 8px;\n    top: 39px;\n    left: 65px;\n    height: 30px;\n    position: absolute;\n    background: #757575;\n    color: #FFFFFF;\n    font-size: 12px;\n    line-height: 14px;\n    text-align: center;\n    border-radius: 4px;\n    letter-spacing: 0.2px;\n    opacity: 0;\n    z-index: 1;\n  }\n  .custom-select .items .option:hover .button-tooltip {\n    visibility: visible;\n    transition: opacity 0.3s ease-out 0.5s;\n    opacity: 1;\n  }\n  </style>","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./customSelect.vue?vue&type=style&index=0&id=237b87c3&scoped=true&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./customSelect.vue?vue&type=style&index=0&id=237b87c3&scoped=true&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","import script from \"./customSelect.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./customSelect.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./customSelect.vue?vue&type=style&index=0&id=237b87c3&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/studio/studio/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-237b87c3\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, normalizeClass as _normalizeClass, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, createCommentVNode as _createCommentVNode, vShow as _vShow, withDirectives as _withDirectives, createStaticVNode as _createStaticVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-6f7eccee\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"container\" }\nconst _hoisted_2 = { class: \"text-number\" }\nconst _hoisted_3 = { class: \"text-number\" }\nconst _hoisted_4 = { key: 0 }\nconst _hoisted_5 = { class: \"row-container\" }\nconst _hoisted_6 = [\"onClick\"]\nconst _hoisted_7 = { class: \"row-container\" }\nconst _hoisted_8 = [\"onClick\"]\nconst _hoisted_9 = { key: 1 }\nconst _hoisted_10 = { class: \"row-container\" }\nconst _hoisted_11 = {\n  key: 0,\n  class: \"mdi mdi-palette qjson-color app-tier-model-icon\"\n}\nconst _hoisted_12 = {\n  key: 1,\n  class: \"mdi mdi-cog-outline yaml-color app-tier-model-icon\"\n}\nconst _hoisted_13 = {\n  key: 2,\n  class: \"mdi mdi-cog-outline js-color app-tier-model-icon\"\n}\nconst _hoisted_14 = {\n  key: 3,\n  class: \"mdi mdi-auto-fix process-color app-tier-model-icon\"\n}\nconst _hoisted_15 = {\n  key: 4,\n  class: \"mdi mdi-vector-polyline bpmn-color app-tier-model-icon\"\n}\nconst _hoisted_16 = {\n  key: 5,\n  class: \"mdi mdi-database entity-designer-color app-tier-model-icon\"\n}\nconst _hoisted_17 = {\n  key: 6,\n  class: \"mdi mdi-step-forward bpmn-color app-tier-model-icon\"\n}\nconst _hoisted_18 = { class: \"app-tier-model-name\" }\nconst _hoisted_19 = {\n  key: 0,\n  class: \"start-screen\"\n}\nconst _hoisted_20 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"mdi mdi-home-outline\" }, null, -1 /* HOISTED */))\nconst _hoisted_21 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"button-tooltip\",\n  style: {\"top\":\"-30px\",\"left\":\"2px\",\"z-index\":\"1\",\"width\":\"80px\"}\n}, \"Start Screen\", -1 /* HOISTED */))\nconst _hoisted_22 = [\n  _hoisted_20,\n  _hoisted_21\n]\nconst _hoisted_23 = [\"onClick\"]\nconst _hoisted_24 = {\n  key: 0,\n  style: {\"margin-bottom\":\"102px\"}\n}\nconst _hoisted_25 = /*#__PURE__*/_createStaticVNode(\"<div style=\\\"display:flex;align-items:center;\\\" data-v-6f7eccee><span class=\\\"custom-text environment\\\" data-v-6f7eccee> Publish To </span><span class=\\\"publish-info\\\" data-v-6f7eccee><i class=\\\"mdi mdi-information\\\" data-v-6f7eccee></i><span class=\\\"button-tooltip\\\" style=\\\"top:460px;left:96px;z-index:1;width:231px;\\\" data-v-6f7eccee>Publish To options may change depending on the module type you choose.</span></span></div>\", 1)\nconst _hoisted_26 = {\n  key: 1,\n  class: \"mobile-publish-text\"\n}\nconst _hoisted_27 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"mdi mdi-information\" }, null, -1 /* HOISTED */))\nconst _hoisted_28 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Models and static files of your mobile application will be served from Public Cloud.\", -1 /* HOISTED */))\nconst _hoisted_29 = [\n  _hoisted_27,\n  _hoisted_28\n]\nconst _hoisted_30 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"save-button\" }, \"DOWNLOAD\", -1 /* HOISTED */))\nconst _hoisted_31 = {\n  key: 0,\n  class: \"button-tooltip\",\n  style: {\"top\":\"-80px\",\"left\":\"626px\",\"z-index\":\"1\",\"width\":\"145px\"}\n}\nconst _hoisted_32 = {\n  key: 1,\n  class: \"button-tooltip\",\n  style: {\"top\":\"-46px\",\"left\":\"640px\",\"z-index\":\"1\",\"width\":\"120px\"}\n}\nconst _hoisted_33 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"save-button deploy\" }, \"PUBLISH\", -1 /* HOISTED */))\nconst _hoisted_34 = {\n  key: 0,\n  class: \"button-tooltip\",\n  style: {\"top\":\"-46px\",\"left\":\"652px\",\"z-index\":\"1\",\"width\":\"120px\"}\n}\nconst _hoisted_35 = {\n  key: 1,\n  class: \"button-tooltip\",\n  style: {\"top\":\"-46px\",\"left\":\"644px\",\"z-index\":\"1\",\"width\":\"123px\"}\n}\nconst _hoisted_36 = {\n  key: 2,\n  class: \"button-tooltip\",\n  style: {\"top\":\"-95px\",\"left\":\"644px\",\"z-index\":\"1\",\"width\":\"135px\"}\n}\n\nimport { CryptoHelper } from \"@stechquick/algae/lib/helpers/cryptoHelper\";\nimport { container } from \"../../../../../domain/core/diContainer\";\nimport { IExportViewItem, IModel, IModelHistoryInfo, IModule } from \"../../../../../domain/model/models\";\nimport { IViewModel } from \"../../../../../domain/viewModel/IViewModel\";\nimport CheckboxComp from \"../../checkboxComp.vue\";\nimport { ref, computed, defineAsyncComponent, watch, onMounted, onBeforeMount } from \"vue\";\nimport { IDialog } from \"../../../../../domain/presentation/IDialog\";\nimport { IUseCaseExecutor } from \"../../../../../domain/useCase/IUseCaseExecutor\";\nimport { DeployType, ICreateDeployJobParam, ICreateExportJobParam, IExportItem, IExportJobData, IPlatformSelection, IProcessConfigModelItem } from \"../../../../../../../common/qCloudTemp/exporter\";\nimport { ICreateExportJob } from \"../../../../../domain/useCase/ICreateExportJob\";\nimport { IDeployJobs } from \"../../../../../domain/useCase/IDeployJobs\";\nimport { IQCloudApi } from \"../../../../../domain/infrastructure/IQCloudApi\";\nimport { IPackJobs } from \"../../../../../domain/useCase/IPackJobs\";\nimport { IJobUtils } from \"../../../../../domain/useCase/IJobUtils\";\nimport { IQJsonAdditionals, UsageType } from \"../../../../../../../common/qCloudTemp/quickCloud\";\nimport { PlateauHelper } from \"@stechquick/algae/lib/helpers/plateau/plateauHelper\";\nimport { IViewModelManager } from \"../../../../../domain/viewModel/IViewModelManager\";\nimport CustomSelect from \"../../../components/customSelect.vue\"\nimport { IOrganizationCloud } from \"../../../../../../../common/clean/domain/useCases/ICloudProvider\";\nimport { IListMultiModelVersions } from \"../../../../../domain/useCase/IListMultiModelVersions\";\nimport { ModelContants } from \"../../../../../../../common/qCloudTemp/modelContants\";\n\ninterface ITableData {\n    id: string;\n    parentId?: string;\n    collapsed?: boolean;\n    anyChildChecked?: boolean;\n    allChildChecked?: boolean;\n    checked?: boolean;\n    name: string;\n    type: IModel[\"modelType\"] | IModule[\"objectType\"];\n    version?: string;\n    disabled?: boolean | true;\n    children?: Array<ITableData>;\n    usageType?: UsageType;\n}\n\ninterface IDeployScreenAdditionalProps {\n    screenType: \"Export\" | \"Deploy\";\n    platformSelection: IPlatformSelection;\n}\n\ninterface IDisabledOptions {\n    index: number\n    cause: string;\n}\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'publishDialog',\n  props: {\n    screenType: null,\n    platformSelection: null\n  },\n  emits: [\"close\"],\n  setup(__props: any, { emit }) {\n\nconst props = __props as {\n    screenType: \"Export\" | \"Deploy\";\n    platformSelection: IPlatformSelection;\n};\n\n\nconst viewModel = container.resolve<IViewModel>(IViewModel);\nconst viewModelManager = container.resolve<IViewModelManager>(IViewModelManager);\nconst dialog = container.resolve<IDialog>(IDialog);\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\nconst deployJobsUseCase = container.resolve<IDeployJobs>(IDeployJobs);\nconst qcloudApi = container.resolve<IQCloudApi>(IQCloudApi);\nconst packJobsUseCase = container.resolve<IPackJobs>(IPackJobs);\nconst jobUtils = container.resolve<IJobUtils>(IJobUtils);\n\nconst items = ref<Array<ITableData>>([]);\nconst validations = ref<boolean>(true);\nconst selectedTarget = ref<string>(\"\");\nconst disabledOptions = ref<Array<IDisabledOptions>>();\nconst publishTargets = ref<Array<string>>();\nconst modelHistories = ref<Map<string, Array<IModelHistoryInfo>>>();\nconst startScreen = ref<IModel>();\n\n\nonMounted(async () => {\n    await initVersions();\n    handleItems();\n    props.screenType == \"Deploy\" && syncPublishTargets();\n    validations.value = validate();\n})\n\nconst allChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == \"module\" && e.allChildChecked).length);\nconst anyChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == \"module\" && !e.allChildChecked && e.anyChildChecked).length);\nconst checkedRootLevelModelsCount = computed(() => items.value.filter(e => e.type != \"module\" && e.checked).length);\nconst totalRootLevelCount = computed(() => items.value.length);\nconst saveButtonDisable = computed(() => (props.screenType == \"Deploy\" && props.platformSelection.web && selectedTarget.value == \"\") || !validations.value || !items.value.some((item) => item.checked || item.anyChildChecked) || (props.screenType == \"Export\" && !(items.value.find((item) => item.id == startScreen.value?.ID))?.checked));\nconst mainCheckboxState = computed(() => items.value.length == allChildCheckedModulesCount.value ? true \n        : (anyChildCheckedModulesCount.value + checkedRootLevelModelsCount.value > 0  ? false : undefined));\nconst isThereVersion = computed(() => checkMaxVersionOfAllItems());\nfunction validate() {\n    let result = true;\n    const modules = items.value.filter(e => e.type == \"module\" && e.anyChildChecked);\n    const appLayerItems = items.value.filter(e => e.type == \"qjson\" && e.checked);\n\n    startScreen.value = (viewModel.studio.items as Array<IModel>).find(item => item.isRootPage);\n    if(!startScreen.value)\n        return false;\n\n    if (props.screenType == \"Deploy\") {\n        if (modules.length > 0)\n            result = modules.map(e => e.children).filter(e => !e?.find(f => f.type == \"entityDesigner\" && f.checked)).length <= 0\n\n        let isApplicationWillDeploy = appLayerItems.length > 0;\n        if (isApplicationWillDeploy) {\n            result = appLayerItems\n                .map(e => viewModel.studio.items.find(item => item.ID == e.id) as IModel)\n                .findIndex(e => ((e.additionals as IQJsonAdditionals).isRootPage)) != -1;\n        }\n    }\n\n    return result;\n}\n\nfunction mobileFilter(model: IModel) {\n    return props.platformSelection.web || !props.platformSelection.mobile ||\n        !(model.modelType == \"bpmn\" || model.modelType == \"entityDesigner\" || model.modelType == \"process\");\n}\n\nasync function initVersions() {\n    const modelIDs = Array<string>();\n    viewModelManager.flatMapItems(viewModel.studio.items, (item, path) => {\n        if (item.objectType != \"model\") { return; }\n        modelIDs.push(item.ID);\n        return item;\n    });\n\n    modelHistories.value = await executor.executeUseCase<IListMultiModelVersions>(IListMultiModelVersions, { modelIDs });\n}\n\nasync function handleItems() {\n    items.value = viewModel.studio.items\n        .filter((item) => item.objectType == \"module\" && item.children.length > 0)\n        .map((item) => {\n            const tableData: ITableData = {\n                id: item.ID,\n                collapsed: true,\n                name: item.name,\n                type: \"module\",\n                children: (item as IModule).children\n                    .filter((child) => child.objectType == \"model\")\n                    .filter(e => !props || props.screenType == \"Export\" || mobileFilter(e as IModel))\n                    .map(child => {\n                        const maxVersion = getItemMaxVersion(child as IModel)\n                        return {\n                            id: child.ID,\n                            parentId: item.ID,\n                            checked: maxVersion != undefined,\n                            disabled: !maxVersion,\n                            name: child.name,\n                            type: (child as IModel).modelType,\n                            version: maxVersion\n                        } as ITableData\n                    })\n            }\n            handleParentCheckedStatus(tableData);\n            return tableData;\n        });\n\n    viewModel.studio.items\n        .filter((item) => item.objectType == \"model\" && item.usageType != \"appSettings\" && item.usageType != \"appAssetList\")\n        .forEach((item) => {\n            const maxVersion = getItemMaxVersion(item as IModel)\n            items.value.push(\n                {\n                    id: item.ID,\n                    checked: maxVersion != undefined,\n                    name: item.name,\n                    disabled: !maxVersion,\n                    type: (item as IModel).modelType,\n                    version: maxVersion,\n                });\n        });\n    const uiSettingsID = CryptoHelper.CreateGuid();\n    const appSettings = viewModel.studio.items.filter((item) => item.objectType == \"model\" && item.usageType == \"appSettings\") as Array<IModel>;\n    const uiSettings: ITableData = {\n        id: uiSettingsID,\n        collapsed: true,\n        name: \"UI Settings\",\n        type: \"module\",\n        children: appSettings.map(settings => {\n            const maxVersion = getItemMaxVersion(settings as IModel)\n            return {\n                id: settings.ID,\n                parentId: uiSettingsID,\n                name: settings.name,\n                type: (settings as IModel).modelType,\n                checked: maxVersion != undefined,\n                usageType: settings?.usageType,\n                disabled: !maxVersion,\n                version: maxVersion,\n            }\n        }) as Array<ITableData>,\n    };\n    handleParentCheckedStatus(uiSettings);\n\n    const uiAssetID = CryptoHelper.CreateGuid();\n    const appAssetList = viewModel.studio.items.filter((item) => item.objectType == \"model\" && item.usageType == \"appAssetList\") as Array<IModel>;\n    const uiAssetList: ITableData = {\n        id: uiAssetID,\n        collapsed: true,\n        name: \"Styled Components\",\n        type: \"module\",\n        anyChildChecked: true,\n        allChildChecked: true,\n        children: appAssetList.map((asset) => ({\n            id: asset.ID,\n            parentId: uiSettingsID,\n            name: asset.name,\n            type: (asset as IModel).modelType,\n            checked: true,\n            usageType: asset?.usageType,\n        })) as Array<ITableData>,\n    };\n    handleParentCheckedStatus(uiAssetList);\n\n    items.value.unshift(uiAssetList);\n    items.value.unshift(uiSettings);\n    console.log(\"items => \", items.value);\n}\n\nfunction getItemMaxVersion(item: IModel): string | undefined {\n    if (!modelHistories.value?.has(item.ID))\n        return undefined;\n\n    const versions = modelHistories.value.get(item.ID);\n    if (!versions)\n        return undefined;\n\n    const findMaxVersion = (versions: Array<string>) => {\n        const versionNumbers = versions.map(v => {\n            const parts: Array<string> = v.split(\".\");\n            return parseInt(parts[0]) * 10 + parseInt(parts[1]) * 1;\n        })\n\n        versionNumbers.sort((a, b) => b - a);\n\n        const maxVersion = versionNumbers[0];\n        return `${Math.floor(maxVersion / 10)}.${maxVersion % 10}`;\n    }\n\n    return findMaxVersion(versions.map(e => e.version!));\n\n}\nfunction checkMaxVersionOfAllItems() {\n    let isThereVersion: boolean = false;\n    items.value.forEach(item => {\n        if(item.type == \"module\") {\n            item.children?.forEach(child => {\n                if(child.version) {\n                    isThereVersion = true;\n                }\n                \n            })\n        }\n        else {\n            if(item.version) {\n                isThereVersion = true;\n            }\n        }\n    })\n    return isThereVersion;\n}\nfunction handleModuleCountCheckboxEvent(value: boolean) {\n    items.value.filter(e => !e.disabled).forEach((item) => {\n        item.checked = value;\n        const allItemsCheckable = item.allChildChecked != undefined && item.children && item.children.length > 0 && !item.children.some(c => c.disabled);\n        if (allItemsCheckable) item.allChildChecked = value;\n        if (item.anyChildChecked != undefined) item.anyChildChecked = value;\n        if (item.children) item.children.filter(c => !c.disabled).forEach((child) => (child.checked = value));\n    });\n\n    validations.value = validate();\n    props.screenType == \"Deploy\" && syncPublishTargets();\n}\n\nfunction handleCollapse(item: ITableData) {\n    item.collapsed = !item.collapsed;\n}\n\nfunction handleItemCheckEvent(item: ITableData) {\n    if(item.disabled)\n        return;\n\n    if (item.type != \"module\") {\n        item.checked = !item.checked;\n        if (item.parentId) {\n            const parent = items.value.find((i) => i.id == item.parentId)!;\n            handleParentCheckedStatus(parent);\n        }\n    } else {\n        if (item.children && item.children.filter(c => !c.disabled).length > 0) {\n            if (item.anyChildChecked) {\n                item.children?.filter(c => !c.disabled).forEach((child) => (child.checked = false));\n                item.checked = false;\n            } else {\n                item.children?.filter(e => !e.disabled).forEach((child) => (child.checked = true));\n                item.checked = true;\n            }\n            handleParentCheckedStatus(item);\n        }\n        else {\n            item.checked = !item.checked;\n            item.allChildChecked = false;\n        }\n    }\n\n    validations.value = validate();\n    props.screenType == \"Deploy\" && syncPublishTargets();\n}\n\nfunction handleParentCheckedStatus(item: ITableData) {\n    item.disabled = item.children && (item.children.length == 0 || !item.children?.some(child => !child.disabled))\n    item.allChildChecked = item.children && item.children.length > 0 && !item.children.some((child) => !child.checked || child.disabled);\n    item.anyChildChecked = item.children?.some((child) => child.checked && !child.disabled);\n}\n\nfunction syncPublishTargets() {\n    publishTargets.value = []; disabledOptions.value = [];\n\n    const targets = viewModel.user?.selectedOrganization?.actions?.publish?.targets;\n    if (!targets)\n        return;\n\n    const isSelectAnyItem = items.value.find(e => e.anyChildChecked || e.checked);\n    if (!isSelectAnyItem) {\n        publishTargets.value = Object.entries(targets).map(e => cloudTargetMap(e[0])!);\n        const disabledOptionList = Array<IDisabledOptions>();\n        for (let i = 0; i < publishTargets.value.length; i++) {\n            disabledOptionList.push({ index: i, cause: \"You need to include items to publish.\" })\n        }\n        disabledOptions.value = disabledOptionList;\n        return;\n    }\n\n    const checkedPublishTargets = checkAndSetDisabledCauses(targets);\n    const sortedTargets = checkedPublishTargets.sort((e, f) => (!e.cause === !f.cause) ? 0 : e.cause ? 1 : -1);\n\n    const disabledOptionList = Array<IDisabledOptions>();\n    for (let i = 0; i < sortedTargets.length; i++) {\n        const cause = sortedTargets[i].cause;\n        if (cause) disabledOptionList.push({ index: i, cause })\n    }\n    disabledOptions.value = disabledOptionList;\n    publishTargets.value = sortedTargets.map(e => e.optionName);\n\n    selectedTarget.value = !sortedTargets[0].cause ? sortedTargets[0].optionName : \"\";\n}\n\nfunction checkAndSetDisabledCauses(targets: Record<keyof IOrganizationCloud, boolean>) {\n    const list = Array<{ optionName: string, cause?: string }>();\n\n    Object.keys(targets).forEach(e => {\n        const key = e as keyof IOrganizationCloud;\n        const value = targets[key];\n        const optionName = cloudTargetMap(key)!;\n        if (!value)\n            return list.push({ optionName, cause: \"You are not authorized to publish to this target.\" });\n\n\n        switch (key) {\n            case \"azure\":\n                const traverseSelectedItems = (status: boolean, items?: Array<ITableData>) => {\n                    if (!items || items.length == 0) { return status; }\n                    for (const item of items) {\n                        if (item.checked || item.anyChildChecked) {\n                            if (item.type == \"module\") {\n                                status = traverseSelectedItems(status, item.children);\n                            }\n                            if (item.type == \"entityDesigner\" || item.type == \"bpmn\" || item.type == \"process\") {\n                                status = false;\n                                break;\n                            }\n                        }\n\n                    }\n                    return status;\n                }\n\n                const status = traverseSelectedItems(true, items.value);\n                if (!status)\n                    return list.push({ optionName, cause: \"Entity and process models cannot be published to this target.\" });\n                break;\n            case \"plateauGCP\":\n                if (props.platformSelection.mobile)\n                    return list.push({ optionName, cause: \"This target is not available for mobile publishing.\" });\n\n                const modulesHasNotAnEDModel =  items.value.filter(e => e.name != \"UI Settings\").find(e => e.type == \"module\" && e.anyChildChecked && e.children?.some(c => c.checked && (c.type == \"bpmn\" || c.type == \"process\")) && !e.children?.some(c => c.type == \"entityDesigner\" && c.checked))\n                if (modulesHasNotAnEDModel)\n                    return list.push({optionName, cause: `This target not available. Selected module '${modulesHasNotAnEDModel.name}' has not any Data Model.`})\n                break;\n        }\n\n        list.push({ optionName });\n    })\n\n    return list;\n}\n\nfunction versionDialog(item: ITableData) {\n    const clickedNode = { id: item.id, state: { checked: item.checked }, text: item.name, type: item.type, version: item.version };\n    const hasAnyVersion = modelHistories.value?.has(item.id);\n    const options = { clickedNode, cb: (version: string) => { item.version = version } } as any;\n    if (hasAnyVersion) {\n        options.versions = modelHistories.value?.get(item.id)\n    }\n    dialog.showDialog(\n        defineAsyncComponent(() => import(\"../../application/modelVersionDialog.vue\")),\n        { closable: true, title: \"Change Version\", width: \"900px\", maxHeight: \"500px\", overflow: \"auto\" }, options\n    );\n}\n\nfunction close() {\n    emit(\"close\");\n}\n\nasync function save() {\n    executor.execute(\n        async () => {\n            const initAsGroup = async () => {\n                const groupID = CryptoHelper.CreateGuid();\n                await initHistory(groupID);\n                await packJob(groupID);\n                return groupID;\n            }\n\n            const isFlowBackend = viewModel.user?.selectedOrganization?.applications.flow;\n\n            switch (props.screenType) {\n                case \"Export\":\n                    //FIXME: Export backende tasinmali. layer, groupId backendde setlenmeli.\n                    if(isFlowBackend) {\n                        const deployItems = await createAzureDeployItems();\n                        await packJobsUseCase.createPackJobs([{\n                            appID: viewModel.studio.appId,\n                            exportType: \"qui\",\n                            selectionData: deployItems\n                        }]);\n                        break;\n                    }\n\n                    const groupID = await initAsGroup();\n                    await createExportJob(groupID);\n                    break;\n                case \"Deploy\":\n                    if(props.platformSelection.mobile) {\n                        const deployItems = await createAzureDeployItems();\n                        await deployJobsUseCase.createAppDeployJob(deployItems, props.platformSelection);\n                    }\n                    switch (cloudTargetMap(selectedTarget.value!, true) as keyof IOrganizationCloud) {\n                        case \"plateauGCP\":\n                            const groupID = await initAsGroup();\n                            await createDeployJob(groupID);\n                            break;\n                        case \"azure\":\n                            const deployItems = await createAzureDeployItems();\n                            await deployJobsUseCase.createAppDeployJob(deployItems, props.platformSelection);\n                            break;\n                    }\n            }\n            emit(\"close\");\n        },\n        { loading: true });\n}\n\nasync function createAzureDeployItems() {\n    const deployItems: Array<IExportItem> = [];\n    const itemIdObj: Record<string, { item: IModel, path: string }> = {};\n\n    viewModelManager.flatMapItems(viewModel.studio.items, (item, path) => {\n        if (item.objectType != \"model\") { return; }\n        itemIdObj[item.ID] = { item, path };\n        return item;\n    });\n\n    const traverseSelectedItems = (items?: Array<ITableData>) => {\n        if (!items || items.length == 0) { return; }\n        items.filter(e => e.checked || e.anyChildChecked).forEach(item => {\n            if (item.type == \"module\") {\n                traverseSelectedItems(item.children);\n                return;\n            }\n\n            const itemMap = itemIdObj[item.id];\n\n            const deployItem: IExportItem = {\n                id: item.id,\n                name: jobUtils.getFileFullname(itemMap.item),\n                path: itemMap.path,\n                type: jobUtils.getItemType(itemMap.item),\n                ver: item.version || \"latest\",\n                isRootPage: itemMap.item.isRootPage,\n                ownerType: 'application',\n                ownerName: viewModel.studio.appName,\n                size: itemMap.item.size,\n            };\n            deployItems.push(deployItem)\n        });\n    };\n\n    traverseSelectedItems(items.value);\n\n    return deployItems;\n}\n\nasync function initHistory(groupID: string) {\n    return qcloudApi.initPublishHistory({\n        appID: viewModel.studio.appId,\n        ID: groupID,\n        isMultiStep: true,\n        type: props.screenType == \"Deploy\" ? \"publish\" : \"download\",\n        cloudProvider: props.screenType == \"Deploy\" ? cloudTargetMap(selectedTarget.value!, true) as keyof IOrganizationCloud : undefined,\n        platform: props.platformSelection\n    });\n}\n\nasync function packJob(groupID: string) {\n    let exportItemMap = new Map<string, Array<IExportItem>>();\n    const appName = viewModel.studio.appName;\n\n    const itemIdObj: Record<string, { item: IModel, path: string }> = {};\n    viewModelManager.flatMapItems(viewModel.studio.items, (item, path) => {\n        if (item.objectType != \"model\") { return; }\n        itemIdObj[item.ID] = { item, path };\n        return item;\n    });\n\n    const createExportObject = (tableItem: ITableData) => {\n        const item = itemIdObj[tableItem.id].item;\n        const isAppItem = item.modelType == 'qjson' ;\n        return {\n            id: tableItem.id,\n            ver: tableItem.version,\n            type: jobUtils.getItemType(item),\n            path: itemIdObj[tableItem.id].path,\n            name: jobUtils.getFileFullname(item),\n            ownerType: isAppItem ? 'application' : item.parent.objectType,\n            ownerName: isAppItem ? appName : item.parent.name,\n        } as IExportItem;\n    }\n\n    const addToExportItem = (key: string, obj: IExportItem) => {\n        key = obj.ownerType == 'module' ? `mdl-${key}` : key; // for same named module and app\n        let items = exportItemMap.get(key);\n        if(items && items.length > 0){\n            items.push(obj);\n            exportItemMap.set(key, items);\n        } else\n            exportItemMap.set(key, [obj]);\n    }\n\n    items.value.filter(e => e.checked ?? e.anyChildChecked).forEach((asset) => {\n        if (asset.type == 'qjson') {\n            const obj = createExportObject(asset);\n            const isRootPage = viewModel.studio.items.find(i => i.objectType == \"model\" && i.modelType == \"qjson\" && (i.additionals as IQJsonAdditionals).isRootPage && i.ID == asset.id);\n            obj.isRootPage = isRootPage ? true : undefined;\n\n            addToExportItem(appName, obj);\n        }\n        else if (asset.type == 'module') {\n            asset.children!.filter(e => e.checked).forEach(child => {\n                const obj = createExportObject(child);\n                if (obj.type == \"entityDesigner\")\n                    obj.entityGenerationDomain = viewModel.user!.selectedOrganization!.actions?.entityGenerationDomain;\n\n                const useSeperateModule = obj.type == 'bpmn' || obj.type == 'entityDesigner' || obj.type == 'process';\n                addToExportItem(useSeperateModule ? asset.name : appName, obj);\n            });\n        }\n    })\n\n    let jobs = Array<ICreateExportJobParam>();\n    exportItemMap.forEach((v, k) => {\n        jobs.push({\n            appID: viewModel.studio.appId,\n            exportType: \"qui\",\n            selectionData: v,\n            cause: props.screenType == 'Export' ? 'download': \"publish\",\n            layer: 0,\n            groupID: groupID\n        })\n    })\n\n    await packJobsUseCase.createPackJobs(jobs);\n}\n\nasync function createExportJob(groupID: string) {\n    await executor.executeUseCase<ICreateExportJob>(ICreateExportJob, {\n        appID: viewModel.studio.appId,\n        exportType: \"qui\",\n        selectionData: [],\n        layer: 1,\n        groupID: groupID\n    });\n}\n\nasync function createDeployJob(groupID: string) {\n    //1-(n) L1- deployJob(build)\n    let packages = await qcloudApi.getExportJobsByGroupId({ groupID })\n        .then(jobs => jobs.jobs.map(e => {\n            const jobData = e.jobData as IExportJobData;\n            return {\n                ownerName: jobData.items[0].ownerName,\n                jobID: e.jobID,\n                type: jobData.items[0].ownerType,\n                mainDir: getDeployableArchiveRoot(jobData)\n            }\n        }));\n\n    if (!packages || packages.length <= 0)\n        return;\n\n    let buildJobs = Array<ICreateDeployJobParam>();\n    packages.forEach(pack => {\n        buildJobs.push({\n            appID: viewModel.studio.appId,\n            type: \"build\",\n            package: {\n                type: pack.type as DeployType,\n                name: pack.ownerName!,\n                mainDir: pack.mainDir!,\n                zip: `${pack.jobID}.zip`,\n            },\n            layer: 1,\n            groupID: groupID\n        })\n    })\n\n    await deployJobsUseCase.createBuildJobs(buildJobs);\n\n    //2-(1) L2- deployJob(deployment)\n    let jobParam: ICreateDeployJobParam = {\n        appID: viewModel.studio.appId,\n        type: \"deployment\",\n        deployConfig: {\n            process: {\n                configModelIDs: getProcessConfigList(),\n                enabled: items.value.some(e => e.anyChildChecked && e.children?.some(e => e.checked && e.type == \"bpmn\"))\n            }\n        },\n        layer: 2,\n        groupID: groupID\n    }\n\n    await deployJobsUseCase.startDeploymentJob(jobParam);\n}\n\nfunction getProcessConfigList() {\n    let processConfigList = Array<IProcessConfigModelItem>();\n    items.value.forEach((asset) => {\n        if (asset.type == \"module\" && asset.anyChildChecked && asset.children) {\n            const usingService = asset.children.find(c => c.type == \"entityDesigner\");\n            if (!usingService)\n                return;\n\n            const serviceName = PlateauHelper.getServiceNameFromModel(usingService.name);\n            asset.children.forEach(child => {\n                if (child.checked && child.type == \"process\") {\n                    processConfigList.push({\n                        moduleName: serviceName,\n                        modelId: child.id,\n                        modelName: child.name\n                    })\n                }\n            })\n        }\n    })\n    return processConfigList;\n}\n\nfunction getDeployableArchiveRoot(jobData: IExportJobData) {\n    if (jobData.items[0].ownerType == \"module\") {\n        let edModel = jobData.items.find(e => e.type == \"entityDesigner\");\n        if (!edModel)\n            throw new Error(\"!!! this module cannot deploy. Because its have not a service\");\n        return PlateauHelper.getServiceNameFromModel(edModel.name);\n    }\n    return PlateauHelper.getQuiPackageNameFromAppName(jobData.app.name);\n}\n\nfunction cloudTargetMap(name: string, pureVal: boolean = false) {\n    const map: Record<keyof IOrganizationCloud, string> = { azure: \"Public Cloud\", plateauGCP: \"Plateau Platform Playground\" };\n    if (pureVal) {\n        return Object.keys(map).find(e => {\n            if (map[e as keyof IOrganizationCloud] === name) {\n                return true;\n            }\n        })\n    } else {\n        let key = Object.keys(map).includes(name);\n        if (!key)\n            return;\n        return map[name as keyof IOrganizationCloud];\n    }\n}\n\nfunction onTargetSelect(value: string) {\n    selectedTarget.value = value\n}\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", null, [\n      _createVNode(CheckboxComp, {\n        class: _normalizeClass(['modules-selected-checkbox', props.screenType == 'Deploy' ? 'deploy' : '']),\n        minus: _unref(mainCheckboxState) == false,\n        check: _unref(mainCheckboxState) == true,\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (handleModuleCountCheckboxEvent(_unref(mainCheckboxState) == undefined)))\n      }, null, 8 /* PROPS */, [\"class\", \"minus\", \"check\"]),\n      _createElementVNode(\"div\", {\n        class: _normalizeClass(['modules-selected-text', props.screenType == 'Deploy' ? 'deploy' : ''])\n      }, [\n        _createElementVNode(\"span\", _hoisted_2, _toDisplayString(_unref(allChildCheckedModulesCount) + _unref(anyChildCheckedModulesCount) + _unref(checkedRootLevelModelsCount)), 1 /* TEXT */),\n        _createTextVNode(\" of \"),\n        _createElementVNode(\"span\", _hoisted_3, _toDisplayString(_unref(totalRootLevelCount)), 1 /* TEXT */),\n        _createTextVNode(\" items selected \")\n      ], 2 /* CLASS */)\n    ]),\n    _createElementVNode(\"div\", {\n      class: _normalizeClass(['modules-datatable', props.screenType == 'Deploy' ? 'deploy' : ''])\n    }, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(items.value, (item) => {\n        return (_openBlock(), _createElementBlock(\"div\", null, [\n          (item?.type == 'module')\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n                _createElementVNode(\"div\", _hoisted_5, [\n                  _createElementVNode(\"i\", {\n                    class: _normalizeClass('mdi mdi-menu' + (item.collapsed ? '-right' : '-down') + ' chevron' + (!item.children || item.children.length == 0 ? ' disabled': '')),\n                    onClick: ($event: any) => (handleCollapse(item))\n                  }, null, 10 /* CLASS, PROPS */, _hoisted_6),\n                  _createVNode(CheckboxComp, {\n                    class: \"module-checkbox\",\n                    check: item.allChildChecked,\n                    minus: !item.allChildChecked && item.anyChildChecked,\n                    disabled: item.disabled,\n                    onClick: ($event: any) => (handleItemCheckEvent(item))\n                  }, null, 8 /* PROPS */, [\"check\", \"minus\", \"disabled\", \"onClick\"]),\n                  _createElementVNode(\"span\", {\n                    class: _normalizeClass(['module-name', item.disabled ? ' disabled': ''])\n                  }, _toDisplayString(item.name), 3 /* TEXT, CLASS */)\n                ]),\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item?.children, (child) => {\n                  return _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_7, [\n                    _createVNode(CheckboxComp, {\n                      class: \"model-checkbox\",\n                      check: child.checked,\n                      disabled: child.disabled,\n                      onClick: ($event: any) => (handleItemCheckEvent(child))\n                    }, null, 8 /* PROPS */, [\"check\", \"disabled\", \"onClick\"]),\n                    (child.type != 'module')\n                      ? (_openBlock(), _createElementBlock(\"i\", {\n                          key: 0,\n                          class: _normalizeClass('model-icon ' + _unref(ModelContants).getModelVisualInfo(child.type, undefined).icon),\n                          style: _normalizeStyle({ color: _unref(ModelContants).getModelVisualInfo(child.type, undefined).color })\n                        }, null, 6 /* CLASS, STYLE */))\n                      : _createCommentVNode(\"v-if\", true),\n                    _createElementVNode(\"span\", {\n                      class: _normalizeClass(['model-name', child.disabled ? ' disabled' : ''])\n                    }, _toDisplayString(child.name), 3 /* TEXT, CLASS */),\n                    (!child.usageType || child.usageType == 'appSettings')\n                      ? (_openBlock(), _createElementBlock(\"div\", {\n                          key: 1,\n                          class: _normalizeClass(['version-text', child.disabled ? 'disabled' : '']),\n                          onClick: ($event: any) => (versionDialog(child))\n                        }, [\n                          _createTextVNode(_toDisplayString(child.version ? child.version : 'No version') + \" \", 1 /* TEXT */),\n                          (!child.usageType || child.usageType == 'appSettings')\n                            ? (_openBlock(), _createElementBlock(\"i\", {\n                                key: 0,\n                                class: _normalizeClass(['mdi mdi-pencil-outline version-icon', child.disabled ? 'disabled' : ''])\n                              }, null, 2 /* CLASS */))\n                            : _createCommentVNode(\"v-if\", true)\n                        ], 10 /* CLASS, PROPS */, _hoisted_8))\n                      : _createCommentVNode(\"v-if\", true)\n                  ], 512 /* NEED_PATCH */)), [\n                    [_vShow, !item.collapsed]\n                  ])\n                }), 256 /* UNKEYED_FRAGMENT */))\n              ]))\n            : (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [\n                _createElementVNode(\"div\", _hoisted_10, [\n                  _createVNode(CheckboxComp, {\n                    class: \"module-checkbox\",\n                    check: item?.checked,\n                    disabled: item.disabled,\n                    onClick: ($event: any) => (handleItemCheckEvent(item))\n                  }, null, 8 /* PROPS */, [\"check\", \"disabled\", \"onClick\"]),\n                  (item?.type == 'qjson')\n                    ? (_openBlock(), _createElementBlock(\"i\", _hoisted_11))\n                    : _createCommentVNode(\"v-if\", true),\n                  (item?.type == 'yaml')\n                    ? (_openBlock(), _createElementBlock(\"i\", _hoisted_12))\n                    : _createCommentVNode(\"v-if\", true),\n                  (item?.type == 'js' || item?.type == 'css')\n                    ? (_openBlock(), _createElementBlock(\"i\", _hoisted_13))\n                    : _createCommentVNode(\"v-if\", true),\n                  (item?.type == 'process')\n                    ? (_openBlock(), _createElementBlock(\"i\", _hoisted_14))\n                    : _createCommentVNode(\"v-if\", true),\n                  (item?.type == 'bpmn')\n                    ? (_openBlock(), _createElementBlock(\"i\", _hoisted_15))\n                    : _createCommentVNode(\"v-if\", true),\n                  (item?.type == 'entityDesigner')\n                    ? (_openBlock(), _createElementBlock(\"i\", _hoisted_16))\n                    : _createCommentVNode(\"v-if\", true),\n                  (item?.type == 'flow')\n                    ? (_openBlock(), _createElementBlock(\"i\", _hoisted_17))\n                    : _createCommentVNode(\"v-if\", true),\n                  _createElementVNode(\"span\", _hoisted_18, [\n                    _createTextVNode(_toDisplayString(item?.name) + \" \", 1 /* TEXT */),\n                    (startScreen.value?.ID == item.id)\n                      ? (_openBlock(), _createElementBlock(\"span\", _hoisted_19, _hoisted_22))\n                      : _createCommentVNode(\"v-if\", true)\n                  ]),\n                  (!item.usageType)\n                    ? (_openBlock(), _createElementBlock(\"span\", {\n                        key: 7,\n                        class: _normalizeClass(['version-text', item.disabled ? 'disabled' : '']),\n                        onClick: ($event: any) => (versionDialog(item))\n                      }, [\n                        _createTextVNode(_toDisplayString(item.version ? item.version : 'No version') + \" \", 1 /* TEXT */),\n                        (!item.usageType)\n                          ? (_openBlock(), _createElementBlock(\"i\", {\n                              key: 0,\n                              class: _normalizeClass(['mdi mdi-pencil-outline version-icon', item.disabled ? 'disabled' : ''])\n                            }, null, 2 /* CLASS */))\n                          : _createCommentVNode(\"v-if\", true)\n                      ], 10 /* CLASS, PROPS */, _hoisted_23))\n                    : _createCommentVNode(\"v-if\", true)\n                ])\n              ]))\n        ]))\n      }), 256 /* UNKEYED_FRAGMENT */))\n    ], 2 /* CLASS */),\n    (props.screenType == 'Deploy' && props.platformSelection.web)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_24, [\n          _hoisted_25,\n          _createVNode(CustomSelect, {\n            options: publishTargets.value,\n            onInput: onTargetSelect,\n            selectedOption: selectedTarget.value,\n            default: selectedTarget.value,\n            disabledOptions: disabledOptions.value,\n            selectedClass: \"selected-environment\",\n            placeholder: \"Select the publish environment of your application\",\n            class: \"select-environment\"\n          }, null, 8 /* PROPS */, [\"options\", \"selectedOption\", \"default\", \"disabledOptions\"])\n        ]))\n      : _createCommentVNode(\"v-if\", true),\n    (props.screenType == 'Deploy' && !props.platformSelection.web && props.platformSelection.mobile)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_26, _hoisted_29))\n      : _createCommentVNode(\"v-if\", true),\n    _createElementVNode(\"div\", {\n      class: _normalizeClass(['footer', props.screenType == 'Deploy' ? 'deploy' : 'export'])\n    }, [\n      _createElementVNode(\"div\", {\n        class: _normalizeClass(['cancel-button', props.screenType == 'Deploy' ? 'deploy' : '']),\n        onClick: close\n      }, \"Cancel\", 2 /* CLASS */),\n      (props.screenType == 'Export')\n        ? (_openBlock(), _createElementBlock(\"div\", {\n            key: 0,\n            class: _normalizeClass((_unref(saveButtonDisable) ? ' button-disable' : '')),\n            onClick: save\n          }, [\n            _hoisted_30,\n            (!_unref(isThereVersion))\n              ? (_openBlock(), _createElementBlock(\"span\", _hoisted_31, \"There are no items ready to publish. At least one of your items must be ready to publish.\"))\n              : _createCommentVNode(\"v-if\", true),\n            (_unref(isThereVersion))\n              ? (_openBlock(), _createElementBlock(\"span\", _hoisted_32, \"You need to include your start screen.\"))\n              : _createCommentVNode(\"v-if\", true)\n          ], 2 /* CLASS */))\n        : _createCommentVNode(\"v-if\", true),\n      (props.screenType == 'Deploy')\n        ? (_openBlock(), _createElementBlock(\"div\", {\n            key: 1,\n            class: _normalizeClass([(_unref(saveButtonDisable) ? ' button-disable' : '')]),\n            onClick: save\n          }, [\n            _hoisted_33,\n            (selectedTarget.value && _unref(isThereVersion))\n              ? (_openBlock(), _createElementBlock(\"span\", _hoisted_34, \"You need to include your start screen.\"))\n              : _createCommentVNode(\"v-if\", true),\n            (!selectedTarget.value)\n              ? (_openBlock(), _createElementBlock(\"span\", _hoisted_35, \"You need to select a publish environment.\"))\n              : _createCommentVNode(\"v-if\", true),\n            (!_unref(isThereVersion))\n              ? (_openBlock(), _createElementBlock(\"span\", _hoisted_36, \"There are no items ready to publish. At least one of your items must be ready to publish.\"))\n              : _createCommentVNode(\"v-if\", true)\n          ], 2 /* CLASS */))\n        : _createCommentVNode(\"v-if\", true)\n    ], 2 /* CLASS */)\n  ]))\n}\n}\n\n})","\n      import API from \"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./publishDialog.vue?vue&type=style&index=0&id=6f7eccee&scoped=true&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./publishDialog.vue?vue&type=style&index=0&id=6f7eccee&scoped=true&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./publishDialog.vue?vue&type=style&index=1&id=6f7eccee&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./publishDialog.vue?vue&type=style&index=1&id=6f7eccee&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","import script from \"./publishDialog.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./publishDialog.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./publishDialog.vue?vue&type=style&index=0&id=6f7eccee&scoped=true&lang=css\"\nimport \"./publishDialog.vue?vue&type=style&index=1&id=6f7eccee&lang=css\"\n\nimport exportComponent from \"/home/runner/work/studio/studio/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6f7eccee\"]])\n\nexport default __exports__"],"names":["___CSS_LOADER_EXPORT___","push","module","id","GetRandomWord","base","length","Math","random","toString","substring","CreateGuid","map","join","CryptoHelper","guidCounter","purify","str","replace","toLowerCase","getPlateauEnvironmentName","envPrefix","appName","Error","endsWith","PlateauHelper","getQuiPackageNameFromAppName","getApplicationUINameFromQuiPkg","quiPackageName","getApplicationHostNamePrefix","getServiceNameFromModel","modelName","typeSafety","EditorConsts","quick","modelKeys","self","flow","design","runtime","flowEntity","single","cssJsTsYaml","color","icon","jpegJpgPngSvgGif","modelVisuals","qjson","additionals","qjsonType","css","js","ts","yaml","entityDesigner","bpmn","process","namedComponent","step","jpeg","jpg","png","svg","gif","ModelContants","static","modelType","modelAdditionals","retVal","IQCloudApi","Symbol","for","ICreateExportJob","IDeployJobs","IJobUtils","IListMultiModelVersions","IPackJobs","open","selected","props","default","selectedOption","value","getDisabledOptionsText","index","opt","disabledOptions","find","e","cause","option","emit","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","_withScopeId","n","_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","key","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_22","_","style","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","__name","screenType","platformSelection","emits","setup","__props","viewModel","IViewModel","viewModelManager","IViewModelManager","dialog","IDialog","executor","IUseCaseExecutor","deployJobsUseCase","qcloudApi","packJobsUseCase","jobUtils","items","validations","selectedTarget","publishTargets","modelHistories","startScreen","async","modelIDs","Array","flatMapItems","studio","item","path","objectType","ID","executeUseCase","initVersions","filter","children","tableData","collapsed","name","type","child","model","web","mobile","maxVersion","getItemMaxVersion","parentId","checked","undefined","disabled","version","handleParentCheckedStatus","usageType","forEach","uiSettingsID","appSettings","uiSettings","settings","uiAssetList","anyChildChecked","allChildChecked","asset","unshift","console","log","handleItems","syncPublishTargets","validate","allChildCheckedModulesCount","anyChildCheckedModulesCount","checkedRootLevelModelsCount","totalRootLevelCount","saveButtonDisable","some","mainCheckboxState","isThereVersion","checkMaxVersionOfAllItems","result","modules","appLayerItems","isRootPage","f","findIndex","has","versions","get","versionNumbers","v","parts","split","parseInt","sort","a","b","floor","findMaxVersion","handleItemCheckEvent","i","c","targets","user","selectedOrganization","actions","publish","Object","entries","cloudTargetMap","disabledOptionList","checkedPublishTargets","list","keys","optionName","traverseSelectedItems","status","modulesHasNotAnEDModel","checkAndSetDisabledCauses","sortedTargets","versionDialog","clickedNode","state","text","cb","showDialog","closable","title","width","maxHeight","overflow","close","save","execute","initAsGroup","groupID","initPublishHistory","appID","appId","isMultiStep","cloudProvider","platform","initHistory","exportItemMap","Map","itemIdObj","createExportObject","tableItem","isAppItem","ver","getItemType","getFileFullname","ownerType","parent","ownerName","addToExportItem","obj","set","entityGenerationDomain","useSeperateModule","jobs","k","exportType","selectionData","layer","createPackJobs","packJob","isFlowBackend","applications","deployItems","createAzureDeployItems","createExportJob","createAppDeployJob","packages","getExportJobsByGroupId","then","jobData","jobID","mainDir","getDeployableArchiveRoot","buildJobs","pack","package","zip","createBuildJobs","jobParam","deployConfig","configModelIDs","getProcessConfigList","enabled","startDeploymentJob","createDeployJob","loading","itemMap","deployItem","size","processConfigList","usingService","serviceName","moduleName","modelId","edModel","app","pureVal","azure","plateauGCP","includes","onTargetSelect","_ctx","_cache","minus","check","onClick","$event","getModelVisualInfo","onInput","selectedClass","placeholder"],"sourceRoot":""}