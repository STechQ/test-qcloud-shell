{"version":3,"file":"8613.js?ver=0.0.314_1714649852497","mappings":"8HAiFO,MAAMA,EAAaC,OAAOC,IAAI,a","sources":["webpack://qcloud_shell/./src/domain/viewModel/IViewModel.ts"],"sourcesContent":["import { IApplication, IExportJobItem, IModel, IModule, ILoggedInUser } from \"../model/models\";\nimport { ITopMenuButton } from \"../model/ui/ITopMenuButton\";\nimport { INavItem } from \"../model/ui/INavItem\";\nimport { IMainStatisticInfo } from \"../../../../common/qCloudTemp/backoffice\";\nimport { IUser_SUSI } from \"../../../../common/qCloudTemp/authentication\";\nimport { IOrganization } from \"../../../../common/qCloudTemp/membership\";\nimport { IOrganizationGroup, IOrganizationGroupList, ITags } from \"../../../../common/qCloudTemp/quickCloud\";\nimport { IUserRequest } from \"../../../../common/qCloudTemp/userRequest\";\nimport { IOrganizationUIExtended } from \"../useCase/backoffice/IBackofficeUseCase\";\nimport { IAnnouncementServiceObj } from \"../../../../common/qCloudTemp/announcement\";\nimport { IAnnouncementUIExtended } from \"../useCase/IAnnouncementsUseCase\";\nimport { IProcess } from \"../useCase/IWorkflowViewUseCase\";\nimport { IUser } from \"../../../../common/qCloudTemp/runtimeDtoObjects\";\n\nexport interface IViewModel {\n    user?: ILoggedInUser;\n    apps: Array<IApplication>;\n    studio: {\n        appId: string;\n        appName: string;\n        items: Array<IModel | IModule>;\n        openItems?: Array<IModel>;\n        currentItem?: IModel;\n        tabOrder?: Array<string>;\n        dnsEndpoint?: string;\n        webPublishDate?: string;\n        mobilePublishDate?: string;\n        webPublishedBy?: string;\n        mobilePublishedBy?: string;\n        publishId?: string;\n        livePreview?: {\n            relayClients: { clients: Array<{ clientID: string, name: string }> }\n        }\n        filters: {\n            text?: string;\n            ui: boolean;\n            process: boolean;\n            entity: boolean;\n            image: boolean;\n            setting: boolean;\n            placeholder: boolean;\n        },\n        ui?: {\n            navItems?: Array<INavItem>;\n            sidebar: {\n                component?: object;\n                componentPath?: string;\n                left: number;\n            };\n        };\n        topMenu?: {\n            additionalButtons?: Array<ITopMenuButton>;\n            dynamicButtons?: Array<ITopMenuButton>;\n        };\n        export?: {\n            lastUncompiledDate?: Date;\n        },\n        isStatisticsPageSelected?: boolean;\n        isManagePageSelected?: boolean;\n        workflowPreview?: {\n            selectedUser?: IUser;\n            selectedProcess?: IProcess | string;\n        },\n    };\n    exportJobs?: Array<IExportJobItem>;\n    backoffice?: {\n        ui?: {\n            breadcrumb?: Array<string>;\n        }\n        dashboard?: {\n            mainStatistics: IMainStatisticInfo;\n        };\n        users?: Array<IUser_SUSI>;\n        organizations?: Array<IOrganizationUIExtended>;\n        tags?: Array<ITags>;\n        userRequests?: Array<IUserRequest>;\n        organizationGroups?: Array<IOrganizationGroup>;\n        announcements?: Array<IAnnouncementServiceObj>;\n    };\n    announcements: Array<IAnnouncementUIExtended>;\n}\nexport const IViewModel = Symbol.for(\"IViewModel\");\n"],"names":["IViewModel","Symbol","for"],"sourceRoot":""}