{"version":3,"file":"6516.js?ver=0.0.326_1720802054283","mappings":"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","sources":["webpack://qcloud_shell/./src/presentation/vue3/editors/fileEditor.vue?6b1b","webpack://qcloud_shell/./src/presentation/vue3/editors/monacoEditor.vue?e949","webpack://qcloud_shell/./src/presentation/vue3/editors/monacoEditor.vue","webpack://qcloud_shell/./src/presentation/vue3/editors/fileEditor.vue?431b","webpack://qcloud_shell/./src/presentation/vue3/editors/fileEditor.vue?aa2f","webpack://qcloud_shell/./src/presentation/vue3/editors/fileEditor.vue"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.disabled[data-v-767550ad] {\\n  opacity: 0.6;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/presentation/vue3/editors/fileEditor.vue\"],\"names\":[],\"mappings\":\";AAyEA;EACE,YAAY;AACd\",\"sourcesContent\":[\"<script setup lang=\\\"ts\\\">\\nimport { onBeforeUnmount, onMounted, ref } from \\\"vue\\\";\\nimport { IFileEditorProps } from \\\"../../../domain/objects/editors/IFileEditor\\\";\\nimport MonacoEditor from \\\"./monacoEditor.vue\\\";\\n\\ninterface IProps {\\n  functions: IFileEditorProps[\\\"functions\\\"];\\n  callbacks: IFileEditorProps[\\\"callbacks\\\"];\\n}\\nconst props = defineProps<IProps>();\\nconst editor = ref();\\nconst readOnly = ref(true);\\n\\n\\nprops.functions.getModel = async () => {\\n  const scrollTop = editor.value.getScrollTop();\\n  const selections = editor.value.getSelections();\\n  const width = editor.value.style.width;\\n  const height = editor.value.style.height;\\n  const modelvalue = editor.value.getCodeValue(); \\n  return { model: modelvalue, state: { scrollTop, selections, width, height, checkout: readOnly.value } };\\n};\\nprops.functions.setModel = async (model, state, modelLang) => {\\n  //model\\n  editor.value.setMonacoLang(modelLang);\\n  \\n  //state\\n  editor.value.style.width = state.width ? state.width : \\\"98%\\\";\\n  editor.value.style.height = state.height ? state.height : \\\"90%\\\";\\n  if(state.scrollTop) editor.value.setScrollTop?.(state.scrollTop);\\n  if(state.selections) editor.value.setSelections?.(state.selections);\\n  readOnly.value = state.checkout ? !state.checkout : true;\\n  editor.value.style.resize = \\\"none\\\";\\n  editor.value.style.outline = \\\"none\\\";\\n  editor.value.setCodeValue(model);\\n};\\nprops.functions.insertText = async (text, position) => {\\n  editor.value.insertText({ text: text });\\n  props.callbacks.modified({ model: true });\\n};\\nconst modified: Record<string, EventListenerOrEventListenerObject> = {\\n  select: () => { props.callbacks.modified({ state: true }) },\\n  scroll: () => { props.callbacks.modified({ state: true }) },\\n  change: () => { props.callbacks.modified({ model: true }) },\\n  keydown: (e: Event) => {\\n    const event = e as KeyboardEvent;\\n    const code = event.code.toLowerCase();\\n    if (event.shiftKey || event.ctrlKey || code.startsWith(\\\"arrow\\\")) {\\n      return;\\n    }\\n    props.callbacks.modified({ model: true });\\n  },\\n  resize: () => { props.callbacks.modified({ state: true }) },\\n  input: () => { props.callbacks.modified({ model: true }) },\\n};\\n\\nconst watchTextArea = (attach: boolean) => {\\n  const target = attach ? editor.value.$el.addEventListener : editor.value.$el.removeEventListener;\\n  Object.keys(modified).forEach(key => target.call(editor.value.$el, key, modified[key]));\\n};\\n\\nonMounted(() => {\\n  watchTextArea(true);\\n});\\nonBeforeUnmount(() => {\\n  watchTextArea(false);\\n});\\n\\n</script>\\n<template>\\n  <MonacoEditor ref=\\\"editor\\\" :class=\\\"{ disabled: readOnly }\\\" @onCodePasted=\\\"props.callbacks.modified({ model: true })\\\"  :isReadOnly=\\\"readOnly\\\"/>\\n</template>\\n<style scoped>\\n.disabled {\\n  opacity: 0.6;\\n}\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport { onBeforeUnmount, onMounted, onUnmounted, onUpdated, Ref, ref, computed, watchEffect, watch } from \"vue\";\nimport * as monaco from \"monaco-editor\";\nimport loader from \"@monaco-editor/loader\";\nimport { IFileEditorSelections } from \"../../../domain/objects/editors/IFileEditor\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'monacoEditor',\n  props: {\n  lang: String,\n  width: {\n    type: [String, Number],\n    default: \"98%\"\n  },\n  height: {\n    type: [String, Number],\n    default: \"90%\"\n  },\n  isReadOnly: {\n    type: Boolean,\n    default: false,\n  }\n},\n  emits: [\"onCodePasted\"],\n  setup(__props, { expose, emit }) {\n\nconst props = __props;\n\n\nlet getEditor: Function;\n\nonMounted(() => {\n  loader.init().then((monaco) => {\n    const editorOptions = { automaticLayout: true, readOnly: props.isReadOnly };\n    const editor = monaco.editor.create(document.getElementById(\"editor\") as HTMLElement, editorOptions);\n    monaco.editor.EditorOptions\n    getEditor = () => editor;\n\n    monaco.languages.typescript.typescriptDefaults.setCompilerOptions({\n      moduleResolution: monaco.languages.typescript.ModuleResolutionKind.NodeJs,\n      module: monaco.languages.typescript.ModuleKind.CommonJS      \n    });\n  });\n});\n\nconst setMonacoLang = (lang: string) => {\n  getEditor()._modelData.model.setLanguage(lang);\n};\nconst setCodeValue = (code: string) => {\n  getEditor().setValue(code);\n};\nconst getCodeValue = () => {\n  return getEditor().getValue();\n};\nconst setScrollTop = (newScrollTop: number) => {\n  getEditor().setScrollTop(newScrollTop);\n};\nconst getScrollTop = () => {\n  return getEditor().getScrollTop();\n};\nconst setSelections = (selections: Array<IFileEditorSelections>) => {\n  getEditor().setSelections(selections);\n};\nconst getSelections = () => {\n  return getEditor().getSelections();\n};\nconst onPasteCode = () => {\n  getEditor().onDidPaste(function(e: Event) {\n    emit(\"onCodePasted\");\n  });   \n};\nconst onChangeReadOnly = () => {\n  getEditor().updateOptions({readOnly: props.isReadOnly});\n}\nconst insertText = (options: { text: string }) => {\n  const editor = getEditor();\n  if (!editor) { return; }\n  var line = editor.getPosition();\n  const column = line.column;\n  const lineNumber = line.lineNumber;\n  var range = new monaco.Range(lineNumber, column, lineNumber, column);\n  var id = { major: 1, minor: 1 };\n  var op = { identifier: id, range, text: options.text, forceMoveMarkers: true };\n  editor.executeEdits(\"my-source\", [op]);\n};\n\n\nonUpdated(() => {\n  onPasteCode();\n});\nconst style = computed(() => {\n  let { width, height } = props;\n  return { width, height };\n});\nexpose({\n  setMonacoLang,\n  getCodeValue,\n  setCodeValue,\n  setSelections,\n  getSelections,\n  setScrollTop,\n  getScrollTop,\n  insertText,\n  onPasteCode,\n  style,\n});\n\n\nwatch(() => props.isReadOnly, (value: boolean) => {\n      console.log(\"Watch props.isReadOnly function called with args:\", value);\n      onChangeReadOnly();\n    });\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    id: \"editor\",\n    style: _normalizeStyle(_unref(style))\n  }, null, 4 /* STYLE */))\n}\n}\n\n})","import script from \"./monacoEditor.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./monacoEditor.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { normalizeClass as _normalizeClass, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport { onBeforeUnmount, onMounted, ref } from \"vue\";\nimport { IFileEditorProps } from \"../../../domain/objects/editors/IFileEditor\";\nimport MonacoEditor from \"./monacoEditor.vue\";\n\ninterface IProps {\n  functions: IFileEditorProps[\"functions\"];\n  callbacks: IFileEditorProps[\"callbacks\"];\n}\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'fileEditor',\n  props: {\n    functions: null,\n    callbacks: null\n  },\n  setup(__props: any) {\n\nconst props = __props as {\n  functions: IFileEditorProps[\"functions\"];\n  callbacks: IFileEditorProps[\"callbacks\"];\n};\n\n\nconst editor = ref();\nconst readOnly = ref(true);\n\n\nprops.functions.getModel = async () => {\n  const scrollTop = editor.value.getScrollTop();\n  const selections = editor.value.getSelections();\n  const width = editor.value.style.width;\n  const height = editor.value.style.height;\n  const modelvalue = editor.value.getCodeValue(); \n  return { model: modelvalue, state: { scrollTop, selections, width, height, checkout: readOnly.value } };\n};\nprops.functions.setModel = async (model, state, modelLang) => {\n  //model\n  editor.value.setMonacoLang(modelLang);\n  \n  //state\n  editor.value.style.width = state.width ? state.width : \"98%\";\n  editor.value.style.height = state.height ? state.height : \"90%\";\n  if(state.scrollTop) editor.value.setScrollTop?.(state.scrollTop);\n  if(state.selections) editor.value.setSelections?.(state.selections);\n  readOnly.value = state.checkout ? !state.checkout : true;\n  editor.value.style.resize = \"none\";\n  editor.value.style.outline = \"none\";\n  editor.value.setCodeValue(model);\n};\nprops.functions.insertText = async (text, position) => {\n  editor.value.insertText({ text: text });\n  props.callbacks.modified({ model: true });\n};\nconst modified: Record<string, EventListenerOrEventListenerObject> = {\n  select: () => { props.callbacks.modified({ state: true }) },\n  scroll: () => { props.callbacks.modified({ state: true }) },\n  change: () => { props.callbacks.modified({ model: true }) },\n  keydown: (e: Event) => {\n    const event = e as KeyboardEvent;\n    const code = event.code.toLowerCase();\n    if (event.shiftKey || event.ctrlKey || code.startsWith(\"arrow\")) {\n      return;\n    }\n    props.callbacks.modified({ model: true });\n  },\n  resize: () => { props.callbacks.modified({ state: true }) },\n  input: () => { props.callbacks.modified({ model: true }) },\n};\n\nconst watchTextArea = (attach: boolean) => {\n  const target = attach ? editor.value.$el.addEventListener : editor.value.$el.removeEventListener;\n  Object.keys(modified).forEach(key => target.call(editor.value.$el, key, modified[key]));\n};\n\nonMounted(() => {\n  watchTextArea(true);\n});\nonBeforeUnmount(() => {\n  watchTextArea(false);\n});\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(MonacoEditor, {\n    ref_key: \"editor\",\n    ref: editor,\n    class: _normalizeClass({ disabled: readOnly.value }),\n    onOnCodePasted: _cache[0] || (_cache[0] = ($event: any) => (props.callbacks.modified({ model: true }))),\n    isReadOnly: readOnly.value\n  }, null, 8 /* PROPS */, [\"class\", \"isReadOnly\"]))\n}\n}\n\n})","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./fileEditor.vue?vue&type=style&index=0&id=767550ad&scoped=true&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./fileEditor.vue?vue&type=style&index=0&id=767550ad&scoped=true&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","import script from \"./fileEditor.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./fileEditor.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./fileEditor.vue?vue&type=style&index=0&id=767550ad&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/studio/studio/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-767550ad\"]])\n\nexport default __exports__"],"names":["___CSS_LOADER_EXPORT___","push","module","id","__name","props","lang","String","width","type","Number","default","height","isReadOnly","Boolean","emits","setup","__props","expose","emit","getEditor","then","monaco","editorOptions","automaticLayout","readOnly","editor","create","document","getElementById","EditorOptions","languages","typescript","typescriptDefaults","setCompilerOptions","moduleResolution","ModuleResolutionKind","NodeJs","ModuleKind","CommonJS","onPasteCode","onDidPaste","e","style","setMonacoLang","_modelData","model","setLanguage","getCodeValue","getValue","setCodeValue","code","setValue","setSelections","selections","getSelections","setScrollTop","newScrollTop","getScrollTop","insertText","options","line","getPosition","column","lineNumber","op","identifier","major","minor","range","text","forceMoveMarkers","executeEdits","value","console","log","updateOptions","_ctx","_cache","functions","callbacks","getModel","async","scrollTop","state","checkout","setModel","modelLang","resize","outline","position","modified","select","scroll","change","keydown","event","toLowerCase","shiftKey","ctrlKey","startsWith","input","watchTextArea","attach","target","$el","addEventListener","removeEventListener","Object","keys","forEach","key","call","ref_key","ref","class","disabled","onOnCodePasted","$event","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement"],"sourceRoot":""}