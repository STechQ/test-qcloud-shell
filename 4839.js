"use strict";(this.webpackChunkqcloud_shell=this.webpackChunkqcloud_shell||[]).push([[4839],{82080:(e,n,t)=>{t.d(n,{Z:()=>l});var o=t(34663),i=t.n(o),s=t(7638),a=t.n(s)()(i());a.push([e.id,"\n.container[data-v-1f80a771] {\n    padding: 32px 20px 20px;\n}\n.settings-container[data-v-1f80a771] {\n    position: relative;\n    top: 0px;\n    left: 0px;\n}\n.custom-text[data-v-1f80a771] {\n    /* position: absolute; */\n    font-family: 'Roboto';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 15px;\n    line-height: 18px;\n    /* left: 24px; */\n    color: #212121;\n}\n\n/* .custom-text.title{\n    top: 92px;\n}\n\n.custom-text.environment{\n    top: 174px;\n} */\n.radio-button[data-v-1f80a771] {\n    position: absolute;\n    top: 60px;\n    left: 20px;\n    cursor: pointer;\n}\n.radio-text[data-v-1f80a771] {\n    position: absolute;\n    top: 59px;\n    font: normal normal normal 14px/19px Roboto;\n    color: #212121;\n    user-select: none;\n    cursor: pointer;\n}\n.existing-app-url[data-v-1f80a771] {\n    position: absolute;\n    width: 100%;\n    height: 40px;\n    top: 114px;\n    left: 20px;\n    background: #ffffff 0% 0% no-repeat padding-box;\n    border: 1px solid #bcbcbc;\n    border-radius: 4px;\n    font: normal normal normal 14px/19px Roboto;\n    letter-spacing: 0px;\n    padding: 10px 0px 10px 10px;\n}\n.url-error[data-v-1f80a771] {\n    border: 1px solid red;\n}\n.url-disable[data-v-1f80a771] {\n    opacity: 0.5;\n}\n.existing-app-url[data-v-1f80a771]::placeholder {\n    color: #bcbcbc;\n    user-select: none;\n}\n.modules-selected-checkbox[data-v-1f80a771] {\n    cursor: pointer;\n}\n.modules-selected-text[data-v-1f80a771] {\n    font: normal normal normal 14px/19px Roboto;\n    color: #757575;\n    margin: 0 0 13px 30px;\n}\n\n/* .modules-selected-text.deploy {\n    top: 257px;\n} */\n.text-number[data-v-1f80a771] {\n    font: normal normal bold 14px/19px Roboto;\n    color: #212121;\n}\n.modules-datatable[data-v-1f80a771] {\n    width: 100%;\n}\n\n/* .modules-datatable.deploy {\n    top: 286px;\n} */\n.modules-datatable[data-v-1f80a771]::-webkit-scrollbar {\n    width: 4px;\n}\n.modules-datatable[data-v-1f80a771]::-webkit-scrollbar-thumb {\n    background: #bcbcbc 0% 0% no-repeat padding-box;\n    border-radius: 10px;\n}\n.modules-datatable[data-v-1f80a771]::-webkit-scrollbar-thumb:hover {\n    background: #555;\n}\n.row-container[data-v-1f80a771] {\n    width: 100%;\n    height: 36px;\n    position: relative;\n    background: #ffffff 0% 0% no-repeat padding-box;\n    border: 1px solid #e0e0e0;\n}\n.chevron[data-v-1f80a771] {\n    position: absolute;\n    left: 4px;\n    color: #757575;\n    font-size: 24px;\n}\n.chevron.disabled[data-v-1f80a771] {\n    pointer-events: none;\n    color: #D5D5D5;\n}\n.module-checkbox[data-v-1f80a771] {\n    position: absolute;\n    top: 10px;\n    left: 43px;\n    cursor: pointer;\n}\n.module-name[data-v-1f80a771] {\n    position: absolute;\n    top: 9px;\n    left: 69px;\n    font: normal normal normal 14px/19px Roboto;\n    color: #212121;\n}\n.module-name.imported[data-v-1f80a771] {\n    top: 10px;\n    left: 87px;\n}\n.module-name.disabled[data-v-1f80a771] {\n    color: #D5D5D5;\n}\n.model-checkbox[data-v-1f80a771] {\n    position: absolute;\n    top: 10px;\n    left: 59px;\n    cursor: pointer;\n}\n.model-icon[data-v-1f80a771] {\n    position: absolute;\n    width: 16px;\n    height: 16px;\n    top: 6px;\n    left: 85px;\n}\n.app-tier-model-icon[data-v-1f80a771] {\n    position: absolute;\n    width: 16px;\n    height: 16px;\n    top: 6px;\n    left: 69px\n}\n.app-tier-model-name[data-v-1f80a771] {\n    position: absolute;\n    top: 10px;\n    left: 87px;\n    font: normal normal normal 14px/19px Roboto;\n    color: #212121;\n}\n.app-tier-model-name.disabled[data-v-1f80a771] {\n    color: #D5D5D5;\n}\n.model-name[data-v-1f80a771] {\n    position: absolute;\n    top: 9px;\n    left: 103px;\n    font: normal normal normal 14px/19px Roboto;\n    color: #212121;\n}\n.model-name.disabled[data-v-1f80a771] {\n    color: #D5D5D5;\n}\n.version-text[data-v-1f80a771] {\n    margin: 10px 7px 10px auto;\n    display: table;\n    font: normal normal normal 12px/16px Roboto;\n    color: #757575;\n    cursor: pointer;\n    user-select: none;\n}\n.version-text.disabled[data-v-1f80a771] {\n    pointer-events: none;\n    cursor: pointer;\n}\n.version-icon[data-v-1f80a771] {\n    font: normal normal normal 16px/19px Material Design Icons;\n    color: #D5D5D5;\n}\n.version-icon.disabled[data-v-1f80a771] {\n    font: normal normal normal 16px/19px Material Design Icons;\n    color: #EEEEEE;\n    pointer-events: none;\n    cursor: pointer;\n}\n.footer[data-v-1f80a771] {\n    position: relative;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: end;\n}\n.footer.deploy[data-v-1f80a771] {\n    position: relative;\n    width: 100%;\n}\n.footer.export[data-v-1f80a771] {\n    margin: 50px 0 24px;\n}\n.cancel-button[data-v-1f80a771] {\n    border-radius: 4px;\n    user-select: none;\n    font-style: normal;\n    font-weight: 500;\n    font-family: \"ROBOTO\";\n    font-size: 15px;\n    color: #757575;\n    padding: 10px 16px;\n    cursor: pointer;\n}\n.save-button[data-v-1f80a771] {\n    background: #151233 0% 0% no-repeat padding-box;\n    border-radius: 4px;\n    user-select: none;\n    font-weight: 500;\n    font-size: 15px;\n    color: #ffffff;\n    padding: 10px 16px;\n    cursor: pointer;\n}\n.mobile-publish-text[data-v-1f80a771],\n.web-publish-text[data-v-1f80a771] {\n    padding: 5px 12px;\n    margin-bottom: 52px;\n    width: 100%;\n    color: #757575;\n    font-size: 14px;\n    background: #F5F5FA;\n    border-radius: 4px;\n    display: flex;\n    align-items: center;\n}\n.mobile-publish-text i[data-v-1f80a771],\n.web-publish-text i[data-v-1f80a771] {\n    font-size: 24px;\n    color: #151233;\n    margin-right: 4px;\n}\n.save-button.deploy[data-v-1f80a771] {\n    padding: 10px 16px;\n}\n.button-disable .save-button[data-v-1f80a771] {\n    color: #757575;\n    cursor: default;\n}\n.button-disable .save-button:hover+.button-tooltip[data-v-1f80a771],\n.start-screen:hover .button-tooltip[data-v-1f80a771],\n.row-container:hover .button-tooltip[data-v-1f80a771],\n.publish-info:hover .button-tooltip[data-v-1f80a771] {\n    visibility: visible;\n    transition: opacity 0.3s ease-out 1s;\n    opacity: 1;\n}\n.button-tooltip[data-v-1f80a771] {\n    visibility: hidden;\n    position: absolute;\n    background: #757575;\n    color: #FFFFFF;\n    font-size: 11px;\n    font-family: 'Roboto';\n    text-align: center;\n    border-radius: 4px;\n    letter-spacing: 0.2px;\n    padding: 6px 8px 6px 8px;\n    top: 56px;\n    left: 63px;\n    opacity: 0;\n}\n.publish-info[data-v-1f80a771] {\n    color: #757575;\n    font-size: 20px;\n    margin-left: 10px;\n}\n.select-environment[data-v-1f80a771] {\n    width: 100%;\n    font-size: 15px;\n    height: 40px;\n    line-height: 40px;\n    margin-top: 4px\n}\n","",{version:3,sources:["webpack://./src/presentation/vue3/components/application/appItemsTable.vue"],names:[],mappings:";AAqwBA;IACI,uBAAuB;AAC3B;AAEA;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;AACb;AAEA;IACI,wBAAwB;IACxB,qBAAqB;IACrB,kBAAkB;IAClB,gBAAgB;IAChB,eAAe;IACf,iBAAiB;IACjB,gBAAgB;IAChB,cAAc;AAClB;;AAEA;;;;;;GAMG;AAEH;IACI,kBAAkB;IAClB,SAAS;IACT,UAAU;IACV,eAAe;AACnB;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,2CAA2C;IAC3C,cAAc;IACd,iBAAiB;IACjB,eAAe;AACnB;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,UAAU;IACV,UAAU;IACV,+CAA+C;IAC/C,yBAAyB;IACzB,kBAAkB;IAClB,2CAA2C;IAC3C,mBAAmB;IACnB,2BAA2B;AAC/B;AAEA;IACI,qBAAqB;AACzB;AAEA;IACI,YAAY;AAChB;AAEA;IACI,cAAc;IACd,iBAAiB;AACrB;AAEA;IACI,eAAe;AACnB;AAEA;IACI,2CAA2C;IAC3C,cAAc;IACd,qBAAqB;AAEzB;;AAEA;;GAEG;AAEH;IACI,yCAAyC;IACzC,cAAc;AAClB;AAEA;IACI,WAAW;AACf;;AAEA;;GAEG;AAEH;IACI,UAAU;AACd;AAEA;IACI,+CAA+C;IAC/C,mBAAmB;AACvB;AAEA;IACI,gBAAgB;AACpB;AAEA;IACI,WAAW;IACX,YAAY;IACZ,kBAAkB;IAClB,+CAA+C;IAC/C,yBAAyB;AAC7B;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,cAAc;IACd,eAAe;AACnB;AAEA;IACI,oBAAoB;IACpB,cAAc;AAClB;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,UAAU;IACV,eAAe;AACnB;AAEA;IACI,kBAAkB;IAClB,QAAQ;IACR,UAAU;IACV,2CAA2C;IAC3C,cAAc;AAClB;AAEA;IACI,SAAS;IACT,UAAU;AACd;AAEA;IACI,cAAc;AAClB;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,UAAU;IACV,eAAe;AACnB;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,QAAQ;IACR,UAAU;AACd;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,QAAQ;IACR;AACJ;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,UAAU;IACV,2CAA2C;IAC3C,cAAc;AAClB;AAEA;IACI,cAAc;AAClB;AAEA;IACI,kBAAkB;IAClB,QAAQ;IACR,WAAW;IACX,2CAA2C;IAC3C,cAAc;AAClB;AAEA;IACI,cAAc;AAClB;AAEA;IACI,0BAA0B;IAC1B,cAAc;IACd,2CAA2C;IAC3C,cAAc;IACd,eAAe;IACf,iBAAiB;AACrB;AAEA;IACI,oBAAoB;IACpB,eAAe;AACnB;AAEA;IACI,0DAA0D;IAC1D,cAAc;AAClB;AAEA;IACI,0DAA0D;IAC1D,cAAc;IACd,oBAAoB;IACpB,eAAe;AACnB;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,aAAa;IACb,mBAAmB;IACnB,oBAAoB;AACxB;AAEA;IACI,kBAAkB;IAClB,WAAW;AACf;AAEA;IACI,mBAAmB;AACvB;AAEA;IACI,kBAAkB;IAClB,iBAAiB;IACjB,kBAAkB;IAClB,gBAAgB;IAChB,qBAAqB;IACrB,eAAe;IACf,cAAc;IACd,kBAAkB;IAClB,eAAe;AACnB;AAIA;IACI,+CAA+C;IAC/C,kBAAkB;IAClB,iBAAiB;IACjB,gBAAgB;IAChB,eAAe;IACf,cAAc;IACd,kBAAkB;IAClB,eAAe;AACnB;AAEA;;IAEI,iBAAiB;IACjB,mBAAmB;IACnB,WAAW;IACX,cAAc;IACd,eAAe;IACf,mBAAmB;IACnB,kBAAkB;IAClB,aAAa;IACb,mBAAmB;AACvB;AAEA;;IAEI,eAAe;IACf,cAAc;IACd,iBAAiB;AACrB;AAEA;IACI,kBAAkB;AACtB;AAEA;IACI,cAAc;IACd,eAAe;AACnB;AAEA;;;;IAII,mBAAmB;IACnB,oCAAoC;IACpC,UAAU;AACd;AAEA;IACI,kBAAkB;IAClB,kBAAkB;IAClB,mBAAmB;IACnB,cAAc;IACd,eAAe;IACf,qBAAqB;IACrB,kBAAkB;IAClB,kBAAkB;IAClB,qBAAqB;IACrB,wBAAwB;IACxB,SAAS;IACT,UAAU;IACV,UAAU;AACd;AAEA;IACI,cAAc;IACd,eAAe;IACf,iBAAiB;AACrB;AAEA;IACI,WAAW;IACX,eAAe;IACf,YAAY;IACZ,iBAAiB;IACjB;AACJ",sourcesContent:['<template>\n    <div style="display: flex; flex-direction: column; flex: 1">\n        <div>\n            <CheckboxComp :class="[\'modules-selected-checkbox\', props.screenType == \'Deploy\' ? \'deploy\' : \'\']"\n                :minus="mainCheckboxState == false" :check="mainCheckboxState == true"\n                @click="handleModuleCountCheckboxEvent(mainCheckboxState == undefined)" />\n            <div :class="[\'modules-selected-text\', props.screenType == \'Deploy\' ? \'deploy\' : \'\']">\n                <span class="text-number">{{ allChildCheckedModulesCount + anyChildCheckedModulesCount + checkedRootLevelModelsCount }}</span>\n                of <span class="text-number">{{ totalRootLevelCount }}</span> items selected\n            </div>\n        </div>\n\n        <div :class="[\'modules-datatable\', props.screenType == \'Deploy\' ? \'deploy\' : \'\']" :id="itemsDivElementId" :style="[props.openedInDialog ? \'max-height: 300px; overflow: auto\' : \'flex: 1\']" ></div>\n        <div v-if="props.screenType == \'Deploy\'" style="margin-bottom: 102px">\n            <div style="display: flex; align-items: center;">\n                <span class="custom-text environment"> Publish To </span>\n                <span class="publish-info">\n                    <i class="mdi mdi-information"></i>\n                    <span class="button-tooltip" style="top: 460px; left: 96px; z-index: 1; width: 231px;">Publish To\n                        options may change depending on the module type you choose.</span>\n                </span>\n            </div>\n\n            <CustomSelect :options="publishTargets" @input="onTargetSelect" :selectedOption="selectedTarget"\n                :default="selectedTarget" :disabledOptions="disabledOptions" selectedClass="selected-environment"\n                placeholder="Select the publish environment of your application" class="select-environment">\n            </CustomSelect>\n        </div>\n        <div :class="[\'footer\', props.screenType == \'Deploy\' ? \'deploy\' : \'export\']">\n            <div :class="[\'cancel-button\', props.screenType == \'Deploy\' ? \'deploy\' : \'\']" @click="close">Cancel</div>\n            <div :class="[(saveButtonDisable ? \' button-disable\' : \'\')]"\n                @click="!saveButtonDisable && props.buttonCb()">\n                <span class="save-button deploy">{{ buttonNameDict[props.screenType] }}</span>\n                <span v-if="!isStartScreenOK" class="button-tooltip"\n                    style="top: -46px; left: 652px; z-index: 1; width: 120px;">You need to include your start screen.</span>\n                <span v-else-if="props.screenType == \'Deploy\' && !selectedTarget" class="button-tooltip"\n                    style="top: -46px; left: 644px; z-index: 1; width: 123px;">You need to select a publish\n                    environment.</span>\n                <span v-else-if="!isThereVersion" class="button-tooltip"\n                    style="top: -95px; left: 644px; z-index: 1; width: 135px;">There are no items ready to publish. At least\n                    one of your items must be ready to publish.</span>\n                <span v-else-if="!isAllDependenciesOK" class="button-tooltip"\n                    style="top: -95px; left: 644px; z-index: 1; width: 135px;">{{ dependencyErrorStr }}</span>\n            </div>\n\n        </div>\n    </div>\n</template>\n\n\n<script setup lang="ts">\nimport { CryptoHelper } from "@stechquick/algae/lib/helpers/cryptoHelper";\nimport { computed, createApp, defineAsyncComponent, onMounted, ref } from "vue";\nimport { IOrganizationCloud } from "../../../../../../common/clean/domain/useCases/ICloudProvider";\nimport { IPlatformSelection, ITableData } from "../../../../../../common/qCloudTemp/exporter";\nimport { IModuleRelatedModelItem, IQJsonAdditionals } from "../../../../../../common/qCloudTemp/quickCloud";\nimport { container } from "../../../../domain/core/diContainer";\nimport { IModel, IModelHistoryInfo, IModule, IModuleVersion } from "../../../../domain/model/models";\nimport { IDialog } from "../../../../domain/presentation/IDialog";\nimport { IListMultiModelVersions } from "../../../../domain/useCase/IListMultiModelVersions";\nimport { IListMultiModuleVersions } from "../../../../domain/useCase/IListMultiModuleVersions";\nimport { IUseCaseExecutor } from "../../../../domain/useCase/IUseCaseExecutor";\nimport { IViewModel } from "../../../../domain/viewModel/IViewModel";\nimport { IViewModelManager } from "../../../../domain/viewModel/IViewModelManager";\nimport ExportDialogItem from "../../components/dialogs/publish/components/exportDialogItem.vue";\nimport CustomSelect from "../customSelect.vue";\nimport CheckboxComp from "../checkboxComp.vue";\nimport { FileDisplayerExternalData, IFileDisplayerUseCase } from "../../../../domain/useCase/IFileDisplayerUseCase";\nimport { ITreeItem } from "../../../../domain/presentation/ITreeView";\nimport { FileExplorerConstants } from "../../../../domain/useCase/IFileExplorer";\nimport { IObjectUseCase } from "../../../../domain/useCase/IObjectUseCase";\n\ninterface IDeployScreenAdditionalProps {\n    screenType: "Export" | "Deploy" | "Release" | "Create" | "Save" | "Update";\n    platformSelection: IPlatformSelection;\n    buttonCb: () => void;\n    buttonDisableCond: boolean;\n    openedInDialog?: boolean;\n}\n\ninterface IDisabledOptions {\n    index: number\n    cause: string;\n}\n\nconst props = defineProps<IDeployScreenAdditionalProps>();\nconst viewModel = container.resolve<IViewModel>(IViewModel);\nconst viewModelManager = container.resolve<IViewModelManager>(IViewModelManager);\nconst dialog = container.resolve<IDialog>(IDialog);\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\nconst fileDisplayerUseCase = container.resolve<IFileDisplayerUseCase>(IFileDisplayerUseCase);\nconst objectUseCase = container.resolve<IObjectUseCase>(IObjectUseCase);\n\n\nconst emit = defineEmits(["close", "getItem"]);\nconst items = ref<Array<ITableData>>([]);\nconst validations = ref<boolean>(true);\nconst selectedTarget = ref<string>("");\nconst disabledOptions = ref<Array<IDisabledOptions>>();\nconst publishTargets = ref<Array<string>>();\nconst modelHistories = ref<Map<string, Array<IModelHistoryInfo>>>();\nconst importedModuleVersions = ref<Map<string, Array<IModuleVersion>>>();\nconst startScreen = ref<IModel>();\nconst dependencyMap = ref<Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>>();\nconst dependencyErrorStr = ref<string>(\'\');\nconst currentApp = computed(() => viewModel.apps.find((app) => app.ID == viewModel.studio.appId));\nconst buttonNameDict = {\n    "Export" : "DOWNLOAD",\n    "Deploy": "PUBLISH",\n    "Release": "RELEASE",\n    "Create": "CREATE",\n    "Save": "SAVE",\n    "Update": "UPDATE"\n} \n\n\nonMounted(async () => {\n    await executor.execute(async () => {\n        await Promise.all([\n            executor.executeUseCase<IListMultiModelVersions>(IListMultiModelVersions, {}).then(res => modelHistories.value = res),\n            executor.executeUseCase<IListMultiModuleVersions>(IListMultiModuleVersions, {}).then(res => importedModuleVersions.value = res)\n        ])\n        initDependencies();\n        handleItems();\n        props.screenType == "Deploy" && syncPublishTargets();\n        validations.value = validate();\n        sendItems();\n    }, { loading: true });\n})\n\nconst allChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == "module" && e.allChildChecked).length);\nconst anyChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == "module" && !e.allChildChecked && e.anyChildChecked).length);\nconst checkedRootLevelModelsCount = computed(() => items.value.filter(e => e.type != "module" && e.checked).length)\nconst totalRootLevelCount = computed(() => items.value.length);\nconst saveButtonDisable = computed(() => (props.screenType == "Deploy" && props.platformSelection.web && selectedTarget.value == "") || !validations.value || !items.value.some((item) => item.checked || item.anyChildChecked) || !validateStartScreen() || !validateDependencies() || props.buttonDisableCond);\nconst mainCheckboxState = computed(() => items.value.length == allChildCheckedModulesCount.value ? true\n    : (anyChildCheckedModulesCount.value + checkedRootLevelModelsCount.value > 0 ? false : undefined));\nconst isThereVersion = computed(() => checkMaxVersionOfAllItems());\nconst isAllDependenciesOK = computed(validateDependencies)\nconst isStartScreenOK = computed(validateStartScreen);\nconst itemsDivElementId = ref(\'module-container-div\' + (props.openedInDialog ? \'-dialog\' : \'\'))\n\nfunction validate() {\n    let result = true;\n    const modules = items.value.filter(e => e.type == "module" && e.anyChildChecked);\n    const appLayerItems = items.value.filter(e => e.type == "qjson" && e.checked);\n\n    startScreen.value = (viewModel.studio.items as Array<IModel>).find(item => (item.additionals as IQJsonAdditionals | undefined)?.isRootPage);\n    if (!startScreen.value)\n        return false;\n\n    if (props.screenType == "Deploy") {\n        if (modules.length > 0)\n            result = modules.map(e => e.children).filter(e => !e?.find(f => f.type == "entityDesigner" && f.checked)).length <= 0\n\n        let isApplicationWillDeploy = appLayerItems.length > 0;\n        if (isApplicationWillDeploy) {\n            result = appLayerItems\n                .map(e => viewModel.studio.items.find(item => item.ID == e.id) as IModel)\n                .findIndex(e => ((e.additionals as IQJsonAdditionals).isRootPage)) != -1;\n        }\n    }\n\n    return result;\n}\n\nfunction validateDependencies() {\n    const checkMap = new Map<string, boolean>();\n    items.value.forEach(item => {\n        if (item.type == \'module\' && item.children && item.children.length > 0)\n            item.children.forEach(child => checkMap.set(child.id, child.checked == true))\n        else\n            checkMap.set(item.id, item.checked == true)\n    })\n\n    const mustBeCheckedMap = new Map<string, Array<string>>();\n    dependencyMap.value?.forEach((deps, id) => {\n        if (!checkMap.get(id))\n            return;\n\n        deps.dependedTo.forEach(dependedId => {\n            if (checkMap.get(dependedId))\n                return;\n\n            if (mustBeCheckedMap.has(id)) {\n                const vals = mustBeCheckedMap.get(id)!\n                vals.push(dependedId)\n                mustBeCheckedMap.set(id, vals)\n            } else {\n                mustBeCheckedMap.set(id, [dependedId])\n            }\n\n        });\n    })\n\n    //set deps error text\n    const [firstItemID] = mustBeCheckedMap.keys();\n    if (firstItemID) {\n        const firstItemDeps = mustBeCheckedMap.get(firstItemID);\n        const firstItemDepStr = firstItemDeps ? firstItemDeps.map(findItem).map(e => e?.name).join(\', \') : \'\';\n        dependencyErrorStr.value = `Select ${firstItemDepStr} first. ${findItem(firstItemID)?.name} depends on ${firstItemDepStr}.`\n    }\n\n    return mustBeCheckedMap.size == 0\n}\n\nfunction validateStartScreen() {\n    return (items.value.find((item) => item.id == startScreen.value?.ID))?.checked\n}\n\nfunction findItem(ID: string) {\n    for (const item of items.value) {\n        if (item.type != \'module\' && item.id == ID)\n            return item;\n        if (item.type == \'module\' && item.children && item.children.length > 0) {\n            const f = item.children.find(e => e.id == ID)\n            if (f) return f\n        }\n    }\n}\nfunction sendItems() {\n    items.value.forEach(item => {\n            if(item.type != "module" && item.type != "folder" && item.usageType != "appAssetList")  {\n                item.checked && getItem(item);\n            }\n            else {\n                item.children?.forEach(child => {\n                    child.checked && getItem(child);\n                 })\n            }\n        })\n}\nfunction initDependencies() {\n    const map = new Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>();\n    const depMap = new Map<string, Array<string>>();\n\n    viewModelManager.flatMapItems(viewModel.studio.items, (item) => {\n        if (item.objectType != "model") { return; }\n\n        const isImportedModule = item.owner.objectType == "module" && isModuleImported(item.owner as IModule);\n\n        let version: string | undefined;\n        if (!isImportedModule) {\n            const maxVersion = getItemMaxVersion(item)\n            if (!maxVersion)\n                return depMap.set(item.ID, item.dependentModels ? item.dependentModels.map(e => e.modelId) : Array<string>());\n            version = maxVersion;\n        }\n        else {\n            const moduleVersions = importedModuleVersions.value?.get(item.owner.ID)\n            const moduleVersion = (item.owner as IModule).relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion\n\n            const importedModuleModel = moduleVersions?.filter(e => e.version == moduleVersion).flatMap(e => e.relatedModelHistories).find(e => e.modelID == item.ID)\n            version = importedModuleModel?.version\n        }\n\n        const historyItem = modelHistories.value?.get(item.ID)?.find(e => e.version == version);\n\n        depMap.set(item.ID, historyItem?.dependentModels ? historyItem?.dependentModels.map(e => e.modelId) : Array<string>())\n    });\n\n\n    depMap.forEach((dependedTo, modelId) => {\n        const dependedBy = Array<string>();\n        depMap.forEach((dependencies, depModelId) => {\n            if (dependencies.some(depId => depId == modelId))\n                dependedBy.push(depModelId)\n        })\n        map.set(modelId, { dependedBy, dependedTo });\n    })\n    dependencyMap.value = map;\n}\n\nfunction isModelDepended(item: ITableData) {\n    const deps = dependencyMap.value?.get(item.id)?.dependedBy\n    if (!deps) return false;\n\n    return deps.some(dep => items.value.some(item => {\n        if (item.type == \'module\' && item.anyChildChecked) {\n            return item.children?.some(child => child.checked && child.id == dep)\n        }\n        return item.id == dep && item.checked\n    }));\n}\nfunction createDialogComp(item: ITableData) {\n    const newChild = createApp(ExportDialogItem, {\n        handleItemCheckEvent,\n        startScreen,\n        versionDialog,\n        handleCollapse,\n        item: item,\n        moduleVersionDialog\n    });\n    const mountEl = document.createElement(\'div\');\n    newChild.mount(mountEl);\n    const parentEl = document.getElementById(itemsDivElementId.value);\n    parentEl?.appendChild(mountEl);\n}\nfunction createAndAppendItem({ newItem }: { newItem: ITableData }) {\n    createDialogComp(newItem);\n    if ((newItem).type != "module") {\n        items.value.push(newItem);\n    }\n}\n\nfunction handleItems() {\n    // - App Settings\n    const appSettings = viewModel.studio.items.find(e => e.name == \'App Settings\');\n    const maxVersion = getItemMaxVersion(appSettings as IModel)\n    const settingsData = appSettings && {\n        id: appSettings.ID,\n        name: appSettings.name,\n        checked: true,\n        disabled: false,\n        type: (appSettings as IModel).modelType,\n        version: !maxVersion ? \'latest\' : maxVersion\n    };\n    appSettings && settingsData && createAndAppendItem({ newItem: settingsData });\n\n\n    // - UI Settings\n    const uiSettingsID = CryptoHelper.CreateGuid();\n    const uiSettingsModels = viewModel.studio.items.filter((item) => item.objectType == "model" && item.usageType == "appSettings") as Array<IModel>;\n    const uiSettings: ITableData = {\n        id: uiSettingsID,\n        collapsed: true,\n        name: "UI Settings",\n        type: "module",\n        imported: false,\n        checked: true,\n        children: [{} as ITableData]\n    };\n    uiSettings && createAndAppendItem({ newItem: uiSettings });\n    uiSettings.children = uiSettingsModels.map(settings => {\n        const maxVersion = getItemMaxVersion(settings)\n        const childData = {\n            id: settings.ID,\n            parent: uiSettings,\n            name: settings.name,\n            type: settings.modelType,\n            checked: maxVersion != undefined,\n            usageType: settings?.usageType,\n            disabled: !maxVersion,\n            version: maxVersion,\n            level: 2\n        }\n        createAndAppendItem({ newItem: childData });\n        return childData;\n    })\n    handleParentCheckedStatus(uiSettings, false);\n\n\n    // - Styled Components\n    const uiAssetID = CryptoHelper.CreateGuid();\n    const appAssetList = viewModel.studio.items.filter((item) => item.objectType == "model" && item.usageType == "appAssetList") as Array<IModel>;\n    const uiAssetList: ITableData = {\n        id: uiAssetID,\n        collapsed: true,\n        name: "Styled Components",\n        type: "module",\n        imported: false,\n        anyChildChecked: true,\n        allChildChecked: true,\n        children: [{} as ITableData]\n    };\n    uiAssetList && createAndAppendItem({ newItem: uiAssetList });\n    uiAssetList.children = appAssetList.map((asset) => {\n        const childAsset = {\n            id: asset.ID,\n            parent: uiAssetList,\n            name: asset.name,\n            type: asset.modelType,\n            checked: true,\n            usageType: asset?.usageType,\n            level: 2\n        }\n        createAndAppendItem({ newItem: childAsset });\n        return childAsset;\n    }) as Array<ITableData>;\n    handleParentCheckedStatus(uiAssetList, false);\n\n    \n    const treeItems = fileDisplayerUseCase.cloneFileExplorerTreeView({\n        displayFilterer: (item, hasChildren) => {\n            switch (item.ID) { case FileExplorerConstants.uiAssetListID: case FileExplorerConstants.uiSettingsID: return false; default: break; }\n            switch (item.objectType) {\n                case "application": return false;\n                case "module": return true;\n                case "folder": return hasChildren;\n                case "model": return true;\n            }\n        },\n    });\n\n    const converter = (treeItem: ITreeItem<FileDisplayerExternalData>, options: {ownerModule?: {isImportedModule: boolean;moduleVersion: string | undefined;relatedModelHistories: IModuleRelatedModelItem[] | undefined}}): ITableData => {\n        const item = treeItem.externalData;\n        if (item.objectType == "application") { throw new Error("unexpected item type"); }\n\n        const fullPath = objectUseCase.getFullPath(item, "self");\n        let level = fullPath.split("/").length - 1;\n\n        let tableData: ITableData;\n        switch(item.objectType) {\n            case "folder":\n                tableData = {\n                    id: item.ID, name: item.name, type: "folder", collapsed: true, level,\n                    children: treeItem.children?.map((item) => converter(item, { ownerModule: options.ownerModule })),\n                    path: item.path \n                };\n                tableData.children?.forEach(child => child.parent = tableData);\n                handleParentCheckedStatus(tableData, false);\n                break;\n            case "model":\n                if (options.ownerModule) {\n                    tableData = { id: item.ID, name: item.name, type: item.modelType, level };\n                    if (!options.ownerModule.isImportedModule || item.isUnmodifiable) {\n                        const maxVersion = getItemMaxVersion(item);\n                        tableData = {\n                            ...tableData,\n                            checked: maxVersion ? true : item.isUnmodifiable,\n                            disabled: maxVersion ? false : !item.isUnmodifiable,\n                            version: item.isUnmodifiable ? \'latest\' : maxVersion,\n                            ownerName: item.owner.name, ownerType: item.owner.objectType,\n                            path: item.path\n                        };\n                    } else {\n                        const importedModulesModel = options.ownerModule.relatedModelHistories?.find(e => e.modelID == item.ID)\n                        tableData = { \n                            ...tableData, \n                            checked: true, \n                            disabled: false, \n                            version: importedModulesModel?.version, \n                            ownerName: item.owner.name, \n                            ownerType: item.owner.objectType, \n                            path: item.path \n                        };\n                    }\n                } else {\n                    const maxVersion = getItemMaxVersion(item);\n                    tableData = {\n                        id: item.ID,\n                        name: item.name,\n                        checked: maxVersion ? true : item.isUnmodifiable,\n                        disabled: maxVersion ? false : !item.isUnmodifiable,\n                        type: item.modelType,\n                        version: item.isUnmodifiable ? \'latest\' : maxVersion,\n                        level,\n                        path: item.path \n                    };\n                }\n                break;\n            case "module":\n                const isImportedModule = isModuleImported(item);\n                const moduleVersion = item.relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion;\n                const relatedModelHistories = isImportedModule ? importedModuleVersions.value?.get(item.ID)?.find(module => module.version == moduleVersion)?.relatedModelHistories : undefined\n                \n                tableData = {\n                    id: item.ID,\n                    collapsed: true,\n                    name: item.name,\n                    type: "module",\n                    imported: isImportedModule,\n                    version: moduleVersion,\n                    children: treeItem.children?.map((item) => converter(item, {ownerModule: {isImportedModule, moduleVersion, relatedModelHistories}})),\n                }\n                tableData.children?.forEach(child => child.parent = tableData);\n                handleParentCheckedStatus(tableData, false);\n                break;\n        }\n        return tableData;\n    };\n    const tableDatas = treeItems.map(item => converter(item, {}));\n\n    const traverser = (tableData: ITableData) => {\n        createAndAppendItem({ newItem: tableData });\n        tableData.children?.forEach(traverser);\n    };\n    \n    tableDatas.forEach(traverser);\n}\n\nfunction getItemMaxVersion(item: IModel): string | undefined {\n    if (!modelHistories.value?.has(item.ID))\n        return undefined;\n\n    const versions = modelHistories.value.get(item.ID);\n    if (!versions)\n        return undefined;\n\n    const findMaxVersion = (versions: Array<string>) => {\n        const versionNumbers = versions.map(v => {\n            const parts: Array<string> = v.split(".");\n            return parseInt(parts[0]) * 10 + parseInt(parts[1]) * 1;\n        })\n\n        versionNumbers.sort((a, b) => b - a);\n\n        const maxVersion = versionNumbers[0];\n        return `${Math.floor(maxVersion / 10)}.${maxVersion % 10}`;\n    }\n\n    return findMaxVersion(versions.map(e => e.version!));\n\n}\nfunction checkMaxVersionOfAllItems() {\n    let isThereVersion: boolean = false;\n    items.value.forEach(item => {\n        if (item.type == "module") {\n            item.children?.forEach(child => {\n                if (child.version) {\n                    isThereVersion = true;\n                }\n\n            })\n        }\n        else {\n            if (item.version) {\n                isThereVersion = true;\n            }\n        }\n    })\n    return isThereVersion;\n}\nfunction handleModuleCountCheckboxEvent(value: boolean) {\n    items.value.filter(e => !e.disabled).forEach((item) => {\n        item.checked = value;\n        const allItemsCheckable = item.allChildChecked != undefined && item.children && item.children.length > 0 && !item.children.some(c => c.disabled);\n        if (allItemsCheckable) item.allChildChecked = value;\n        if (item.anyChildChecked != undefined) item.anyChildChecked = value;\n        if (item.children) item.children.filter(c => !c.disabled).forEach((child) => (child.checked = value));\n    });\n    \n    validations.value = validate();\n    props.screenType == "Deploy" && syncPublishTargets();\n}\n\nfunction handleCollapse(item: ITableData, childIterate?: boolean, collapsed?: boolean) {\n    item.collapsed = collapsed !== undefined ? collapsed : !item.collapsed;\n    if (childIterate) {\n        item.children?.forEach(child => {\n            const childEl = document.getElementById(child.id);\n            childEl!.style.display = item.collapsed ? "none" : "block";\n            handleCollapse(child, childIterate, item.collapsed);\n        })\n    }\n}\n\nfunction checkAllDependents(item: ITableData, recurseParent: boolean) {\n    if (item.disabled || item.checked) return;\n\n    item.checked = true\n    item.parent && handleParentCheckedStatus(item.parent, recurseParent);\n\n    const deps = dependencyMap.value?.get(item.id)?.dependedTo\n    if (!deps) return;\n\n    deps.forEach(dep => {\n        items.value.forEach(item => {\n            if (item.type == \'module\' && !item.allChildChecked) {\n                const willCheckItem = item.children?.find(child => !child.checked && child.id == dep)\n                willCheckItem && checkAllDependents(willCheckItem, recurseParent);\n                handleParentCheckedStatus(item, recurseParent);\n                return;\n            }\n\n            if (!item.checked && item.id == dep) {\n                checkAllDependents(item, recurseParent);\n                item.parent && handleParentCheckedStatus(item.parent, recurseParent);\n            }\n        })\n    });\n}\n\nfunction handleItemCheckEvent(item: ITableData) {\n    if (item.disabled || isModelDepended(item) || item.name == \'App Settings\')\n        return;\n\n    if (item.type != "module" && item.type != "folder") {\n        if (item.checked) {\n            item.checked = false;\n            item.parent && handleParentCheckedStatus(item.parent, true);\n        } else {\n            checkAllDependents(item, true);\n        }\n    } else {\n        if (item.children && item.children.filter(c => !c.disabled).length > 0) {\n            if (item.anyChildChecked) {\n                item.children.filter(c => !c.disabled).forEach(child => child.checked = false);\n                item.checked = false;\n                handleParentCheckedStatus(item, true);\n            } else {\n                item.children.forEach(child => checkAllDependents(child, true));\n                item.checked = true;\n            }\n        }\n        else {\n            item.checked = !item.checked;\n            item.allChildChecked = false;\n        }\n    }\n    getItem(item);\n    validations.value = validate();\n    props.screenType == "Deploy" && syncPublishTargets();\n}\n\nfunction handleParentCheckedStatus(item: ITableData, recurseParent: boolean) {\n    item.disabled = item.children && (item.children.length == 0 || !item.children?.some(child => !child.disabled))\n    item.allChildChecked = item.children && item.children.length > 0 && !item.children.some((child) => !child.checked || child.disabled);\n    item.anyChildChecked = item.children?.some((child) => child.checked && !child.disabled);\n    if (recurseParent && item.parent) {\n        handleParentCheckedStatus(item.parent, true);\n    }\n}\n\nfunction syncPublishTargets() {\n    publishTargets.value = []; disabledOptions.value = [];\n\n    const targets = viewModel.user?.selectedOrganization?.actions?.publish?.targets;\n    if (!targets)\n        return;\n\n    const isSelectAnyItem = items.value.find(e => e.anyChildChecked || e.checked);\n    if (!isSelectAnyItem) {\n        publishTargets.value = Object.entries(targets).map(e => cloudTargetMap(e[0])!);\n        const disabledOptionList = Array<IDisabledOptions>();\n        for (let i = 0; i < publishTargets.value.length; i++) {\n            disabledOptionList.push({ index: i, cause: "You need to include items to publish." })\n        }\n        disabledOptions.value = disabledOptionList;\n        return;\n    }\n\n    const checkedPublishTargets = checkAndSetDisabledCauses(targets);\n    const sortedTargets = checkedPublishTargets.sort((e, f) => (!e.cause === !f.cause) ? 0 : e.cause ? 1 : -1);\n\n    const disabledOptionList = Array<IDisabledOptions>();\n    for (let i = 0; i < sortedTargets.length; i++) {\n        const cause = sortedTargets[i].cause;\n        if (cause) disabledOptionList.push({ index: i, cause })\n    }\n    disabledOptions.value = disabledOptionList;\n    publishTargets.value = sortedTargets.map(e => e.optionName);\n\n    selectedTarget.value = !sortedTargets[0].cause ? sortedTargets[0].optionName : "";\n}\n\nfunction checkAndSetDisabledCauses(targets: Record<keyof IOrganizationCloud, boolean>) {\n    const list = Array<{ optionName: string, cause?: string }>();\n\n    Object.keys(targets).forEach(e => {\n        const key = e as keyof IOrganizationCloud;\n        const value = targets[key];\n        const optionName = cloudTargetMap(key)!;\n        if (!value)\n            return list.push({ optionName, cause: "You are not authorized to publish to this target." });\n\n\n        switch (key) {\n            case "azure":\n                const traverseSelectedItems = (status: boolean, items?: Array<ITableData>) => {\n                    if (!items || items.length == 0) { return status; }\n                    for (const item of items) {\n                        if (item.checked || item.anyChildChecked) {\n                            if (item.type == "module") {\n                                status = traverseSelectedItems(status, item.children);\n                            }\n                            if (item.type == "entityDesigner" || item.type == "bpmn" || item.type == "process") {\n                                status = false;\n                                break;\n                            }\n                        }\n\n                    }\n                    return status;\n                }\n\n                const status = traverseSelectedItems(true, items.value);\n                if (!status)\n                    return list.push({ optionName, cause: "Entity and process models cannot be published to this target." });\n                break;\n            case "plateauGCP":\n                const modulesHasNotAnEDModel = items.value.filter(e => e.name != "UI Settings").find(e => e.type == "module" && e.anyChildChecked && e.children?.some(c => c.checked && (c.type == "bpmn" || c.type == "process")) && !e.children?.some(c => c.type == "entityDesigner" && c.checked))\n                if (modulesHasNotAnEDModel)\n                    return list.push({ optionName, cause: `This target not available. Selected module \'${modulesHasNotAnEDModel.name}\' has not any Data Model.` })\n                break;\n        }\n\n        list.push({ optionName });\n    })\n\n    return list;\n}\n\nfunction updateDependencyMap(newVersion: string, item: ITableData) {\n    const deps = dependencyMap.value?.get(item.id);\n    dependencyMap.value?.set(item.id, {\n        dependedBy: deps?.dependedBy || Array<string>(),\n        dependedTo: modelHistories.value?.get(item.id)?.find(e => e.version == newVersion)?.dependentModels?.map(e => e.modelId) || Array<string>()\n    })\n}\n\nfunction versionDialog(item: ITableData) {\n    const clickedNode = { id: item.id, state: { checked: item.checked }, text: item.name, type: item.type, version: item.version };\n    const hasAnyVersion = modelHistories.value?.has(item.id);\n    const options = {\n        clickedNode, cb: (version: string) => {\n            item.version = version;\n            updateDependencyMap(version, item);\n        }\n    } as any;\n\n    if (hasAnyVersion) {\n        options.versions = modelHistories.value?.get(item.id)\n    }\n    dialog.showDialog(\n        defineAsyncComponent(() => import("../application/modelVersionDialog.vue")),\n        { closable: true, title: "Change Version", width: "1080px", maxHeight: "500px", overflow: "auto" }, options\n    );\n}\n\n\nfunction moduleVersionDialog(item: ITableData) {\n    dialog.showDialog(\n        defineAsyncComponent(() => import("../application/moduleVersionDialog.vue")),\n        { closable: true, title: "Change Version", width: "1080px", maxHeight: "500px", overflow: "auto" },\n        {\n            module: { ID: item.id }, versions: importedModuleVersions.value?.get(item.id), cb: (moduleVersion: IModuleVersion) => {\n                item.version = moduleVersion.version;\n                item.children?.forEach(child => {\n                    const modulesModel = moduleVersion.relatedModelHistories.find(e => e.modelID == child.id)\n                    child.version = modulesModel?.version\n                    updateDependencyMap(modulesModel?.version!, child);\n                })\n            }\n        }\n    );\n}\n\nfunction close() {\n    emit("close");\n}\nfunction getItem(item: ITableData) {\n    emit("getItem", item);\n}\n\nfunction cloudTargetMap(name: string, pureVal: boolean = false) {\n    const map: Record<keyof IOrganizationCloud, string> = { azure: "Public Cloud", plateauGCP: "Plateau Platform Playground" };\n    if (pureVal) {\n        return Object.keys(map).find(e => {\n            if (map[e as keyof IOrganizationCloud] === name) {\n                return true;\n            }\n        })\n    } else {\n        let key = Object.keys(map).includes(name);\n        if (!key)\n            return;\n        return map[name as keyof IOrganizationCloud];\n    }\n}\n\nfunction onTargetSelect(value: string) {\n    selectedTarget.value = value\n}\n\nconst isModuleImported = (item: IModule) => {\n    return objectUseCase.isModuleImported(item);\n}\n\n<\/script>\n\n\n<style scoped>\n.container {\n    padding: 32px 20px 20px;\n}\n\n.settings-container {\n    position: relative;\n    top: 0px;\n    left: 0px;\n}\n\n.custom-text {\n    /* position: absolute; */\n    font-family: \'Roboto\';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 15px;\n    line-height: 18px;\n    /* left: 24px; */\n    color: #212121;\n}\n\n/* .custom-text.title{\n    top: 92px;\n}\n\n.custom-text.environment{\n    top: 174px;\n} */\n\n.radio-button {\n    position: absolute;\n    top: 60px;\n    left: 20px;\n    cursor: pointer;\n}\n\n.radio-text {\n    position: absolute;\n    top: 59px;\n    font: normal normal normal 14px/19px Roboto;\n    color: #212121;\n    user-select: none;\n    cursor: pointer;\n}\n\n.existing-app-url {\n    position: absolute;\n    width: 100%;\n    height: 40px;\n    top: 114px;\n    left: 20px;\n    background: #ffffff 0% 0% no-repeat padding-box;\n    border: 1px solid #bcbcbc;\n    border-radius: 4px;\n    font: normal normal normal 14px/19px Roboto;\n    letter-spacing: 0px;\n    padding: 10px 0px 10px 10px;\n}\n\n.url-error {\n    border: 1px solid red;\n}\n\n.url-disable {\n    opacity: 0.5;\n}\n\n.existing-app-url::placeholder {\n    color: #bcbcbc;\n    user-select: none;\n}\n\n.modules-selected-checkbox {\n    cursor: pointer;\n}\n\n.modules-selected-text {\n    font: normal normal normal 14px/19px Roboto;\n    color: #757575;\n    margin: 0 0 13px 30px;\n    ;\n}\n\n/* .modules-selected-text.deploy {\n    top: 257px;\n} */\n\n.text-number {\n    font: normal normal bold 14px/19px Roboto;\n    color: #212121;\n}\n\n.modules-datatable {\n    width: 100%;\n}\n\n/* .modules-datatable.deploy {\n    top: 286px;\n} */\n\n.modules-datatable::-webkit-scrollbar {\n    width: 4px;\n}\n\n.modules-datatable::-webkit-scrollbar-thumb {\n    background: #bcbcbc 0% 0% no-repeat padding-box;\n    border-radius: 10px;\n}\n\n.modules-datatable::-webkit-scrollbar-thumb:hover {\n    background: #555;\n}\n\n.row-container {\n    width: 100%;\n    height: 36px;\n    position: relative;\n    background: #ffffff 0% 0% no-repeat padding-box;\n    border: 1px solid #e0e0e0;\n}\n\n.chevron {\n    position: absolute;\n    left: 4px;\n    color: #757575;\n    font-size: 24px;\n}\n\n.chevron.disabled {\n    pointer-events: none;\n    color: #D5D5D5;\n}\n\n.module-checkbox {\n    position: absolute;\n    top: 10px;\n    left: 43px;\n    cursor: pointer;\n}\n\n.module-name {\n    position: absolute;\n    top: 9px;\n    left: 69px;\n    font: normal normal normal 14px/19px Roboto;\n    color: #212121;\n}\n\n.module-name.imported {\n    top: 10px;\n    left: 87px;\n}\n\n.module-name.disabled {\n    color: #D5D5D5;\n}\n\n.model-checkbox {\n    position: absolute;\n    top: 10px;\n    left: 59px;\n    cursor: pointer;\n}\n\n.model-icon {\n    position: absolute;\n    width: 16px;\n    height: 16px;\n    top: 6px;\n    left: 85px;\n}\n\n.app-tier-model-icon {\n    position: absolute;\n    width: 16px;\n    height: 16px;\n    top: 6px;\n    left: 69px\n}\n\n.app-tier-model-name {\n    position: absolute;\n    top: 10px;\n    left: 87px;\n    font: normal normal normal 14px/19px Roboto;\n    color: #212121;\n}\n\n.app-tier-model-name.disabled {\n    color: #D5D5D5;\n}\n\n.model-name {\n    position: absolute;\n    top: 9px;\n    left: 103px;\n    font: normal normal normal 14px/19px Roboto;\n    color: #212121;\n}\n\n.model-name.disabled {\n    color: #D5D5D5;\n}\n\n.version-text {\n    margin: 10px 7px 10px auto;\n    display: table;\n    font: normal normal normal 12px/16px Roboto;\n    color: #757575;\n    cursor: pointer;\n    user-select: none;\n}\n\n.version-text.disabled {\n    pointer-events: none;\n    cursor: pointer;\n}\n\n.version-icon {\n    font: normal normal normal 16px/19px Material Design Icons;\n    color: #D5D5D5;\n}\n\n.version-icon.disabled {\n    font: normal normal normal 16px/19px Material Design Icons;\n    color: #EEEEEE;\n    pointer-events: none;\n    cursor: pointer;\n}\n\n.footer {\n    position: relative;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: end;\n}\n\n.footer.deploy {\n    position: relative;\n    width: 100%;\n}\n\n.footer.export {\n    margin: 50px 0 24px;\n}\n\n.cancel-button {\n    border-radius: 4px;\n    user-select: none;\n    font-style: normal;\n    font-weight: 500;\n    font-family: "ROBOTO";\n    font-size: 15px;\n    color: #757575;\n    padding: 10px 16px;\n    cursor: pointer;\n}\n\n\n\n.save-button {\n    background: #151233 0% 0% no-repeat padding-box;\n    border-radius: 4px;\n    user-select: none;\n    font-weight: 500;\n    font-size: 15px;\n    color: #ffffff;\n    padding: 10px 16px;\n    cursor: pointer;\n}\n\n.mobile-publish-text,\n.web-publish-text {\n    padding: 5px 12px;\n    margin-bottom: 52px;\n    width: 100%;\n    color: #757575;\n    font-size: 14px;\n    background: #F5F5FA;\n    border-radius: 4px;\n    display: flex;\n    align-items: center;\n}\n\n.mobile-publish-text i,\n.web-publish-text i {\n    font-size: 24px;\n    color: #151233;\n    margin-right: 4px;\n}\n\n.save-button.deploy {\n    padding: 10px 16px;\n}\n\n.button-disable .save-button {\n    color: #757575;\n    cursor: default;\n}\n\n.button-disable .save-button:hover+.button-tooltip,\n.start-screen:hover .button-tooltip,\n.row-container:hover .button-tooltip,\n.publish-info:hover .button-tooltip {\n    visibility: visible;\n    transition: opacity 0.3s ease-out 1s;\n    opacity: 1;\n}\n\n.button-tooltip {\n    visibility: hidden;\n    position: absolute;\n    background: #757575;\n    color: #FFFFFF;\n    font-size: 11px;\n    font-family: \'Roboto\';\n    text-align: center;\n    border-radius: 4px;\n    letter-spacing: 0.2px;\n    padding: 6px 8px 6px 8px;\n    top: 56px;\n    left: 63px;\n    opacity: 0;\n}\n\n.publish-info {\n    color: #757575;\n    font-size: 20px;\n    margin-left: 10px;\n}\n\n.select-environment {\n    width: 100%;\n    font-size: 15px;\n    height: 40px;\n    line-height: 40px;\n    margin-top: 4px\n}\n</style>\n\n<style>\n.selected-environment {\n    background-color: transparent;\n    border-radius: 4px;\n    border: 1px solid #BCBCBC;\n    color: #212121;\n    padding-left: 12px;\n}\n\n.custom-placeholder:empty:before {\n    color: #BCBCBC !important;\n    font-weight: 400;\n}\n\n.custom-select .items .option {\n    font-size: 14px;\n    padding-left: 12px;\n    line-height: 32px;\n}\n\n.custom-select .items .option:hover {\n    background-color: #EEEEEE;\n    color: #212121;\n}\n\n.custom-select .items .option.disabled:hover {\n    background-color: #FFFFFF;\n    color: #212121;\n}\n\n.custom-select.select-environment .items {\n    margin-top: 4px;\n    color: #212121;\n    border-radius: 4px;\n    border: 1px solid #E3E3E3;\n    overflow: hidden;\n    background-color: #FFFFFF;\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\n    position: static !important;\n}\n</style>\n'],sourceRoot:""}]);const l=a},63598:(e,n,t)=>{t.d(n,{Z:()=>l});var o=t(34663),i=t.n(o),s=t(7638),a=t.n(s)()(i());a.push([e.id,"\n.selected-environment {\n    background-color: transparent;\n    border-radius: 4px;\n    border: 1px solid #BCBCBC;\n    color: #212121;\n    padding-left: 12px;\n}\n.custom-placeholder:empty:before {\n    color: #BCBCBC !important;\n    font-weight: 400;\n}\n.custom-select .items .option {\n    font-size: 14px;\n    padding-left: 12px;\n    line-height: 32px;\n}\n.custom-select .items .option:hover {\n    background-color: #EEEEEE;\n    color: #212121;\n}\n.custom-select .items .option.disabled:hover {\n    background-color: #FFFFFF;\n    color: #212121;\n}\n.custom-select.select-environment .items {\n    margin-top: 4px;\n    color: #212121;\n    border-radius: 4px;\n    border: 1px solid #E3E3E3;\n    overflow: hidden;\n    background-color: #FFFFFF;\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\n    position: static !important;\n}\n","",{version:3,sources:["webpack://./src/presentation/vue3/components/application/appItemsTable.vue"],names:[],mappings:";AA2lCA;IACI,6BAA6B;IAC7B,kBAAkB;IAClB,yBAAyB;IACzB,cAAc;IACd,kBAAkB;AACtB;AAEA;IACI,yBAAyB;IACzB,gBAAgB;AACpB;AAEA;IACI,eAAe;IACf,kBAAkB;IAClB,iBAAiB;AACrB;AAEA;IACI,yBAAyB;IACzB,cAAc;AAClB;AAEA;IACI,yBAAyB;IACzB,cAAc;AAClB;AAEA;IACI,eAAe;IACf,cAAc;IACd,kBAAkB;IAClB,yBAAyB;IACzB,gBAAgB;IAChB,yBAAyB;IACzB,0CAA0C;IAC1C,2BAA2B;AAC/B",sourcesContent:['<template>\n    <div style="display: flex; flex-direction: column; flex: 1">\n        <div>\n            <CheckboxComp :class="[\'modules-selected-checkbox\', props.screenType == \'Deploy\' ? \'deploy\' : \'\']"\n                :minus="mainCheckboxState == false" :check="mainCheckboxState == true"\n                @click="handleModuleCountCheckboxEvent(mainCheckboxState == undefined)" />\n            <div :class="[\'modules-selected-text\', props.screenType == \'Deploy\' ? \'deploy\' : \'\']">\n                <span class="text-number">{{ allChildCheckedModulesCount + anyChildCheckedModulesCount + checkedRootLevelModelsCount }}</span>\n                of <span class="text-number">{{ totalRootLevelCount }}</span> items selected\n            </div>\n        </div>\n\n        <div :class="[\'modules-datatable\', props.screenType == \'Deploy\' ? \'deploy\' : \'\']" :id="itemsDivElementId" :style="[props.openedInDialog ? \'max-height: 300px; overflow: auto\' : \'flex: 1\']" ></div>\n        <div v-if="props.screenType == \'Deploy\'" style="margin-bottom: 102px">\n            <div style="display: flex; align-items: center;">\n                <span class="custom-text environment"> Publish To </span>\n                <span class="publish-info">\n                    <i class="mdi mdi-information"></i>\n                    <span class="button-tooltip" style="top: 460px; left: 96px; z-index: 1; width: 231px;">Publish To\n                        options may change depending on the module type you choose.</span>\n                </span>\n            </div>\n\n            <CustomSelect :options="publishTargets" @input="onTargetSelect" :selectedOption="selectedTarget"\n                :default="selectedTarget" :disabledOptions="disabledOptions" selectedClass="selected-environment"\n                placeholder="Select the publish environment of your application" class="select-environment">\n            </CustomSelect>\n        </div>\n        <div :class="[\'footer\', props.screenType == \'Deploy\' ? \'deploy\' : \'export\']">\n            <div :class="[\'cancel-button\', props.screenType == \'Deploy\' ? \'deploy\' : \'\']" @click="close">Cancel</div>\n            <div :class="[(saveButtonDisable ? \' button-disable\' : \'\')]"\n                @click="!saveButtonDisable && props.buttonCb()">\n                <span class="save-button deploy">{{ buttonNameDict[props.screenType] }}</span>\n                <span v-if="!isStartScreenOK" class="button-tooltip"\n                    style="top: -46px; left: 652px; z-index: 1; width: 120px;">You need to include your start screen.</span>\n                <span v-else-if="props.screenType == \'Deploy\' && !selectedTarget" class="button-tooltip"\n                    style="top: -46px; left: 644px; z-index: 1; width: 123px;">You need to select a publish\n                    environment.</span>\n                <span v-else-if="!isThereVersion" class="button-tooltip"\n                    style="top: -95px; left: 644px; z-index: 1; width: 135px;">There are no items ready to publish. At least\n                    one of your items must be ready to publish.</span>\n                <span v-else-if="!isAllDependenciesOK" class="button-tooltip"\n                    style="top: -95px; left: 644px; z-index: 1; width: 135px;">{{ dependencyErrorStr }}</span>\n            </div>\n\n        </div>\n    </div>\n</template>\n\n\n<script setup lang="ts">\nimport { CryptoHelper } from "@stechquick/algae/lib/helpers/cryptoHelper";\nimport { computed, createApp, defineAsyncComponent, onMounted, ref } from "vue";\nimport { IOrganizationCloud } from "../../../../../../common/clean/domain/useCases/ICloudProvider";\nimport { IPlatformSelection, ITableData } from "../../../../../../common/qCloudTemp/exporter";\nimport { IModuleRelatedModelItem, IQJsonAdditionals } from "../../../../../../common/qCloudTemp/quickCloud";\nimport { container } from "../../../../domain/core/diContainer";\nimport { IModel, IModelHistoryInfo, IModule, IModuleVersion } from "../../../../domain/model/models";\nimport { IDialog } from "../../../../domain/presentation/IDialog";\nimport { IListMultiModelVersions } from "../../../../domain/useCase/IListMultiModelVersions";\nimport { IListMultiModuleVersions } from "../../../../domain/useCase/IListMultiModuleVersions";\nimport { IUseCaseExecutor } from "../../../../domain/useCase/IUseCaseExecutor";\nimport { IViewModel } from "../../../../domain/viewModel/IViewModel";\nimport { IViewModelManager } from "../../../../domain/viewModel/IViewModelManager";\nimport ExportDialogItem from "../../components/dialogs/publish/components/exportDialogItem.vue";\nimport CustomSelect from "../customSelect.vue";\nimport CheckboxComp from "../checkboxComp.vue";\nimport { FileDisplayerExternalData, IFileDisplayerUseCase } from "../../../../domain/useCase/IFileDisplayerUseCase";\nimport { ITreeItem } from "../../../../domain/presentation/ITreeView";\nimport { FileExplorerConstants } from "../../../../domain/useCase/IFileExplorer";\nimport { IObjectUseCase } from "../../../../domain/useCase/IObjectUseCase";\n\ninterface IDeployScreenAdditionalProps {\n    screenType: "Export" | "Deploy" | "Release" | "Create" | "Save" | "Update";\n    platformSelection: IPlatformSelection;\n    buttonCb: () => void;\n    buttonDisableCond: boolean;\n    openedInDialog?: boolean;\n}\n\ninterface IDisabledOptions {\n    index: number\n    cause: string;\n}\n\nconst props = defineProps<IDeployScreenAdditionalProps>();\nconst viewModel = container.resolve<IViewModel>(IViewModel);\nconst viewModelManager = container.resolve<IViewModelManager>(IViewModelManager);\nconst dialog = container.resolve<IDialog>(IDialog);\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\nconst fileDisplayerUseCase = container.resolve<IFileDisplayerUseCase>(IFileDisplayerUseCase);\nconst objectUseCase = container.resolve<IObjectUseCase>(IObjectUseCase);\n\n\nconst emit = defineEmits(["close", "getItem"]);\nconst items = ref<Array<ITableData>>([]);\nconst validations = ref<boolean>(true);\nconst selectedTarget = ref<string>("");\nconst disabledOptions = ref<Array<IDisabledOptions>>();\nconst publishTargets = ref<Array<string>>();\nconst modelHistories = ref<Map<string, Array<IModelHistoryInfo>>>();\nconst importedModuleVersions = ref<Map<string, Array<IModuleVersion>>>();\nconst startScreen = ref<IModel>();\nconst dependencyMap = ref<Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>>();\nconst dependencyErrorStr = ref<string>(\'\');\nconst currentApp = computed(() => viewModel.apps.find((app) => app.ID == viewModel.studio.appId));\nconst buttonNameDict = {\n    "Export" : "DOWNLOAD",\n    "Deploy": "PUBLISH",\n    "Release": "RELEASE",\n    "Create": "CREATE",\n    "Save": "SAVE",\n    "Update": "UPDATE"\n} \n\n\nonMounted(async () => {\n    await executor.execute(async () => {\n        await Promise.all([\n            executor.executeUseCase<IListMultiModelVersions>(IListMultiModelVersions, {}).then(res => modelHistories.value = res),\n            executor.executeUseCase<IListMultiModuleVersions>(IListMultiModuleVersions, {}).then(res => importedModuleVersions.value = res)\n        ])\n        initDependencies();\n        handleItems();\n        props.screenType == "Deploy" && syncPublishTargets();\n        validations.value = validate();\n        sendItems();\n    }, { loading: true });\n})\n\nconst allChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == "module" && e.allChildChecked).length);\nconst anyChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == "module" && !e.allChildChecked && e.anyChildChecked).length);\nconst checkedRootLevelModelsCount = computed(() => items.value.filter(e => e.type != "module" && e.checked).length)\nconst totalRootLevelCount = computed(() => items.value.length);\nconst saveButtonDisable = computed(() => (props.screenType == "Deploy" && props.platformSelection.web && selectedTarget.value == "") || !validations.value || !items.value.some((item) => item.checked || item.anyChildChecked) || !validateStartScreen() || !validateDependencies() || props.buttonDisableCond);\nconst mainCheckboxState = computed(() => items.value.length == allChildCheckedModulesCount.value ? true\n    : (anyChildCheckedModulesCount.value + checkedRootLevelModelsCount.value > 0 ? false : undefined));\nconst isThereVersion = computed(() => checkMaxVersionOfAllItems());\nconst isAllDependenciesOK = computed(validateDependencies)\nconst isStartScreenOK = computed(validateStartScreen);\nconst itemsDivElementId = ref(\'module-container-div\' + (props.openedInDialog ? \'-dialog\' : \'\'))\n\nfunction validate() {\n    let result = true;\n    const modules = items.value.filter(e => e.type == "module" && e.anyChildChecked);\n    const appLayerItems = items.value.filter(e => e.type == "qjson" && e.checked);\n\n    startScreen.value = (viewModel.studio.items as Array<IModel>).find(item => (item.additionals as IQJsonAdditionals | undefined)?.isRootPage);\n    if (!startScreen.value)\n        return false;\n\n    if (props.screenType == "Deploy") {\n        if (modules.length > 0)\n            result = modules.map(e => e.children).filter(e => !e?.find(f => f.type == "entityDesigner" && f.checked)).length <= 0\n\n        let isApplicationWillDeploy = appLayerItems.length > 0;\n        if (isApplicationWillDeploy) {\n            result = appLayerItems\n                .map(e => viewModel.studio.items.find(item => item.ID == e.id) as IModel)\n                .findIndex(e => ((e.additionals as IQJsonAdditionals).isRootPage)) != -1;\n        }\n    }\n\n    return result;\n}\n\nfunction validateDependencies() {\n    const checkMap = new Map<string, boolean>();\n    items.value.forEach(item => {\n        if (item.type == \'module\' && item.children && item.children.length > 0)\n            item.children.forEach(child => checkMap.set(child.id, child.checked == true))\n        else\n            checkMap.set(item.id, item.checked == true)\n    })\n\n    const mustBeCheckedMap = new Map<string, Array<string>>();\n    dependencyMap.value?.forEach((deps, id) => {\n        if (!checkMap.get(id))\n            return;\n\n        deps.dependedTo.forEach(dependedId => {\n            if (checkMap.get(dependedId))\n                return;\n\n            if (mustBeCheckedMap.has(id)) {\n                const vals = mustBeCheckedMap.get(id)!\n                vals.push(dependedId)\n                mustBeCheckedMap.set(id, vals)\n            } else {\n                mustBeCheckedMap.set(id, [dependedId])\n            }\n\n        });\n    })\n\n    //set deps error text\n    const [firstItemID] = mustBeCheckedMap.keys();\n    if (firstItemID) {\n        const firstItemDeps = mustBeCheckedMap.get(firstItemID);\n        const firstItemDepStr = firstItemDeps ? firstItemDeps.map(findItem).map(e => e?.name).join(\', \') : \'\';\n        dependencyErrorStr.value = `Select ${firstItemDepStr} first. ${findItem(firstItemID)?.name} depends on ${firstItemDepStr}.`\n    }\n\n    return mustBeCheckedMap.size == 0\n}\n\nfunction validateStartScreen() {\n    return (items.value.find((item) => item.id == startScreen.value?.ID))?.checked\n}\n\nfunction findItem(ID: string) {\n    for (const item of items.value) {\n        if (item.type != \'module\' && item.id == ID)\n            return item;\n        if (item.type == \'module\' && item.children && item.children.length > 0) {\n            const f = item.children.find(e => e.id == ID)\n            if (f) return f\n        }\n    }\n}\nfunction sendItems() {\n    items.value.forEach(item => {\n            if(item.type != "module" && item.type != "folder" && item.usageType != "appAssetList")  {\n                item.checked && getItem(item);\n            }\n            else {\n                item.children?.forEach(child => {\n                    child.checked && getItem(child);\n                 })\n            }\n        })\n}\nfunction initDependencies() {\n    const map = new Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>();\n    const depMap = new Map<string, Array<string>>();\n\n    viewModelManager.flatMapItems(viewModel.studio.items, (item) => {\n        if (item.objectType != "model") { return; }\n\n        const isImportedModule = item.owner.objectType == "module" && isModuleImported(item.owner as IModule);\n\n        let version: string | undefined;\n        if (!isImportedModule) {\n            const maxVersion = getItemMaxVersion(item)\n            if (!maxVersion)\n                return depMap.set(item.ID, item.dependentModels ? item.dependentModels.map(e => e.modelId) : Array<string>());\n            version = maxVersion;\n        }\n        else {\n            const moduleVersions = importedModuleVersions.value?.get(item.owner.ID)\n            const moduleVersion = (item.owner as IModule).relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion\n\n            const importedModuleModel = moduleVersions?.filter(e => e.version == moduleVersion).flatMap(e => e.relatedModelHistories).find(e => e.modelID == item.ID)\n            version = importedModuleModel?.version\n        }\n\n        const historyItem = modelHistories.value?.get(item.ID)?.find(e => e.version == version);\n\n        depMap.set(item.ID, historyItem?.dependentModels ? historyItem?.dependentModels.map(e => e.modelId) : Array<string>())\n    });\n\n\n    depMap.forEach((dependedTo, modelId) => {\n        const dependedBy = Array<string>();\n        depMap.forEach((dependencies, depModelId) => {\n            if (dependencies.some(depId => depId == modelId))\n                dependedBy.push(depModelId)\n        })\n        map.set(modelId, { dependedBy, dependedTo });\n    })\n    dependencyMap.value = map;\n}\n\nfunction isModelDepended(item: ITableData) {\n    const deps = dependencyMap.value?.get(item.id)?.dependedBy\n    if (!deps) return false;\n\n    return deps.some(dep => items.value.some(item => {\n        if (item.type == \'module\' && item.anyChildChecked) {\n            return item.children?.some(child => child.checked && child.id == dep)\n        }\n        return item.id == dep && item.checked\n    }));\n}\nfunction createDialogComp(item: ITableData) {\n    const newChild = createApp(ExportDialogItem, {\n        handleItemCheckEvent,\n        startScreen,\n        versionDialog,\n        handleCollapse,\n        item: item,\n        moduleVersionDialog\n    });\n    const mountEl = document.createElement(\'div\');\n    newChild.mount(mountEl);\n    const parentEl = document.getElementById(itemsDivElementId.value);\n    parentEl?.appendChild(mountEl);\n}\nfunction createAndAppendItem({ newItem }: { newItem: ITableData }) {\n    createDialogComp(newItem);\n    if ((newItem).type != "module") {\n        items.value.push(newItem);\n    }\n}\n\nfunction handleItems() {\n    // - App Settings\n    const appSettings = viewModel.studio.items.find(e => e.name == \'App Settings\');\n    const maxVersion = getItemMaxVersion(appSettings as IModel)\n    const settingsData = appSettings && {\n        id: appSettings.ID,\n        name: appSettings.name,\n        checked: true,\n        disabled: false,\n        type: (appSettings as IModel).modelType,\n        version: !maxVersion ? \'latest\' : maxVersion\n    };\n    appSettings && settingsData && createAndAppendItem({ newItem: settingsData });\n\n\n    // - UI Settings\n    const uiSettingsID = CryptoHelper.CreateGuid();\n    const uiSettingsModels = viewModel.studio.items.filter((item) => item.objectType == "model" && item.usageType == "appSettings") as Array<IModel>;\n    const uiSettings: ITableData = {\n        id: uiSettingsID,\n        collapsed: true,\n        name: "UI Settings",\n        type: "module",\n        imported: false,\n        checked: true,\n        children: [{} as ITableData]\n    };\n    uiSettings && createAndAppendItem({ newItem: uiSettings });\n    uiSettings.children = uiSettingsModels.map(settings => {\n        const maxVersion = getItemMaxVersion(settings)\n        const childData = {\n            id: settings.ID,\n            parent: uiSettings,\n            name: settings.name,\n            type: settings.modelType,\n            checked: maxVersion != undefined,\n            usageType: settings?.usageType,\n            disabled: !maxVersion,\n            version: maxVersion,\n            level: 2\n        }\n        createAndAppendItem({ newItem: childData });\n        return childData;\n    })\n    handleParentCheckedStatus(uiSettings, false);\n\n\n    // - Styled Components\n    const uiAssetID = CryptoHelper.CreateGuid();\n    const appAssetList = viewModel.studio.items.filter((item) => item.objectType == "model" && item.usageType == "appAssetList") as Array<IModel>;\n    const uiAssetList: ITableData = {\n        id: uiAssetID,\n        collapsed: true,\n        name: "Styled Components",\n        type: "module",\n        imported: false,\n        anyChildChecked: true,\n        allChildChecked: true,\n        children: [{} as ITableData]\n    };\n    uiAssetList && createAndAppendItem({ newItem: uiAssetList });\n    uiAssetList.children = appAssetList.map((asset) => {\n        const childAsset = {\n            id: asset.ID,\n            parent: uiAssetList,\n            name: asset.name,\n            type: asset.modelType,\n            checked: true,\n            usageType: asset?.usageType,\n            level: 2\n        }\n        createAndAppendItem({ newItem: childAsset });\n        return childAsset;\n    }) as Array<ITableData>;\n    handleParentCheckedStatus(uiAssetList, false);\n\n    \n    const treeItems = fileDisplayerUseCase.cloneFileExplorerTreeView({\n        displayFilterer: (item, hasChildren) => {\n            switch (item.ID) { case FileExplorerConstants.uiAssetListID: case FileExplorerConstants.uiSettingsID: return false; default: break; }\n            switch (item.objectType) {\n                case "application": return false;\n                case "module": return true;\n                case "folder": return hasChildren;\n                case "model": return true;\n            }\n        },\n    });\n\n    const converter = (treeItem: ITreeItem<FileDisplayerExternalData>, options: {ownerModule?: {isImportedModule: boolean;moduleVersion: string | undefined;relatedModelHistories: IModuleRelatedModelItem[] | undefined}}): ITableData => {\n        const item = treeItem.externalData;\n        if (item.objectType == "application") { throw new Error("unexpected item type"); }\n\n        const fullPath = objectUseCase.getFullPath(item, "self");\n        let level = fullPath.split("/").length - 1;\n\n        let tableData: ITableData;\n        switch(item.objectType) {\n            case "folder":\n                tableData = {\n                    id: item.ID, name: item.name, type: "folder", collapsed: true, level,\n                    children: treeItem.children?.map((item) => converter(item, { ownerModule: options.ownerModule })),\n                    path: item.path \n                };\n                tableData.children?.forEach(child => child.parent = tableData);\n                handleParentCheckedStatus(tableData, false);\n                break;\n            case "model":\n                if (options.ownerModule) {\n                    tableData = { id: item.ID, name: item.name, type: item.modelType, level };\n                    if (!options.ownerModule.isImportedModule || item.isUnmodifiable) {\n                        const maxVersion = getItemMaxVersion(item);\n                        tableData = {\n                            ...tableData,\n                            checked: maxVersion ? true : item.isUnmodifiable,\n                            disabled: maxVersion ? false : !item.isUnmodifiable,\n                            version: item.isUnmodifiable ? \'latest\' : maxVersion,\n                            ownerName: item.owner.name, ownerType: item.owner.objectType,\n                            path: item.path\n                        };\n                    } else {\n                        const importedModulesModel = options.ownerModule.relatedModelHistories?.find(e => e.modelID == item.ID)\n                        tableData = { \n                            ...tableData, \n                            checked: true, \n                            disabled: false, \n                            version: importedModulesModel?.version, \n                            ownerName: item.owner.name, \n                            ownerType: item.owner.objectType, \n                            path: item.path \n                        };\n                    }\n                } else {\n                    const maxVersion = getItemMaxVersion(item);\n                    tableData = {\n                        id: item.ID,\n                        name: item.name,\n                        checked: maxVersion ? true : item.isUnmodifiable,\n                        disabled: maxVersion ? false : !item.isUnmodifiable,\n                        type: item.modelType,\n                        version: item.isUnmodifiable ? \'latest\' : maxVersion,\n                        level,\n                        path: item.path \n                    };\n                }\n                break;\n            case "module":\n                const isImportedModule = isModuleImported(item);\n                const moduleVersion = item.relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion;\n                const relatedModelHistories = isImportedModule ? importedModuleVersions.value?.get(item.ID)?.find(module => module.version == moduleVersion)?.relatedModelHistories : undefined\n                \n                tableData = {\n                    id: item.ID,\n                    collapsed: true,\n                    name: item.name,\n                    type: "module",\n                    imported: isImportedModule,\n                    version: moduleVersion,\n                    children: treeItem.children?.map((item) => converter(item, {ownerModule: {isImportedModule, moduleVersion, relatedModelHistories}})),\n                }\n                tableData.children?.forEach(child => child.parent = tableData);\n                handleParentCheckedStatus(tableData, false);\n                break;\n        }\n        return tableData;\n    };\n    const tableDatas = treeItems.map(item => converter(item, {}));\n\n    const traverser = (tableData: ITableData) => {\n        createAndAppendItem({ newItem: tableData });\n        tableData.children?.forEach(traverser);\n    };\n    \n    tableDatas.forEach(traverser);\n}\n\nfunction getItemMaxVersion(item: IModel): string | undefined {\n    if (!modelHistories.value?.has(item.ID))\n        return undefined;\n\n    const versions = modelHistories.value.get(item.ID);\n    if (!versions)\n        return undefined;\n\n    const findMaxVersion = (versions: Array<string>) => {\n        const versionNumbers = versions.map(v => {\n            const parts: Array<string> = v.split(".");\n            return parseInt(parts[0]) * 10 + parseInt(parts[1]) * 1;\n        })\n\n        versionNumbers.sort((a, b) => b - a);\n\n        const maxVersion = versionNumbers[0];\n        return `${Math.floor(maxVersion / 10)}.${maxVersion % 10}`;\n    }\n\n    return findMaxVersion(versions.map(e => e.version!));\n\n}\nfunction checkMaxVersionOfAllItems() {\n    let isThereVersion: boolean = false;\n    items.value.forEach(item => {\n        if (item.type == "module") {\n            item.children?.forEach(child => {\n                if (child.version) {\n                    isThereVersion = true;\n                }\n\n            })\n        }\n        else {\n            if (item.version) {\n                isThereVersion = true;\n            }\n        }\n    })\n    return isThereVersion;\n}\nfunction handleModuleCountCheckboxEvent(value: boolean) {\n    items.value.filter(e => !e.disabled).forEach((item) => {\n        item.checked = value;\n        const allItemsCheckable = item.allChildChecked != undefined && item.children && item.children.length > 0 && !item.children.some(c => c.disabled);\n        if (allItemsCheckable) item.allChildChecked = value;\n        if (item.anyChildChecked != undefined) item.anyChildChecked = value;\n        if (item.children) item.children.filter(c => !c.disabled).forEach((child) => (child.checked = value));\n    });\n    \n    validations.value = validate();\n    props.screenType == "Deploy" && syncPublishTargets();\n}\n\nfunction handleCollapse(item: ITableData, childIterate?: boolean, collapsed?: boolean) {\n    item.collapsed = collapsed !== undefined ? collapsed : !item.collapsed;\n    if (childIterate) {\n        item.children?.forEach(child => {\n            const childEl = document.getElementById(child.id);\n            childEl!.style.display = item.collapsed ? "none" : "block";\n            handleCollapse(child, childIterate, item.collapsed);\n        })\n    }\n}\n\nfunction checkAllDependents(item: ITableData, recurseParent: boolean) {\n    if (item.disabled || item.checked) return;\n\n    item.checked = true\n    item.parent && handleParentCheckedStatus(item.parent, recurseParent);\n\n    const deps = dependencyMap.value?.get(item.id)?.dependedTo\n    if (!deps) return;\n\n    deps.forEach(dep => {\n        items.value.forEach(item => {\n            if (item.type == \'module\' && !item.allChildChecked) {\n                const willCheckItem = item.children?.find(child => !child.checked && child.id == dep)\n                willCheckItem && checkAllDependents(willCheckItem, recurseParent);\n                handleParentCheckedStatus(item, recurseParent);\n                return;\n            }\n\n            if (!item.checked && item.id == dep) {\n                checkAllDependents(item, recurseParent);\n                item.parent && handleParentCheckedStatus(item.parent, recurseParent);\n            }\n        })\n    });\n}\n\nfunction handleItemCheckEvent(item: ITableData) {\n    if (item.disabled || isModelDepended(item) || item.name == \'App Settings\')\n        return;\n\n    if (item.type != "module" && item.type != "folder") {\n        if (item.checked) {\n            item.checked = false;\n            item.parent && handleParentCheckedStatus(item.parent, true);\n        } else {\n            checkAllDependents(item, true);\n        }\n    } else {\n        if (item.children && item.children.filter(c => !c.disabled).length > 0) {\n            if (item.anyChildChecked) {\n                item.children.filter(c => !c.disabled).forEach(child => child.checked = false);\n                item.checked = false;\n                handleParentCheckedStatus(item, true);\n            } else {\n                item.children.forEach(child => checkAllDependents(child, true));\n                item.checked = true;\n            }\n        }\n        else {\n            item.checked = !item.checked;\n            item.allChildChecked = false;\n        }\n    }\n    getItem(item);\n    validations.value = validate();\n    props.screenType == "Deploy" && syncPublishTargets();\n}\n\nfunction handleParentCheckedStatus(item: ITableData, recurseParent: boolean) {\n    item.disabled = item.children && (item.children.length == 0 || !item.children?.some(child => !child.disabled))\n    item.allChildChecked = item.children && item.children.length > 0 && !item.children.some((child) => !child.checked || child.disabled);\n    item.anyChildChecked = item.children?.some((child) => child.checked && !child.disabled);\n    if (recurseParent && item.parent) {\n        handleParentCheckedStatus(item.parent, true);\n    }\n}\n\nfunction syncPublishTargets() {\n    publishTargets.value = []; disabledOptions.value = [];\n\n    const targets = viewModel.user?.selectedOrganization?.actions?.publish?.targets;\n    if (!targets)\n        return;\n\n    const isSelectAnyItem = items.value.find(e => e.anyChildChecked || e.checked);\n    if (!isSelectAnyItem) {\n        publishTargets.value = Object.entries(targets).map(e => cloudTargetMap(e[0])!);\n        const disabledOptionList = Array<IDisabledOptions>();\n        for (let i = 0; i < publishTargets.value.length; i++) {\n            disabledOptionList.push({ index: i, cause: "You need to include items to publish." })\n        }\n        disabledOptions.value = disabledOptionList;\n        return;\n    }\n\n    const checkedPublishTargets = checkAndSetDisabledCauses(targets);\n    const sortedTargets = checkedPublishTargets.sort((e, f) => (!e.cause === !f.cause) ? 0 : e.cause ? 1 : -1);\n\n    const disabledOptionList = Array<IDisabledOptions>();\n    for (let i = 0; i < sortedTargets.length; i++) {\n        const cause = sortedTargets[i].cause;\n        if (cause) disabledOptionList.push({ index: i, cause })\n    }\n    disabledOptions.value = disabledOptionList;\n    publishTargets.value = sortedTargets.map(e => e.optionName);\n\n    selectedTarget.value = !sortedTargets[0].cause ? sortedTargets[0].optionName : "";\n}\n\nfunction checkAndSetDisabledCauses(targets: Record<keyof IOrganizationCloud, boolean>) {\n    const list = Array<{ optionName: string, cause?: string }>();\n\n    Object.keys(targets).forEach(e => {\n        const key = e as keyof IOrganizationCloud;\n        const value = targets[key];\n        const optionName = cloudTargetMap(key)!;\n        if (!value)\n            return list.push({ optionName, cause: "You are not authorized to publish to this target." });\n\n\n        switch (key) {\n            case "azure":\n                const traverseSelectedItems = (status: boolean, items?: Array<ITableData>) => {\n                    if (!items || items.length == 0) { return status; }\n                    for (const item of items) {\n                        if (item.checked || item.anyChildChecked) {\n                            if (item.type == "module") {\n                                status = traverseSelectedItems(status, item.children);\n                            }\n                            if (item.type == "entityDesigner" || item.type == "bpmn" || item.type == "process") {\n                                status = false;\n                                break;\n                            }\n                        }\n\n                    }\n                    return status;\n                }\n\n                const status = traverseSelectedItems(true, items.value);\n                if (!status)\n                    return list.push({ optionName, cause: "Entity and process models cannot be published to this target." });\n                break;\n            case "plateauGCP":\n                const modulesHasNotAnEDModel = items.value.filter(e => e.name != "UI Settings").find(e => e.type == "module" && e.anyChildChecked && e.children?.some(c => c.checked && (c.type == "bpmn" || c.type == "process")) && !e.children?.some(c => c.type == "entityDesigner" && c.checked))\n                if (modulesHasNotAnEDModel)\n                    return list.push({ optionName, cause: `This target not available. Selected module \'${modulesHasNotAnEDModel.name}\' has not any Data Model.` })\n                break;\n        }\n\n        list.push({ optionName });\n    })\n\n    return list;\n}\n\nfunction updateDependencyMap(newVersion: string, item: ITableData) {\n    const deps = dependencyMap.value?.get(item.id);\n    dependencyMap.value?.set(item.id, {\n        dependedBy: deps?.dependedBy || Array<string>(),\n        dependedTo: modelHistories.value?.get(item.id)?.find(e => e.version == newVersion)?.dependentModels?.map(e => e.modelId) || Array<string>()\n    })\n}\n\nfunction versionDialog(item: ITableData) {\n    const clickedNode = { id: item.id, state: { checked: item.checked }, text: item.name, type: item.type, version: item.version };\n    const hasAnyVersion = modelHistories.value?.has(item.id);\n    const options = {\n        clickedNode, cb: (version: string) => {\n            item.version = version;\n            updateDependencyMap(version, item);\n        }\n    } as any;\n\n    if (hasAnyVersion) {\n        options.versions = modelHistories.value?.get(item.id)\n    }\n    dialog.showDialog(\n        defineAsyncComponent(() => import("../application/modelVersionDialog.vue")),\n        { closable: true, title: "Change Version", width: "1080px", maxHeight: "500px", overflow: "auto" }, options\n    );\n}\n\n\nfunction moduleVersionDialog(item: ITableData) {\n    dialog.showDialog(\n        defineAsyncComponent(() => import("../application/moduleVersionDialog.vue")),\n        { closable: true, title: "Change Version", width: "1080px", maxHeight: "500px", overflow: "auto" },\n        {\n            module: { ID: item.id }, versions: importedModuleVersions.value?.get(item.id), cb: (moduleVersion: IModuleVersion) => {\n                item.version = moduleVersion.version;\n                item.children?.forEach(child => {\n                    const modulesModel = moduleVersion.relatedModelHistories.find(e => e.modelID == child.id)\n                    child.version = modulesModel?.version\n                    updateDependencyMap(modulesModel?.version!, child);\n                })\n            }\n        }\n    );\n}\n\nfunction close() {\n    emit("close");\n}\nfunction getItem(item: ITableData) {\n    emit("getItem", item);\n}\n\nfunction cloudTargetMap(name: string, pureVal: boolean = false) {\n    const map: Record<keyof IOrganizationCloud, string> = { azure: "Public Cloud", plateauGCP: "Plateau Platform Playground" };\n    if (pureVal) {\n        return Object.keys(map).find(e => {\n            if (map[e as keyof IOrganizationCloud] === name) {\n                return true;\n            }\n        })\n    } else {\n        let key = Object.keys(map).includes(name);\n        if (!key)\n            return;\n        return map[name as keyof IOrganizationCloud];\n    }\n}\n\nfunction onTargetSelect(value: string) {\n    selectedTarget.value = value\n}\n\nconst isModuleImported = (item: IModule) => {\n    return objectUseCase.isModuleImported(item);\n}\n\n<\/script>\n\n\n<style scoped>\n.container {\n    padding: 32px 20px 20px;\n}\n\n.settings-container {\n    position: relative;\n    top: 0px;\n    left: 0px;\n}\n\n.custom-text {\n    /* position: absolute; */\n    font-family: \'Roboto\';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 15px;\n    line-height: 18px;\n    /* left: 24px; */\n    color: #212121;\n}\n\n/* .custom-text.title{\n    top: 92px;\n}\n\n.custom-text.environment{\n    top: 174px;\n} */\n\n.radio-button {\n    position: absolute;\n    top: 60px;\n    left: 20px;\n    cursor: pointer;\n}\n\n.radio-text {\n    position: absolute;\n    top: 59px;\n    font: normal normal normal 14px/19px Roboto;\n    color: #212121;\n    user-select: none;\n    cursor: pointer;\n}\n\n.existing-app-url {\n    position: absolute;\n    width: 100%;\n    height: 40px;\n    top: 114px;\n    left: 20px;\n    background: #ffffff 0% 0% no-repeat padding-box;\n    border: 1px solid #bcbcbc;\n    border-radius: 4px;\n    font: normal normal normal 14px/19px Roboto;\n    letter-spacing: 0px;\n    padding: 10px 0px 10px 10px;\n}\n\n.url-error {\n    border: 1px solid red;\n}\n\n.url-disable {\n    opacity: 0.5;\n}\n\n.existing-app-url::placeholder {\n    color: #bcbcbc;\n    user-select: none;\n}\n\n.modules-selected-checkbox {\n    cursor: pointer;\n}\n\n.modules-selected-text {\n    font: normal normal normal 14px/19px Roboto;\n    color: #757575;\n    margin: 0 0 13px 30px;\n    ;\n}\n\n/* .modules-selected-text.deploy {\n    top: 257px;\n} */\n\n.text-number {\n    font: normal normal bold 14px/19px Roboto;\n    color: #212121;\n}\n\n.modules-datatable {\n    width: 100%;\n}\n\n/* .modules-datatable.deploy {\n    top: 286px;\n} */\n\n.modules-datatable::-webkit-scrollbar {\n    width: 4px;\n}\n\n.modules-datatable::-webkit-scrollbar-thumb {\n    background: #bcbcbc 0% 0% no-repeat padding-box;\n    border-radius: 10px;\n}\n\n.modules-datatable::-webkit-scrollbar-thumb:hover {\n    background: #555;\n}\n\n.row-container {\n    width: 100%;\n    height: 36px;\n    position: relative;\n    background: #ffffff 0% 0% no-repeat padding-box;\n    border: 1px solid #e0e0e0;\n}\n\n.chevron {\n    position: absolute;\n    left: 4px;\n    color: #757575;\n    font-size: 24px;\n}\n\n.chevron.disabled {\n    pointer-events: none;\n    color: #D5D5D5;\n}\n\n.module-checkbox {\n    position: absolute;\n    top: 10px;\n    left: 43px;\n    cursor: pointer;\n}\n\n.module-name {\n    position: absolute;\n    top: 9px;\n    left: 69px;\n    font: normal normal normal 14px/19px Roboto;\n    color: #212121;\n}\n\n.module-name.imported {\n    top: 10px;\n    left: 87px;\n}\n\n.module-name.disabled {\n    color: #D5D5D5;\n}\n\n.model-checkbox {\n    position: absolute;\n    top: 10px;\n    left: 59px;\n    cursor: pointer;\n}\n\n.model-icon {\n    position: absolute;\n    width: 16px;\n    height: 16px;\n    top: 6px;\n    left: 85px;\n}\n\n.app-tier-model-icon {\n    position: absolute;\n    width: 16px;\n    height: 16px;\n    top: 6px;\n    left: 69px\n}\n\n.app-tier-model-name {\n    position: absolute;\n    top: 10px;\n    left: 87px;\n    font: normal normal normal 14px/19px Roboto;\n    color: #212121;\n}\n\n.app-tier-model-name.disabled {\n    color: #D5D5D5;\n}\n\n.model-name {\n    position: absolute;\n    top: 9px;\n    left: 103px;\n    font: normal normal normal 14px/19px Roboto;\n    color: #212121;\n}\n\n.model-name.disabled {\n    color: #D5D5D5;\n}\n\n.version-text {\n    margin: 10px 7px 10px auto;\n    display: table;\n    font: normal normal normal 12px/16px Roboto;\n    color: #757575;\n    cursor: pointer;\n    user-select: none;\n}\n\n.version-text.disabled {\n    pointer-events: none;\n    cursor: pointer;\n}\n\n.version-icon {\n    font: normal normal normal 16px/19px Material Design Icons;\n    color: #D5D5D5;\n}\n\n.version-icon.disabled {\n    font: normal normal normal 16px/19px Material Design Icons;\n    color: #EEEEEE;\n    pointer-events: none;\n    cursor: pointer;\n}\n\n.footer {\n    position: relative;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: end;\n}\n\n.footer.deploy {\n    position: relative;\n    width: 100%;\n}\n\n.footer.export {\n    margin: 50px 0 24px;\n}\n\n.cancel-button {\n    border-radius: 4px;\n    user-select: none;\n    font-style: normal;\n    font-weight: 500;\n    font-family: "ROBOTO";\n    font-size: 15px;\n    color: #757575;\n    padding: 10px 16px;\n    cursor: pointer;\n}\n\n\n\n.save-button {\n    background: #151233 0% 0% no-repeat padding-box;\n    border-radius: 4px;\n    user-select: none;\n    font-weight: 500;\n    font-size: 15px;\n    color: #ffffff;\n    padding: 10px 16px;\n    cursor: pointer;\n}\n\n.mobile-publish-text,\n.web-publish-text {\n    padding: 5px 12px;\n    margin-bottom: 52px;\n    width: 100%;\n    color: #757575;\n    font-size: 14px;\n    background: #F5F5FA;\n    border-radius: 4px;\n    display: flex;\n    align-items: center;\n}\n\n.mobile-publish-text i,\n.web-publish-text i {\n    font-size: 24px;\n    color: #151233;\n    margin-right: 4px;\n}\n\n.save-button.deploy {\n    padding: 10px 16px;\n}\n\n.button-disable .save-button {\n    color: #757575;\n    cursor: default;\n}\n\n.button-disable .save-button:hover+.button-tooltip,\n.start-screen:hover .button-tooltip,\n.row-container:hover .button-tooltip,\n.publish-info:hover .button-tooltip {\n    visibility: visible;\n    transition: opacity 0.3s ease-out 1s;\n    opacity: 1;\n}\n\n.button-tooltip {\n    visibility: hidden;\n    position: absolute;\n    background: #757575;\n    color: #FFFFFF;\n    font-size: 11px;\n    font-family: \'Roboto\';\n    text-align: center;\n    border-radius: 4px;\n    letter-spacing: 0.2px;\n    padding: 6px 8px 6px 8px;\n    top: 56px;\n    left: 63px;\n    opacity: 0;\n}\n\n.publish-info {\n    color: #757575;\n    font-size: 20px;\n    margin-left: 10px;\n}\n\n.select-environment {\n    width: 100%;\n    font-size: 15px;\n    height: 40px;\n    line-height: 40px;\n    margin-top: 4px\n}\n</style>\n\n<style>\n.selected-environment {\n    background-color: transparent;\n    border-radius: 4px;\n    border: 1px solid #BCBCBC;\n    color: #212121;\n    padding-left: 12px;\n}\n\n.custom-placeholder:empty:before {\n    color: #BCBCBC !important;\n    font-weight: 400;\n}\n\n.custom-select .items .option {\n    font-size: 14px;\n    padding-left: 12px;\n    line-height: 32px;\n}\n\n.custom-select .items .option:hover {\n    background-color: #EEEEEE;\n    color: #212121;\n}\n\n.custom-select .items .option.disabled:hover {\n    background-color: #FFFFFF;\n    color: #212121;\n}\n\n.custom-select.select-environment .items {\n    margin-top: 4px;\n    color: #212121;\n    border-radius: 4px;\n    border: 1px solid #E3E3E3;\n    overflow: hidden;\n    background-color: #FFFFFF;\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\n    position: static !important;\n}\n</style>\n'],sourceRoot:""}]);const l=a},4990:(e,n,t)=>{t.d(n,{Z:()=>l});var o=t(34663),i=t.n(o),s=t(7638),a=t.n(s)()(i());a.push([e.id,'\n*[data-v-b7f0cb6e] {\n        font-family: "Roboto";\n}\n.container[data-v-b7f0cb6e] {\n        width: 100%;\n        height: 100%;\n        max-width: 100%;\n        display: flex;\n        flex-direction: column;\n}\n.app-version-type label[data-v-b7f0cb6e] {\n        font-weight: 500;\n        font-size: 16px;\n        line-height: 24px;\n        color: #151233;\n        margin-bottom: 4px;\n}\n.select-app-version-type[data-v-b7f0cb6e] {\n        width: 100%;\n        font-size: 15px;\n        height: 40px;\n        line-height: 40px;\n        border: 1px solid #BCBCBC;\n        border-radius: 4px;\n        padding: 0px 12px;\n}\n.buttons-div[data-v-b7f0cb6e] {\n        display: flex;\n        justify-content: end;\n        margin-top: 60px;\n}\n.cancel-button[data-v-b7f0cb6e] {\n        font-weight: 500;\n        font-size: 16px;\n        text-align: center;\n        color: #757575;\n        display: flex;\n        align-items: center;\n        padding: 8px 16px;\n        border-radius: 4px;\n        margin-right: 4px;\n        border: none;\n        background: transparent;\n}\n.create-button[data-v-b7f0cb6e] {\n        font-weight: 500;\n        font-size: 16px;\n        text-align: center;\n        color: #FFFFFF;\n        background: #151233;\n        display: flex;\n        align-items: center;\n        padding: 8px 16px;\n        border-radius: 4px;\n        border: none;\n}\n.create-button[data-v-b7f0cb6e]:disabled {\n        color: #757575;\n}\n.title[data-v-b7f0cb6e] {\n        font-style: normal;\n        font-weight: 500;\n        font-size: 20px;\n        line-height: 23px;\n        white-space: nowrap;\n        color: #151233;\n        margin-top: 40px;\n        margin-bottom: 8px;\n}\n.page-desc[data-v-b7f0cb6e] {\n        font-size: 16px;\n        color: #616161;\n        margin-bottom: 32px;\n}\n',"",{version:3,sources:["webpack://./src/presentation/vue3/components/application/createAppVersion.vue"],names:[],mappings:";AA8GI;QACI,qBAAqB;AACzB;AACA;QACI,WAAW;QACX,YAAY;QACZ,eAAe;QACf,aAAa;QACb,sBAAsB;AAC1B;AAEA;QACI,gBAAgB;QAChB,eAAe;QACf,iBAAiB;QACjB,cAAc;QACd,kBAAkB;AACtB;AACA;QACI,WAAW;QACX,eAAe;QACf,YAAY;QACZ,iBAAiB;QACjB,yBAAyB;QACzB,kBAAkB;QAClB,iBAAiB;AACrB;AACA;QACI,aAAa;QACb,oBAAoB;QACpB,gBAAgB;AACpB;AACA;QACI,gBAAgB;QAChB,eAAe;QACf,kBAAkB;QAClB,cAAc;QACd,aAAa;QACb,mBAAmB;QACnB,iBAAiB;QACjB,kBAAkB;QAClB,iBAAiB;QACjB,YAAY;QACZ,uBAAuB;AAC3B;AACA;QACI,gBAAgB;QAChB,eAAe;QACf,kBAAkB;QAClB,cAAc;QACd,mBAAmB;QACnB,aAAa;QACb,mBAAmB;QACnB,iBAAiB;QACjB,kBAAkB;QAClB,YAAY;AAChB;AACA;QACI,cAAc;AAClB;AACA;QACI,kBAAkB;QAClB,gBAAgB;QAChB,eAAe;QACf,iBAAiB;QACjB,mBAAmB;QACnB,cAAc;QACd,gBAAgB;QAChB,kBAAkB;AACtB;AACA;QACI,eAAe;QACf,cAAc;QACd,mBAAmB;AACvB",sourcesContent:['<script setup lang="ts">\n    import { computed, ref } from "vue";\n    import { IApplication } from "../../../../domain/model/models";\n    import { IIDEInputDefinitions } from "../../../../domain/presentation/IIDEInputDefinitions";\n    import IDEInput from "../../components/application/IDEInput.vue";\n    import CustomSelect from "../customSelect.vue"\n    import AppItemsTable from "./appItemsTable.vue"\n    import { ITableData } from "../../../../../../common/qCloudTemp/exporter";\n    import { container } from "../../../../domain/core/diContainer";\n    import { IUseCaseExecutor } from "../../../../domain/useCase/IUseCaseExecutor";\n    import { IApplicationVersionUseCase, VersionIncType } from "../../../../domain/useCase/IApplicationVersionUseCase";\n    import { IReleaseApplicationRequest } from "../../../../../../common/qCloudTemp/symDtoObjects";\n\n    interface IAppVersionModel {\n        modelID: string;\n        version: string;\n        modelName: string;\n        path: string;\n        ownerType?: "module" | "application";\n        ownerName?: string;\n    }\n    interface ICreateAppVersionProp {\n        app?: IApplication;\n        showTitleAndDesc?: boolean;\n        openedInDialog?: boolean;\n    }\n    const props = defineProps<ICreateAppVersionProp>();\n    const executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\n    const applicationVersionUseCase = container.resolve<IApplicationVersionUseCase>(IApplicationVersionUseCase);\n\n    const releaseTypeOptions = ref([`Major Version (v${getLastRelasedVersion("Major")})`, `Minor Version (v${getLastRelasedVersion("Minor")})`, `Fix Version (v${getLastRelasedVersion("Fix")})`]);\n    const releaseType = ref<VersionIncType>();\n    const isDescriptionValid = ref<boolean>(true);\n    const description = ref("");\n    const appModels = ref<Array<IAppVersionModel>>([]);\n    const emit = defineEmits(["close", "hideLeftNav", "showLeftNav"]);\n    const buttonDisableCond = computed(() => !releaseType.value)\n    const title = ref("New App Version");\n    const pageDesc = ref("You can create a new version of your application.");\n    emit("hideLeftNav");\n    const validations = ref<Record<"description", IIDEInputDefinitions["validations"]>>({\n        description: { minAndMaxLength: { min: 3, max: 100 }, availableCharacters: false, nonSpaceCharacter: false },\n    });\n    function close() {\n        emit(\'close\');\n        emit("showLeftNav");\n    }\n    function setReleaseType(type: VersionIncType) {\n        releaseType.value = (type.split(" ")[0] as VersionIncType);\n    }\n    function descriptionValidationStatus(isValid: boolean) {\n        isDescriptionValid.value = isValid\n\n    }\n    function setDescValue(desc: string) {\n        description.value = desc\n    }\n    function getItems(item: ITableData) {\n        const model: IAppVersionModel = {\n            modelID: item.id,\n            version: item.version ?? "latest",\n            modelName: item.name,\n            path: item.path ?? "/",\n            ownerType: item.ownerType ?? "application",\n            ownerName: item.ownerName ?? "",\n        }\n        item.checked ? appModels.value?.push(model) : appModels.value = appModels.value?.filter(model => model.modelID != item.id);\n    }\n    function createNewAppVersion() {\n        let request: IReleaseApplicationRequest = {    \n            appID: props.app!.ID,\n            appVersionIncType: releaseType.value!,\n            models: appModels.value,\n            shortComment: description.value,\n        }\n        executor.execute(async () => {\n            await applicationVersionUseCase.releaseApplication(request);\n            close();\n        }, {loading: true})\n    }\n    function getLastRelasedVersion(incType: string) {\n        const [major, minor, fix] = props.app?.lastReleasedVersion ? props.app?.lastReleasedVersion.split(".").map(Number) : [0,0,0]\n        switch (incType) {\n            case \'Major\':\n                return `${major + 1}.0.0`;\n            case \'Minor\':\n                return `${major}.${minor + 1}.0`;\n            case \'Fix\':\n                return `${major}.${minor}.${fix + 1}`;\n            default: return;\n        }\n    }\n<\/script>\n<template>\n    <div class="container" :style="{padding: openedInDialog ? \'20px\' : \'0\'}">\n        <div v-if="showTitleAndDesc" class="title">{{ title }}</div>\n        <div v-if="showTitleAndDesc" class="page-desc">{{ pageDesc }}</div>\n        <div class="app-version-type">\n            <label>Type</label>\n            <CustomSelect class="select-app-version-type" :options="releaseTypeOptions" :placeholder="\'Select Release Type\'"  :selectedClass="\'selected-type\'" @input="setReleaseType"></CustomSelect>\n        </div>\n        <div style="margin: 24px 0 ">\n            <IDEInput :isRequired="false" elementId="descriptionInput" @validateStatus="descriptionValidationStatus" placeholder="" \n                :type="\'textarea\'" :value="description"   info-text="Description" :validations="validations.description" @getValue="setDescValue" />\n        </div>\n        <AppItemsTable :screenType = "\'Create\'" :buttonCb="createNewAppVersion" @getItem="getItems" :platformSelection="{web: true, mobile: true}" @close="close" :buttonDisableCond="buttonDisableCond" :openedInDialog="openedInDialog"></AppItemsTable>\n    </div>\n</template>\n\n<style scoped>\n    * {\n        font-family: "Roboto";\n    }\n    .container {\n        width: 100%;\n        height: 100%;\n        max-width: 100%;\n        display: flex;\n        flex-direction: column;\n    }\n\n    .app-version-type label {\n        font-weight: 500;\n        font-size: 16px;\n        line-height: 24px;\n        color: #151233;\n        margin-bottom: 4px;\n    }\n    .select-app-version-type {\n        width: 100%;\n        font-size: 15px;\n        height: 40px;\n        line-height: 40px;\n        border: 1px solid #BCBCBC;\n        border-radius: 4px;\n        padding: 0px 12px;\n    }\n    .buttons-div {\n        display: flex;\n        justify-content: end;\n        margin-top: 60px;\n    }\n    .cancel-button {\n        font-weight: 500;\n        font-size: 16px;\n        text-align: center;\n        color: #757575;\n        display: flex;\n        align-items: center;\n        padding: 8px 16px;\n        border-radius: 4px;\n        margin-right: 4px;\n        border: none;\n        background: transparent;\n    }\n    .create-button {\n        font-weight: 500;\n        font-size: 16px;\n        text-align: center;\n        color: #FFFFFF;\n        background: #151233;\n        display: flex;\n        align-items: center;\n        padding: 8px 16px;\n        border-radius: 4px;\n        border: none;\n    }\n    .create-button:disabled {\n        color: #757575;\n    }\n    .title {\n        font-style: normal;\n        font-weight: 500;\n        font-size: 20px;\n        line-height: 23px;\n        white-space: nowrap;\n        color: #151233;\n        margin-top: 40px;\n        margin-bottom: 8px;\n    }\n    .page-desc {\n        font-size: 16px;\n        color: #616161;\n        margin-bottom: 32px;\n    }\n</style>\n<style>\n    .selected-type {\n        background-color: transparent;\n        color: #212121;\n        height: 40px;\n    }\n    .custom-select .items {\n        color: #212121;\n        border-radius: 8px;\n        border: 1px solid #E3E3E3;\n        overflow: hidden;\n        background-color: #FFFFFF;\n        box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\n        /* margin-top: 40px; */\n    }\n    .custom-select .items .option {\n        font-size: 14px;\n        padding-left: 12px;\n    }\n    .custom-select .items .option:hover {\n        background-color: #EEEEEE;\n        color: #212121;\n    }\n    .select-release-type i {\n        font-size: 16px;\n        color: #BCBCBC;\n    }\n    .custom-placeholder:empty:before {\n        color: #BCBCBC !important;\n        font-weight: 400;\n    }\n    .custom-select.select-release-type .items {\n        position: static !important;\n    }\n</style>'],sourceRoot:""}]);const l=a},84010:(e,n,t)=>{t.d(n,{Z:()=>l});var o=t(34663),i=t.n(o),s=t(7638),a=t.n(s)()(i());a.push([e.id,"\n.selected-type {\n        background-color: transparent;\n        color: #212121;\n        height: 40px;\n}\n.custom-select .items {\n        color: #212121;\n        border-radius: 8px;\n        border: 1px solid #E3E3E3;\n        overflow: hidden;\n        background-color: #FFFFFF;\n        box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\n        /* margin-top: 40px; */\n}\n.custom-select .items .option {\n        font-size: 14px;\n        padding-left: 12px;\n}\n.custom-select .items .option:hover {\n        background-color: #EEEEEE;\n        color: #212121;\n}\n.select-release-type i {\n        font-size: 16px;\n        color: #BCBCBC;\n}\n.custom-placeholder:empty:before {\n        color: #BCBCBC !important;\n        font-weight: 400;\n}\n.custom-select.select-release-type .items {\n        position: static !important;\n}\n","",{version:3,sources:["webpack://./src/presentation/vue3/components/application/createAppVersion.vue"],names:[],mappings:";AA2LI;QACI,6BAA6B;QAC7B,cAAc;QACd,YAAY;AAChB;AACA;QACI,cAAc;QACd,kBAAkB;QAClB,yBAAyB;QACzB,gBAAgB;QAChB,yBAAyB;QACzB,0CAA0C;QAC1C,sBAAsB;AAC1B;AACA;QACI,eAAe;QACf,kBAAkB;AACtB;AACA;QACI,yBAAyB;QACzB,cAAc;AAClB;AACA;QACI,eAAe;QACf,cAAc;AAClB;AACA;QACI,yBAAyB;QACzB,gBAAgB;AACpB;AACA;QACI,2BAA2B;AAC/B",sourcesContent:['<script setup lang="ts">\n    import { computed, ref } from "vue";\n    import { IApplication } from "../../../../domain/model/models";\n    import { IIDEInputDefinitions } from "../../../../domain/presentation/IIDEInputDefinitions";\n    import IDEInput from "../../components/application/IDEInput.vue";\n    import CustomSelect from "../customSelect.vue"\n    import AppItemsTable from "./appItemsTable.vue"\n    import { ITableData } from "../../../../../../common/qCloudTemp/exporter";\n    import { container } from "../../../../domain/core/diContainer";\n    import { IUseCaseExecutor } from "../../../../domain/useCase/IUseCaseExecutor";\n    import { IApplicationVersionUseCase, VersionIncType } from "../../../../domain/useCase/IApplicationVersionUseCase";\n    import { IReleaseApplicationRequest } from "../../../../../../common/qCloudTemp/symDtoObjects";\n\n    interface IAppVersionModel {\n        modelID: string;\n        version: string;\n        modelName: string;\n        path: string;\n        ownerType?: "module" | "application";\n        ownerName?: string;\n    }\n    interface ICreateAppVersionProp {\n        app?: IApplication;\n        showTitleAndDesc?: boolean;\n        openedInDialog?: boolean;\n    }\n    const props = defineProps<ICreateAppVersionProp>();\n    const executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\n    const applicationVersionUseCase = container.resolve<IApplicationVersionUseCase>(IApplicationVersionUseCase);\n\n    const releaseTypeOptions = ref([`Major Version (v${getLastRelasedVersion("Major")})`, `Minor Version (v${getLastRelasedVersion("Minor")})`, `Fix Version (v${getLastRelasedVersion("Fix")})`]);\n    const releaseType = ref<VersionIncType>();\n    const isDescriptionValid = ref<boolean>(true);\n    const description = ref("");\n    const appModels = ref<Array<IAppVersionModel>>([]);\n    const emit = defineEmits(["close", "hideLeftNav", "showLeftNav"]);\n    const buttonDisableCond = computed(() => !releaseType.value)\n    const title = ref("New App Version");\n    const pageDesc = ref("You can create a new version of your application.");\n    emit("hideLeftNav");\n    const validations = ref<Record<"description", IIDEInputDefinitions["validations"]>>({\n        description: { minAndMaxLength: { min: 3, max: 100 }, availableCharacters: false, nonSpaceCharacter: false },\n    });\n    function close() {\n        emit(\'close\');\n        emit("showLeftNav");\n    }\n    function setReleaseType(type: VersionIncType) {\n        releaseType.value = (type.split(" ")[0] as VersionIncType);\n    }\n    function descriptionValidationStatus(isValid: boolean) {\n        isDescriptionValid.value = isValid\n\n    }\n    function setDescValue(desc: string) {\n        description.value = desc\n    }\n    function getItems(item: ITableData) {\n        const model: IAppVersionModel = {\n            modelID: item.id,\n            version: item.version ?? "latest",\n            modelName: item.name,\n            path: item.path ?? "/",\n            ownerType: item.ownerType ?? "application",\n            ownerName: item.ownerName ?? "",\n        }\n        item.checked ? appModels.value?.push(model) : appModels.value = appModels.value?.filter(model => model.modelID != item.id);\n    }\n    function createNewAppVersion() {\n        let request: IReleaseApplicationRequest = {    \n            appID: props.app!.ID,\n            appVersionIncType: releaseType.value!,\n            models: appModels.value,\n            shortComment: description.value,\n        }\n        executor.execute(async () => {\n            await applicationVersionUseCase.releaseApplication(request);\n            close();\n        }, {loading: true})\n    }\n    function getLastRelasedVersion(incType: string) {\n        const [major, minor, fix] = props.app?.lastReleasedVersion ? props.app?.lastReleasedVersion.split(".").map(Number) : [0,0,0]\n        switch (incType) {\n            case \'Major\':\n                return `${major + 1}.0.0`;\n            case \'Minor\':\n                return `${major}.${minor + 1}.0`;\n            case \'Fix\':\n                return `${major}.${minor}.${fix + 1}`;\n            default: return;\n        }\n    }\n<\/script>\n<template>\n    <div class="container" :style="{padding: openedInDialog ? \'20px\' : \'0\'}">\n        <div v-if="showTitleAndDesc" class="title">{{ title }}</div>\n        <div v-if="showTitleAndDesc" class="page-desc">{{ pageDesc }}</div>\n        <div class="app-version-type">\n            <label>Type</label>\n            <CustomSelect class="select-app-version-type" :options="releaseTypeOptions" :placeholder="\'Select Release Type\'"  :selectedClass="\'selected-type\'" @input="setReleaseType"></CustomSelect>\n        </div>\n        <div style="margin: 24px 0 ">\n            <IDEInput :isRequired="false" elementId="descriptionInput" @validateStatus="descriptionValidationStatus" placeholder="" \n                :type="\'textarea\'" :value="description"   info-text="Description" :validations="validations.description" @getValue="setDescValue" />\n        </div>\n        <AppItemsTable :screenType = "\'Create\'" :buttonCb="createNewAppVersion" @getItem="getItems" :platformSelection="{web: true, mobile: true}" @close="close" :buttonDisableCond="buttonDisableCond" :openedInDialog="openedInDialog"></AppItemsTable>\n    </div>\n</template>\n\n<style scoped>\n    * {\n        font-family: "Roboto";\n    }\n    .container {\n        width: 100%;\n        height: 100%;\n        max-width: 100%;\n        display: flex;\n        flex-direction: column;\n    }\n\n    .app-version-type label {\n        font-weight: 500;\n        font-size: 16px;\n        line-height: 24px;\n        color: #151233;\n        margin-bottom: 4px;\n    }\n    .select-app-version-type {\n        width: 100%;\n        font-size: 15px;\n        height: 40px;\n        line-height: 40px;\n        border: 1px solid #BCBCBC;\n        border-radius: 4px;\n        padding: 0px 12px;\n    }\n    .buttons-div {\n        display: flex;\n        justify-content: end;\n        margin-top: 60px;\n    }\n    .cancel-button {\n        font-weight: 500;\n        font-size: 16px;\n        text-align: center;\n        color: #757575;\n        display: flex;\n        align-items: center;\n        padding: 8px 16px;\n        border-radius: 4px;\n        margin-right: 4px;\n        border: none;\n        background: transparent;\n    }\n    .create-button {\n        font-weight: 500;\n        font-size: 16px;\n        text-align: center;\n        color: #FFFFFF;\n        background: #151233;\n        display: flex;\n        align-items: center;\n        padding: 8px 16px;\n        border-radius: 4px;\n        border: none;\n    }\n    .create-button:disabled {\n        color: #757575;\n    }\n    .title {\n        font-style: normal;\n        font-weight: 500;\n        font-size: 20px;\n        line-height: 23px;\n        white-space: nowrap;\n        color: #151233;\n        margin-top: 40px;\n        margin-bottom: 8px;\n    }\n    .page-desc {\n        font-size: 16px;\n        color: #616161;\n        margin-bottom: 32px;\n    }\n</style>\n<style>\n    .selected-type {\n        background-color: transparent;\n        color: #212121;\n        height: 40px;\n    }\n    .custom-select .items {\n        color: #212121;\n        border-radius: 8px;\n        border: 1px solid #E3E3E3;\n        overflow: hidden;\n        background-color: #FFFFFF;\n        box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\n        /* margin-top: 40px; */\n    }\n    .custom-select .items .option {\n        font-size: 14px;\n        padding-left: 12px;\n    }\n    .custom-select .items .option:hover {\n        background-color: #EEEEEE;\n        color: #212121;\n    }\n    .select-release-type i {\n        font-size: 16px;\n        color: #BCBCBC;\n    }\n    .custom-placeholder:empty:before {\n        color: #BCBCBC !important;\n        font-weight: 400;\n    }\n    .custom-select.select-release-type .items {\n        position: static !important;\n    }\n</style>'],sourceRoot:""}]);const l=a},74839:(e,n,t)=>{t.r(n),t.d(n,{default:()=>de});var o=t(71093),i=t(66190),s=t(73843),a=t(15428),l=t(19496),r=t(30647),d=t(46233),p=t(5627),c=t(91056),m=t(62376),u=t(17379),A=t(83487),h=t(88613),f=t(54848),v=t(22566),b=t(74137),I=t(29307),C=t(3329),x=t(29633);const g={style:{display:"flex","flex-direction":"column",flex:"1"}},y={class:"text-number"},D={class:"text-number"},k=["id"],B={key:0,style:{"margin-bottom":"102px"}},M=(0,o.uE)('<div style="display:flex;align-items:center;" data-v-1f80a771><span class="custom-text environment" data-v-1f80a771> Publish To </span><span class="publish-info" data-v-1f80a771><i class="mdi mdi-information" data-v-1f80a771></i><span class="button-tooltip" style="top:460px;left:96px;z-index:1;width:231px;" data-v-1f80a771>Publish To options may change depending on the module type you choose.</span></span></div>',1),w={class:"save-button deploy"},T={key:0,class:"button-tooltip",style:{top:"-46px",left:"652px","z-index":"1",width:"120px"}},E={key:1,class:"button-tooltip",style:{top:"-46px",left:"644px","z-index":"1",width:"123px"}},V={key:2,class:"button-tooltip",style:{top:"-95px",left:"644px","z-index":"1",width:"135px"}},S={key:3,class:"button-tooltip",style:{top:"-95px",left:"644px","z-index":"1",width:"135px"}},F=(0,o.aZ)({__name:"appItemsTable",props:{screenType:null,platformSelection:null,buttonCb:{type:Function},buttonDisableCond:{type:Boolean},openedInDialog:{type:Boolean}},emits:["close","getItem"],setup(e,{emit:n}){const a=e,F=p.nC.resolve(h.J),U=p.nC.resolve(f.B),z=p.nC.resolve(c.u),P=p.nC.resolve(A.y),R=p.nC.resolve(I.w),O=p.nC.resolve(x._),L=(0,s.iH)([]),j=(0,s.iH)(!0),Q=(0,s.iH)(""),N=(0,s.iH)(),H=(0,s.iH)(),q=(0,s.iH)(),$=(0,s.iH)(),Y=(0,s.iH)(),Z=(0,s.iH)(),W=(0,s.iH)(""),_=((0,o.Fl)((()=>F.apps.find((e=>e.ID==F.studio.appId)))),{Export:"DOWNLOAD",Deploy:"PUBLISH",Release:"RELEASE",Create:"CREATE",Save:"SAVE",Update:"UPDATE"});(0,o.bv)((async()=>{await P.execute((async()=>{await Promise.all([P.executeUseCase(m.q,{}).then((e=>q.value=e)),P.executeUseCase(u.y,{}).then((e=>$.value=e))]),function(){const e=new Map,n=new Map;U.flatMapItems(F.studio.items,(e=>{var t,o,i,s;if("model"!=e.objectType)return;let a;if("module"==e.owner.objectType&&De(e.owner)){const n=null===(t=$.value)||void 0===t?void 0:t.get(e.owner.ID),i=null===(o=e.owner.relatedApplications.find((e=>e.applicationID==F.studio.appId)))||void 0===o?void 0:o.importedVersion,s=null==n?void 0:n.filter((e=>e.version==i)).flatMap((e=>e.relatedModelHistories)).find((n=>n.modelID==e.ID));a=null==s?void 0:s.version}else{const t=ce(e);if(!t)return n.set(e.ID,e.dependentModels?e.dependentModels.map((e=>e.modelId)):Array());a=t}const l=null===(s=null===(i=q.value)||void 0===i?void 0:i.get(e.ID))||void 0===s?void 0:s.find((e=>e.version==a));n.set(e.ID,(null==l?void 0:l.dependentModels)?null==l?void 0:l.dependentModels.map((e=>e.modelId)):Array())})),n.forEach(((t,o)=>{const i=Array();n.forEach(((e,n)=>{e.some((e=>e==o))&&i.push(n)})),e.set(o,{dependedBy:i,dependedTo:t})})),Z.value=e}(),function(){const e=F.studio.items.find((e=>"App Settings"==e.name)),n=ce(e),t=e&&{id:e.ID,name:e.name,checked:!0,disabled:!1,type:e.modelType,version:n||"latest"};e&&t&&pe({newItem:t});const o=r.CryptoHelper.CreateGuid(),i=F.studio.items.filter((e=>"model"==e.objectType&&"appSettings"==e.usageType)),s={id:o,collapsed:!0,name:"UI Settings",type:"module",imported:!1,checked:!0,children:[{}]};s&&pe({newItem:s}),s.children=i.map((e=>{const n=ce(e),t={id:e.ID,parent:s,name:e.name,type:e.modelType,checked:null!=n,usageType:null==e?void 0:e.usageType,disabled:!n,version:n,level:2};return pe({newItem:t}),t})),he(s,!1);const a=r.CryptoHelper.CreateGuid(),l=F.studio.items.filter((e=>"model"==e.objectType&&"appAssetList"==e.usageType)),d={id:a,collapsed:!0,name:"Styled Components",type:"module",imported:!1,anyChildChecked:!0,allChildChecked:!0,children:[{}]};d&&pe({newItem:d}),d.children=l.map((e=>{const n={id:e.ID,parent:d,name:e.name,type:e.modelType,checked:!0,usageType:null==e?void 0:e.usageType,level:2};return pe({newItem:n}),n})),he(d,!1);const p=R.cloneFileExplorerTreeView({displayFilterer:(e,n)=>{switch(e.ID){case C.oA.uiAssetListID:case C.oA.uiSettingsID:return!1}switch(e.objectType){case"application":return!1;case"module":case"model":return!0;case"folder":return n}}}),c=(e,n)=>{var t,o,i,s,a,l,r,d,p;const m=e.externalData;if("application"==m.objectType)throw new Error("unexpected item type");let u,A=O.getFullPath(m,"self").split("/").length-1;switch(m.objectType){case"folder":u={id:m.ID,name:m.name,type:"folder",collapsed:!0,level:A,children:null===(t=e.children)||void 0===t?void 0:t.map((e=>c(e,{ownerModule:n.ownerModule}))),path:m.path},null===(o=u.children)||void 0===o||o.forEach((e=>e.parent=u)),he(u,!1);break;case"model":if(n.ownerModule)if(u={id:m.ID,name:m.name,type:m.modelType,level:A},!n.ownerModule.isImportedModule||m.isUnmodifiable){const e=ce(m);u={...u,checked:!!e||m.isUnmodifiable,disabled:!e&&!m.isUnmodifiable,version:m.isUnmodifiable?"latest":e,ownerName:m.owner.name,ownerType:m.owner.objectType,path:m.path}}else{const e=null===(i=n.ownerModule.relatedModelHistories)||void 0===i?void 0:i.find((e=>e.modelID==m.ID));u={...u,checked:!0,disabled:!1,version:null==e?void 0:e.version,ownerName:m.owner.name,ownerType:m.owner.objectType,path:m.path}}else{const e=ce(m);u={id:m.ID,name:m.name,checked:!!e||m.isUnmodifiable,disabled:!e&&!m.isUnmodifiable,type:m.modelType,version:m.isUnmodifiable?"latest":e,level:A,path:m.path}}break;case"module":const h=De(m),f=null===(s=m.relatedApplications.find((e=>e.applicationID==F.studio.appId)))||void 0===s?void 0:s.importedVersion,v=h?null===(r=null===(l=null===(a=$.value)||void 0===a?void 0:a.get(m.ID))||void 0===l?void 0:l.find((e=>e.version==f)))||void 0===r?void 0:r.relatedModelHistories:void 0;u={id:m.ID,collapsed:!0,name:m.name,type:"module",imported:h,version:f,children:null===(d=e.children)||void 0===d?void 0:d.map((e=>c(e,{ownerModule:{isImportedModule:h,moduleVersion:f,relatedModelHistories:v}})))},null===(p=u.children)||void 0===p||p.forEach((e=>e.parent=u)),he(u,!1)}return u},m=p.map((e=>c(e,{}))),u=e=>{var n;pe({newItem:e}),null===(n=e.children)||void 0===n||n.forEach(u)};m.forEach(u)}(),"Deploy"==a.screenType&&fe(),j.value=ae(),L.value.forEach((e=>{var n;"module"!=e.type&&"folder"!=e.type&&"appAssetList"!=e.usageType?e.checked&&xe(e):null===(n=e.children)||void 0===n||n.forEach((e=>{e.checked&&xe(e)}))}))}),{loading:!0})}));const G=(0,o.Fl)((()=>L.value.filter((e=>"module"==e.type&&e.allChildChecked)).length)),X=(0,o.Fl)((()=>L.value.filter((e=>"module"==e.type&&!e.allChildChecked&&e.anyChildChecked)).length)),J=(0,o.Fl)((()=>L.value.filter((e=>"module"!=e.type&&e.checked)).length)),K=(0,o.Fl)((()=>L.value.length)),ee=(0,o.Fl)((()=>"Deploy"==a.screenType&&a.platformSelection.web&&""==Q.value||!j.value||!L.value.some((e=>e.checked||e.anyChildChecked))||!re()||!le()||a.buttonDisableCond)),ne=(0,o.Fl)((()=>L.value.length==G.value||!(X.value+J.value>0)&&void 0)),te=(0,o.Fl)((()=>function(){let e=!1;return L.value.forEach((n=>{var t;"module"==n.type?null===(t=n.children)||void 0===t||t.forEach((n=>{n.version&&(e=!0)})):n.version&&(e=!0)})),e}())),oe=(0,o.Fl)(le),ie=(0,o.Fl)(re),se=(0,s.iH)("module-container-div"+(a.openedInDialog?"-dialog":""));function ae(){let e=!0;const n=L.value.filter((e=>"module"==e.type&&e.anyChildChecked)),t=L.value.filter((e=>"qjson"==e.type&&e.checked));return Y.value=F.studio.items.find((e=>{var n;return null===(n=e.additionals)||void 0===n?void 0:n.isRootPage})),!!Y.value&&("Deploy"==a.screenType&&(n.length>0&&(e=n.map((e=>e.children)).filter((e=>!(null==e?void 0:e.find((e=>"entityDesigner"==e.type&&e.checked))))).length<=0),t.length>0&&(e=-1!=t.map((e=>F.studio.items.find((n=>n.ID==e.id)))).findIndex((e=>e.additionals.isRootPage)))),e)}function le(){var e,n;const t=new Map;L.value.forEach((e=>{"module"==e.type&&e.children&&e.children.length>0?e.children.forEach((e=>t.set(e.id,1==e.checked))):t.set(e.id,1==e.checked)}));const o=new Map;null===(e=Z.value)||void 0===e||e.forEach(((e,n)=>{t.get(n)&&e.dependedTo.forEach((e=>{if(!t.get(e))if(o.has(n)){const t=o.get(n);t.push(e),o.set(n,t)}else o.set(n,[e])}))}));const[i]=o.keys();if(i){const e=o.get(i),t=e?e.map(de).map((e=>null==e?void 0:e.name)).join(", "):"";W.value=`Select ${t} first. ${null===(n=de(i))||void 0===n?void 0:n.name} depends on ${t}.`}return 0==o.size}function re(){var e;return null===(e=L.value.find((e=>{var n;return e.id==(null===(n=Y.value)||void 0===n?void 0:n.ID)})))||void 0===e?void 0:e.checked}function de(e){for(const n of L.value){if("module"!=n.type&&n.id==e)return n;if("module"==n.type&&n.children&&n.children.length>0){const t=n.children.find((n=>n.id==e));if(t)return t}}}function pe({newItem:e}){!function(e){const n=(0,d.createApp)(v.Z,{handleItemCheckEvent:Ae,startScreen:Y,versionDialog:be,handleCollapse:me,item:e,moduleVersionDialog:Ie}),t=document.createElement("div");n.mount(t);const o=document.getElementById(se.value);null==o||o.appendChild(t)}(e),"module"!=e.type&&L.value.push(e)}function ce(e){var n;if(!(null===(n=q.value)||void 0===n?void 0:n.has(e.ID)))return;const t=q.value.get(e.ID);return t?(e=>{const n=e.map((e=>{const n=e.split(".");return 10*parseInt(n[0])+1*parseInt(n[1])}));n.sort(((e,n)=>n-e));const t=n[0];return`${Math.floor(t/10)}.${t%10}`})(t.map((e=>e.version))):void 0}function me(e,n,t){var o;e.collapsed=void 0!==t?t:!e.collapsed,n&&(null===(o=e.children)||void 0===o||o.forEach((t=>{document.getElementById(t.id).style.display=e.collapsed?"none":"block",me(t,n,e.collapsed)})))}function ue(e,n){var t,o;if(e.disabled||e.checked)return;e.checked=!0,e.parent&&he(e.parent,n);const i=null===(o=null===(t=Z.value)||void 0===t?void 0:t.get(e.id))||void 0===o?void 0:o.dependedTo;i&&i.forEach((e=>{L.value.forEach((t=>{var o;if("module"==t.type&&!t.allChildChecked){const i=null===(o=t.children)||void 0===o?void 0:o.find((n=>!n.checked&&n.id==e));return i&&ue(i,n),void he(t,n)}t.checked||t.id!=e||(ue(t,n),t.parent&&he(t.parent,n))}))}))}function Ae(e){e.disabled||function(e){var n,t;const o=null===(t=null===(n=Z.value)||void 0===n?void 0:n.get(e.id))||void 0===t?void 0:t.dependedBy;return!!o&&o.some((e=>L.value.some((n=>{var t;return"module"==n.type&&n.anyChildChecked?null===(t=n.children)||void 0===t?void 0:t.some((n=>n.checked&&n.id==e)):n.id==e&&n.checked}))))}(e)||"App Settings"==e.name||("module"!=e.type&&"folder"!=e.type?e.checked?(e.checked=!1,e.parent&&he(e.parent,!0)):ue(e,!0):e.children&&e.children.filter((e=>!e.disabled)).length>0?e.anyChildChecked?(e.children.filter((e=>!e.disabled)).forEach((e=>e.checked=!1)),e.checked=!1,he(e,!0)):(e.children.forEach((e=>ue(e,!0))),e.checked=!0):(e.checked=!e.checked,e.allChildChecked=!1),xe(e),j.value=ae(),"Deploy"==a.screenType&&fe())}function he(e,n){var t,o;e.disabled=e.children&&(0==e.children.length||!(null===(t=e.children)||void 0===t?void 0:t.some((e=>!e.disabled)))),e.allChildChecked=e.children&&e.children.length>0&&!e.children.some((e=>!e.checked||e.disabled)),e.anyChildChecked=null===(o=e.children)||void 0===o?void 0:o.some((e=>e.checked&&!e.disabled)),n&&e.parent&&he(e.parent,!0)}function fe(){var e,n,t,o;H.value=[],N.value=[];const i=null===(o=null===(t=null===(n=null===(e=F.user)||void 0===e?void 0:e.selectedOrganization)||void 0===n?void 0:n.actions)||void 0===t?void 0:t.publish)||void 0===o?void 0:o.targets;if(!i)return;if(!L.value.find((e=>e.anyChildChecked||e.checked))){H.value=Object.entries(i).map((e=>ge(e[0])));const e=Array();for(let n=0;n<H.value.length;n++)e.push({index:n,cause:"You need to include items to publish."});return void(N.value=e)}const s=function(e){const n=Array();return Object.keys(e).forEach((t=>{const o=t,i=e[o],s=ge(o);if(!i)return n.push({optionName:s,cause:"You are not authorized to publish to this target."});switch(o){case"azure":const e=(n,t)=>{if(!t||0==t.length)return n;for(const o of t)if((o.checked||o.anyChildChecked)&&("module"==o.type&&(n=e(n,o.children)),"entityDesigner"==o.type||"bpmn"==o.type||"process"==o.type)){n=!1;break}return n};if(!e(!0,L.value))return n.push({optionName:s,cause:"Entity and process models cannot be published to this target."});break;case"plateauGCP":const t=L.value.filter((e=>"UI Settings"!=e.name)).find((e=>{var n,t;return"module"==e.type&&e.anyChildChecked&&(null===(n=e.children)||void 0===n?void 0:n.some((e=>e.checked&&("bpmn"==e.type||"process"==e.type))))&&!(null===(t=e.children)||void 0===t?void 0:t.some((e=>"entityDesigner"==e.type&&e.checked)))}));if(t)return n.push({optionName:s,cause:`This target not available. Selected module '${t.name}' has not any Data Model.`})}n.push({optionName:s})})),n}(i),a=s.sort(((e,n)=>!e.cause==!n.cause?0:e.cause?1:-1)),l=Array();for(let e=0;e<a.length;e++){const n=a[e].cause;n&&l.push({index:e,cause:n})}N.value=l,H.value=a.map((e=>e.optionName)),Q.value=a[0].cause?"":a[0].optionName}function ve(e,n){var t,o,i,s,a,l;const r=null===(t=Z.value)||void 0===t?void 0:t.get(n.id);null===(o=Z.value)||void 0===o||o.set(n.id,{dependedBy:(null==r?void 0:r.dependedBy)||Array(),dependedTo:(null===(l=null===(a=null===(s=null===(i=q.value)||void 0===i?void 0:i.get(n.id))||void 0===s?void 0:s.find((n=>n.version==e)))||void 0===a?void 0:a.dependentModels)||void 0===l?void 0:l.map((e=>e.modelId)))||Array()})}function be(e){var n,i;const s={clickedNode:{id:e.id,state:{checked:e.checked},text:e.name,type:e.type,version:e.version},cb:n=>{e.version=n,ve(n,e)}};(null===(n=q.value)||void 0===n?void 0:n.has(e.id))&&(s.versions=null===(i=q.value)||void 0===i?void 0:i.get(e.id)),z.showDialog((0,o.RC)((()=>t.e(245).then(t.bind(t,60801)))),{closable:!0,title:"Change Version",width:"1080px",maxHeight:"500px",overflow:"auto"},s)}function Ie(e){var n;z.showDialog((0,o.RC)((()=>t.e(5872).then(t.bind(t,45872)))),{closable:!0,title:"Change Version",width:"1080px",maxHeight:"500px",overflow:"auto"},{module:{ID:e.id},versions:null===(n=$.value)||void 0===n?void 0:n.get(e.id),cb:n=>{var t;e.version=n.version,null===(t=e.children)||void 0===t||t.forEach((e=>{const t=n.relatedModelHistories.find((n=>n.modelID==e.id));e.version=null==t?void 0:t.version,ve(null==t?void 0:t.version,e)}))}})}function Ce(){n("close")}function xe(e){n("getItem",e)}function ge(e,n=!1){const t={azure:"Public Cloud",plateauGCP:"Plateau Platform Playground"};return n?Object.keys(t).find((n=>{if(t[n]===e)return!0})):Object.keys(t).includes(e)?t[e]:void 0}function ye(e){Q.value=e}const De=e=>O.isModuleImported(e);return(e,n)=>((0,o.wg)(),(0,o.iD)("div",g,[(0,o._)("div",null,[(0,o.Wm)(b.Z,{class:(0,i.normalizeClass)(["modules-selected-checkbox","Deploy"==a.screenType?"deploy":""]),minus:0==(0,s.SU)(ne),check:1==(0,s.SU)(ne),onClick:n[0]||(n[0]=e=>{return n=null==(0,s.SU)(ne),L.value.filter((e=>!e.disabled)).forEach((e=>{e.checked=n,null!=e.allChildChecked&&e.children&&e.children.length>0&&!e.children.some((e=>e.disabled))&&(e.allChildChecked=n),null!=e.anyChildChecked&&(e.anyChildChecked=n),e.children&&e.children.filter((e=>!e.disabled)).forEach((e=>e.checked=n))})),j.value=ae(),void("Deploy"==a.screenType&&fe());var n})},null,8,["class","minus","check"]),(0,o._)("div",{class:(0,i.normalizeClass)(["modules-selected-text","Deploy"==a.screenType?"deploy":""])},[(0,o._)("span",y,(0,i.toDisplayString)((0,s.SU)(G)+(0,s.SU)(X)+(0,s.SU)(J)),1),(0,o.Uk)(" of "),(0,o._)("span",D,(0,i.toDisplayString)((0,s.SU)(K)),1),(0,o.Uk)(" items selected ")],2)]),(0,o._)("div",{class:(0,i.normalizeClass)(["modules-datatable","Deploy"==a.screenType?"deploy":""]),id:se.value,style:(0,i.normalizeStyle)([a.openedInDialog?"max-height: 300px; overflow: auto":"flex: 1"])},null,14,k),"Deploy"==a.screenType?((0,o.wg)(),(0,o.iD)("div",B,[M,(0,o.Wm)(l.Z,{options:H.value,onInput:ye,selectedOption:Q.value,default:Q.value,disabledOptions:N.value,selectedClass:"selected-environment",placeholder:"Select the publish environment of your application",class:"select-environment"},null,8,["options","selectedOption","default","disabledOptions"])])):(0,o.kq)("v-if",!0),(0,o._)("div",{class:(0,i.normalizeClass)(["footer","Deploy"==a.screenType?"deploy":"export"])},[(0,o._)("div",{class:(0,i.normalizeClass)(["cancel-button","Deploy"==a.screenType?"deploy":""]),onClick:Ce},"Cancel",2),(0,o._)("div",{class:(0,i.normalizeClass)([(0,s.SU)(ee)?" button-disable":""]),onClick:n[1]||(n[1]=e=>!(0,s.SU)(ee)&&a.buttonCb())},[(0,o._)("span",w,(0,i.toDisplayString)(_[a.screenType]),1),(0,s.SU)(ie)?"Deploy"!=a.screenType||Q.value?(0,s.SU)(te)?(0,s.SU)(oe)?(0,o.kq)("v-if",!0):((0,o.wg)(),(0,o.iD)("span",S,(0,i.toDisplayString)(W.value),1)):((0,o.wg)(),(0,o.iD)("span",V,"There are no items ready to publish. At least one of your items must be ready to publish.")):((0,o.wg)(),(0,o.iD)("span",E,"You need to select a publish environment.")):((0,o.wg)(),(0,o.iD)("span",T,"You need to include your start screen."))],2)],2)]))}});var U=t(17450),z=t.n(U),P=t(29530),R=t.n(P),O=t(16199),L=t.n(O),j=t(40458),Q=t.n(j),N=t(62916),H=t.n(N),q=t(92165),$=t.n(q),Y=t(82080),Z={};Z.styleTagTransform=$(),Z.setAttributes=Q(),Z.insert=L().bind(null,"head"),Z.domAPI=R(),Z.insertStyleElement=H(),z()(Y.Z,Z),Y.Z&&Y.Z.locals&&Y.Z.locals;var W=t(63598),_={};_.styleTagTransform=$(),_.setAttributes=Q(),_.insert=L().bind(null,"head"),_.domAPI=R(),_.insertStyleElement=H(),z()(W.Z,_),W.Z&&W.Z.locals&&W.Z.locals;var G=t(32525);const X=(0,G.Z)(F,[["__scopeId","data-v-1f80a771"]]);var J=t(53625);const K={key:0,class:"title"},ee={key:1,class:"page-desc"},ne={class:"app-version-type"},te=(e=>((0,o.dD)("data-v-b7f0cb6e"),e=e(),(0,o.Cn)(),e))((()=>(0,o._)("label",null,"Type",-1))),oe={style:{margin:"24px 0"}},ie=(0,o.aZ)({__name:"createAppVersion",props:{app:null,showTitleAndDesc:{type:Boolean},openedInDialog:{type:Boolean}},emits:["close","hideLeftNav","showLeftNav"],setup(e,{emit:n}){const t=e,r=p.nC.resolve(A.y),d=p.nC.resolve(J.U),c=(0,s.iH)([`Major Version (v${M("Major")})`,`Minor Version (v${M("Minor")})`,`Fix Version (v${M("Fix")})`]),m=(0,s.iH)(),u=(0,s.iH)(!0),h=(0,s.iH)(""),f=(0,s.iH)([]),v=(0,o.Fl)((()=>!m.value)),b=(0,s.iH)("New App Version"),I=(0,s.iH)("You can create a new version of your application.");n("hideLeftNav");const C=(0,s.iH)({description:{minAndMaxLength:{min:3,max:100},availableCharacters:!1,nonSpaceCharacter:!1}});function x(){n("close"),n("showLeftNav")}function g(e){m.value=e.split(" ")[0]}function y(e){u.value=e}function D(e){h.value=e}function k(e){var n,t,o,i,s,a;const l={modelID:e.id,version:null!==(n=e.version)&&void 0!==n?n:"latest",modelName:e.name,path:null!==(t=e.path)&&void 0!==t?t:"/",ownerType:null!==(o=e.ownerType)&&void 0!==o?o:"application",ownerName:null!==(i=e.ownerName)&&void 0!==i?i:""};e.checked?null===(s=f.value)||void 0===s||s.push(l):f.value=null===(a=f.value)||void 0===a?void 0:a.filter((n=>n.modelID!=e.id))}function B(){let e={appID:t.app.ID,appVersionIncType:m.value,models:f.value,shortComment:h.value};r.execute((async()=>{await d.releaseApplication(e),x()}),{loading:!0})}function M(e){var n,o;const[i,s,a]=(null===(n=t.app)||void 0===n?void 0:n.lastReleasedVersion)?null===(o=t.app)||void 0===o?void 0:o.lastReleasedVersion.split(".").map(Number):[0,0,0];switch(e){case"Major":return`${i+1}.0.0`;case"Minor":return`${i}.${s+1}.0`;case"Fix":return`${i}.${s}.${a+1}`;default:return}}return(n,t)=>((0,o.wg)(),(0,o.iD)("div",{class:"container",style:(0,i.normalizeStyle)({padding:e.openedInDialog?"20px":"0"})},[e.showTitleAndDesc?((0,o.wg)(),(0,o.iD)("div",K,(0,i.toDisplayString)(b.value),1)):(0,o.kq)("v-if",!0),e.showTitleAndDesc?((0,o.wg)(),(0,o.iD)("div",ee,(0,i.toDisplayString)(I.value),1)):(0,o.kq)("v-if",!0),(0,o._)("div",ne,[te,(0,o.Wm)(l.Z,{class:"select-app-version-type",options:c.value,placeholder:"Select Release Type",selectedClass:"selected-type",onInput:g},null,8,["options"])]),(0,o._)("div",oe,[(0,o.Wm)(a.Z,{isRequired:!1,elementId:"descriptionInput",onValidateStatus:y,placeholder:"",type:"textarea",value:h.value,"info-text":"Description",validations:C.value.description,onGetValue:D},null,8,["value","validations"])]),(0,o.Wm)(X,{screenType:"Create",buttonCb:B,onGetItem:k,platformSelection:{web:!0,mobile:!0},onClose:x,buttonDisableCond:(0,s.SU)(v),openedInDialog:e.openedInDialog},null,8,["buttonDisableCond","openedInDialog"])],4))}});var se=t(4990),ae={};ae.styleTagTransform=$(),ae.setAttributes=Q(),ae.insert=L().bind(null,"head"),ae.domAPI=R(),ae.insertStyleElement=H(),z()(se.Z,ae),se.Z&&se.Z.locals&&se.Z.locals;var le=t(84010),re={};re.styleTagTransform=$(),re.setAttributes=Q(),re.insert=L().bind(null,"head"),re.domAPI=R(),re.insertStyleElement=H(),z()(le.Z,re),le.Z&&le.Z.locals&&le.Z.locals;const de=(0,G.Z)(ie,[["__scopeId","data-v-b7f0cb6e"]])}}]);
//# sourceMappingURL=4839.js.map?ver=0.0.314_1712313230958