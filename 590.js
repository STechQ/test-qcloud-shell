"use strict";(self.webpackChunkqcloud_shell=self.webpackChunkqcloud_shell||[]).push([[590],{3294:(e,n,t)=>{t.d(n,{Z:()=>l});var i=t(1864),a=t.n(i),o=t(352),s=t.n(o)()(a());s.push([e.id,"\n.editDiv[data-v-83399180] {\n    margin-top: 20px;\n    margin-left: 20px;\n    margin-right: 20px;\n}\n.editButtonDiv[data-v-83399180] {\n    border-top: 1px solid #E0E0E0;\n    margin-top: 30px;\n    margin-left: 20px;\n    margin-right: 20px;\n    text-align: end;\n}\n.updateBtn[data-v-83399180] {\n    margin-top: 20px;\n    margin-bottom: 20px;\n    width: 79px;\n    height: 32px;\n    border-radius: 4px;\n    opacity: 1;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 14px;\n    color: #FFFFFF;\n    letter-spacing: 0.02px;\n    opacity: 1;\n    background-color: #4F537B;\n    border: unset;\n}\n","",{version:3,sources:["webpack://./src/presentation/vue3/components/dialogs/editItem.vue"],names:[],mappings:";AA6EA;IACI,gBAAgB;IAChB,iBAAiB;IACjB,kBAAkB;AACtB;AAEA;IACI,6BAA6B;IAC7B,gBAAgB;IAChB,iBAAiB;IACjB,kBAAkB;IAClB,eAAe;AACnB;AAEA;IACI,gBAAgB;IAChB,mBAAmB;IACnB,WAAW;IACX,YAAY;IACZ,kBAAkB;IAClB,UAAU;IACV,kBAAkB;IAClB,gBAAgB;IAChB,eAAe;IACf,cAAc;IACd,sBAAsB;IACtB,UAAU;IACV,yBAAyB;IACzB,aAAa;AACjB",sourcesContent:['<script setup lang="ts">\nimport { ref } from \'vue\'\nimport { container } from \'../../../../domain/core/diContainer\';\nimport { IUpdateModule } from \'../../../../domain/useCase/IUpdateModule\';\nimport { IUseCaseExecutor } from \'../../../../domain/useCase/IUseCaseExecutor\';\nimport { IViewModel } from \'../../../../domain/viewModel/IViewModel\';\nimport { IEditItemProps } from \'../../../../domain/presentation/dialogs/IEditItemProps\';\nimport IDEInput from "../../components/application/IDEInput.vue";\nimport { IIDEInputDefinitions } from \'../../../../domain/presentation/IIDEInputDefinitions\';\nimport { IObjectUseCase } from \'../../../../domain/useCase/IObjectUseCase\';\nimport { computed } from \'@vue/reactivity\';\n\ninterface IEditItemInline extends IEditItemProps {\n    id: string;\n    name: string;\n    description?: string;\n    type:  "folder" | "module" | "model";\n}\nconst props = defineProps<IEditItemInline>();\nconst viewModel = container.resolve<IViewModel>(IViewModel);\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\nconst emit = defineEmits(["close"]);\nconst isNameValid = ref<boolean>(false);\nconst isDescriptionValid = ref<boolean>(true);\nconst validations = ref<Record<"name" | "description", IIDEInputDefinitions["validations"]>>({\n    name: { minAndMaxLength: { min: 3, max: 40 }, availableCharacters: true, nonSpaceCharacter: true },\n    description: { minAndMaxLength: { min: 3, max: 100 }, availableCharacters: true, nonSpaceCharacter: false },\n});\n\nconst name = ref(props.name);\nconst description = ref(props.description);\nfunction edit() {\n    executor.execute(async () => {\n        const objectUseCase = container.resolve<IObjectUseCase>(IObjectUseCase);\n        await objectUseCase.updateObject(props.id, {name: name.value, description: description.value});\n        emit("close");\n    }, { loading: true });\n}\n\nfunction setNameValue(value: string) {\n    name.value = value\n}\nfunction setNameValidationStatus(isValid: boolean) {\n    isNameValid.value = isValid\n}\n\nfunction setDescriptionValue(value: string) {\n    description.value = value\n}\nfunction setDescriptionValidationStatus(isValid: boolean) {\n    isDescriptionValid.value = isValid\n}\n\nconst buttonDisabled = computed(() => !isNameValid.value || !isDescriptionValid.value);\n\n<\/script> \n\n<template>\n    <div class=\'editDiv\'>\n        <IDEInput :isRequired="true" @getValue="setNameValue" @validateStatus="setNameValidationStatus"\n            :placeholder="\'Name\'" :type="\'text\'" info-text="Name" :validations="validations.name" />\n        <div v-if="props.type == \'module\'">\n            <IDEInput :isRequired="false" @getValue="setDescriptionValue" @validateStatus="setDescriptionValidationStatus"\n                :placeholder="\'Description\'" :type="\'textarea\'" info-text="Description" :validations="validations.description" />\n        </div>\n        \x3c!-- <label> \n            Module Name\n            <input v-model="name" placeholder="Name" />  \n        </label>  --\x3e\n    </div>\n    <div class="editButtonDiv">\n        <button :style="{ opacity: buttonDisabled ? \'0.5\' : \'\' }" class=\'updateBtn\'\n                @click="edit()" :disabled="buttonDisabled">Update</button>\n    </div>\n</template> \n\n<style scoped>\n.editDiv {\n    margin-top: 20px;\n    margin-left: 20px;\n    margin-right: 20px;\n}\n\n.editButtonDiv {\n    border-top: 1px solid #E0E0E0;\n    margin-top: 30px;\n    margin-left: 20px;\n    margin-right: 20px;\n    text-align: end;\n}\n\n.updateBtn {\n    margin-top: 20px;\n    margin-bottom: 20px;\n    width: 79px;\n    height: 32px;\n    border-radius: 4px;\n    opacity: 1;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 14px;\n    color: #FFFFFF;\n    letter-spacing: 0.02px;\n    opacity: 1;\n    background-color: #4F537B;\n    border: unset;\n}\n</style>'],sourceRoot:""}]);const l=s},7590:(e,n,t)=>{t.r(n),t.d(n,{default:()=>w});var i=t(2068),a=t(9045),o=t(1407),s=t(3734),l=t(664),r=t(7422),d=t(2097),p=t(7554);const c={class:"editDiv"},u={key:0},m={class:"editButtonDiv"},A=["disabled"],v=(0,i.aZ)({__name:"editItem",props:{id:null,name:null,description:null,type:null},emits:["close"],setup(e,{emit:n}){const t=e,v=(s.nC.resolve(r.J),s.nC.resolve(l.y)),I=(0,o.iH)(!1),g=(0,o.iH)(!0),x=(0,o.iH)({name:{minAndMaxLength:{min:3,max:40},availableCharacters:!0,nonSpaceCharacter:!0},description:{minAndMaxLength:{min:3,max:100},availableCharacters:!0,nonSpaceCharacter:!1}}),f=(0,o.iH)(t.name),B=(0,o.iH)(t.description);function C(e){f.value=e}function b(e){I.value=e}function h(e){B.value=e}function D(e){g.value=e}const y=(0,o.Fl)((()=>!I.value||!g.value));return(e,l)=>((0,i.wg)(),(0,i.iD)(i.HY,null,[(0,i._)("div",c,[(0,i.Wm)(d.Z,{isRequired:!0,onGetValue:C,onValidateStatus:b,placeholder:"Name",type:"text","info-text":"Name",validations:x.value.name},null,8,["validations"]),"module"==t.type?((0,i.wg)(),(0,i.iD)("div",u,[(0,i.Wm)(d.Z,{isRequired:!1,onGetValue:h,onValidateStatus:D,placeholder:"Description",type:"textarea","info-text":"Description",validations:x.value.description},null,8,["validations"])])):(0,i.kq)("v-if",!0),(0,i.kq)(' <label> \n            Module Name\n            <input v-model="name" placeholder="Name" />  \n        </label>  ')]),(0,i._)("div",m,[(0,i._)("button",{style:(0,a.normalizeStyle)({opacity:(0,o.SU)(y)?"0.5":""}),class:"updateBtn",onClick:l[0]||(l[0]=e=>{v.execute((async()=>{const e=s.nC.resolve(p._);await e.updateObject(t.id,{name:f.value,description:B.value}),n("close")}),{loading:!0})}),disabled:(0,o.SU)(y)},"Update",12,A)])],64))}});var I=t(5701),g=t.n(I),x=t(8236),f=t.n(x),B=t(6080),C=t.n(B),b=t(6850),h=t.n(b),D=t(7182),y=t.n(D),V=t(9213),E=t.n(V),k=t(3294),U={};U.styleTagTransform=E(),U.setAttributes=h(),U.insert=C().bind(null,"head"),U.domAPI=f(),U.insertStyleElement=y(),g()(k.Z,U),k.Z&&k.Z.locals&&k.Z.locals;const w=(0,t(1419).Z)(v,[["__scopeId","data-v-83399180"]])}}]);
//# sourceMappingURL=590.js.map