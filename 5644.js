"use strict";(this.webpackChunkqcloud_shell=this.webpackChunkqcloud_shell||[]).push([[5644],{69312:(e,n,o)=>{o.d(n,{Z:()=>a});var t=o(34663),i=o.n(t),s=o(7638),r=o.n(s)()(i());r.push([e.id,"\n.checkbox-container {\n    position: relative;\n}\n.outer-square {\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    width: 18px;\n    height: 18px;\n    background: #151233 0% 0% no-repeat padding-box;\n    border-radius: 4px;\n    display: block;\n    padding: 5px;\n}\n.outer-square-gray{\n    background: #CBCBCB 0% 0% no-repeat padding-box;\n}\n.outer-square-gray:hover {\n    background: #BCBCBC 0% 0% no-repeat padding-box;\n}\n.outer-square-gray-disabled{\n    background: #EEEEEE 0% 0% no-repeat padding-box;\n    pointer-events: none;\n}\n.icon {\n    position: absolute;\n    z-index: 1;\n    color: white;\n    font-size: 14px;\n    top: -1px;\n    left: 2px;\n}\n","",{version:3,sources:["webpack://./src/presentation/vue3/components/checkboxComp.vue"],names:[],mappings:";AAsBA;IACI,kBAAkB;AACtB;AAEA;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,WAAW;IACX,YAAY;IACZ,+CAA+C;IAC/C,kBAAkB;IAClB,cAAc;IACd,YAAY;AAChB;AAEA;IACI,+CAA+C;AACnD;AACA;IACI,+CAA+C;AACnD;AACA;IACI,+CAA+C;IAC/C,oBAAoB;AACxB;AACA;IACI,kBAAkB;IAClB,UAAU;IACV,YAAY;IACZ,eAAe;IACf,SAAS;IACT,SAAS;AACb",sourcesContent:['<template>\n    <div class="checkbox-container">\n        <div :class="\'outer-square\' + (!props.minus && !props.check && !props.plus && !props.disabled ? \' outer-square-gray\' : \'\') + (props.disabled ? \' outer-square-gray-disabled\' : \'\')" />\n        <i class="mdi mdi-minus icon" v-if="props.minus && !props.disabled"></i>\n        <i class="mdi mdi-plus icon" v-if="props.plus && !props.disabled"></i>\n        <i class="mdi mdi-check icon" v-if="props.check && !props.disabled"></i>\n    </div>\n</template>\n\n<script setup lang="ts">\ninterface IRadioButtonCompProps {\n    minus?: boolean;\n    plus?: boolean;\n    check?: boolean;\n    disabled?: boolean;\n}\n\nconst props = defineProps<IRadioButtonCompProps>();\n<\/script>\n\n<style>\n\n.checkbox-container {\n    position: relative;\n}\n\n.outer-square {\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    width: 18px;\n    height: 18px;\n    background: #151233 0% 0% no-repeat padding-box;\n    border-radius: 4px;\n    display: block;\n    padding: 5px;\n}\n\n.outer-square-gray{\n    background: #CBCBCB 0% 0% no-repeat padding-box;\n}\n.outer-square-gray:hover {\n    background: #BCBCBC 0% 0% no-repeat padding-box;\n}\n.outer-square-gray-disabled{\n    background: #EEEEEE 0% 0% no-repeat padding-box;\n    pointer-events: none;\n}\n.icon {\n    position: absolute;\n    z-index: 1;\n    color: white;\n    font-size: 14px;\n    top: -1px;\n    left: 2px;\n}\n</style>\n'],sourceRoot:""}]);const a=r},74933:(e,n,o)=>{o.d(n,{Z:()=>d});var t=o(34663),i=o.n(t),s=o(7638),r=o.n(s),a=o(79240),l=r()(i());l.i(a.Z),l.push([e.id,"\n.container[data-v-4fa129e1] {\n        padding: 32px 20px 20px;\n}\n.module-pages[data-v-4fa129e1] {\n        border: 1px solid #E3E3E3;\n        height: 180px;\n        margin-bottom: 20px;\n        overflow: auto;\n}\n.row-container[data-v-4fa129e1] {\n        width: 100%;\n        height: 36px;\n        position: relative;\n        background: #ffffff 0% 0% no-repeat padding-box;\n        border: 1px solid #e0e0e0;\n        display: flex;\n        align-items: center;\n}\n.buttons-div[data-v-4fa129e1] {\n        display: flex;\n        justify-content: end;\n        margin-top: 60px;\n}\n.cancel-button[data-v-4fa129e1] {\n        font-weight: 500;\n        font-size: 16px;\n        text-align: center;\n        color: #757575;\n        display: flex;\n        align-items: center;\n        padding: 8px 16px;\n        border-radius: 4px;\n        margin-right: 4px;\n        border: none;\n        background: transparent;\n}\n.release-button[data-v-4fa129e1] {\n        font-weight: 500;\n        font-size: 16px;\n        text-align: center;\n        color: #FFFFFF;\n        background: #151233;\n        display: flex;\n        align-items: center;\n        padding: 8px 16px;\n        border-radius: 4px;\n        border: none;\n}\n.release-button[data-v-4fa129e1]:disabled {\n        color: #757575;\n}\n.select-release-type[data-v-4fa129e1] {\n        width: 100%;\n        font-size: 15px;\n        height: 40px;\n        line-height: 40px;\n        border: 1px solid #BCBCBC;\n        border-radius: 4px;\n        padding: 0px 12px;\n}\n.release-type label[data-v-4fa129e1] {\n        font-weight: 500;\n        font-size: 16px;\n        line-height: 24px;\n        color: #151233;\n        margin-bottom: 4px;\n}\n.model-checkbox[data-v-4fa129e1] {\n        position: absolute;\n        top: 8px;\n        left: 20px;\n        cursor: pointer;\n}\n.model-name[data-v-4fa129e1] {\n        font-size: 14px;\n        position: absolute;\n        left: 65px;\n}\n.items-selected-text[data-v-4fa129e1] {\n        color: #757575;\n        font-size: 14px;\n        margin-left: 28px;\n}\n.text-number[data-v-4fa129e1] {\n        color: #212121;\n        font-weight: 500;\n}\n.current-version-text[data-v-4fa129e1] {\n        font-size:18px;\n        color: #212121;\n        margin-bottom: 20px;\n        line-height: 21px;\n}\n.version-text[data-v-4fa129e1] {\n        margin: 10px 7px 10px auto;\n        display: table;\n        font: normal normal normal 12px/16px Roboto;\n        color: #757575;\n        cursor: pointer;\n        user-select: none;\n}\n.version-text.disabled[data-v-4fa129e1] {\n        pointer-events: none;\n        cursor: pointer;\n}\n.release-button:hover + .button-tooltip[data-v-4fa129e1] {\n        visibility: visible;\n        transition: opacity 0.3s ease-out 1s;\n        opacity: 1;\n}\n.button-tooltip[data-v-4fa129e1] {\n        visibility: hidden;\n        position: absolute;\n        background: #757575;\n        color: #FFFFFF;\n        font-size: 11px;\n        font-family: 'Roboto';\n        text-align: center;\n        border-radius: 4px;\n        letter-spacing: 0.2px;\n        padding: 6px 8px 6px 8px;\n        top: 56px;\n        left: 63px;\n        opacity: 0;\n}\n.app-tier-model-icon[data-v-4fa129e1] {\n        position: absolute;\n        width: 16px;\n        height: 16px;\n        top: 3px;\n        left: 47px;\n}\n.version-info[data-v-4fa129e1] {\n        padding: 6px 12px;\n        margin-bottom: 20px;\n        width: 100%;\n        color: #757575;\n        font-size: 14px;\n        background: #F5F5FA;\n        border-radius: 4px;\n        display: flex;\n        align-items: center;\n        margin-top: 20px;\n}\n.version-info i[data-v-4fa129e1] {\n        font-size: 24px;\n        color: #151233;\n        margin-right: 8px;\n}\n.qjson-color[data-v-4fa129e1] {\n        color: #449dd1;\n}\n.yaml-color[data-v-4fa129e1] {\n        color: #449dd1;\n}\n.js-color[data-v-4fa129e1] {\n        color: #449dd1;\n}\n.process-color[data-v-4fa129e1] {\n        color: #007c77;\n}\n.bpmn-color[data-v-4fa129e1] {\n        color: #007c77;\n}\n.entity-designer-color[data-v-4fa129e1] {\n        color: #e9724c;\n}\n\n","",{version:3,sources:["webpack://./src/presentation/vue3/components/dialogs/module/releaseModuleVersion.vue"],names:[],mappings:";AAmOI;QACI,uBAAuB;AAC3B;AACA;QACI,yBAAyB;QACzB,aAAa;QACb,mBAAmB;QACnB,cAAc;AAClB;AACA;QACI,WAAW;QACX,YAAY;QACZ,kBAAkB;QAClB,+CAA+C;QAC/C,yBAAyB;QACzB,aAAa;QACb,mBAAmB;AACvB;AAEA;QACI,aAAa;QACb,oBAAoB;QACpB,gBAAgB;AACpB;AACA;QACI,gBAAgB;QAChB,eAAe;QACf,kBAAkB;QAClB,cAAc;QACd,aAAa;QACb,mBAAmB;QACnB,iBAAiB;QACjB,kBAAkB;QAClB,iBAAiB;QACjB,YAAY;QACZ,uBAAuB;AAC3B;AACA;QACI,gBAAgB;QAChB,eAAe;QACf,kBAAkB;QAClB,cAAc;QACd,mBAAmB;QACnB,aAAa;QACb,mBAAmB;QACnB,iBAAiB;QACjB,kBAAkB;QAClB,YAAY;AAChB;AACA;QACI,cAAc;AAClB;AACA;QACI,WAAW;QACX,eAAe;QACf,YAAY;QACZ,iBAAiB;QACjB,yBAAyB;QACzB,kBAAkB;QAClB,iBAAiB;AACrB;AACA;QACI,gBAAgB;QAChB,eAAe;QACf,iBAAiB;QACjB,cAAc;QACd,kBAAkB;AACtB;AACA;QACI,kBAAkB;QAClB,QAAQ;QACR,UAAU;QACV,eAAe;AACnB;AACA;QACI,eAAe;QACf,kBAAkB;QAClB,UAAU;AACd;AACA;QACI,cAAc;QACd,eAAe;QACf,iBAAiB;AACrB;AACA;QACI,cAAc;QACd,gBAAgB;AACpB;AACA;QACI,cAAc;QACd,cAAc;QACd,mBAAmB;QACnB,iBAAiB;AACrB;AACA;QACI,0BAA0B;QAC1B,cAAc;QACd,2CAA2C;QAC3C,cAAc;QACd,eAAe;QACf,iBAAiB;AACrB;AAEA;QACI,oBAAoB;QACpB,eAAe;AACnB;AACA;QACI,mBAAmB;QACnB,oCAAoC;QACpC,UAAU;AACd;AACA;QACI,kBAAkB;QAClB,kBAAkB;QAClB,mBAAmB;QACnB,cAAc;QACd,eAAe;QACf,qBAAqB;QACrB,kBAAkB;QAClB,kBAAkB;QAClB,qBAAqB;QACrB,wBAAwB;QACxB,SAAS;QACT,UAAU;QACV,UAAU;AACd;AACA;QACI,kBAAkB;QAClB,WAAW;QACX,YAAY;QACZ,QAAQ;QACR,UAAU;AACd;AACA;QACI,iBAAiB;QACjB,mBAAmB;QACnB,WAAW;QACX,cAAc;QACd,eAAe;QACf,mBAAmB;QACnB,kBAAkB;QAClB,aAAa;QACb,mBAAmB;QACnB,gBAAgB;AACpB;AACA;QACI,eAAe;QACf,cAAc;QACd,iBAAiB;AACrB;AACA;QACI,cAAc;AAClB;AAEA;QACI,cAAc;AAClB;AAEA;QACI,cAAc;AAClB;AAEA;QACI,cAAc;AAClB;AAEA;QACI,cAAc;AAClB;AAEA;QACI,cAAc;AAClB",sourcesContent:['<script setup lang="ts">\n    import { onMounted, ref, computed, defineAsyncComponent } from "vue";\n    import { IModule, IModel, IModelHistoryInfo } from "../../../../../domain/model/models";\n    import CustomSelect from "../../customSelect.vue"\n    import CheckboxComp from "../../checkboxComp.vue";\n    import { container } from "../../../../../domain/core/diContainer";\n    import { IViewModelManager } from "../../../../../domain/viewModel/IViewModelManager";\n    import { IViewModel } from "../../../../../domain/viewModel/IViewModel";\n    import { IUseCaseExecutor } from "../../../../../domain/useCase/IUseCaseExecutor";\n    import { IListMultiModelVersions } from "../../../../../domain/useCase/IListMultiModelVersions";\n    import { IDialog } from "../../../../../domain/presentation/IDialog";\n    import { IModuleVersionUseCase } from "../../../../../domain/useCase/IModuleVersionUseCase";\n    import { ModelContants } from "../../../../../../../common/qCloudTemp/modelContants";\n    import StudioInfo from "../../ui/studioInfoComp.vue"\n\n    interface IModuleItem {\n        module: IModule;\n    }\n    interface ITableData {\n        id: string;\n        checked?: boolean;\n        name: string;\n        type: IModel["modelType"];\n        version?: string;\n        disabled?: boolean | true;\n    }\n    interface IDisabledOptions {\n        index: number\n        cause: string;\n    }\n    const viewModel = container.resolve<IViewModel>(IViewModel);\n    const viewModelManager = container.resolve<IViewModelManager>(IViewModelManager);\n    const executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\n    const dialog = container.resolve<IDialog>(IDialog);\n    const moduleVersionUseCase = container.resolve<IModuleVersionUseCase>(IModuleVersionUseCase);\n\n\n    const props = defineProps<IModuleItem>();\n    const items = ref<Array<ITableData>>([]);\n    const modelHistories = ref<Map<string, Array<IModelHistoryInfo>>>();\n    const disabledOptions = ref<Array<IDisabledOptions>>([]);\n\n    const emit = defineEmits(["close"]);\n    const checkedItemCount = computed(() => items.value.filter(item => item.checked == true).length);\n    const isAnyItemChecked = computed(() => { return checkedItemCount.value > 0 && items.value.length > checkedItemCount.value})\n    const isAllItemsChecked = computed(() => { return items.value.length == checkedItemCount.value });\n    const isThereVersion = computed(() => checkMaxVersionOfAllItems());\n    const releaseTypeOptions = ref([`Major Version (v${getLastRelasedVersion("Major")})`, `Minor Version (v${getLastRelasedVersion("Minor")})`, `Fix Version (v${getLastRelasedVersion("Fix")})`]);\n    const releaseType = ref<\'Major\' | \'Minor\' | \'Fix\'>();\n\n    onMounted(async () => {\n        if(props.module.currentVersion) {\n            checkNextModuleVersion();\n        }\n        await initVersions();\n        handleItems();\n    })\n    function close() {\n        emit(\'close\');\n    }\n    function handleItems () {\n        items.value = props.module.children.map((item) => {\n            const maxVersion = getItemMaxVersion(item as IModel)\n            const tableData: ITableData = {\n                id: item.ID,\n                name: item.name,\n                checked:  maxVersion ? true : (item as IModel).isUnmodifiable,\n                disabled: maxVersion ? false : !(item as IModel).isUnmodifiable,\n                type: (item as IModel).modelType,\n                version: (item as IModel).isUnmodifiable ? \'latest\' : maxVersion,\n            }\n            return tableData;\n        })\n    }\n    function handleItemCheck(item: ITableData) {\n        item.checked = !item.checked;\n    }\n    function getItemMaxVersion(item: IModel): string | undefined {\n        if (!modelHistories.value?.has(item.ID))\n            return undefined;\n\n        const versions = modelHistories.value.get(item.ID);\n        if (!versions)\n            return undefined;\n\n        const findMaxVersion = (versions: Array<string>) => {\n            const versionNumbers = versions.map(v => {\n                const parts: Array<string> = v.split(".");\n                return parseInt(parts[0]) * 10 + parseInt(parts[1]) * 1;\n            })\n\n            versionNumbers.sort((a, b) => b - a);\n\n            const maxVersion = versionNumbers[0];\n            return `${Math.floor(maxVersion / 10)}.${maxVersion % 10}`;\n        }\n\n        return findMaxVersion(versions.map(e => e.version!));\n\n    }\n    async function initVersions() {\n        const modelIDs = Array<string>();\n        viewModelManager.flatMapItems(viewModel.studio.items, (item) => {\n            if (item.objectType != "model") { return; }\n            modelIDs.push(item.ID);\n            return item;\n        });\n        modelHistories.value = await executor.executeUseCase<IListMultiModelVersions>(IListMultiModelVersions, { modelIDs });\n    }\n    function checkMaxVersionOfAllItems() {\n        let isThereVersion: boolean = false;\n        items.value.forEach(item => {\n            if(item.version) {\n                isThereVersion = true;\n            }\n        })\n        return isThereVersion;\n    }\n    function handleAllItemCheck() {\n        if(isAnyItemChecked.value || isAllItemsChecked.value) {\n            items.value.forEach(item => {\n                if(!item.disabled) { item.checked = false };\n            })\n        }\n        else if(checkedItemCount.value == 0) {\n            items.value.forEach(item => {\n                if(!item.disabled) { item.checked = true };\n            })\n        }\n    }\n    function versionDialog(item: ITableData) {\n        const clickedNode = { id: item.id, state: { checked: item.checked }, text: item.name, type: item.type, version: item.version };\n        const hasAnyVersion = modelHistories.value?.has(item.id);\n        const options = { clickedNode, cb: (version: string) => { item.version = version } } as any;\n        if (hasAnyVersion) {\n            options.versions = modelHistories.value?.get(item.id)\n        }\n        dialog.showDialog(\n            defineAsyncComponent(() => import("../../application/modelVersionDialog.vue")),\n            { closable: true, title: "Change Version", width: "1080px", maxHeight: "500px", overflow: "auto" }, options\n        );\n    }\n    function setReleaseType(type: string) {\n        releaseType.value = (type.split(" ")[0] as \'Major\' | \'Minor\' | \'Fix\');\n    }\n    function getLastRelasedVersion(incType: string) {\n            const [major, minor, fix] = props.module.currentVersion ? props.module.currentVersion.split(".").map(Number) : props.module.lastReleasedVersion ? props.module.lastReleasedVersion.split(".").map(Number) : [0,0,0]\n            switch (incType) {\n                case \'Major\':\n                    return `${major + 1}.0.0`;\n                case \'Minor\':\n                    return `${major}.${minor + 1}.0`;\n                case \'Fix\':\n                    return `${major}.${minor}.${fix + 1}`;\n                default: return;\n            }\n    }\n    function checkNextModuleVersion() {\n        executor.execute(async () => {\n            const versionExistence = await moduleVersionUseCase.checkNextModuleVersion(props.module.ID, props.module.currentVersion!);\n            if (versionExistence.majorExist) {\n                disabledOptions.value?.push({index: 0, cause: "This version already exists"})\n            } \n            if (versionExistence.minorExist) {\n                disabledOptions.value?.push({index: 1, cause: "This version already exists"})\n            } \n            if (versionExistence.fixExist) {\n                disabledOptions.value?.push({index: 2, cause: "This version already exists"})\n            } \n        }, {loading: true})\n    }\n\n    function release() {\n        const checkedItems = items.value.filter(item => item.checked);\n        const releaseItems: Array<{ modelID: string, version: string }> = checkedItems.map((item) => {\n                const itemData: { modelID: string, version: string } = {\n                    modelID: item.id,\n                    version: item.version!\n                }\n                return itemData\n        })\n       \n        executor.execute(async () => {\n            await moduleVersionUseCase.releaseModule({moduleID: props.module.ID, moduleVersionIncType: releaseType.value!, models: releaseItems, basedVersion: props.module.currentVersion});\n        }, {loading: true})\n        close();\n    }\n<\/script>\n<template>\n    <div class="container">\n        <div v-if="props.module.currentVersion" class="current-version-text">\n            <span>Current version: <span style="font-weight: 500;">v{{ props.module.currentVersion }}</span></span>\n            <StudioInfo v-if="props.module.currentVersion != props.module.lastReleasedVersion" style = "margin-bottom: 20px;" :infoText="\'Current version is not the latest version.\'"></StudioInfo>\n        </div>\n        <div style="margin-bottom: 12px">\n            <CheckboxComp style="cursor: pointer;"\n                :minus="isAnyItemChecked" :check="isAllItemsChecked" @click="handleAllItemCheck()" />\n            <div class="items-selected-text">\n                <span class="text-number">{{ checkedItemCount }}</span>\n                of <span class="text-number">{{ items.length }}</span> items selected\n            </div>\n        </div>\n        <div class="module-pages">\n            <div v-for="item in items" :key="item.id" class="row-container">\n                <CheckboxComp class="model-checkbox" :check="item?.checked" :disabled="item.disabled" @click="handleItemCheck(item)"/>\n                <i :class="\'app-tier-model-icon \' + ModelContants.getModelVisualInfo(item.type, undefined).icon" :style="{ color: ModelContants.getModelVisualInfo(item.type, undefined).color }"></i>\n                <span class="model-name">{{ item.name }}</span>\n                <span :class="[\'version-text\', item.disabled ? \'disabled\' : \'\']" @click="versionDialog(item)">\n                    {{ item.version ? item.version : \'No version\' }} <i :class="[\'mdi mdi-pencil-outline version-icon\', item.disabled ? \'disabled\' : \'\']"></i>\n                </span>\n            </div>\n        </div>\n        <div class="release-type">\n            <label>Type</label>\n            <CustomSelect class="select-release-type" :options="releaseTypeOptions" :placeholder="\'Select\'"  :selectedClass="\'selected-type\'" @input="setReleaseType" :disabledOptions="disabledOptions"></CustomSelect>\n        </div>\n        <div class="buttons-div">\n            <button class="cancel-button" @click="close()">Cancel</button>\n            <button class="release-button" :disabled="!isThereVersion || checkedItemCount == 0" @click="release()">RELEASE</button>\n            <span v-if="!isThereVersion" class="button-tooltip" \n                style="top: 482px; left: 513px; z-index: 1; width: 142px;">There are no items ready to release. At least one of your items must be ready to release.\n            </span>\n        </div>\n    </div>\n</template>\n<style scoped>\n    @import url("../../../../../../src/styles/IDE3.css");\n    .container {\n        padding: 32px 20px 20px;\n    }\n    .module-pages {\n        border: 1px solid #E3E3E3;\n        height: 180px;\n        margin-bottom: 20px;\n        overflow: auto;\n    }\n    .row-container {\n        width: 100%;\n        height: 36px;\n        position: relative;\n        background: #ffffff 0% 0% no-repeat padding-box;\n        border: 1px solid #e0e0e0;\n        display: flex;\n        align-items: center;\n    }\n\n    .buttons-div {\n        display: flex;\n        justify-content: end;\n        margin-top: 60px;\n    }\n    .cancel-button {\n        font-weight: 500;\n        font-size: 16px;\n        text-align: center;\n        color: #757575;\n        display: flex;\n        align-items: center;\n        padding: 8px 16px;\n        border-radius: 4px;\n        margin-right: 4px;\n        border: none;\n        background: transparent;\n    }\n    .release-button {\n        font-weight: 500;\n        font-size: 16px;\n        text-align: center;\n        color: #FFFFFF;\n        background: #151233;\n        display: flex;\n        align-items: center;\n        padding: 8px 16px;\n        border-radius: 4px;\n        border: none;\n    }\n    .release-button:disabled {\n        color: #757575;\n    }\n    .select-release-type {\n        width: 100%;\n        font-size: 15px;\n        height: 40px;\n        line-height: 40px;\n        border: 1px solid #BCBCBC;\n        border-radius: 4px;\n        padding: 0px 12px;\n    }\n    .release-type label {\n        font-weight: 500;\n        font-size: 16px;\n        line-height: 24px;\n        color: #151233;\n        margin-bottom: 4px;\n    }\n    .model-checkbox {\n        position: absolute;\n        top: 8px;\n        left: 20px;\n        cursor: pointer;\n    }\n    .model-name {\n        font-size: 14px;\n        position: absolute;\n        left: 65px;\n    }\n    .items-selected-text {\n        color: #757575;\n        font-size: 14px;\n        margin-left: 28px;\n    }\n    .text-number {\n        color: #212121;\n        font-weight: 500;\n    }\n    .current-version-text {\n        font-size:18px;\n        color: #212121;\n        margin-bottom: 20px;\n        line-height: 21px;\n    }\n    .version-text {\n        margin: 10px 7px 10px auto;\n        display: table;\n        font: normal normal normal 12px/16px Roboto;\n        color: #757575;\n        cursor: pointer;\n        user-select: none;\n    }\n\n    .version-text.disabled {\n        pointer-events: none;\n        cursor: pointer;\n    }\n    .release-button:hover + .button-tooltip {\n        visibility: visible;\n        transition: opacity 0.3s ease-out 1s;\n        opacity: 1;\n    }\n    .button-tooltip {\n        visibility: hidden;\n        position: absolute;\n        background: #757575;\n        color: #FFFFFF;\n        font-size: 11px;\n        font-family: \'Roboto\';\n        text-align: center;\n        border-radius: 4px;\n        letter-spacing: 0.2px;\n        padding: 6px 8px 6px 8px;\n        top: 56px;\n        left: 63px;\n        opacity: 0;\n    }\n    .app-tier-model-icon {\n        position: absolute;\n        width: 16px;\n        height: 16px;\n        top: 3px;\n        left: 47px;\n    }\n    .version-info {\n        padding: 6px 12px;\n        margin-bottom: 20px;\n        width: 100%;\n        color: #757575;\n        font-size: 14px;\n        background: #F5F5FA;\n        border-radius: 4px;\n        display: flex;\n        align-items: center;\n        margin-top: 20px;\n    }\n    .version-info i {\n        font-size: 24px;\n        color: #151233;\n        margin-right: 8px;\n    }\n    .qjson-color {\n        color: #449dd1;\n    }\n\n    .yaml-color {\n        color: #449dd1;\n    }\n\n    .js-color {\n        color: #449dd1;\n    }\n\n    .process-color {\n        color: #007c77;\n    }\n\n    .bpmn-color {\n        color: #007c77;\n    }\n\n    .entity-designer-color {\n        color: #e9724c;\n    }\n\n</style>\n<style>\n    .selected-type {\n        background-color: transparent;\n        color: #212121;\n        height: 40px;\n    }\n    .custom-select .items {\n        color: #212121;\n        border-radius: 8px;\n        border: 1px solid #E3E3E3;\n        overflow: hidden;\n        background-color: #FFFFFF;\n        box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\n        /* margin-top: 40px; */\n    }\n    .custom-select .items .option {\n        font-size: 14px;\n        padding-left: 12px;\n    }\n    .custom-select .items .option:hover {\n        background-color: #EEEEEE;\n        color: #212121;\n    }\n    .select-release-type i {\n        font-size: 16px;\n        color: #BCBCBC;\n    }\n    .custom-placeholder:empty:before {\n        color: #BCBCBC !important;\n        font-weight: 400;\n    }\n    .custom-select.select-release-type .items {\n        position: static !important;\n    }\n</style>'],sourceRoot:""}]);const d=l},41518:(e,n,o)=>{o.d(n,{Z:()=>a});var t=o(34663),i=o.n(t),s=o(7638),r=o.n(s)()(i());r.push([e.id,"\n.selected-type {\n        background-color: transparent;\n        color: #212121;\n        height: 40px;\n}\n.custom-select .items {\n        color: #212121;\n        border-radius: 8px;\n        border: 1px solid #E3E3E3;\n        overflow: hidden;\n        background-color: #FFFFFF;\n        box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\n        /* margin-top: 40px; */\n}\n.custom-select .items .option {\n        font-size: 14px;\n        padding-left: 12px;\n}\n.custom-select .items .option:hover {\n        background-color: #EEEEEE;\n        color: #212121;\n}\n.select-release-type i {\n        font-size: 16px;\n        color: #BCBCBC;\n}\n.custom-placeholder:empty:before {\n        color: #BCBCBC !important;\n        font-weight: 400;\n}\n.custom-select.select-release-type .items {\n        position: static !important;\n}\n","",{version:3,sources:["webpack://./src/presentation/vue3/components/dialogs/module/releaseModuleVersion.vue"],names:[],mappings:";AAoZI;QACI,6BAA6B;QAC7B,cAAc;QACd,YAAY;AAChB;AACA;QACI,cAAc;QACd,kBAAkB;QAClB,yBAAyB;QACzB,gBAAgB;QAChB,yBAAyB;QACzB,0CAA0C;QAC1C,sBAAsB;AAC1B;AACA;QACI,eAAe;QACf,kBAAkB;AACtB;AACA;QACI,yBAAyB;QACzB,cAAc;AAClB;AACA;QACI,eAAe;QACf,cAAc;AAClB;AACA;QACI,yBAAyB;QACzB,gBAAgB;AACpB;AACA;QACI,2BAA2B;AAC/B",sourcesContent:['<script setup lang="ts">\n    import { onMounted, ref, computed, defineAsyncComponent } from "vue";\n    import { IModule, IModel, IModelHistoryInfo } from "../../../../../domain/model/models";\n    import CustomSelect from "../../customSelect.vue"\n    import CheckboxComp from "../../checkboxComp.vue";\n    import { container } from "../../../../../domain/core/diContainer";\n    import { IViewModelManager } from "../../../../../domain/viewModel/IViewModelManager";\n    import { IViewModel } from "../../../../../domain/viewModel/IViewModel";\n    import { IUseCaseExecutor } from "../../../../../domain/useCase/IUseCaseExecutor";\n    import { IListMultiModelVersions } from "../../../../../domain/useCase/IListMultiModelVersions";\n    import { IDialog } from "../../../../../domain/presentation/IDialog";\n    import { IModuleVersionUseCase } from "../../../../../domain/useCase/IModuleVersionUseCase";\n    import { ModelContants } from "../../../../../../../common/qCloudTemp/modelContants";\n    import StudioInfo from "../../ui/studioInfoComp.vue"\n\n    interface IModuleItem {\n        module: IModule;\n    }\n    interface ITableData {\n        id: string;\n        checked?: boolean;\n        name: string;\n        type: IModel["modelType"];\n        version?: string;\n        disabled?: boolean | true;\n    }\n    interface IDisabledOptions {\n        index: number\n        cause: string;\n    }\n    const viewModel = container.resolve<IViewModel>(IViewModel);\n    const viewModelManager = container.resolve<IViewModelManager>(IViewModelManager);\n    const executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\n    const dialog = container.resolve<IDialog>(IDialog);\n    const moduleVersionUseCase = container.resolve<IModuleVersionUseCase>(IModuleVersionUseCase);\n\n\n    const props = defineProps<IModuleItem>();\n    const items = ref<Array<ITableData>>([]);\n    const modelHistories = ref<Map<string, Array<IModelHistoryInfo>>>();\n    const disabledOptions = ref<Array<IDisabledOptions>>([]);\n\n    const emit = defineEmits(["close"]);\n    const checkedItemCount = computed(() => items.value.filter(item => item.checked == true).length);\n    const isAnyItemChecked = computed(() => { return checkedItemCount.value > 0 && items.value.length > checkedItemCount.value})\n    const isAllItemsChecked = computed(() => { return items.value.length == checkedItemCount.value });\n    const isThereVersion = computed(() => checkMaxVersionOfAllItems());\n    const releaseTypeOptions = ref([`Major Version (v${getLastRelasedVersion("Major")})`, `Minor Version (v${getLastRelasedVersion("Minor")})`, `Fix Version (v${getLastRelasedVersion("Fix")})`]);\n    const releaseType = ref<\'Major\' | \'Minor\' | \'Fix\'>();\n\n    onMounted(async () => {\n        if(props.module.currentVersion) {\n            checkNextModuleVersion();\n        }\n        await initVersions();\n        handleItems();\n    })\n    function close() {\n        emit(\'close\');\n    }\n    function handleItems () {\n        items.value = props.module.children.map((item) => {\n            const maxVersion = getItemMaxVersion(item as IModel)\n            const tableData: ITableData = {\n                id: item.ID,\n                name: item.name,\n                checked:  maxVersion ? true : (item as IModel).isUnmodifiable,\n                disabled: maxVersion ? false : !(item as IModel).isUnmodifiable,\n                type: (item as IModel).modelType,\n                version: (item as IModel).isUnmodifiable ? \'latest\' : maxVersion,\n            }\n            return tableData;\n        })\n    }\n    function handleItemCheck(item: ITableData) {\n        item.checked = !item.checked;\n    }\n    function getItemMaxVersion(item: IModel): string | undefined {\n        if (!modelHistories.value?.has(item.ID))\n            return undefined;\n\n        const versions = modelHistories.value.get(item.ID);\n        if (!versions)\n            return undefined;\n\n        const findMaxVersion = (versions: Array<string>) => {\n            const versionNumbers = versions.map(v => {\n                const parts: Array<string> = v.split(".");\n                return parseInt(parts[0]) * 10 + parseInt(parts[1]) * 1;\n            })\n\n            versionNumbers.sort((a, b) => b - a);\n\n            const maxVersion = versionNumbers[0];\n            return `${Math.floor(maxVersion / 10)}.${maxVersion % 10}`;\n        }\n\n        return findMaxVersion(versions.map(e => e.version!));\n\n    }\n    async function initVersions() {\n        const modelIDs = Array<string>();\n        viewModelManager.flatMapItems(viewModel.studio.items, (item) => {\n            if (item.objectType != "model") { return; }\n            modelIDs.push(item.ID);\n            return item;\n        });\n        modelHistories.value = await executor.executeUseCase<IListMultiModelVersions>(IListMultiModelVersions, { modelIDs });\n    }\n    function checkMaxVersionOfAllItems() {\n        let isThereVersion: boolean = false;\n        items.value.forEach(item => {\n            if(item.version) {\n                isThereVersion = true;\n            }\n        })\n        return isThereVersion;\n    }\n    function handleAllItemCheck() {\n        if(isAnyItemChecked.value || isAllItemsChecked.value) {\n            items.value.forEach(item => {\n                if(!item.disabled) { item.checked = false };\n            })\n        }\n        else if(checkedItemCount.value == 0) {\n            items.value.forEach(item => {\n                if(!item.disabled) { item.checked = true };\n            })\n        }\n    }\n    function versionDialog(item: ITableData) {\n        const clickedNode = { id: item.id, state: { checked: item.checked }, text: item.name, type: item.type, version: item.version };\n        const hasAnyVersion = modelHistories.value?.has(item.id);\n        const options = { clickedNode, cb: (version: string) => { item.version = version } } as any;\n        if (hasAnyVersion) {\n            options.versions = modelHistories.value?.get(item.id)\n        }\n        dialog.showDialog(\n            defineAsyncComponent(() => import("../../application/modelVersionDialog.vue")),\n            { closable: true, title: "Change Version", width: "1080px", maxHeight: "500px", overflow: "auto" }, options\n        );\n    }\n    function setReleaseType(type: string) {\n        releaseType.value = (type.split(" ")[0] as \'Major\' | \'Minor\' | \'Fix\');\n    }\n    function getLastRelasedVersion(incType: string) {\n            const [major, minor, fix] = props.module.currentVersion ? props.module.currentVersion.split(".").map(Number) : props.module.lastReleasedVersion ? props.module.lastReleasedVersion.split(".").map(Number) : [0,0,0]\n            switch (incType) {\n                case \'Major\':\n                    return `${major + 1}.0.0`;\n                case \'Minor\':\n                    return `${major}.${minor + 1}.0`;\n                case \'Fix\':\n                    return `${major}.${minor}.${fix + 1}`;\n                default: return;\n            }\n    }\n    function checkNextModuleVersion() {\n        executor.execute(async () => {\n            const versionExistence = await moduleVersionUseCase.checkNextModuleVersion(props.module.ID, props.module.currentVersion!);\n            if (versionExistence.majorExist) {\n                disabledOptions.value?.push({index: 0, cause: "This version already exists"})\n            } \n            if (versionExistence.minorExist) {\n                disabledOptions.value?.push({index: 1, cause: "This version already exists"})\n            } \n            if (versionExistence.fixExist) {\n                disabledOptions.value?.push({index: 2, cause: "This version already exists"})\n            } \n        }, {loading: true})\n    }\n\n    function release() {\n        const checkedItems = items.value.filter(item => item.checked);\n        const releaseItems: Array<{ modelID: string, version: string }> = checkedItems.map((item) => {\n                const itemData: { modelID: string, version: string } = {\n                    modelID: item.id,\n                    version: item.version!\n                }\n                return itemData\n        })\n       \n        executor.execute(async () => {\n            await moduleVersionUseCase.releaseModule({moduleID: props.module.ID, moduleVersionIncType: releaseType.value!, models: releaseItems, basedVersion: props.module.currentVersion});\n        }, {loading: true})\n        close();\n    }\n<\/script>\n<template>\n    <div class="container">\n        <div v-if="props.module.currentVersion" class="current-version-text">\n            <span>Current version: <span style="font-weight: 500;">v{{ props.module.currentVersion }}</span></span>\n            <StudioInfo v-if="props.module.currentVersion != props.module.lastReleasedVersion" style = "margin-bottom: 20px;" :infoText="\'Current version is not the latest version.\'"></StudioInfo>\n        </div>\n        <div style="margin-bottom: 12px">\n            <CheckboxComp style="cursor: pointer;"\n                :minus="isAnyItemChecked" :check="isAllItemsChecked" @click="handleAllItemCheck()" />\n            <div class="items-selected-text">\n                <span class="text-number">{{ checkedItemCount }}</span>\n                of <span class="text-number">{{ items.length }}</span> items selected\n            </div>\n        </div>\n        <div class="module-pages">\n            <div v-for="item in items" :key="item.id" class="row-container">\n                <CheckboxComp class="model-checkbox" :check="item?.checked" :disabled="item.disabled" @click="handleItemCheck(item)"/>\n                <i :class="\'app-tier-model-icon \' + ModelContants.getModelVisualInfo(item.type, undefined).icon" :style="{ color: ModelContants.getModelVisualInfo(item.type, undefined).color }"></i>\n                <span class="model-name">{{ item.name }}</span>\n                <span :class="[\'version-text\', item.disabled ? \'disabled\' : \'\']" @click="versionDialog(item)">\n                    {{ item.version ? item.version : \'No version\' }} <i :class="[\'mdi mdi-pencil-outline version-icon\', item.disabled ? \'disabled\' : \'\']"></i>\n                </span>\n            </div>\n        </div>\n        <div class="release-type">\n            <label>Type</label>\n            <CustomSelect class="select-release-type" :options="releaseTypeOptions" :placeholder="\'Select\'"  :selectedClass="\'selected-type\'" @input="setReleaseType" :disabledOptions="disabledOptions"></CustomSelect>\n        </div>\n        <div class="buttons-div">\n            <button class="cancel-button" @click="close()">Cancel</button>\n            <button class="release-button" :disabled="!isThereVersion || checkedItemCount == 0" @click="release()">RELEASE</button>\n            <span v-if="!isThereVersion" class="button-tooltip" \n                style="top: 482px; left: 513px; z-index: 1; width: 142px;">There are no items ready to release. At least one of your items must be ready to release.\n            </span>\n        </div>\n    </div>\n</template>\n<style scoped>\n    @import url("../../../../../../src/styles/IDE3.css");\n    .container {\n        padding: 32px 20px 20px;\n    }\n    .module-pages {\n        border: 1px solid #E3E3E3;\n        height: 180px;\n        margin-bottom: 20px;\n        overflow: auto;\n    }\n    .row-container {\n        width: 100%;\n        height: 36px;\n        position: relative;\n        background: #ffffff 0% 0% no-repeat padding-box;\n        border: 1px solid #e0e0e0;\n        display: flex;\n        align-items: center;\n    }\n\n    .buttons-div {\n        display: flex;\n        justify-content: end;\n        margin-top: 60px;\n    }\n    .cancel-button {\n        font-weight: 500;\n        font-size: 16px;\n        text-align: center;\n        color: #757575;\n        display: flex;\n        align-items: center;\n        padding: 8px 16px;\n        border-radius: 4px;\n        margin-right: 4px;\n        border: none;\n        background: transparent;\n    }\n    .release-button {\n        font-weight: 500;\n        font-size: 16px;\n        text-align: center;\n        color: #FFFFFF;\n        background: #151233;\n        display: flex;\n        align-items: center;\n        padding: 8px 16px;\n        border-radius: 4px;\n        border: none;\n    }\n    .release-button:disabled {\n        color: #757575;\n    }\n    .select-release-type {\n        width: 100%;\n        font-size: 15px;\n        height: 40px;\n        line-height: 40px;\n        border: 1px solid #BCBCBC;\n        border-radius: 4px;\n        padding: 0px 12px;\n    }\n    .release-type label {\n        font-weight: 500;\n        font-size: 16px;\n        line-height: 24px;\n        color: #151233;\n        margin-bottom: 4px;\n    }\n    .model-checkbox {\n        position: absolute;\n        top: 8px;\n        left: 20px;\n        cursor: pointer;\n    }\n    .model-name {\n        font-size: 14px;\n        position: absolute;\n        left: 65px;\n    }\n    .items-selected-text {\n        color: #757575;\n        font-size: 14px;\n        margin-left: 28px;\n    }\n    .text-number {\n        color: #212121;\n        font-weight: 500;\n    }\n    .current-version-text {\n        font-size:18px;\n        color: #212121;\n        margin-bottom: 20px;\n        line-height: 21px;\n    }\n    .version-text {\n        margin: 10px 7px 10px auto;\n        display: table;\n        font: normal normal normal 12px/16px Roboto;\n        color: #757575;\n        cursor: pointer;\n        user-select: none;\n    }\n\n    .version-text.disabled {\n        pointer-events: none;\n        cursor: pointer;\n    }\n    .release-button:hover + .button-tooltip {\n        visibility: visible;\n        transition: opacity 0.3s ease-out 1s;\n        opacity: 1;\n    }\n    .button-tooltip {\n        visibility: hidden;\n        position: absolute;\n        background: #757575;\n        color: #FFFFFF;\n        font-size: 11px;\n        font-family: \'Roboto\';\n        text-align: center;\n        border-radius: 4px;\n        letter-spacing: 0.2px;\n        padding: 6px 8px 6px 8px;\n        top: 56px;\n        left: 63px;\n        opacity: 0;\n    }\n    .app-tier-model-icon {\n        position: absolute;\n        width: 16px;\n        height: 16px;\n        top: 3px;\n        left: 47px;\n    }\n    .version-info {\n        padding: 6px 12px;\n        margin-bottom: 20px;\n        width: 100%;\n        color: #757575;\n        font-size: 14px;\n        background: #F5F5FA;\n        border-radius: 4px;\n        display: flex;\n        align-items: center;\n        margin-top: 20px;\n    }\n    .version-info i {\n        font-size: 24px;\n        color: #151233;\n        margin-right: 8px;\n    }\n    .qjson-color {\n        color: #449dd1;\n    }\n\n    .yaml-color {\n        color: #449dd1;\n    }\n\n    .js-color {\n        color: #449dd1;\n    }\n\n    .process-color {\n        color: #007c77;\n    }\n\n    .bpmn-color {\n        color: #007c77;\n    }\n\n    .entity-designer-color {\n        color: #e9724c;\n    }\n\n</style>\n<style>\n    .selected-type {\n        background-color: transparent;\n        color: #212121;\n        height: 40px;\n    }\n    .custom-select .items {\n        color: #212121;\n        border-radius: 8px;\n        border: 1px solid #E3E3E3;\n        overflow: hidden;\n        background-color: #FFFFFF;\n        box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\n        /* margin-top: 40px; */\n    }\n    .custom-select .items .option {\n        font-size: 14px;\n        padding-left: 12px;\n    }\n    .custom-select .items .option:hover {\n        background-color: #EEEEEE;\n        color: #212121;\n    }\n    .select-release-type i {\n        font-size: 16px;\n        color: #BCBCBC;\n    }\n    .custom-placeholder:empty:before {\n        color: #BCBCBC !important;\n        font-weight: 400;\n    }\n    .custom-select.select-release-type .items {\n        position: static !important;\n    }\n</style>'],sourceRoot:""}]);const a=r},74137:(e,n,o)=>{o.d(n,{Z:()=>B});var t=o(71093),i=o(66190);const s={class:"checkbox-container"},r={key:0,class:"mdi mdi-minus icon"},a={key:1,class:"mdi mdi-plus icon"},l={key:2,class:"mdi mdi-check icon"},d=(0,t.aZ)({__name:"checkboxComp",props:{minus:{type:Boolean},plus:{type:Boolean},check:{type:Boolean},disabled:{type:Boolean}},setup(e){const n=e;return(e,o)=>((0,t.wg)(),(0,t.iD)("div",s,[(0,t._)("div",{class:(0,i.normalizeClass)("outer-square"+(n.minus||n.check||n.plus||n.disabled?"":" outer-square-gray")+(n.disabled?" outer-square-gray-disabled":""))},null,2),n.minus&&!n.disabled?((0,t.wg)(),(0,t.iD)("i",r)):(0,t.kq)("v-if",!0),n.plus&&!n.disabled?((0,t.wg)(),(0,t.iD)("i",a)):(0,t.kq)("v-if",!0),n.check&&!n.disabled?((0,t.wg)(),(0,t.iD)("i",l)):(0,t.kq)("v-if",!0)]))}});var c=o(17450),p=o.n(c),m=o(29530),u=o.n(m),A=o(16199),x=o.n(A),C=o(40458),f=o.n(C),v=o(62916),b=o.n(v),h=o(92165),g=o.n(h),I=o(69312),y={};y.styleTagTransform=g(),y.setAttributes=f(),y.insert=x().bind(null,"head"),y.domAPI=u(),y.insertStyleElement=b(),p()(I.Z,y),I.Z&&I.Z.locals&&I.Z.locals;const B=d},75644:(e,n,o)=>{o.r(n),o.d(n,{default:()=>P});var t=o(71093),i=o(66190),s=o(73843),r=o(19496),a=o(74137),l=o(5627),d=o(54848),c=o(88613),p=o(83487),m=o(62376),u=o(91056),A=o(83240),x=o(66059),C=o(74720);const f={class:"container"},v={key:0,class:"current-version-text"},b={style:{"font-weight":"500"}},h={style:{"margin-bottom":"12px"}},g={class:"items-selected-text"},I={class:"text-number"},y={class:"text-number"},B={class:"module-pages"},k={class:"model-name"},M=["onClick"],V={class:"release-type"},Q=(e=>((0,t.dD)("data-v-4fa129e1"),e=e(),(0,t.Cn)(),e))((()=>(0,t._)("label",null,"Type",-1))),w={class:"buttons-div"},E=["disabled"],D={key:0,class:"button-tooltip",style:{top:"482px",left:"513px","z-index":"1",width:"142px"}},T=(0,t.aZ)({__name:"releaseModuleVersion",props:{module:null},emits:["close"],setup(e,{emit:n}){const T=e,F=l.nC.resolve(c.J),U=l.nC.resolve(d.B),z=l.nC.resolve(p.y),S=l.nC.resolve(u.u),j=l.nC.resolve(A.e),R=(0,s.iH)([]),$=(0,s.iH)(),q=(0,s.iH)([]),Z=(0,t.Fl)((()=>R.value.filter((e=>1==e.checked)).length)),N=(0,t.Fl)((()=>Z.value>0&&R.value.length>Z.value)),O=(0,t.Fl)((()=>R.value.length==Z.value)),H=(0,t.Fl)((()=>function(){let e=!1;return R.value.forEach((n=>{n.version&&(e=!0)})),e}())),_=(0,s.iH)([`Major Version (v${P("Major")})`,`Minor Version (v${P("Minor")})`,`Fix Version (v${P("Fix")})`]),L=(0,s.iH)();function Y(){n("close")}function W(e){L.value=e.split(" ")[0]}function P(e){const[n,o,t]=T.module.currentVersion?T.module.currentVersion.split(".").map(Number):T.module.lastReleasedVersion?T.module.lastReleasedVersion.split(".").map(Number):[0,0,0];switch(e){case"Major":return`${n+1}.0.0`;case"Minor":return`${n}.${o+1}.0`;case"Fix":return`${n}.${o}.${t+1}`;default:return}}return(0,t.bv)((async()=>{T.module.currentVersion&&z.execute((async()=>{var e,n,o;const t=await j.checkNextModuleVersion(T.module.ID,T.module.currentVersion);t.majorExist&&(null===(e=q.value)||void 0===e||e.push({index:0,cause:"This version already exists"})),t.minorExist&&(null===(n=q.value)||void 0===n||n.push({index:1,cause:"This version already exists"})),t.fixExist&&(null===(o=q.value)||void 0===o||o.push({index:2,cause:"This version already exists"}))}),{loading:!0}),await async function(){const e=Array();U.flatMapItems(F.studio.items,(n=>{if("model"==n.objectType)return e.push(n.ID),n})),$.value=await z.executeUseCase(m.q,{modelIDs:e})}(),R.value=T.module.children.map((e=>{const n=function(e){var n;if(!(null===(n=$.value)||void 0===n?void 0:n.has(e.ID)))return;const o=$.value.get(e.ID);if(!o)return;return(e=>{const n=e.map((e=>{const n=e.split(".");return 10*parseInt(n[0])+1*parseInt(n[1])}));n.sort(((e,n)=>n-e));const o=n[0];return`${Math.floor(o/10)}.${o%10}`})(o.map((e=>e.version)))}(e);return{id:e.ID,name:e.name,checked:!!n||e.isUnmodifiable,disabled:!n&&!e.isUnmodifiable,type:e.modelType,version:e.isUnmodifiable?"latest":n}}))})),(e,n)=>((0,t.wg)(),(0,t.iD)("div",f,[T.module.currentVersion?((0,t.wg)(),(0,t.iD)("div",v,[(0,t._)("span",null,[(0,t.Uk)("Current version: "),(0,t._)("span",b,"v"+(0,i.toDisplayString)(T.module.currentVersion),1)]),T.module.currentVersion!=T.module.lastReleasedVersion?((0,t.wg)(),(0,t.j4)(C.Z,{key:0,style:{"margin-bottom":"20px"},infoText:"Current version is not the latest version."},null,8,["infoText"])):(0,t.kq)("v-if",!0)])):(0,t.kq)("v-if",!0),(0,t._)("div",h,[(0,t.Wm)(a.Z,{style:{cursor:"pointer"},minus:(0,s.SU)(N),check:(0,s.SU)(O),onClick:n[0]||(n[0]=e=>{N.value||O.value?R.value.forEach((e=>{e.disabled||(e.checked=!1)})):0==Z.value&&R.value.forEach((e=>{e.disabled||(e.checked=!0)}))})},null,8,["minus","check"]),(0,t._)("div",g,[(0,t._)("span",I,(0,i.toDisplayString)((0,s.SU)(Z)),1),(0,t.Uk)(" of "),(0,t._)("span",y,(0,i.toDisplayString)(R.value.length),1),(0,t.Uk)(" items selected ")])]),(0,t._)("div",B,[((0,t.wg)(!0),(0,t.iD)(t.HY,null,(0,t.Ko)(R.value,(e=>((0,t.wg)(),(0,t.iD)("div",{key:e.id,class:"row-container"},[(0,t.Wm)(a.Z,{class:"model-checkbox",check:null==e?void 0:e.checked,disabled:e.disabled,onClick:n=>function(e){e.checked=!e.checked}(e)},null,8,["check","disabled","onClick"]),(0,t._)("i",{class:(0,i.normalizeClass)("app-tier-model-icon "+(0,s.SU)(x.o).getModelVisualInfo(e.type,void 0).icon),style:(0,i.normalizeStyle)({color:(0,s.SU)(x.o).getModelVisualInfo(e.type,void 0).color})},null,6),(0,t._)("span",k,(0,i.toDisplayString)(e.name),1),(0,t._)("span",{class:(0,i.normalizeClass)(["version-text",e.disabled?"disabled":""]),onClick:n=>function(e){var n,i;const s={clickedNode:{id:e.id,state:{checked:e.checked},text:e.name,type:e.type,version:e.version},cb:n=>{e.version=n}};(null===(n=$.value)||void 0===n?void 0:n.has(e.id))&&(s.versions=null===(i=$.value)||void 0===i?void 0:i.get(e.id)),S.showDialog((0,t.RC)((()=>o.e(801).then(o.bind(o,60801)))),{closable:!0,title:"Change Version",width:"1080px",maxHeight:"500px",overflow:"auto"},s)}(e)},[(0,t.Uk)((0,i.toDisplayString)(e.version?e.version:"No version")+" ",1),(0,t._)("i",{class:(0,i.normalizeClass)(["mdi mdi-pencil-outline version-icon",e.disabled?"disabled":""])},null,2)],10,M)])))),128))]),(0,t._)("div",V,[Q,(0,t.Wm)(r.Z,{class:"select-release-type",options:_.value,placeholder:"Select",selectedClass:"selected-type",onInput:W,disabledOptions:q.value},null,8,["options","disabledOptions"])]),(0,t._)("div",w,[(0,t._)("button",{class:"cancel-button",onClick:n[1]||(n[1]=e=>Y())},"Cancel"),(0,t._)("button",{class:"release-button",disabled:!(0,s.SU)(H)||0==(0,s.SU)(Z),onClick:n[2]||(n[2]=e=>function(){const e=R.value.filter((e=>e.checked)).map((e=>({modelID:e.id,version:e.version})));z.execute((async()=>{await j.releaseModule({moduleID:T.module.ID,moduleVersionIncType:L.value,models:e,basedVersion:T.module.currentVersion})}),{loading:!0}),Y()}())},"RELEASE",8,E),(0,s.SU)(H)?(0,t.kq)("v-if",!0):((0,t.wg)(),(0,t.iD)("span",D,"There are no items ready to release. At least one of your items must be ready to release. "))])]))}});var F=o(17450),U=o.n(F),z=o(29530),S=o.n(z),j=o(16199),R=o.n(j),$=o(40458),q=o.n($),Z=o(62916),N=o.n(Z),O=o(92165),H=o.n(O),_=o(74933),L={};L.styleTagTransform=H(),L.setAttributes=q(),L.insert=R().bind(null,"head"),L.domAPI=S(),L.insertStyleElement=N(),U()(_.Z,L),_.Z&&_.Z.locals&&_.Z.locals;var Y=o(41518),W={};W.styleTagTransform=H(),W.setAttributes=q(),W.insert=R().bind(null,"head"),W.domAPI=S(),W.insertStyleElement=N(),U()(Y.Z,W),Y.Z&&Y.Z.locals&&Y.Z.locals;const P=(0,o(32525).Z)(T,[["__scopeId","data-v-4fa129e1"]])}}]);
//# sourceMappingURL=5644.js.map?ver=0.0.314_1713175986983