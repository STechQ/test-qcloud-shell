"use strict";(this.webpackChunkqcloud_shell=this.webpackChunkqcloud_shell||[]).push([[4993],{22025:(e,n,o)=>{o.d(n,{Z:()=>l});var t=o(51864),a=o.n(t),s=o(60352),i=o.n(s)()(a());i.push([e.id,'\n.createButtonDiv[data-v-5378fa42] {\n    height: 72px;\n    top: calc(100% - 72px);\n    width: 100%;\n    position: absolute\n}\n.createButton[data-v-5378fa42] {\n    background-color: #151233;\n    color: white;\n    border-radius: 4px;\n    border: none;\n    width: 97px;\n    height: 40px;\n    font-weight: 500;\n    font-size: 15px;\n    font-family: "ROBOTO";\n    left: calc(100% - 117px);\n    top: 16px;\n    position: absolute;\n}\n.cancelButton[data-v-5378fa42] {\n    background-color: transparent;\n    color: #757575;\n    border-radius: 4px;\n    border: none;\n    width: 90px;\n    height: 40px;\n    font-weight: 500;\n    font-size: 15px;\n    font-family: "ROBOTO";\n    left: calc(100% - 211px);\n    top: 16px;\n    position: absolute;\n}\n',"",{version:3,sources:["webpack://./src/presentation/vue3/components/dialogs/create/createDialogFooter.vue/createDialogFooter.vue"],names:[],mappings:";AAwBA;IACI,YAAY;IACZ,sBAAsB;IACtB,WAAW;IACX;AACJ;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,kBAAkB;IAClB,YAAY;IACZ,WAAW;IACX,YAAY;IACZ,gBAAgB;IAChB,eAAe;IACf,qBAAqB;IACrB,wBAAwB;IACxB,SAAS;IACT,kBAAkB;AACtB;AAEA;IACI,6BAA6B;IAC7B,cAAc;IACd,kBAAkB;IAClB,YAAY;IACZ,WAAW;IACX,YAAY;IACZ,gBAAgB;IAChB,eAAe;IACf,qBAAqB;IACrB,wBAAwB;IACxB,SAAS;IACT,kBAAkB;AACtB",sourcesContent:['<template>\n    <div class="createButtonDiv">\n        <button class="cancelButton" @click="props.cancelButtonCb">{{ cancelButtonText || "Cancel" }}</button>\n        <button :style="{ opacity: props.createButtonEnabled ? \'\' : \'0.5\' }" class="createButton"\n            @click="props.createButtonCb" :disabled="!props.createButtonEnabled">\n            {{ createButtonText || "CREATE" }}\n        </button>\n    </div>\n</template>\n\n<script setup lang="ts">\n\ninterface ICreateDialogFooter {\n    createButtonText?: string;\n    cancelButtonText?: string;\n    createButtonEnabled?: boolean;\n    createButtonCb: () => void;\n    cancelButtonCb: () => void;\n}\nconst props = defineProps<ICreateDialogFooter>();\n\n<\/script>\n\n<style scoped>\n.createButtonDiv {\n    height: 72px;\n    top: calc(100% - 72px);\n    width: 100%;\n    position: absolute\n}\n\n.createButton {\n    background-color: #151233;\n    color: white;\n    border-radius: 4px;\n    border: none;\n    width: 97px;\n    height: 40px;\n    font-weight: 500;\n    font-size: 15px;\n    font-family: "ROBOTO";\n    left: calc(100% - 117px);\n    top: 16px;\n    position: absolute;\n}\n\n.cancelButton {\n    background-color: transparent;\n    color: #757575;\n    border-radius: 4px;\n    border: none;\n    width: 90px;\n    height: 40px;\n    font-weight: 500;\n    font-size: 15px;\n    font-family: "ROBOTO";\n    left: calc(100% - 211px);\n    top: 16px;\n    position: absolute;\n}\n</style>\n'],sourceRoot:""}]);const l=i},7112:(e,n,o)=>{o.d(n,{Z:()=>l});var t=o(51864),a=o.n(t),s=o(60352),i=o.n(s)()(a());i.push([e.id,'\n.duplicate-note-div[data-v-7f02898a] {\n    margin-bottom: 10px;\n}\n.duplicate-text[data-v-7f02898a] {\n    font-weight: bold;\n}\n.radio-button[data-v-7f02898a] {\n    margin-top: 2px;\n    cursor: pointer;\n}\n.radio-text[data-v-7f02898a] {\n    font: normal normal normal 16px/21px Roboto;\n    color: #212121;\n    margin-left: 6px;\n}\n.choose-existing-process-flow-dropdown[data-v-7f02898a] {\n    width: 511px;\n    border: 1px solid #a1a1a1;\n    border-radius: 4px;\n    height: 40px;\n    padding: 8px;\n    font-size: 14px;\n    font-family: "Roboto";\n    margin-top: 3px;\n}\n',"",{version:3,sources:["webpack://./src/presentation/vue3/components/dialogs/create/createNewProcessWizard.vue"],names:[],mappings:";AAkMA;IACI,mBAAmB;AACvB;AAEA;IACI,iBAAiB;AACrB;AAEA;IACI,eAAe;IACf,eAAe;AACnB;AAEA;IACI,2CAA2C;IAC3C,cAAc;IACd,gBAAgB;AACpB;AAEA;IACI,YAAY;IACZ,yBAAyB;IACzB,kBAAkB;IAClB,YAAY;IACZ,YAAY;IACZ,eAAe;IACf,qBAAqB;IACrB,eAAe;AACnB",sourcesContent:['<script setup lang="ts">\nimport { ref } from "vue";\nimport { container } from "../../../../../domain/core/diContainer";\nimport { ICreateModel, ICreateModelParam } from "../../../../../domain/useCase/ICreateModel";\nimport { IUseCaseExecutor } from "../../../../../domain/useCase/IUseCaseExecutor";\nimport { IViewModel } from "../../../../../domain/viewModel/IViewModel";\nimport { IStudio } from "../../../../../domain/useCase/IStudio";\nimport { IModel, IModule } from "../../../../../domain/model/models";\nimport { IProcessEditorUtil } from "../../../../../domain/useCase/IProcessEditorUtil";\nimport IDEInput from "../../../components/application/IDEInput.vue";\nimport { IIDEInputDefinitions } from "../../../../../domain/presentation/IIDEInputDefinitions";\nimport { CryptoHelper } from "@stechquick/algae/lib/helpers/cryptoHelper";\nimport RadioButton from "../../radioButtonComp.vue";\nimport CreateDialogFooter from "./createDialogFooter.vue/createDialogFooter.vue";\n\ninterface ICreateNewProcessWizardInline {\n    parentId: string;\n    parentName: string;\n    duplicateFrom: IModel;\n}\n\ninterface IProcessFlow {\n    type?: "create-new-process-flow" | "choose-existing-process-flow";\n    newProcessFlowName?: string;\n    newProcessFlowNameRenderKey?: string;\n    selectedExistingBpmnFileID?: string;\n    selectedExistingBpmnFileName: string;\n    isNewProcessFlowNameValid: boolean;\n}\n\nconst props = defineProps<ICreateNewProcessWizardInline>();\n\nconst viewModel = container.resolve<IViewModel>(IViewModel);\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\nconst studio = container.resolve<IStudio>(IStudio);\nconst processEditorUtil = container.resolve<IProcessEditorUtil>(IProcessEditorUtil);\nconst bpmnFiles = ref<Array<IModel>>(processEditorUtil\n    .getModelsOfModule(viewModel.studio.items.find((item) => item.ID == props.parentId) as IModule)\n    .bpmns);\n\nconst emit = defineEmits(["close"]);\n\nconst isNameValid = ref<boolean>(false);\n\nconst validations = ref<Record<"name", IIDEInputDefinitions["validations"]>>({\n    name: { minAndMaxLength: { min: 3, max: 40 }, availableCharacters: true, nonSpaceCharacter: true }\n});\n\nconst name = ref("");\n\nlet processFlowNameChanged = false;\n\nconst processFlow = ref({\n    selectedExistingBpmnFileName: "",\n    isNewProcessFlowNameValid: false,\n    newProcessFlowName: "",\n    newProcessFlowNameRenderKey: CryptoHelper.CreateGuid(),\n} as IProcessFlow);\n\nfunction create() {\n    executor.execute(\n        async () => {\n            const model = processEditorUtil.getEmptyProcessWizardModel(props.parentName);\n            switch (processFlow.value.type) {\n                case "create-new-process-flow":\n                    model.usingExistingBpmnFile = false;\n                    model.processType = "single_approval";\n                    model.selectedExistingBpmnFileID = "";\n                    model.processFlowName = processFlow.value.newProcessFlowName || name.value;\n                    break;\n                case "choose-existing-process-flow":\n                    model.usingExistingBpmnFile = true;\n                    model.selectedExistingBpmnFileID = processFlow.value.selectedExistingBpmnFileID || "";\n                    break;\n                default:\n                    break;\n            }\n            const createObject: ICreateModelParam = {\n                name: name.value,\n                parentObjectId: props.parentId,\n                modelType: "process",\n                modelBody: [{ key: "process", model }],\n                modelAdditionals: {},\n            };\n            if (props.duplicateFrom) {\n                createObject.duplicateFrom = props.duplicateFrom;\n            }\n            const createdModel = await executor.executeUseCase<ICreateModel>(ICreateModel, createObject);\n            await onAfterModelCreated(createdModel);\n            emit("close");\n        },\n        { loading: true }\n    );\n}\n\nasync function onAfterModelCreated(createdModel: IModel) {\n    await studio.checkout(createdModel);\n    studio.openItem(createdModel);\n}\n\nfunction handleCreateNewProcessFlow(value: IProcessFlow["type"]) {\n    processFlow.value.type = value;\n    switch (processFlow.value.type) {\n        case "create-new-process-flow":\n            processFlow.value.selectedExistingBpmnFileID = "";\n            processFlow.value.selectedExistingBpmnFileName = "";\n            processFlow.value.newProcessFlowNameRenderKey = CryptoHelper.CreateGuid();\n            setNewProcessFlowNameValue(name.value);\n            processFlowNameChanged = false;\n            break;\n        case "choose-existing-process-flow":\n            processFlow.value.isNewProcessFlowNameValid = false;\n            setNewProcessFlowNameValue("");\n            break;\n        default:\n            break;\n    }\n}\n\nfunction handleSelectedExistingBpmnFileID($event: any) {\n    let selectedExistingBpmnFile = $event.target[$event.target.selectedIndex];\n    processFlow.value.selectedExistingBpmnFileID = selectedExistingBpmnFile.id;\n}\n\nfunction setNameValue(value: string) {\n    name.value = value;\n    if (!processFlowNameChanged) {\n        processFlow.value.newProcessFlowName = value;\n        processFlow.value.newProcessFlowNameRenderKey = CryptoHelper.CreateGuid();\n    }\n}\n\nfunction setNewProcessFlowNameValue(value: string) {\n    processFlow.value.newProcessFlowName = value;\n    processFlowNameChanged = true;\n}\n\nfunction setNameValidationStatus(isValid: boolean) {\n    isNameValid.value = isValid;\n}\n\nfunction setNewProcessFlowNameValidationStatus(isValid: boolean) {\n    processFlow.value.isNewProcessFlowNameValid = isValid;\n}\n<\/script>\n\n<template>\n    <div class="name-input-div" style="padding-top: 32px;">\n        <div v-if="props.duplicateFrom" class="duplicate-note-div">\n            <span class="label-value">* This new Item will be duplicated from\n                <span class="duplicate-text">{{ props.duplicateFrom.name }}.process </span>\n            </span>\n        </div>\n        <div class="input-label">Process Name</div>\n        <IDEInput :isRequired="true" :disable-required-icon="true" @getValue="setNameValue"\n            @validateStatus="setNameValidationStatus" :placeholder="``" :type="\'text\'" info-text=""\n            :validations="validations.name" />\n        <div v-if="!props.duplicateFrom">\n            <hr style="margin: 32px 0px 32px 0px" />\n            <div style="display:flex;">\n                <RadioButton class="radio-button" :active="processFlow.type == \'create-new-process-flow\'"\n                    @click="handleCreateNewProcessFlow(\'create-new-process-flow\')" />\n                <span class="radio-text"> Create New Process Flow (BPMN)</span>\n            </div>\n            <div v-if="processFlow.type == \'create-new-process-flow\'" style="margin-top: 16px;">\n                <div class="input-label">Process Flow Name</div>\n                <IDEInput :isRequired="true" :disable-required-icon="true" @getValue="setNewProcessFlowNameValue"\n                    @validateStatus="setNewProcessFlowNameValidationStatus"\n                    :key="processFlow.newProcessFlowNameRenderKey" :value="processFlow.newProcessFlowName"\n                    :placeholder="``" :type="\'text\'" info-text="" :validations="validations.name" />\n            </div>\n            <div style="display:flex; margin-top: 30px;">\n                <RadioButton class="radio-button" :active="processFlow.type == \'choose-existing-process-flow\'"\n                    @click="handleCreateNewProcessFlow(\'choose-existing-process-flow\')" />\n                <span class="radio-text"> Choose Existing Process Flow (BPMN)</span>\n            </div>\n            <div v-if="processFlow.type == \'choose-existing-process-flow\'" style="margin-top: 16px;">\n                <span class="input-label"> BPMN File </span>\n                <select class="choose-existing-process-flow-dropdown" name="choose-existing-process-flow"\n                    id="choose-existing-process-flow" v-model="processFlow.selectedExistingBpmnFileName"\n                    @change="handleSelectedExistingBpmnFileID" required>\n                    <option value="" disabled selected>Choose Existing Process Flow (BPMN)</option>\n                    <option v-for="bpmnFile in bpmnFiles" :id="bpmnFile.ID">\n                        {{ bpmnFile.name }}\n                    </option>\n                </select>\n            </div>\n        </div>\n    </div>\n    <CreateDialogFooter :cancel-button-cb="() => emit(\'close\')" :create-button-cb="create"\n        :create-button-enabled="isNameValid && (!!processFlow.selectedExistingBpmnFileName.length || processFlow.isNewProcessFlowNameValid)" />\n</template>\n\n<style scoped>\n.duplicate-note-div {\n    margin-bottom: 10px;\n}\n\n.duplicate-text {\n    font-weight: bold;\n}\n\n.radio-button {\n    margin-top: 2px;\n    cursor: pointer;\n}\n\n.radio-text {\n    font: normal normal normal 16px/21px Roboto;\n    color: #212121;\n    margin-left: 6px;\n}\n\n.choose-existing-process-flow-dropdown {\n    width: 511px;\n    border: 1px solid #a1a1a1;\n    border-radius: 4px;\n    height: 40px;\n    padding: 8px;\n    font-size: 14px;\n    font-family: "Roboto";\n    margin-top: 3px;\n}\n</style>\n'],sourceRoot:""}]);const l=i},2164:(e,n,o)=>{o.d(n,{Z:()=>l});var t=o(51864),a=o.n(t),s=o(60352),i=o.n(s)()(a());i.push([e.id,"\n.outer-circle-preview {\n    width: 18px;\n    height: 18px;\n    display: block;\n    background: #151233 0% 0% no-repeat padding-box;\n    border-radius: 50%;\n    padding: 5px;\n}\n.outer-circle-export {\n    width: 18px;\n    height: 18px;\n    display: block;\n    background: #151233 0% 0% no-repeat padding-box;\n    border-radius: 50%;\n    padding: 5px;\n}\n.outer-circle-gray {\n    width: 18px;\n    height: 18px;\n    display: block;\n    background: #cbcbcb 0% 0% no-repeat padding-box;\n    border-radius: 50%;\n    padding: 5px;\n}\n.inner-circle-preview {\n    width: 8px;\n    height: 8px;\n    display: block;\n    background: #FFFFFF 0% 0% no-repeat padding-box;\n    border-radius: 50%;\n}\n.inner-circle-export {\n    width: 8px;\n    height: 8px;\n    display: block;\n    background: #FFFFFF 0% 0% no-repeat padding-box;\n    border-radius: 50%;\n}\n\n","",{version:3,sources:["webpack://./src/presentation/vue3/components/radioButtonComp.vue"],names:[],mappings:";AAgBA;IACI,WAAW;IACX,YAAY;IACZ,cAAc;IACd,+CAA+C;IAC/C,kBAAkB;IAClB,YAAY;AAChB;AAEA;IACI,WAAW;IACX,YAAY;IACZ,cAAc;IACd,+CAA+C;IAC/C,kBAAkB;IAClB,YAAY;AAChB;AAEA;IACI,WAAW;IACX,YAAY;IACZ,cAAc;IACd,+CAA+C;IAC/C,kBAAkB;IAClB,YAAY;AAChB;AAEA;IACI,UAAU;IACV,WAAW;IACX,cAAc;IACd,+CAA+C;IAC/C,kBAAkB;AACtB;AAEA;IACI,UAAU;IACV,WAAW;IACX,cAAc;IACd,+CAA+C;IAC/C,kBAAkB;AACtB",sourcesContent:['<template>\n    <div :class="\'outer-circle-\' +  (!props.active ? \'gray\' : type)">\n        <div :class="\'inner-circle-\' + type" v-if="props.active"></div>\n    </div>\n</template>\n\n<script setup lang="ts">\ninterface IRadioButtonCompProps {\n    active?: boolean;\n    type: string;\n}\n\nconst props = defineProps<IRadioButtonCompProps>();\n<\/script>\n\n<style>\n.outer-circle-preview {\n    width: 18px;\n    height: 18px;\n    display: block;\n    background: #151233 0% 0% no-repeat padding-box;\n    border-radius: 50%;\n    padding: 5px;\n}\n\n.outer-circle-export {\n    width: 18px;\n    height: 18px;\n    display: block;\n    background: #151233 0% 0% no-repeat padding-box;\n    border-radius: 50%;\n    padding: 5px;\n}\n\n.outer-circle-gray {\n    width: 18px;\n    height: 18px;\n    display: block;\n    background: #cbcbcb 0% 0% no-repeat padding-box;\n    border-radius: 50%;\n    padding: 5px;\n}\n\n.inner-circle-preview {\n    width: 8px;\n    height: 8px;\n    display: block;\n    background: #FFFFFF 0% 0% no-repeat padding-box;\n    border-radius: 50%;\n}\n\n.inner-circle-export {\n    width: 8px;\n    height: 8px;\n    display: block;\n    background: #FFFFFF 0% 0% no-repeat padding-box;\n    border-radius: 50%;\n}\n\n</style>\n'],sourceRoot:""}]);const l=i},43467:(e,n,o)=>{o.d(n,{Z:()=>B});var t=o(62068),a=o(49045);const s={class:"createButtonDiv"},i=["disabled"],l=(0,t.aZ)({__name:"createDialogFooter",props:{createButtonText:null,cancelButtonText:null,createButtonEnabled:{type:Boolean},createButtonCb:null,cancelButtonCb:null},setup(e){const n=e;return(o,l)=>((0,t.wg)(),(0,t.iD)("div",s,[(0,t._)("button",{class:"cancelButton",onClick:l[0]||(l[0]=(...e)=>n.cancelButtonCb&&n.cancelButtonCb(...e))},(0,a.toDisplayString)(e.cancelButtonText||"Cancel"),1),(0,t._)("button",{style:(0,a.normalizeStyle)({opacity:n.createButtonEnabled?"":"0.5"}),class:"createButton",onClick:l[1]||(l[1]=(...e)=>n.createButtonCb&&n.createButtonCb(...e)),disabled:!n.createButtonEnabled},(0,a.toDisplayString)(e.createButtonText||"CREATE"),13,i)]))}});var r=o(75701),c=o.n(r),p=o(8236),d=o.n(p),u=o(6080),A=o.n(u),m=o(56850),w=o.n(m),g=o(87182),v=o.n(g),x=o(39213),C=o.n(x),b=o(22025),I={};I.styleTagTransform=C(),I.setAttributes=w(),I.insert=A().bind(null,"head"),I.domAPI=d(),I.insertStyleElement=v(),c()(b.Z,I),b.Z&&b.Z.locals&&b.Z.locals;const B=(0,o(51419).Z)(l,[["__scopeId","data-v-5378fa42"]])},94993:(e,n,o)=>{o.r(n),o.d(n,{default:()=>J});var t=o(62068),a=o(49045),s=o(51705),i=o(81407),l=o(3734),r=o(79388),c=o(80664),p=o(67422),d=o(33900),u=o(97409),A=o(15239),m=o(51461),w=o(87137),g=o(43467);const v=e=>((0,t.dD)("data-v-7f02898a"),e=e(),(0,t.Cn)(),e),x={class:"name-input-div",style:{"padding-top":"32px"}},C={key:0,class:"duplicate-note-div"},b={class:"label-value"},I=(0,t.Uk)("* This new Item will be duplicated from "),B={class:"duplicate-text"},f=v((()=>(0,t._)("div",{class:"input-label"},"Process Name",-1))),F={key:1},h=v((()=>(0,t._)("hr",{style:{margin:"32px 0px 32px 0px"}},null,-1))),y={style:{display:"flex"}},N=v((()=>(0,t._)("span",{class:"radio-text"}," Create New Process Flow (BPMN)",-1))),k={key:0,style:{"margin-top":"16px"}},P=v((()=>(0,t._)("div",{class:"input-label"},"Process Flow Name",-1))),E={style:{display:"flex","margin-top":"30px"}},D=v((()=>(0,t._)("span",{class:"radio-text"}," Choose Existing Process Flow (BPMN)",-1))),M={key:1,style:{"margin-top":"16px"}},V=v((()=>(0,t._)("span",{class:"input-label"}," BPMN File ",-1))),Z=v((()=>(0,t._)("option",{value:"",disabled:"",selected:""},"Choose Existing Process Flow (BPMN)",-1))),R=["id"],Y=(0,t.aZ)({__name:"createNewProcessWizard",props:{parentId:null,parentName:null,duplicateFrom:null},emits:["close"],setup(e,{emit:n}){const o=e,v=l.nC.resolve(p.J),Y=l.nC.resolve(c.y),S=l.nC.resolve(d.c),_=l.nC.resolve(u.s),T=(0,i.iH)(_.getModelsOfModule(v.studio.items.find((e=>e.ID==o.parentId))).bpmns),W=(0,i.iH)(!1),q=(0,i.iH)({name:{minAndMaxLength:{min:3,max:40},availableCharacters:!0,nonSpaceCharacter:!0}}),O=(0,i.iH)("");let U=!1;const z=(0,i.iH)({selectedExistingBpmnFileName:"",isNewProcessFlowNameValid:!1,newProcessFlowName:"",newProcessFlowNameRenderKey:m.j.CreateGuid()});function H(){Y.execute((async()=>{const e=_.getEmptyProcessWizardModel(o.parentName);switch(z.value.type){case"create-new-process-flow":e.usingExistingBpmnFile=!1,e.processType="single_approval",e.selectedExistingBpmnFileID="",e.processFlowName=z.value.newProcessFlowName||O.value;break;case"choose-existing-process-flow":e.usingExistingBpmnFile=!0,e.selectedExistingBpmnFileID=z.value.selectedExistingBpmnFileID||""}const t={name:O.value,parentObjectId:o.parentId,modelType:"process",modelBody:[{key:"process",model:e}],modelAdditionals:{}};o.duplicateFrom&&(t.duplicateFrom=o.duplicateFrom);const a=await Y.executeUseCase(r.E,t);await async function(e){await S.checkout(e),S.openItem(e)}(a),n("close")}),{loading:!0})}function K(e){switch(z.value.type=e,z.value.type){case"create-new-process-flow":z.value.selectedExistingBpmnFileID="",z.value.selectedExistingBpmnFileName="",z.value.newProcessFlowNameRenderKey=m.j.CreateGuid(),X(O.value),U=!1;break;case"choose-existing-process-flow":z.value.isNewProcessFlowNameValid=!1,X("")}}function j(e){let n=e.target[e.target.selectedIndex];z.value.selectedExistingBpmnFileID=n.id}function G(e){O.value=e,U||(z.value.newProcessFlowName=e,z.value.newProcessFlowNameRenderKey=m.j.CreateGuid())}function X(e){z.value.newProcessFlowName=e,U=!0}function $(e){W.value=e}function J(e){z.value.isNewProcessFlowNameValid=e}return(e,i)=>((0,t.wg)(),(0,t.iD)(t.HY,null,[(0,t._)("div",x,[o.duplicateFrom?((0,t.wg)(),(0,t.iD)("div",C,[(0,t._)("span",b,[I,(0,t._)("span",B,(0,a.toDisplayString)(o.duplicateFrom.name)+".process ",1)])])):(0,t.kq)("v-if",!0),f,(0,t.Wm)(A.Z,{isRequired:!0,"disable-required-icon":!0,onGetValue:G,onValidateStatus:$,placeholder:"",type:"text","info-text":"",validations:q.value.name},null,8,["validations"]),o.duplicateFrom?(0,t.kq)("v-if",!0):((0,t.wg)(),(0,t.iD)("div",F,[h,(0,t._)("div",y,[(0,t.Wm)(w.Z,{class:"radio-button",active:"create-new-process-flow"==z.value.type,onClick:i[0]||(i[0]=e=>K("create-new-process-flow"))},null,8,["active"]),N]),"create-new-process-flow"==z.value.type?((0,t.wg)(),(0,t.iD)("div",k,[P,((0,t.wg)(),(0,t.j4)(A.Z,{isRequired:!0,"disable-required-icon":!0,onGetValue:X,onValidateStatus:J,key:z.value.newProcessFlowNameRenderKey,value:z.value.newProcessFlowName,placeholder:"",type:"text","info-text":"",validations:q.value.name},null,8,["value","validations"]))])):(0,t.kq)("v-if",!0),(0,t._)("div",E,[(0,t.Wm)(w.Z,{class:"radio-button",active:"choose-existing-process-flow"==z.value.type,onClick:i[1]||(i[1]=e=>K("choose-existing-process-flow"))},null,8,["active"]),D]),"choose-existing-process-flow"==z.value.type?((0,t.wg)(),(0,t.iD)("div",M,[V,(0,t.wy)((0,t._)("select",{class:"choose-existing-process-flow-dropdown",name:"choose-existing-process-flow",id:"choose-existing-process-flow","onUpdate:modelValue":i[2]||(i[2]=e=>z.value.selectedExistingBpmnFileName=e),onChange:j,required:""},[Z,((0,t.wg)(!0),(0,t.iD)(t.HY,null,(0,t.Ko)(T.value,(e=>((0,t.wg)(),(0,t.iD)("option",{id:e.ID},(0,a.toDisplayString)(e.name),9,R)))),256))],544),[[s.vModelSelect,z.value.selectedExistingBpmnFileName]])])):(0,t.kq)("v-if",!0)]))]),(0,t.Wm)(g.Z,{"cancel-button-cb":()=>n("close"),"create-button-cb":H,"create-button-enabled":W.value&&(!!z.value.selectedExistingBpmnFileName.length||z.value.isNewProcessFlowNameValid)},null,8,["cancel-button-cb","create-button-enabled"])],64))}});var S=o(75701),_=o.n(S),T=o(8236),W=o.n(T),q=o(6080),O=o.n(q),U=o(56850),z=o.n(U),H=o(87182),K=o.n(H),j=o(39213),G=o.n(j),X=o(7112),$={};$.styleTagTransform=G(),$.setAttributes=z(),$.insert=O().bind(null,"head"),$.domAPI=W(),$.insertStyleElement=K(),_()(X.Z,$),X.Z&&X.Z.locals&&X.Z.locals;const J=(0,o(51419).Z)(Y,[["__scopeId","data-v-7f02898a"]])},87137:(e,n,o)=>{o.d(n,{Z:()=>b});var t=o(62068),a=o(49045);const s=(0,t.aZ)({__name:"radioButtonComp",props:{active:{type:Boolean},type:null},setup(e){const n=e;return(o,s)=>((0,t.wg)(),(0,t.iD)("div",{class:(0,a.normalizeClass)("outer-circle-"+(n.active?e.type:"gray"))},[n.active?((0,t.wg)(),(0,t.iD)("div",{key:0,class:(0,a.normalizeClass)("inner-circle-"+e.type)},null,2)):(0,t.kq)("v-if",!0)],2))}});var i=o(75701),l=o.n(i),r=o(8236),c=o.n(r),p=o(6080),d=o.n(p),u=o(56850),A=o.n(u),m=o(87182),w=o.n(m),g=o(39213),v=o.n(g),x=o(2164),C={};C.styleTagTransform=v(),C.setAttributes=A(),C.insert=d().bind(null,"head"),C.domAPI=c(),C.insertStyleElement=w(),l()(x.Z,C),x.Z&&x.Z.locals&&x.Z.locals;const b=s}}]);
//# sourceMappingURL=4993.js.map