!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.flowcomponent=t():e.flowcomponent=t()}(this,(()=>(()=>{"use strict";var e={d:(t,o)=>{for(var r in o)e.o(o,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:o[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};function o(e,t){switch(e){case"'":case'"':return[e,t+1];default:return[void 0,t]}}function r(e,t,o){if("other"==o.type){if("object"!=typeof e)return;return e[t]=o.value}let r=e[t];return void 0!==r?r:e[t]="array"==o.type?[]:{}}function n(e,t){switch(e[t]){case'"':case"'":return"object";default:return"array"}}e.r(t),e.d(t,{default:()=>s});const a=function(e,t,a){switch(e.type){case"vars":case"output":if(a.msg.output=a.msg.output||{},e.value){const s="vars"==e.type?a.msg.vars:a.msg.output;!function(e,t,a){let s=a;const c=e.length;let f,l="",u=!1;for(var i=0;i<c;i++){let a=e[i];if(u)if(f==a||"]"==a&&!f){let o;switch(f&&i++,e[i+1]){case"[":o={type:n(e,i+2)};break;case".":o={type:"object"};break;case void 0:o={type:"other",value:t};break;default:throw new Error("unexpected set msg")}s=r(s,l,o),l="",u=!1}else l+=a;else switch(a){case".":l&&(s=r(s,l,{type:"object"})),l="";break;case"[":l&&(s=r(s,l,{type:n(e,i+1)})),l="",[f,i]=o(e[i+1],i),u=!0;break;default:l+=a}}l&&(s=r(s,l,{type:"other",value:t}))}(e.value,t,s)}else Object.keys(t).forEach((e=>a.msg.output[e]=t[e]));break;case"wholeVars":Object.keys(t).forEach((e=>a.msg.vars[e]=t[e]))}},s=e=>{const t=e.flow.getServer();if(!t)throw new Error("apiInput can not execute on environments without server");const{pathVars:o,headers:r,body:n,queryParams:s}=e.props;if(o){const r=t.getPath().split("/").filter((e=>""!=e));o.forEach(((t,o)=>{if("string"==typeof t){if(t!=r[o])return void e.flow.stop()}else e.flow.evalSet(t,r[o],a)}))}if(s){const o=t.getQueryParameters();s.forEach((t=>{const r=o[t.key];null!=r&&e.flow.evalSet(t.value,"string"==typeof r?r:r[0],a)}))}if(r){const o=t.getHeaders();r.forEach((t=>{const r=o[t.key];null!=r&&e.flow.evalSet(t.value,"string"==typeof r?r:r[0],a)}))}if(n){const o=t.getBody();if(null==o)throw new Error("Request Body is empty, can not retrieve body from input");n.forEach((t=>{const r=t.field?o[t.field]:o;e.flow.evalSet(t.target,r,a)}))}e.flow.next()};return t})()));