!function(e,o){"object"==typeof exports&&"object"==typeof module?module.exports=o():"function"==typeof define&&define.amd?define([],o):"object"==typeof exports?exports.flowcomponent=o():e.flowcomponent=o()}(this,(()=>(()=>{"use strict";var e={d:(o,t)=>{for(var r in t)e.o(t,r)&&!e.o(o,r)&&Object.defineProperty(o,r,{enumerable:!0,get:t[r]})},o:(e,o)=>Object.prototype.hasOwnProperty.call(e,o),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},o={};e.r(o),e.d(o,{default:()=>r});const t={"==":(e,o,t)=>e===t.flow.eval(o.expression),other:()=>!0,empty:e=>""===e,null:e=>null==e},r=e=>{const o=e.flow.eval(e.props.expression),r=e.props.cases,n=r.length;for(let l=0;l<n;l++){const n=r[l];if(t[n.operator](o,n,e))return e.flow.next(n.output.toString())}e.flow.stop()};return o})()));