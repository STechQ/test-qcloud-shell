!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.flowcomponent=t():e.flowcomponent=t()}(this,(()=>(()=>{"use strict";var e={d:(t,r)=>{for(var o in r)e.o(r,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:r[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};function r(e,t){switch(e){case"'":case'"':return[e,t+1];default:return[void 0,t]}}function o(e,t){if(null!=e)return e[t]}function n(e,t){let n=t;const u=e.length;let s,a="",l=!1;for(var c=0;c<u;c++){let t=e[c];if(l)s==t||"]"==t&&!s?(s&&c++,n=o(n,a),a="",l=!1):a+=t;else switch(t){case".":a&&(n=o(n,a)),a="";break;case"[":a&&(n=o(n,a)),a="",[s,c]=r(e[c+1],c),l=!0;break;default:a+=t}}return a&&(n=o(n,a)),n}e.r(t),e.d(t,{default:()=>s});const u=function(e,t){switch(e.type){case"boolean":return"true"==e.value;case"input":return n(e.value,t.msg.input);case"vars":case"output":return n(e.value,t.msg.vars);case"number":return Number(e.value);case"string":case"enum":return e.value;case"literal":return function(e,t){const r=t,o=Object.create(null),n=Object.keys(t),u=n.map((e=>r[e]?r[e]:void 0));let s=`return \`${e}\`;`;return new Function("window","global","globalThis",...n,"document","XMLHttpRequest","fetch","setInterval","navigator",s).apply(o,[o,o,o,...u,void 0,void 0,void 0,void 0,void 0])}(e.value,t.msg);case"wholeMsg":return t.msg;case"wholeVars":return t.msg.vars;case"notSet":return}},s=e=>{const t=e.flow.getServer();if(!t)throw new Error("apiOutput can not execute on environments without server");const{statusCode:r,headers:o,body:n}=e.props,s=Number(e.flow.evalGet(r,u));if(!s)throw new Error("apiOutput status must be a positive number");let a,l;o&&(a=Object.keys(o).reduce(((t,r)=>{const n=e.flow.evalGet(o[r],u);return void 0===n||(t[r]=n.toString()),t}),{})),n&&(l=e.flow.evalGet(n,u)),t.writeResponse({statusCode:s,body:l,headers:a}),e.flow.next()};return t})()));