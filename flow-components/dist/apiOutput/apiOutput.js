!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.flowcomponent=t():e.flowcomponent=t()}(this,(()=>(()=>{"use strict";var e={d:(t,o)=>{for(var r in o)e.o(o,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:o[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};function o(e,t){switch(e){case"'":case'"':return[e,t+1];default:return[void 0,t]}}function r(e,t){if(null!=e)return e[t]}function n(e,t){let n=t;const u=e.length;let s,a="",c=!1;for(var l=0;l<u;l++){let t=e[l];if(c)s==t||"]"==t&&!s?(s&&l++,n=r(n,a),a="",c=!1):a+=t;else switch(t){case".":a&&(n=r(n,a)),a="";break;case"[":a&&(n=r(n,a)),a="",[s,l]=o(e[l+1],l),c=!0;break;default:a+=t}}return a&&(n=r(n,a)),n}e.r(t),e.d(t,{default:()=>s});const u=function(e,t){switch(e.type){case"boolean":return"true"==e.value;case"input":return n(e.value,t.msg.input);case"context":return n(e.value,t.msg.context);case"output":return n(e.value,t.msg.output);case"number":return Number(e.value);case"string":case"enum":return e.value;case"literal":return function(e,t){const o=t,r=Object.create(null),n=Object.keys(t),u=n.map((e=>o[e]?o[e]:void 0));let s=`return \`${e}\`;`;return new Function("window","global","globalThis",...n,"document","XMLHttpRequest","fetch","setInterval","navigator",s).apply(r,[r,r,r,...u,void 0,void 0,void 0,void 0,void 0])}(e.value,t.msg);case"wholeMsg":return t.msg;case"wholeVars":return t.msg.context.vars;case"notSet":return}},s=e=>{const t=e.flow.getServer();if(!t)throw new Error("apiOutput can not execute on environments without server");const{statusCode:o,headers:r,body:n}=e.props,s=Number(e.flow.evalGet(o,u));if(!s)throw new Error("apiOutput status must be a positive number");let a,c;r&&(a=Object.keys(r).reduce(((t,o)=>{const n=e.flow.evalGet(r[o],u);return void 0===n||(t[o]=n.toString()),t}),{})),n&&(c=e.flow.evalGet(n,u)),t.writeResponse({statusCode:s,body:c,headers:a}),e.flow.next()};return t})()));