{"version":3,"file":"9157.js","mappings":"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","sources":["webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/attachModuleToApp.vue?71cd","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/attachModuleToApp.vue"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\"\n\nconst _hoisted_1 = [\"onClick\"]\nconst _hoisted_2 = [\"onClick\"]\n\nimport { computed } from '@vue/reactivity';\nimport { ref } from 'vue';\nimport { container } from '../../../../domain/core/diContainer';\nimport { ILocalization } from '../../../../domain/infrastructure/ILocalization';\nimport { IModule } from '../../../../domain/model/models';\nimport { IObjectUseCase } from '../../../../domain/useCase/IObjectUseCase';\nimport { IStudio } from '../../../../domain/useCase/IStudio';\nimport { IUseCaseExecutor } from '../../../../domain/useCase/IUseCaseExecutor';\nimport { IViewModel } from '../../../../domain/viewModel/IViewModel';\n\ninterface IExtendedModuleItem extends IModule {\n    relatedAppNames?: string;\n}\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'attachModuleToApp',\n  emits: [\"close\"],\n  setup(__props, { emit }) {\n\nconst viewModel = container.resolve<IViewModel>(IViewModel);\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\nconst localization = container.resolve<ILocalization>(ILocalization);\nconst objectUseCase = container.resolve<IObjectUseCase>(IObjectUseCase);\nconst studio = container.resolve<IStudio>(IStudio);\n\n\nconst tableData = ref<Array<IExtendedModuleItem>>([]);\nconst tableColumns = ref([\"name\", \"description\", \"relatedAppNames\", \"createDate\", \"createdBy\", \"actions\"]);\nconst tableOptions = ref({\n    filterable: true,\n    perPage: 5,\n    perPageValues: [],\n    headings: {\n        name: localization.get(\"moduleName\"),\n        description: localization.get(\"description\"),\n        relatedAppNames: localization.get(\"relatedApplications\"),\n        createDate: localization.get(\"createDate\"),\n        createdBy: localization.get(\"createdBy\"),\n        actions: \"\",\n    },\n    sortIcon: {\n        base: 'mdi',\n        is: 'mdi mdi-unfold-less-horizontal',\n        up: 'mdi mdi-arrow-up',\n        down: 'mdi mdi-arrow-down'\n    },\n    texts: {\n        count: \"\",\n    },\n});\nconst dateOptions: any = { month: '2-digit', day: '2-digit', year: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric' };\n\nfunction refreshTable(){\n    executor.execute(async () => {\n    const modules: Array<IExtendedModuleItem> = await objectUseCase.listModules();\n    const appsDict: Record<string, string> = {};\n    viewModel.apps.forEach(app => appsDict[app.ID] = app.name);\n\n    modules.forEach(module => {\n        const appNamesArr = module.relatedApplications.map(i => appsDict[i.applicationID]);\n        module.relatedAppNames = appNamesArr.join(\", \");\n    });\n\n    tableData.value = modules;\n}, { loading: true });\n}\n\nrefreshTable()\nfunction add(module: IModule) {\n    executor.execute(async () => {\n        const applicationID = viewModel.studio.appId;\n        await studio.attachModuletoApplication(module, applicationID);\n        const curModule = tableData.value.find(i => i.ID == module.ID);\n        curModule!.relatedApplications.push({ applicationID });\n        refreshTable()\n    }, { loading: true });\n}\n\nfunction remove(module: IModule) {\n    executor.execute(async () => {\n        const applicationID = viewModel.studio.appId;\n        await studio.detachModuleFromApplication(module, applicationID);\n        const curModule = tableData.value.find(i => i.ID == module.ID)!;\n        curModule.relatedApplications = curModule.relatedApplications.filter(i => i.applicationID != applicationID);\n        refreshTable()\n    }, { loading: true });\n}\n\nfunction isAddedtoCurrentApp(module: IModule) {\n    const appID = viewModel.studio.appId;\n    const isAdded = module.relatedApplications?.some(i => i.applicationID == appID);\n    return !!isAdded;\n}\n\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_v_client_table = _resolveComponent(\"v-client-table\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createVNode(_component_v_client_table, {\n      ref: \"table\",\n      data: tableData.value,\n      columns: tableColumns.value,\n      options: tableOptions.value\n    }, {\n      createDate: _withCtx((props) => [\n        _createElementVNode(\"span\", null, _toDisplayString(new Intl.DateTimeFormat(\"tr-TR\", dateOptions).format(new Date(props.row.createDate))), 1 /* TEXT */)\n      ]),\n      relatedAppNames: _withCtx((props) => [\n        _createElementVNode(\"span\", null, _toDisplayString(props.row.relatedAppNames), 1 /* TEXT */)\n      ]),\n      actions: _withCtx((props) => [\n        (isAddedtoCurrentApp(props.row))\n          ? (_openBlock(), _createElementBlock(\"button\", {\n              key: 0,\n              onClick: ($event: any) => (remove(props.row))\n            }, \"Remove\", 8 /* PROPS */, _hoisted_1))\n          : (_openBlock(), _createElementBlock(\"button\", {\n              key: 1,\n              onClick: ($event: any) => (add(props.row))\n            }, \"Add\", 8 /* PROPS */, _hoisted_2))\n      ]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"data\", \"columns\", \"options\"])\n  ]))\n}\n}\n\n})","import script from \"./attachModuleToApp.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./attachModuleToApp.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["_hoisted_1","_hoisted_2","__name","emits","setup","__props","emit","viewModel","IViewModel","executor","IUseCaseExecutor","localization","ILocalization","objectUseCase","IObjectUseCase","studio","IStudio","tableData","tableColumns","tableOptions","filterable","perPage","perPageValues","headings","name","get","description","relatedAppNames","createDate","createdBy","actions","sortIcon","base","is","up","down","texts","count","dateOptions","month","day","year","hour","minute","second","refreshTable","execute","async","modules","listModules","appsDict","apps","forEach","app","ID","module","appNamesArr","relatedApplications","map","i","applicationID","join","value","loading","isAddedtoCurrentApp","appID","appId","some","_ctx","_cache","_component_v_client_table","ref","data","columns","options","props","_","Intl","DateTimeFormat","format","Date","row","key","onClick","$event","detachModuleFromApplication","curModule","find","filter","attachModuletoApplication","push"],"sourceRoot":""}