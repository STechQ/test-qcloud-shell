"use strict";(this.webpackChunkqcloud_shell=this.webpackChunkqcloud_shell||[]).push([[4431],{62323:(n,e,a)=>{a.d(e,{Z:()=>l});var t=a(34663),o=a.n(t),i=a(7638),s=a.n(i)()(o());s.push([n.id,'\n*[data-v-4081090e] {\n        font-family: "Roboto";\n}\n.container[data-v-4081090e] {      \n        padding: 20px 20px 0 20px;\n        overflow: auto;\n        max-height: 650px;\n}\n.app-limit[data-v-4081090e] {\n        display: flex;\n        align-items: center;\n}\n.app-limit span[data-v-4081090e] {\n        font-size: 14px;\n        line-height: 16px;\n        color: #212121;\n}\n.app-limit input[data-v-4081090e] {\n        border: 1px solid #BCBCBC;\n        border-radius: 4px;\n        padding: 8px 8px 8px 12px;\n        width: 70px;\n        height: 40px;\n        margin-left: 111px;\n        outline: none;\n        margin-left: auto;\n}\n.organization-prop[data-v-4081090e] {\n        margin-bottom: 20px;\n}\n.organization-prop label[data-v-4081090e] {\n        font-weight: 500;\n        font-size: 16px;\n        line-height: 24px;\n        color: #151233;\n        margin-bottom: 4px;\n}\n.buttons-div[data-v-4081090e] {\n        display: flex;\n        justify-content: end;\n        position: sticky;\n        bottom: 0;\n        background: #FFFFFF;\n        padding: 40px 0 20px;\n}\n.cancel-button[data-v-4081090e] {\n        font-weight: 500;\n        font-size: 16px;\n        text-align: center;\n        color: #757575;\n        display: flex;\n        align-items: center;\n        padding: 8px 16px;\n        border-radius: 4px;\n        margin-right: 4px;\n        border: none;\n        background: transparent;\n}\n.save-button[data-v-4081090e] {\n        font-weight: 500;\n        font-size: 16px;\n        text-align: center;\n        color: #FFFFFF;\n        background: #151233;\n        display: flex;\n        align-items: center;\n        padding: 8px 16px;\n        border-radius: 4px;\n        border: none;\n}\n.editor-type-name[data-v-4081090e],\n    .publish-type-name[data-v-4081090e] {\n        color: #212121;\n        font-size: 14px;\n        line-height: 16px;\n}\n.editor-type[data-v-4081090e],\n    .publish-type[data-v-4081090e] {\n        display: flex;\n        align-items: center;\n        margin-bottom: 12px;\n}\n.select-account-type[data-v-4081090e],\n    .select-organization-group[data-v-4081090e],\n    .select-tags[data-v-4081090e] {\n        width: 100%;\n        font-size: 15px;\n        height: 40px;\n        line-height: 40px;\n        border: 1px solid #BCBCBC;\n        border-radius: 4px;\n        padding: 0px 12px;\n}\n    /*Switch Toggle CSS */\n.editor-type-switch[data-v-4081090e],\n    .publish-type-switch[data-v-4081090e] {\n        position: relative;\n        cursor: pointer;\n        top: 0;\n        bottom: 0;\n        background-color: #ccc;\n        -webkit-transition: 0.4s;\n        transition: 0.4s;\n        margin-right: 13px;\n        margin-left: auto;\n}\n.editor-type-switch[data-v-4081090e]:after,\n    .publish-type-switch[data-v-4081090e]:after {\n        position: absolute;\n        content: "";\n        height: 14px;\n        width: 14px;\n        background-color: white;\n        -webkit-transition: 0.4s;\n        transition: 0.4s;\n        border-radius: 50%;\n}\n.editor-type-switch[data-v-4081090e]:disabled:after,\n    .publish-type-switch[data-v-4081090e]:disabled:after {\n        background-color: #757575;\n}\n.editor-type-switch[data-v-4081090e]:checked,\n    .publish-type-switch[data-v-4081090e]:checked {\n        background-color: #151233;\n}\ninput[type=checkbox][data-v-4081090e] {\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n        -webkit-tap-highlight-color: transparent;\n        cursor: pointer;\n}\n.editor-type-switch[data-v-4081090e]:checked:after,\n    .publish-type-switch[data-v-4081090e]:checked:after {\n        transform: translatex(16px);\n}\n.editor-type-switch.round[data-v-4081090e]::after,\n    .publish-type-switch.round[data-v-4081090e]::after {\n        left: 3px;\n        border-radius: 50%;\n}\n.editor-type-switch.round[data-v-4081090e],\n    .publish-type-switch.round[data-v-4081090e] {\n        width: 36px;\n        height: 20px;\n        border-radius: 34px;\n        padding: 3px;\n}\n.custom-select .selected[data-v-4081090e] {\n        height: 40px\n}\n',"",{version:3,sources:["webpack://./src/presentation/vue3/components/dialogs/backoffice/manageOrganization.vue"],names:[],mappings:";AAiLI;QACI,qBAAqB;AACzB;AACA;QACI,yBAAyB;QACzB,cAAc;QACd,iBAAiB;AACrB;AACA;QACI,aAAa;QACb,mBAAmB;AACvB;AACA;QACI,eAAe;QACf,iBAAiB;QACjB,cAAc;AAClB;AACA;QACI,yBAAyB;QACzB,kBAAkB;QAClB,yBAAyB;QACzB,WAAW;QACX,YAAY;QACZ,kBAAkB;QAClB,aAAa;QACb,iBAAiB;AACrB;AACA;QACI,mBAAmB;AACvB;AACA;QACI,gBAAgB;QAChB,eAAe;QACf,iBAAiB;QACjB,cAAc;QACd,kBAAkB;AACtB;AACA;QACI,aAAa;QACb,oBAAoB;QACpB,gBAAgB;QAChB,SAAS;QACT,mBAAmB;QACnB,oBAAoB;AACxB;AACA;QACI,gBAAgB;QAChB,eAAe;QACf,kBAAkB;QAClB,cAAc;QACd,aAAa;QACb,mBAAmB;QACnB,iBAAiB;QACjB,kBAAkB;QAClB,iBAAiB;QACjB,YAAY;QACZ,uBAAuB;AAC3B;AACA;QACI,gBAAgB;QAChB,eAAe;QACf,kBAAkB;QAClB,cAAc;QACd,mBAAmB;QACnB,aAAa;QACb,mBAAmB;QACnB,iBAAiB;QACjB,kBAAkB;QAClB,YAAY;AAChB;AACA;;QAEI,cAAc;QACd,eAAe;QACf,iBAAiB;AACrB;AACA;;QAEI,aAAa;QACb,mBAAmB;QACnB,mBAAmB;AACvB;AACA;;;QAGI,WAAW;QACX,eAAe;QACf,YAAY;QACZ,iBAAiB;QACjB,yBAAyB;QACzB,kBAAkB;QAClB,iBAAiB;AACrB;IACA,qBAAqB;AACrB;;QAEI,kBAAkB;QAClB,eAAe;QACf,MAAM;QACN,SAAS;QACT,sBAAsB;QACtB,wBAAwB;QACxB,gBAAgB;QAChB,kBAAkB;QAClB,iBAAiB;AACrB;AACA;;QAEI,kBAAkB;QAClB,WAAW;QACX,YAAY;QACZ,WAAW;QACX,uBAAuB;QACvB,wBAAwB;QACxB,gBAAgB;QAChB,kBAAkB;AACtB;AACA;;QAEI,yBAAyB;AAC7B;AACA;;QAEI,yBAAyB;AAC7B;AACA;QACI,wBAAwB;QACxB,qBAAqB;QACrB,gBAAgB;QAChB,wCAAwC;QACxC,eAAe;AACnB;AACA;;QAEI,2BAA2B;AAC/B;AACA;;QAEI,SAAS;QACT,kBAAkB;AACtB;AACA;;QAEI,WAAW;QACX,YAAY;QACZ,mBAAmB;QACnB,YAAY;AAChB;AACA;QACI;AACJ",sourcesContent:['<script setup lang="ts">\n    import { IEditorTypes, IOrganization, IOrganizationFeatures } from "../../../../../../../common/qCloudTemp/membership";\n    import { IOrganizationActions, IOrganizationGroup } from "../../../../../../../common/qCloudTemp/quickCloud";\n    import { ref, computed, onBeforeMount } from "vue";\n    import { ITags } from "../../../../../../../common/qCloudTemp/quickCloud";\n    import { container } from "../../../../../domain/core/diContainer";\n    import { IBackofficeUseCase } from "../../../../../domain/useCase/IBackofficeUseCase";\n    import { IUseCaseExecutor } from "../../../../../domain/useCase/IUseCaseExecutor";\n    import { IViewModel } from "../../../../../domain/viewModel/IViewModel";\n    import CustomSelect from "../../customSelect.vue"\n\n    interface IManageOrgData {\n        organization: IOrganization,\n    }\n    const executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\n    const backofficeUseCase = container.resolve<IBackofficeUseCase>(IBackofficeUseCase);\n    const viewModel = container.resolve<IViewModel>(IViewModel);\n\n    const props = defineProps<IManageOrgData>();\n    const organization = ref(props.organization)\n    const selectableTags = ref<Array<ITags>>();\n    const organizationTags = ref<Array<ITags>>();\n    const selectedTags = ref<Array<ITags>>([]);\n    const orgGroupList = ref(viewModel.backoffice?.organizationGroups);\n\n\n\n    const createAppLimit = ref(organization.value.limits?.createApp);\n    const accountType = ref(organization.value.accountType);\n    const appQuick = ref(organization.value.applications.quick);\n    const appFlow = ref(organization.value.applications.flow);\n    const appEntity = ref(organization.value.applications.entity);\n    const appProcess = ref(organization.value.applications.process);\n    const actionPublicCloud = ref(organization.value.actions?.publish?.targets?.azure);\n    const actionPlateauGCP = ref(organization.value.actions?.publish?.targets?.plateauGCP);\n    const qjsonLoading = ref(organization.value.features?.qjsonLoading);\n    const multipleCss = ref(organization.value.features?.multipleCss);\n    const orgGroupID = ref(organization.value.organizationGroupId);\n    const currentOrgGroup = ref<IOrganizationGroup>();\n    const currentOrgGroupisReady = ref(false);\n    onBeforeMount(() => {\n        getOrganizationTags();\n        arrangeTags();\n        getOrgGroupList();\n    })\n    const emit = defineEmits(["close"]);\n    function close() {\n        emit("close");\n    }\n    function setAccountType(value: \'premium\' | \'beta\' | undefined) {\n        accountType.value = value;\n    }\n    function setOrganizationGroup(selectedOrgGroupID: string) {\n        orgGroupID.value = selectedOrgGroupID;\n    }\n    function getOrganizationTags() {\n        const tagsDict: Record<string, ITags> = {};\n        viewModel.backoffice?.tags?.forEach(tag => tagsDict[tag.ID] = tag);\n        organizationTags.value = organization.value?.tags?.map(tag => tagsDict[tag]);\n        organizationTags.value ? selectedTags.value = organizationTags.value : selectedTags.value = [];\n    }\n    function arrangeTags(remove?: boolean, toRemove?: ITags) {\n        if(remove) {organizationTags.value = organizationTags.value?.filter(tag => tag.ID != toRemove?.ID)}\n        const tagsInTheBox = organizationTags.value?.concat(selectedTags.value);\n        selectableTags.value = viewModel.backoffice?.tags?.filter(tag => !tagsInTheBox?.includes(tag));\n\n    }\n    function getOrgGroupList() {\n        executor.execute(async () => {\n            await backofficeUseCase.listOrganizationGroups();\n            orgGroupList.value = viewModel.backoffice?.organizationGroups;\n            if(organization.value.organizationGroupId) {\n                currentOrgGroup.value = orgGroupList.value!.find(orgGroup => orgGroup.ID == organization.value.organizationGroupId);\n            }\n            currentOrgGroupisReady.value = true;\n        }, { loading: true });\n    }\n    function setTags(tags: Array<ITags>) {\n        selectedTags.value = tags;\n    }\n    function save() {\n        executor.execute( async () => {\n            const applications: IEditorTypes = { quick: appQuick.value, flow: appFlow.value, entity: appEntity.value,  process: appProcess.value };\n            const actions: IOrganizationActions = {publish: {targets:{azure: actionPublicCloud.value!, plateauGCP: actionPlateauGCP.value!}}};\n            const environmentPrefix = actionPlateauGCP.value ? \'studio-\' + organization.value.name.toLowerCase() : \'\';\n            const features: IOrganizationFeatures = {qjsonLoading: qjsonLoading.value, multipleCss: multipleCss.value};\n            const selectedTagIDs = selectedTags.value.map(tag => tag.ID);\n            await backofficeUseCase.updateOrganization(organization.value.id, {\n                accountType: accountType.value!, createAppLimit: createAppLimit.value!, actions: actions,\n                applications: applications, environmentPrefix: environmentPrefix, features: features, tags: selectedTagIDs, organizationGroupId: orgGroupID.value\n            });\n            organization.value.limits!.createApp = createAppLimit.value;\n            organization.value.accountType = accountType.value;\n            organization.value.applications = applications;\n            organization.value.actions = actions;\n            organization.value.features = features;\n            organization.value.tags = selectedTagIDs;\n            organization.value.organizationGroupId = orgGroupID.value;\n            close();\n        }, {loading: true})\n    }\n<\/script>\n\n<template>\n    <div class="container">\n            <div v-if="currentOrgGroupisReady" class="organization-prop">\n                <label>Organization Group</label>\n                <CustomSelect :options="orgGroupList" class="select-organization-group" :placeholder="\'Select\'" :defaultForObject="currentOrgGroup" @input="setOrganizationGroup"></CustomSelect>\n            </div>\n            <div class="organization-prop">\n                <label>Account Type</label>\n                <CustomSelect :options="[\'premium\', \'beta\']" class="select-account-type" :placeholder="\'Select\'" :default="organization.accountType" @input="setAccountType"></CustomSelect>\n            </div>\n            <div class="organization-prop">\n                <label>Tags</label>\n                <div>\n                    <CustomSelect :options="selectableTags" class="select-tags" :placeholder="\'Insert Tags\'" :defaultMultiple="organizationTags"  :multiple="true"\n                                :multipleSelectedClass="\'org-tag-name\'" @afterClick="arrangeTags" @input="setTags"></CustomSelect>\n                </div>\n            </div>\n            <div class="organization-prop app-limit">\n                <span>Number of applications that can be created</span>\n                <input type="number" v-model="createAppLimit"/>\n            </div>\n           \n            <div class="organization-prop">\n                <label>Editors</label>\n            <div class="editor-type">\n                    <span class="editor-type-name">UI</span>\n                    <input class="editor-type-switch round" type="checkbox" v-model="appQuick"/>\n            </div>\n            <div class="editor-type">\n                    <span class="editor-type-name">Flow</span>\n                    <input class="editor-type-switch round" type="checkbox" v-model="appFlow"/>\n            </div>\n            <div class="editor-type">\n                    <span class="editor-type-name">Data Model</span>\n                    <input class="editor-type-switch round" type="checkbox" v-model="appEntity"/>\n            </div>\n            <div class="editor-type">\n                <span class="editor-type-name">Worklflow</span>\n                <input class="editor-type-switch round" type="checkbox" v-model="appProcess"/>\n                </div>\n                \n            </div>\n            <div class="organization-prop">\n                <label>Publish To</label>\n                <div class="publish-type">\n                    <span class="publish-type-name">Public  Cloud</span>\n                    <input class="publish-type-switch round" type="checkbox" v-model="actionPublicCloud"/>\n            </div>\n                <div class="publish-type">\n                    <span class="publish-type-name">Plateau Platform Playground</span>\n                    <input class="publish-type-switch round" type="checkbox" v-model="actionPlateauGCP"/>\n            </div>\n            </div>\n            <div class="organization-prop">\n                <label>Features</label>\n                <div class="publish-type">\n                    <span class="publish-type-name">Qjson Loading</span>\n                    <input class="publish-type-switch round" type="checkbox" v-model="qjsonLoading"/>\n            </div>\n            <div class="publish-type">\n                <span class="publish-type-name">Multiple CSS</span>\n                <input class="publish-type-switch round" type="checkbox" v-model="multipleCss"/>\n                </div>\n            </div>\n            \n        <div class="buttons-div">\n            <button class="cancel-button" @click="close()">Cancel</button>\n            <button class="save-button" @click="save()">SAVE</button>\n        </div>\n    </div>\n</template>\n\n\n<style scoped>\n    * {\n        font-family: "Roboto";\n    }\n    .container {      \n        padding: 20px 20px 0 20px;\n        overflow: auto;\n        max-height: 650px;\n    }\n    .app-limit {\n        display: flex;\n        align-items: center;\n    }\n    .app-limit span {\n        font-size: 14px;\n        line-height: 16px;\n        color: #212121;\n    }\n    .app-limit input {\n        border: 1px solid #BCBCBC;\n        border-radius: 4px;\n        padding: 8px 8px 8px 12px;\n        width: 70px;\n        height: 40px;\n        margin-left: 111px;\n        outline: none;\n        margin-left: auto;\n    }\n    .organization-prop {\n        margin-bottom: 20px;\n    }\n    .organization-prop label {\n        font-weight: 500;\n        font-size: 16px;\n        line-height: 24px;\n        color: #151233;\n        margin-bottom: 4px;\n    }\n    .buttons-div {\n        display: flex;\n        justify-content: end;\n        position: sticky;\n        bottom: 0;\n        background: #FFFFFF;\n        padding: 40px 0 20px;\n    }\n    .cancel-button {\n        font-weight: 500;\n        font-size: 16px;\n        text-align: center;\n        color: #757575;\n        display: flex;\n        align-items: center;\n        padding: 8px 16px;\n        border-radius: 4px;\n        margin-right: 4px;\n        border: none;\n        background: transparent;\n    }\n    .save-button {\n        font-weight: 500;\n        font-size: 16px;\n        text-align: center;\n        color: #FFFFFF;\n        background: #151233;\n        display: flex;\n        align-items: center;\n        padding: 8px 16px;\n        border-radius: 4px;\n        border: none;\n    }\n    .editor-type-name,\n    .publish-type-name {\n        color: #212121;\n        font-size: 14px;\n        line-height: 16px;\n    }\n    .editor-type,\n    .publish-type {\n        display: flex;\n        align-items: center;\n        margin-bottom: 12px;\n    }\n    .select-account-type,\n    .select-organization-group,\n    .select-tags {\n        width: 100%;\n        font-size: 15px;\n        height: 40px;\n        line-height: 40px;\n        border: 1px solid #BCBCBC;\n        border-radius: 4px;\n        padding: 0px 12px;\n    }\n    /*Switch Toggle CSS */\n    .editor-type-switch,\n    .publish-type-switch {\n        position: relative;\n        cursor: pointer;\n        top: 0;\n        bottom: 0;\n        background-color: #ccc;\n        -webkit-transition: 0.4s;\n        transition: 0.4s;\n        margin-right: 13px;\n        margin-left: auto;\n    }\n    .editor-type-switch:after,\n    .publish-type-switch:after {\n        position: absolute;\n        content: "";\n        height: 14px;\n        width: 14px;\n        background-color: white;\n        -webkit-transition: 0.4s;\n        transition: 0.4s;\n        border-radius: 50%;\n    }\n    .editor-type-switch:disabled:after,\n    .publish-type-switch:disabled:after {\n        background-color: #757575;\n    } \n    .editor-type-switch:checked,\n    .publish-type-switch:checked {\n        background-color: #151233;\n    }\n    input[type=checkbox] {\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n        -webkit-tap-highlight-color: transparent;\n        cursor: pointer;\n    }\n    .editor-type-switch:checked:after,\n    .publish-type-switch:checked:after {\n        transform: translatex(16px);\n    }\n    .editor-type-switch.round::after,\n    .publish-type-switch.round::after {\n        left: 3px;\n        border-radius: 50%;\n    }\n    .editor-type-switch.round,\n    .publish-type-switch.round {\n        width: 36px;\n        height: 20px;\n        border-radius: 34px;\n        padding: 3px;\n    }\n    .custom-select .selected {\n        height: 40px\n    }\n</style>\n<style>\n    .selected-type {\n        background-color: transparent;\n        color: #212121;\n    }\n    .custom-select .items {\n        color: #212121;\n        border-radius: 8px;\n        border: 1px solid #E3E3E3;\n        overflow: hidden;\n        background-color: #FFFFFF;\n        box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\n    }\n    .custom-select .items .option {\n        font-size: 14px;\n        padding-left: 12px;\n    }\n    .custom-select .items .option:hover {\n        background-color: #EEEEEE;\n        color: #212121;\n    }\n    .select-account-type i,\n    .select-organization-group i,\n    .select-tags i {\n        font-size: 16px;\n        color: #BCBCBC;\n    }\n    .org-tag-name {\n        align-items: center;\n        padding: 5px 8px;\n        background: #D0D1E9;\n        display: flex;\n        justify-content: center;\n        border-radius: 20px;\n        margin-right: 4px;\n        font-size: 14px;\n        color: #2F3160;\n        white-space: nowrap;\n        font-weight: 500;\n    }\n</style>'],sourceRoot:""}]);const l=s},44298:(n,e,a)=>{a.d(e,{Z:()=>l});var t=a(34663),o=a.n(t),i=a(7638),s=a.n(i)()(o());s.push([n.id,"\n.selected-type {\n        background-color: transparent;\n        color: #212121;\n}\n.custom-select .items {\n        color: #212121;\n        border-radius: 8px;\n        border: 1px solid #E3E3E3;\n        overflow: hidden;\n        background-color: #FFFFFF;\n        box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\n}\n.custom-select .items .option {\n        font-size: 14px;\n        padding-left: 12px;\n}\n.custom-select .items .option:hover {\n        background-color: #EEEEEE;\n        color: #212121;\n}\n.select-account-type i,\n    .select-organization-group i,\n    .select-tags i {\n        font-size: 16px;\n        color: #BCBCBC;\n}\n.org-tag-name {\n        align-items: center;\n        padding: 5px 8px;\n        background: #D0D1E9;\n        display: flex;\n        justify-content: center;\n        border-radius: 20px;\n        margin-right: 4px;\n        font-size: 14px;\n        color: #2F3160;\n        white-space: nowrap;\n        font-weight: 500;\n}\n","",{version:3,sources:["webpack://./src/presentation/vue3/components/dialogs/backoffice/manageOrganization.vue"],names:[],mappings:";AA0UI;QACI,6BAA6B;QAC7B,cAAc;AAClB;AACA;QACI,cAAc;QACd,kBAAkB;QAClB,yBAAyB;QACzB,gBAAgB;QAChB,yBAAyB;QACzB,0CAA0C;AAC9C;AACA;QACI,eAAe;QACf,kBAAkB;AACtB;AACA;QACI,yBAAyB;QACzB,cAAc;AAClB;AACA;;;QAGI,eAAe;QACf,cAAc;AAClB;AACA;QACI,mBAAmB;QACnB,gBAAgB;QAChB,mBAAmB;QACnB,aAAa;QACb,uBAAuB;QACvB,mBAAmB;QACnB,iBAAiB;QACjB,eAAe;QACf,cAAc;QACd,mBAAmB;QACnB,gBAAgB;AACpB",sourcesContent:['<script setup lang="ts">\n    import { IEditorTypes, IOrganization, IOrganizationFeatures } from "../../../../../../../common/qCloudTemp/membership";\n    import { IOrganizationActions, IOrganizationGroup } from "../../../../../../../common/qCloudTemp/quickCloud";\n    import { ref, computed, onBeforeMount } from "vue";\n    import { ITags } from "../../../../../../../common/qCloudTemp/quickCloud";\n    import { container } from "../../../../../domain/core/diContainer";\n    import { IBackofficeUseCase } from "../../../../../domain/useCase/IBackofficeUseCase";\n    import { IUseCaseExecutor } from "../../../../../domain/useCase/IUseCaseExecutor";\n    import { IViewModel } from "../../../../../domain/viewModel/IViewModel";\n    import CustomSelect from "../../customSelect.vue"\n\n    interface IManageOrgData {\n        organization: IOrganization,\n    }\n    const executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\n    const backofficeUseCase = container.resolve<IBackofficeUseCase>(IBackofficeUseCase);\n    const viewModel = container.resolve<IViewModel>(IViewModel);\n\n    const props = defineProps<IManageOrgData>();\n    const organization = ref(props.organization)\n    const selectableTags = ref<Array<ITags>>();\n    const organizationTags = ref<Array<ITags>>();\n    const selectedTags = ref<Array<ITags>>([]);\n    const orgGroupList = ref(viewModel.backoffice?.organizationGroups);\n\n\n\n    const createAppLimit = ref(organization.value.limits?.createApp);\n    const accountType = ref(organization.value.accountType);\n    const appQuick = ref(organization.value.applications.quick);\n    const appFlow = ref(organization.value.applications.flow);\n    const appEntity = ref(organization.value.applications.entity);\n    const appProcess = ref(organization.value.applications.process);\n    const actionPublicCloud = ref(organization.value.actions?.publish?.targets?.azure);\n    const actionPlateauGCP = ref(organization.value.actions?.publish?.targets?.plateauGCP);\n    const qjsonLoading = ref(organization.value.features?.qjsonLoading);\n    const multipleCss = ref(organization.value.features?.multipleCss);\n    const orgGroupID = ref(organization.value.organizationGroupId);\n    const currentOrgGroup = ref<IOrganizationGroup>();\n    const currentOrgGroupisReady = ref(false);\n    onBeforeMount(() => {\n        getOrganizationTags();\n        arrangeTags();\n        getOrgGroupList();\n    })\n    const emit = defineEmits(["close"]);\n    function close() {\n        emit("close");\n    }\n    function setAccountType(value: \'premium\' | \'beta\' | undefined) {\n        accountType.value = value;\n    }\n    function setOrganizationGroup(selectedOrgGroupID: string) {\n        orgGroupID.value = selectedOrgGroupID;\n    }\n    function getOrganizationTags() {\n        const tagsDict: Record<string, ITags> = {};\n        viewModel.backoffice?.tags?.forEach(tag => tagsDict[tag.ID] = tag);\n        organizationTags.value = organization.value?.tags?.map(tag => tagsDict[tag]);\n        organizationTags.value ? selectedTags.value = organizationTags.value : selectedTags.value = [];\n    }\n    function arrangeTags(remove?: boolean, toRemove?: ITags) {\n        if(remove) {organizationTags.value = organizationTags.value?.filter(tag => tag.ID != toRemove?.ID)}\n        const tagsInTheBox = organizationTags.value?.concat(selectedTags.value);\n        selectableTags.value = viewModel.backoffice?.tags?.filter(tag => !tagsInTheBox?.includes(tag));\n\n    }\n    function getOrgGroupList() {\n        executor.execute(async () => {\n            await backofficeUseCase.listOrganizationGroups();\n            orgGroupList.value = viewModel.backoffice?.organizationGroups;\n            if(organization.value.organizationGroupId) {\n                currentOrgGroup.value = orgGroupList.value!.find(orgGroup => orgGroup.ID == organization.value.organizationGroupId);\n            }\n            currentOrgGroupisReady.value = true;\n        }, { loading: true });\n    }\n    function setTags(tags: Array<ITags>) {\n        selectedTags.value = tags;\n    }\n    function save() {\n        executor.execute( async () => {\n            const applications: IEditorTypes = { quick: appQuick.value, flow: appFlow.value, entity: appEntity.value,  process: appProcess.value };\n            const actions: IOrganizationActions = {publish: {targets:{azure: actionPublicCloud.value!, plateauGCP: actionPlateauGCP.value!}}};\n            const environmentPrefix = actionPlateauGCP.value ? \'studio-\' + organization.value.name.toLowerCase() : \'\';\n            const features: IOrganizationFeatures = {qjsonLoading: qjsonLoading.value, multipleCss: multipleCss.value};\n            const selectedTagIDs = selectedTags.value.map(tag => tag.ID);\n            await backofficeUseCase.updateOrganization(organization.value.id, {\n                accountType: accountType.value!, createAppLimit: createAppLimit.value!, actions: actions,\n                applications: applications, environmentPrefix: environmentPrefix, features: features, tags: selectedTagIDs, organizationGroupId: orgGroupID.value\n            });\n            organization.value.limits!.createApp = createAppLimit.value;\n            organization.value.accountType = accountType.value;\n            organization.value.applications = applications;\n            organization.value.actions = actions;\n            organization.value.features = features;\n            organization.value.tags = selectedTagIDs;\n            organization.value.organizationGroupId = orgGroupID.value;\n            close();\n        }, {loading: true})\n    }\n<\/script>\n\n<template>\n    <div class="container">\n            <div v-if="currentOrgGroupisReady" class="organization-prop">\n                <label>Organization Group</label>\n                <CustomSelect :options="orgGroupList" class="select-organization-group" :placeholder="\'Select\'" :defaultForObject="currentOrgGroup" @input="setOrganizationGroup"></CustomSelect>\n            </div>\n            <div class="organization-prop">\n                <label>Account Type</label>\n                <CustomSelect :options="[\'premium\', \'beta\']" class="select-account-type" :placeholder="\'Select\'" :default="organization.accountType" @input="setAccountType"></CustomSelect>\n            </div>\n            <div class="organization-prop">\n                <label>Tags</label>\n                <div>\n                    <CustomSelect :options="selectableTags" class="select-tags" :placeholder="\'Insert Tags\'" :defaultMultiple="organizationTags"  :multiple="true"\n                                :multipleSelectedClass="\'org-tag-name\'" @afterClick="arrangeTags" @input="setTags"></CustomSelect>\n                </div>\n            </div>\n            <div class="organization-prop app-limit">\n                <span>Number of applications that can be created</span>\n                <input type="number" v-model="createAppLimit"/>\n            </div>\n           \n            <div class="organization-prop">\n                <label>Editors</label>\n            <div class="editor-type">\n                    <span class="editor-type-name">UI</span>\n                    <input class="editor-type-switch round" type="checkbox" v-model="appQuick"/>\n            </div>\n            <div class="editor-type">\n                    <span class="editor-type-name">Flow</span>\n                    <input class="editor-type-switch round" type="checkbox" v-model="appFlow"/>\n            </div>\n            <div class="editor-type">\n                    <span class="editor-type-name">Data Model</span>\n                    <input class="editor-type-switch round" type="checkbox" v-model="appEntity"/>\n            </div>\n            <div class="editor-type">\n                <span class="editor-type-name">Worklflow</span>\n                <input class="editor-type-switch round" type="checkbox" v-model="appProcess"/>\n                </div>\n                \n            </div>\n            <div class="organization-prop">\n                <label>Publish To</label>\n                <div class="publish-type">\n                    <span class="publish-type-name">Public  Cloud</span>\n                    <input class="publish-type-switch round" type="checkbox" v-model="actionPublicCloud"/>\n            </div>\n                <div class="publish-type">\n                    <span class="publish-type-name">Plateau Platform Playground</span>\n                    <input class="publish-type-switch round" type="checkbox" v-model="actionPlateauGCP"/>\n            </div>\n            </div>\n            <div class="organization-prop">\n                <label>Features</label>\n                <div class="publish-type">\n                    <span class="publish-type-name">Qjson Loading</span>\n                    <input class="publish-type-switch round" type="checkbox" v-model="qjsonLoading"/>\n            </div>\n            <div class="publish-type">\n                <span class="publish-type-name">Multiple CSS</span>\n                <input class="publish-type-switch round" type="checkbox" v-model="multipleCss"/>\n                </div>\n            </div>\n            \n        <div class="buttons-div">\n            <button class="cancel-button" @click="close()">Cancel</button>\n            <button class="save-button" @click="save()">SAVE</button>\n        </div>\n    </div>\n</template>\n\n\n<style scoped>\n    * {\n        font-family: "Roboto";\n    }\n    .container {      \n        padding: 20px 20px 0 20px;\n        overflow: auto;\n        max-height: 650px;\n    }\n    .app-limit {\n        display: flex;\n        align-items: center;\n    }\n    .app-limit span {\n        font-size: 14px;\n        line-height: 16px;\n        color: #212121;\n    }\n    .app-limit input {\n        border: 1px solid #BCBCBC;\n        border-radius: 4px;\n        padding: 8px 8px 8px 12px;\n        width: 70px;\n        height: 40px;\n        margin-left: 111px;\n        outline: none;\n        margin-left: auto;\n    }\n    .organization-prop {\n        margin-bottom: 20px;\n    }\n    .organization-prop label {\n        font-weight: 500;\n        font-size: 16px;\n        line-height: 24px;\n        color: #151233;\n        margin-bottom: 4px;\n    }\n    .buttons-div {\n        display: flex;\n        justify-content: end;\n        position: sticky;\n        bottom: 0;\n        background: #FFFFFF;\n        padding: 40px 0 20px;\n    }\n    .cancel-button {\n        font-weight: 500;\n        font-size: 16px;\n        text-align: center;\n        color: #757575;\n        display: flex;\n        align-items: center;\n        padding: 8px 16px;\n        border-radius: 4px;\n        margin-right: 4px;\n        border: none;\n        background: transparent;\n    }\n    .save-button {\n        font-weight: 500;\n        font-size: 16px;\n        text-align: center;\n        color: #FFFFFF;\n        background: #151233;\n        display: flex;\n        align-items: center;\n        padding: 8px 16px;\n        border-radius: 4px;\n        border: none;\n    }\n    .editor-type-name,\n    .publish-type-name {\n        color: #212121;\n        font-size: 14px;\n        line-height: 16px;\n    }\n    .editor-type,\n    .publish-type {\n        display: flex;\n        align-items: center;\n        margin-bottom: 12px;\n    }\n    .select-account-type,\n    .select-organization-group,\n    .select-tags {\n        width: 100%;\n        font-size: 15px;\n        height: 40px;\n        line-height: 40px;\n        border: 1px solid #BCBCBC;\n        border-radius: 4px;\n        padding: 0px 12px;\n    }\n    /*Switch Toggle CSS */\n    .editor-type-switch,\n    .publish-type-switch {\n        position: relative;\n        cursor: pointer;\n        top: 0;\n        bottom: 0;\n        background-color: #ccc;\n        -webkit-transition: 0.4s;\n        transition: 0.4s;\n        margin-right: 13px;\n        margin-left: auto;\n    }\n    .editor-type-switch:after,\n    .publish-type-switch:after {\n        position: absolute;\n        content: "";\n        height: 14px;\n        width: 14px;\n        background-color: white;\n        -webkit-transition: 0.4s;\n        transition: 0.4s;\n        border-radius: 50%;\n    }\n    .editor-type-switch:disabled:after,\n    .publish-type-switch:disabled:after {\n        background-color: #757575;\n    } \n    .editor-type-switch:checked,\n    .publish-type-switch:checked {\n        background-color: #151233;\n    }\n    input[type=checkbox] {\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n        -webkit-tap-highlight-color: transparent;\n        cursor: pointer;\n    }\n    .editor-type-switch:checked:after,\n    .publish-type-switch:checked:after {\n        transform: translatex(16px);\n    }\n    .editor-type-switch.round::after,\n    .publish-type-switch.round::after {\n        left: 3px;\n        border-radius: 50%;\n    }\n    .editor-type-switch.round,\n    .publish-type-switch.round {\n        width: 36px;\n        height: 20px;\n        border-radius: 34px;\n        padding: 3px;\n    }\n    .custom-select .selected {\n        height: 40px\n    }\n</style>\n<style>\n    .selected-type {\n        background-color: transparent;\n        color: #212121;\n    }\n    .custom-select .items {\n        color: #212121;\n        border-radius: 8px;\n        border: 1px solid #E3E3E3;\n        overflow: hidden;\n        background-color: #FFFFFF;\n        box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\n    }\n    .custom-select .items .option {\n        font-size: 14px;\n        padding-left: 12px;\n    }\n    .custom-select .items .option:hover {\n        background-color: #EEEEEE;\n        color: #212121;\n    }\n    .select-account-type i,\n    .select-organization-group i,\n    .select-tags i {\n        font-size: 16px;\n        color: #BCBCBC;\n    }\n    .org-tag-name {\n        align-items: center;\n        padding: 5px 8px;\n        background: #D0D1E9;\n        display: flex;\n        justify-content: center;\n        border-radius: 20px;\n        margin-right: 4px;\n        font-size: 14px;\n        color: #2F3160;\n        white-space: nowrap;\n        font-weight: 500;\n    }\n</style>'],sourceRoot:""}]);const l=s},44431:(n,e,a)=>{a.r(e),a.d(e,{default:()=>rn});var t=a(71093),o=a(46233),i=a(73843),s=a(5627),l=a(20559),r=a(83487),p=a(88613),c=a(80410);const u=n=>((0,t.dD)("data-v-4081090e"),n=n(),(0,t.Cn)(),n),d={class:"container"},g={key:0,class:"organization-prop"},A=u((()=>(0,t._)("label",null,"Organization Group",-1))),v={class:"organization-prop"},m=u((()=>(0,t._)("label",null,"Account Type",-1))),b={class:"organization-prop"},f=u((()=>(0,t._)("label",null,"Tags",-1))),h={class:"organization-prop app-limit"},C=u((()=>(0,t._)("span",null,"Number of applications that can be created",-1))),y={class:"organization-prop"},x=u((()=>(0,t._)("label",null,"Editors",-1))),B={class:"editor-type"},z=u((()=>(0,t._)("span",{class:"editor-type-name"},"UI",-1))),w={class:"editor-type"},k=u((()=>(0,t._)("span",{class:"editor-type-name"},"Flow",-1))),I={class:"editor-type"},Q=u((()=>(0,t._)("span",{class:"editor-type-name"},"Data Model",-1))),T={class:"editor-type"},G=u((()=>(0,t._)("span",{class:"editor-type-name"},"Worklflow",-1))),F={class:"organization-prop"},E=u((()=>(0,t._)("label",null,"Publish To",-1))),O={class:"publish-type"},P=u((()=>(0,t._)("span",{class:"publish-type-name"},"Public Cloud",-1))),D={class:"publish-type"},S=u((()=>(0,t._)("span",{class:"publish-type-name"},"Plateau Platform Playground",-1))),M={class:"organization-prop"},_=u((()=>(0,t._)("label",null,"Features",-1))),L={class:"publish-type"},q=u((()=>(0,t._)("span",{class:"publish-type-name"},"Qjson Loading",-1))),U={class:"publish-type"},j=u((()=>(0,t._)("span",{class:"publish-type-name"},"Multiple CSS",-1))),V={class:"buttons-div"},Z=(0,t.aZ)({__name:"manageOrganization",props:{organization:null},emits:["close"],setup(n,{emit:e}){var a,u,Z,H,R,W,Y,X,N,J;const K=n,$=s.nC.resolve(r.y),nn=s.nC.resolve(l.X),en=s.nC.resolve(p.J),an=(0,i.iH)(K.organization),tn=(0,i.iH)(),on=(0,i.iH)(),sn=(0,i.iH)([]),ln=(0,i.iH)(null===(a=en.backoffice)||void 0===a?void 0:a.organizationGroups),rn=(0,i.iH)(null===(u=an.value.limits)||void 0===u?void 0:u.createApp),pn=(0,i.iH)(an.value.accountType),cn=(0,i.iH)(an.value.applications.quick),un=(0,i.iH)(an.value.applications.flow),dn=(0,i.iH)(an.value.applications.entity),gn=(0,i.iH)(an.value.applications.process),An=(0,i.iH)(null===(R=null===(H=null===(Z=an.value.actions)||void 0===Z?void 0:Z.publish)||void 0===H?void 0:H.targets)||void 0===R?void 0:R.azure),vn=(0,i.iH)(null===(X=null===(Y=null===(W=an.value.actions)||void 0===W?void 0:W.publish)||void 0===Y?void 0:Y.targets)||void 0===X?void 0:X.plateauGCP),mn=(0,i.iH)(null===(N=an.value.features)||void 0===N?void 0:N.qjsonLoading),bn=(0,i.iH)(null===(J=an.value.features)||void 0===J?void 0:J.multipleCss),fn=(0,i.iH)(an.value.organizationGroupId),hn=(0,i.iH)(),Cn=(0,i.iH)(!1);function yn(){e("close")}function xn(n){pn.value=n}function Bn(n){fn.value=n}function zn(n,e){var a,t,o,i;n&&(on.value=null===(a=on.value)||void 0===a?void 0:a.filter((n=>n.ID!=(null==e?void 0:e.ID))));const s=null===(t=on.value)||void 0===t?void 0:t.concat(sn.value);tn.value=null===(i=null===(o=en.backoffice)||void 0===o?void 0:o.tags)||void 0===i?void 0:i.filter((n=>!(null==s?void 0:s.includes(n))))}function wn(n){sn.value=n}return(0,t.wF)((()=>{!function(){var n,e,a,t;const o={};null===(e=null===(n=en.backoffice)||void 0===n?void 0:n.tags)||void 0===e||e.forEach((n=>o[n.ID]=n)),on.value=null===(t=null===(a=an.value)||void 0===a?void 0:a.tags)||void 0===t?void 0:t.map((n=>o[n])),on.value?sn.value=on.value:sn.value=[]}(),zn(),$.execute((async()=>{var n;await nn.listOrganizationGroups(),ln.value=null===(n=en.backoffice)||void 0===n?void 0:n.organizationGroups,an.value.organizationGroupId&&(hn.value=ln.value.find((n=>n.ID==an.value.organizationGroupId))),Cn.value=!0}),{loading:!0})})),(n,e)=>((0,t.wg)(),(0,t.iD)("div",d,[Cn.value?((0,t.wg)(),(0,t.iD)("div",g,[A,(0,t.Wm)(c.Z,{options:ln.value,class:"select-organization-group",placeholder:"Select",defaultForObject:hn.value,onInput:Bn},null,8,["options","defaultForObject"])])):(0,t.kq)("v-if",!0),(0,t._)("div",v,[m,(0,t.Wm)(c.Z,{options:["premium","beta"],class:"select-account-type",placeholder:"Select",default:an.value.accountType,onInput:xn},null,8,["default"])]),(0,t._)("div",b,[f,(0,t._)("div",null,[(0,t.Wm)(c.Z,{options:tn.value,class:"select-tags",placeholder:"Insert Tags",defaultMultiple:on.value,multiple:!0,multipleSelectedClass:"org-tag-name",onAfterClick:zn,onInput:wn},null,8,["options","defaultMultiple"])])]),(0,t._)("div",h,[C,(0,t.wy)((0,t._)("input",{type:"number","onUpdate:modelValue":e[0]||(e[0]=n=>rn.value=n)},null,512),[[o.vModelText,rn.value]])]),(0,t._)("div",y,[x,(0,t._)("div",B,[z,(0,t.wy)((0,t._)("input",{class:"editor-type-switch round",type:"checkbox","onUpdate:modelValue":e[1]||(e[1]=n=>cn.value=n)},null,512),[[o.vModelCheckbox,cn.value]])]),(0,t._)("div",w,[k,(0,t.wy)((0,t._)("input",{class:"editor-type-switch round",type:"checkbox","onUpdate:modelValue":e[2]||(e[2]=n=>un.value=n)},null,512),[[o.vModelCheckbox,un.value]])]),(0,t._)("div",I,[Q,(0,t.wy)((0,t._)("input",{class:"editor-type-switch round",type:"checkbox","onUpdate:modelValue":e[3]||(e[3]=n=>dn.value=n)},null,512),[[o.vModelCheckbox,dn.value]])]),(0,t._)("div",T,[G,(0,t.wy)((0,t._)("input",{class:"editor-type-switch round",type:"checkbox","onUpdate:modelValue":e[4]||(e[4]=n=>gn.value=n)},null,512),[[o.vModelCheckbox,gn.value]])])]),(0,t._)("div",F,[E,(0,t._)("div",O,[P,(0,t.wy)((0,t._)("input",{class:"publish-type-switch round",type:"checkbox","onUpdate:modelValue":e[5]||(e[5]=n=>An.value=n)},null,512),[[o.vModelCheckbox,An.value]])]),(0,t._)("div",D,[S,(0,t.wy)((0,t._)("input",{class:"publish-type-switch round",type:"checkbox","onUpdate:modelValue":e[6]||(e[6]=n=>vn.value=n)},null,512),[[o.vModelCheckbox,vn.value]])])]),(0,t._)("div",M,[_,(0,t._)("div",L,[q,(0,t.wy)((0,t._)("input",{class:"publish-type-switch round",type:"checkbox","onUpdate:modelValue":e[7]||(e[7]=n=>mn.value=n)},null,512),[[o.vModelCheckbox,mn.value]])]),(0,t._)("div",U,[j,(0,t.wy)((0,t._)("input",{class:"publish-type-switch round",type:"checkbox","onUpdate:modelValue":e[8]||(e[8]=n=>bn.value=n)},null,512),[[o.vModelCheckbox,bn.value]])])]),(0,t._)("div",V,[(0,t._)("button",{class:"cancel-button",onClick:e[9]||(e[9]=n=>yn())},"Cancel"),(0,t._)("button",{class:"save-button",onClick:e[10]||(e[10]=n=>{$.execute((async()=>{const n={quick:cn.value,flow:un.value,entity:dn.value,process:gn.value},e={publish:{targets:{azure:An.value,plateauGCP:vn.value}}},a=vn.value?"studio-"+an.value.name.toLowerCase():"",t={qjsonLoading:mn.value,multipleCss:bn.value},o=sn.value.map((n=>n.ID));await nn.updateOrganization(an.value.id,{accountType:pn.value,createAppLimit:rn.value,actions:e,applications:n,environmentPrefix:a,features:t,tags:o,organizationGroupId:fn.value}),an.value.limits.createApp=rn.value,an.value.accountType=pn.value,an.value.applications=n,an.value.actions=e,an.value.features=t,an.value.tags=o,an.value.organizationGroupId=fn.value,yn()}),{loading:!0})})},"SAVE")])]))}});var H=a(17450),R=a.n(H),W=a(29530),Y=a.n(W),X=a(16199),N=a.n(X),J=a(40458),K=a.n(J),$=a(62916),nn=a.n($),en=a(92165),an=a.n(en),tn=a(62323),on={};on.styleTagTransform=an(),on.setAttributes=K(),on.insert=N().bind(null,"head"),on.domAPI=Y(),on.insertStyleElement=nn(),R()(tn.Z,on),tn.Z&&tn.Z.locals&&tn.Z.locals;var sn=a(44298),ln={};ln.styleTagTransform=an(),ln.setAttributes=K(),ln.insert=N().bind(null,"head"),ln.domAPI=Y(),ln.insertStyleElement=nn(),R()(sn.Z,ln),sn.Z&&sn.Z.locals&&sn.Z.locals;const rn=(0,a(32525).Z)(Z,[["__scopeId","data-v-4081090e"]])}}]);
//# sourceMappingURL=4431.js.map