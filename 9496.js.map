{"version":3,"file":"9496.js?ver=0.0.314_1713188205301","mappings":"gKAGIA,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOC,GAAI,4yHAA8yH,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,iEAAiE,MAAQ,GAAG,SAAW,+gDAA+gD,eAAiB,CAAC,6kYAAisY,WAAa,MAExrjB,S,kxEC0LMC,GAAO,SAAI,GACXC,GAAW,QAAIC,EAAMC,QAAUD,EAAMC,QAAUD,EAAME,iBAAmBF,EAAME,iBAAmB,MACjGC,GAAgB,QAAIH,EAAMI,gBAAkBJ,EAAMI,gBAAkB,KAE1E,SAAY,KACNJ,GAASA,EAAMK,iBACjBN,EAASO,MAAQN,EAAMK,eACvBP,EAAKQ,OAAQ,GAEZN,EAAMI,kBACPD,EAAcG,MAAQN,EAAMI,gBAC9B,IASF,MAAMG,EAAeC,IACdR,EAAMS,UAgBTN,EAAcG,MAAMX,KAAKa,GACzBE,EAAK,QAASP,EAAcG,OAC5BI,EAAK,eAjBiB,iBAAXF,GACTE,EAAK,QAASF,EAAOX,GAAKW,EAAOX,GAAKW,EAAOG,IAC7CZ,EAASO,MAAQE,EACjBV,EAAKQ,OAAQ,EACbI,EAAK,QAASX,EAASO,MAAMT,GAAKE,EAASO,MAAMT,GAAKE,EAASO,MAAMK,KAE5C,iBAAXH,IACdE,EAAK,QAASF,GACdT,EAASO,MAAQE,EACjBV,EAAKQ,OAAQ,EACbI,EAAK,QAASX,EAASO,OAQ3B,EAGIM,EAA0BC,IAC9B,MAAMC,EAAMd,EAAMe,gBAAgBC,MAAKC,GAAKA,EAAEJ,OAASA,IACvD,GAAIC,EACF,OAAOA,EAAII,KACG,EAEZC,EAAiBC,IACrBA,EAAMC,kBACNtB,EAASO,MAAQ,KACjBI,EAAK,QAASX,EAASO,MAAM,E,OAU/B,EAAa,CACXgB,YAIF,SAAqBC,GACnBxB,EAASO,MAAQiB,CACnB,I,2pBAf2BC,E,IACnBH,kBACNlB,EAAcG,MAAQH,EAAcG,MAAMmB,QAAOC,GAAQA,EAAKf,IAAMa,EAASb,KAC7ED,EAAK,QAASP,EAAcG,YAC5BI,EAAK,cAAc,EAAMc,GAJR,IAAQA,C,0zEAxC3B,SAAuBG,GACrB5B,EAASO,MAAQqB,EAAOC,WACxBD,EAAOE,UACP/B,EAAKQ,OAAQ,CACf,C,+wCCxMIwB,EAAU,CAAC,EAEfA,EAAQC,kBAAoB,IAC5BD,EAAQE,cAAgB,IAElBF,EAAQG,OAAS,SAAc,KAAM,QAE3CH,EAAQI,OAAS,IACjBJ,EAAQK,mBAAqB,IAEhB,IAAI,IAASL,GAKJ,KAAW,YAAiB,WCpBlD,MAEA,GAFiC,E,SAAA,GAAgB,EAAQ,CAAC,CAAC,YAAY,oB","sources":["webpack://qcloud_shell/./src/presentation/vue3/components/customSelect.vue?f2df","webpack://qcloud_shell/./src/presentation/vue3/components/customSelect.vue","webpack://qcloud_shell/./src/presentation/vue3/components/customSelect.vue?5fce","webpack://qcloud_shell/./src/presentation/vue3/components/customSelect.vue?043d"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n/*You should put other CSS properties with same class names in the parent component's style tag that is not scoped.*/\\n*[data-v-127b3c94] {\\n  font-family: \\\"Roboto\\\"\\n}\\n.extra-button-section[data-v-127b3c94] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  padding: 8px 0;\\n  color: var(--Grey-darken-2, #757575);\\n  text-align: center;\\n  font-family: Roboto;\\n  font-size: 16px;\\n  font-style: normal;\\n  font-weight: 500;\\n  line-height: normal;\\n  text-transform: capitalize;\\n}\\n.select-extra-button[data-v-127b3c94] {\\n  color: var(--Grey-darken-2, #757575);\\n  text-align: center;\\n  font-family: Material Design Icons;\\n  font-size: 24px;\\n  font-style: normal;\\n  font-weight: 400;\\n  line-height: normal;\\n  margin-right: 4px;\\n}\\n.custom-select[data-v-127b3c94] {\\n  position: relative;\\n  width: 100%;\\n  text-align: left;\\n  outline: none;\\n}\\n.custom-select.disabled[data-v-127b3c94] {\\n    opacity: 0.4;\\n    pointer-events: none;\\n}\\n.custom-select .selected[data-v-127b3c94] {\\n\\n  cursor: pointer;\\n  user-select: none;\\n}\\n.custom-select .selected .select-down[data-v-127b3c94],\\n.custom-select .selected .cleanIcon[data-v-127b3c94] {\\n  position: absolute;\\n  right: 10px;\\n  float: right;\\n}\\n.custom-select .items[data-v-127b3c94] {\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n  z-index: 1;\\n  border-radius: 8px;\\n  border: 1px solid #E3E3E3;\\n  overflow: hidden;\\n  background-color: #FFFFFF;\\n  box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\\n  padding: 10px 0px;\\n}\\n.custom-select .items .option[data-v-127b3c94] {\\n  cursor: pointer;\\n  padding: 6px 12px;\\n  user-select: none;\\n  color: var(--Text-color, #212121);\\n  font-family: Roboto;\\n  font-size: 15px;\\n  font-style: normal;\\n  font-weight: 400;\\n  line-height: normal;\\n  display: flex;\\n  align-items: center;\\n}\\n.custom-select .option img[data-v-127b3c94] {\\n  display: flex;\\n  height: 22px;\\n  border-radius: 99px;\\n  background: var(--cvcv, #FFF);\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-left: 10px;\\n  margin-right: 16px;\\n}\\n.custom-select .items .option.disabled div[data-v-127b3c94] {\\n  cursor: default;\\n  user-select: none;\\n  opacity: 0.4;\\n}\\n.custom-select .items .option[data-v-127b3c94]:hover {\\n  background-color: #2C5A86;\\n  color: #FFFFFF\\n}\\n.custom-select .items .option.disabled[data-v-127b3c94]:active {\\n  pointer-events: none;\\n}\\n.selectHide[data-v-127b3c94] {\\n  display: none;\\n}\\n.button-div[data-v-127b3c94] {\\n  justify-content: center;\\n  display: grid;\\n  padding: 13px 0 19px;\\n  margin-top: 10px\\n}\\n.button[data-v-127b3c94] {\\n  cursor: pointer;\\n}\\n.custom-placeholder[data-v-127b3c94] {\\n  color: #BCBCBC !important;\\n}\\n.custom-placeholder[data-v-127b3c94]:empty:before {\\n  content: attr(data-placeholder);\\n  color: #BCBCBC;\\n}\\n.custom-placeholder[data-v-127b3c94]:focus-visible {\\n  outline: none;\\n}\\n.button-tooltip[data-v-127b3c94] {\\n  visibility: hidden;\\n  display: flex;\\n  flex-direction: row;\\n  align-items: flex-start;\\n  padding: 8px;\\n  top: 39px;\\n  left: 65px;\\n  height: 30px;\\n  position: absolute;\\n  background: #757575;\\n  color: #FFFFFF;\\n  font-size: 12px;\\n  line-height: 14px;\\n  text-align: center;\\n  border-radius: 4px;\\n  letter-spacing: 0.2px;\\n  opacity: 0;\\n  z-index: 1;\\n}\\n.custom-select .items .option:hover .button-tooltip[data-v-127b3c94] {\\n  visibility: visible;\\n  transition: opacity 0.3s ease-out 0.5s;\\n  opacity: 1;\\n}\\n.cleanIcon[data-v-127b3c94] {\\n  display: none;\\n}\\n.selected:hover .cleanIcon[data-v-127b3c94] {\\n  display: inline-block;\\n}\\n.multipleSelected[data-v-127b3c94] {\\n  display: flex;\\n  align-items: center;\\n  height: 40px;\\n  flex-wrap: wrap;\\n  line-height: 18px;\\n  max-width: 100%;\\n  min-width: 0;\\n}\\n.multipleSelected .remove-item[data-v-127b3c94] {\\n  position: relative;\\n  color: #000000;\\n  margin-left: 4px;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/presentation/vue3/components/customSelect.vue\"],\"names\":[],\"mappings\":\";AA2QA,oHAAoH;AACpH;EACE;AACF;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,cAAc;EACd,oCAAoC;EACpC,kBAAkB;EAClB,mBAAmB;EACnB,eAAe;EACf,kBAAkB;EAClB,gBAAgB;EAChB,mBAAmB;EACnB,0BAA0B;AAE5B;AAEA;EACE,oCAAoC;EACpC,kBAAkB;EAClB,kCAAkC;EAClC,eAAe;EACf,kBAAkB;EAClB,gBAAgB;EAChB,mBAAmB;EACnB,iBAAiB;AACnB;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,gBAAgB;EAChB,aAAa;AACf;AAEA;IACI,YAAY;IACZ,oBAAoB;AACtB;AAEF;;EAEE,eAAe;EACf,iBAAiB;AACnB;AAEA;;EAEE,kBAAkB;EAClB,WAAW;EACX,YAAY;AACd;AAEA;EACE,kBAAkB;EAClB,OAAO;EACP,QAAQ;EACR,UAAU;EACV,kBAAkB;EAClB,yBAAyB;EACzB,gBAAgB;EAChB,yBAAyB;EACzB,0CAA0C;EAC1C,iBAAiB;AACnB;AAEA;EACE,eAAe;EACf,iBAAiB;EACjB,iBAAiB;EACjB,iCAAiC;EACjC,mBAAmB;EACnB,eAAe;EACf,kBAAkB;EAClB,gBAAgB;EAChB,mBAAmB;EACnB,aAAa;EACb,mBAAmB;AACrB;AAEA;EACE,aAAa;EACb,YAAY;EACZ,mBAAmB;EACnB,6BAA6B;EAC7B,8BAA8B;EAC9B,mBAAmB;EACnB,iBAAiB;EACjB,kBAAkB;AACpB;AAEA;EACE,eAAe;EACf,iBAAiB;EACjB,YAAY;AACd;AAEA;EACE,yBAAyB;EACzB;AACF;AAEA;EACE,oBAAoB;AACtB;AAEA;EACE,aAAa;AACf;AAEA;EACE,uBAAuB;EACvB,aAAa;EACb,oBAAoB;EACpB;AACF;AAEA;EACE,eAAe;AACjB;AAEA;EACE,yBAAyB;AAC3B;AAEA;EACE,+BAA+B;EAC/B,cAAc;AAChB;AAEA;EACE,aAAa;AACf;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,YAAY;EACZ,SAAS;EACT,UAAU;EACV,YAAY;EACZ,kBAAkB;EAClB,mBAAmB;EACnB,cAAc;EACd,eAAe;EACf,iBAAiB;EACjB,kBAAkB;EAClB,kBAAkB;EAClB,qBAAqB;EACrB,UAAU;EACV,UAAU;AACZ;AAEA;EACE,mBAAmB;EACnB,sCAAsC;EACtC,UAAU;AACZ;AAEA;EACE,aAAa;AACf;AAEA;EACE,qBAAqB;AACvB;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,YAAY;EACZ,eAAe;EACf,iBAAiB;EACjB,eAAe;EACf,YAAY;AACd;AAEA;EACE,kBAAkB;EAClB,cAAc;EACd,gBAAgB;AAClB\",\"sourcesContent\":[\"<template>\\n  <div :class=\\\"{'custom-select': true, 'disabled': props.disabled}\\\" :tabindex=\\\"tabindex\\\" @blur=\\\"open = false\\\">\\n    <div v-if=\\\"!multiple\\\">\\n      <div\\n        :class=\\\"(open ? 'open ' : '') + 'selected ' + selectedClass + (selected == placeholder ? ' custom-placeholder' : '')\\\"\\n        @click=\\\"open = !open\\\">\\n        <div v-if=\\\"selected\\\">{{ typeof selected === 'object' ? selected.name : selected }}\\n          <i class=\\\"mdi mdi-chevron-down select-down\\\"></i>\\n          <i v-if=\\\"iconInSelect\\\" class=\\\"mdi mdi-close cleanIcon\\\" style=\\\"right: 30px\\\" @click=\\\"cleanSelected($event)\\\"></i>\\n        </div>\\n        <div v-else>\\n          <span contenteditable=\\\"true\\\" :data-placeholder=\\\"placeholder\\\" class=\\\"custom-placeholder\\\"></span>\\n          <i class=\\\"mdi mdi-chevron-down select-down\\\"></i>\\n        </div>\\n      </div>\\n      <div class=\\\"items\\\" :class=\\\"{ selectHide: !open }\\\">\\n        <template v-if=\\\"extraPrefixButton\\\">\\n          <div class=\\\"option\\\">\\n           <i class=\\\"mdi mdi-chart-donut\\\" style=\\\"font-size: 20px; margin-right: 16px;\\\"></i>\\n            <div v-for=\\\"(button, index) in prefixButtons\\\" :key=\\\"index\\\" :id=\\\"button.buttonID\\\"\\n              :class=\\\"button.buttonClass + ' button'\\\" @click=\\\"prefixClicked(button)\\\">{{ button.buttonText }}\\n            </div>\\n          </div>\\n          <div class=\\\"user-menu-border\\\"></div>\\n        </template>\\n        <div v-for=\\\"(option, i) of options\\\" :key=\\\"i\\\" @click=\\\"handleClick(option)\\\"\\n          :class=\\\"['option', (props.disabledOptions && getDisabledOptionsText(i)) ? 'disabled' : '']\\\">\\n           <i v-if=\\\"optionIcon\\\" :class=\\\"optionIcon\\\" style=\\\"font-size: 20px; margin-right: 16px;\\\"></i>\\n          <span v-if=\\\"props.disabledOptions && getDisabledOptionsText(i)\\\" class=\\\"button-tooltip\\\"\\n            :style=\\\"{ top: (i * 32) + 85 + 'px' }\\\">{{ getDisabledOptionsText(i) }}</span>\\n          <div :class=\\\"typeof option === 'string' && option == placeholder ? 'custom-placeholder' : ''\\\">{{ typeof option\\n            === 'object' ? option.name : option }}</div>\\n        </div>\\n        <template v-if=\\\"extraButton\\\">\\n          <div class=\\\"user-menu-border\\\"></div>\\n          <div class=\\\"extra-button-section\\\">\\n            <i class=\\\"mdi mdi-plus select-extra-button\\\"></i>\\n            <div v-for=\\\"(button, index) in buttons\\\" :key=\\\"index\\\" :id=\\\"button.buttonID\\\"\\n              :class=\\\"button.buttonClass + ' button'\\\" @click=\\\"button.onClick(); open = false\\\">{{\\n                button.buttonText\\n              }}</div>\\n          </div>\\n        </template>\\n      </div>\\n    </div>\\n    <div v-else>\\n      <div :class=\\\"open ? 'open selected ' + selectedClass : 'selected ' + selectedClass\\\" @click=\\\"open = !open\\\">\\n        <div v-if=\\\"selectedItems && selectedItems.length > 0\\\" class=\\\"multipleSelected\\\">\\n          <span v-for=\\\"item in selectedItems\\\" :key=\\\"item\\\" :class=\\\"multipleSelectedClass\\\">{{ item.name }}\\n            <i class=\\\"mdi mdi-close remove-item\\\" @click=\\\"removeItem($event, item)\\\"></i>\\n          </span>\\n          <i class=\\\"mdi mdi-chevron-down select-down\\\"></i>\\n          <i v-if=\\\"iconInSelect\\\" class=\\\"mdi mdi-close cleanIcon\\\" style=\\\"right: 30px\\\" @click=\\\"cleanSelected($event)\\\"></i>\\n        </div>\\n        <div v-else>\\n          <span contenteditable=\\\"true\\\" :data-placeholder=\\\"placeholder\\\" class=\\\"custom-placeholder\\\"></span>\\n          <i class=\\\"mdi mdi-chevron-down select-down\\\"></i>\\n        </div>\\n      </div>\\n      <div class=\\\"items\\\" :class=\\\"{ selectHide: !open }\\\" :style=\\\"{ padding: extraButton ? '10px 0 0' : '10px 0' }\\\">\\n        <div v-for=\\\"(option, i) of options\\\" :key=\\\"i\\\" @click=\\\"handleClick(option)\\\"\\n          :class=\\\"['option', (props.disabledOptions && getDisabledOptionsText(i)) ? 'disabled' : '']\\\">\\n          <span v-if=\\\"props.disabledOptions && getDisabledOptionsText(i)\\\" class=\\\"button-tooltip\\\"\\n            :style=\\\"{ top: (i * 32) + 85 + 'px' }\\\">{{ getDisabledOptionsText(i) }}</span>\\n          <div>{{ typeof option === 'object' ? option.name : option }}</div>\\n        </div>\\n        <div v-if=\\\"extraButton\\\" class=\\\"button-div\\\" :style=\\\"{ borderTop: extraButton ? '1px solid #EEEEEE' : 'none' }\\\">\\n          <div v-for=\\\"(button, index) in buttons\\\" :key=\\\"index\\\">\\n            <div :id=\\\"button.buttonID\\\" :class=\\\"button.buttonClass + ' button'\\\" @click=\\\"button.onClick(); open = false\\\">{{\\n              button.buttonText\\n            }}\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</template>\\n\\n<script setup>\\nimport { ref, watchEffect } from 'vue'\\nconst emit = defineEmits([\\\"input\\\", \\\"afterClick\\\"]);\\nconst props = defineProps({\\n  options: {\\n    type: Array,\\n    required: true,\\n  },\\n  disabledOptions: {\\n    type: Array,\\n    required: false\\n  },\\n  default: {\\n    type: String,\\n    required: false,\\n    default: '',\\n  },\\n  defaultForObject: {\\n    type: Object,\\n    required: false,\\n    default: null,\\n  },\\n  defaultMultiple: {\\n    type: Array,\\n    required: false,\\n    default: [],\\n  },\\n  selectedOption: {\\n    type: String,\\n    required: false\\n  },\\n  multiple: {\\n    type: Boolean,\\n    required: false,\\n    default: false\\n  },\\n  tabindex: {\\n    type: Number,\\n    required: false,\\n    default: 0,\\n  },\\n  placeholder: {\\n    type: String,\\n    required: false,\\n    default: \\\"\\\",\\n  },\\n  selectedClass: {\\n    type: String,\\n    required: false,\\n    default: \\\"\\\",\\n  },\\n  multipleSelectedClass: {\\n    type: String,\\n    required: false,\\n    default: \\\"\\\",\\n  },\\n  extraPrefixButton: {\\n    type: Boolean,\\n    required: false,\\n    default: false,\\n  },\\n  extraButton: {\\n    type: Boolean,\\n    required: false,\\n    default: false,\\n  },\\n  iconInSelect: {\\n    type: Boolean,\\n    required: false,\\n    default: false,\\n    // validator: () => {\\n    //   return (icon) => typeof icon.iconName === \\\"string\\\" && typeof icon.iconClass === \\\"string\\\" && typeof icon.iconFunc === \\\"function\\\"\\n    // }\\n  },\\n  optionIcon: {\\n    type: String,\\n    required: false,\\n  },\\n  prefixButtons: {\\n    type: Array,\\n    required: false,\\n    default: () => [],\\n    validator: (value) => {\\n      return value.every(\\n        (button) =>\\n          typeof button === \\\"object\\\" &&\\n          typeof button.buttonText === \\\"string\\\" &&\\n          typeof button.buttonClass === \\\"string\\\" &&\\n          typeof button.buttonID === \\\"string\\\" &&\\n          typeof button.onClick === \\\"function\\\"\\n      );\\n    },\\n  },\\n  buttons: {\\n    type: Array,\\n    required: false,\\n    default: () => [],\\n    validator: (value) => {\\n      return value.every(\\n        (button) =>\\n          typeof button === \\\"object\\\" &&\\n          typeof button.buttonText === \\\"string\\\" &&\\n          typeof button.buttonClass === \\\"string\\\" &&\\n          typeof button.buttonID === \\\"string\\\" &&\\n          typeof button.onClick === \\\"function\\\"\\n      );\\n    },\\n  },\\n  disabled: {\\n    type: Boolean,\\n    default: false\\n  }\\n})\\n\\nconst open = ref(false);\\nconst selected = ref(props.default ? props.default : props.defaultForObject ? props.defaultForObject : null);\\nconst selectedItems = ref(props.defaultMultiple ? props.defaultMultiple : []);\\n\\nwatchEffect(() => {\\n  if (props && props.selectedOption) {\\n    selected.value = props.selectedOption;\\n    open.value = false;\\n  }\\n  if(props.defaultMultiple) {\\n    selectedItems.value = props.defaultMultiple;\\n  }\\n})\\n\\nfunction prefixClicked(button) {\\n  selected.value = button.buttonText;\\n  button.onClick();\\n  open.value = false;\\n}\\n\\nconst handleClick = (option) => {\\n  if (!props.multiple) {\\n    if (typeof option === 'object') {\\n      emit('input', option.id ? option.id : option.ID);\\n      selected.value = option;\\n      open.value = false;\\n      emit('input', selected.value.id ? selected.value.id : selected.value.ID);\\n    }\\n    else if (typeof option === 'string') {\\n      emit('input', option);\\n      selected.value = option;\\n      open.value = false;\\n      emit('input', selected.value);\\n    }\\n  }\\n  else {\\n    // emit('input', option.id);\\n    selectedItems.value.push(option);\\n    emit('input', selectedItems.value);\\n    emit('afterClick');\\n  }\\n}\\n\\nconst getDisabledOptionsText = (index) => {\\n  const opt = props.disabledOptions.find(e => e.index == index);\\n  if (opt)\\n    return opt.cause;\\n  return undefined;\\n}\\nconst cleanSelected = (event) => {\\n  event.stopPropagation();\\n  selected.value = null;\\n  emit('input', selected.value);\\n}\\nconst removeItem = (event, toRemove) => {\\n  event.stopPropagation();\\n  selectedItems.value = selectedItems.value.filter(item => item.ID != toRemove.ID);\\n  emit('input', selectedItems.value);\\n  emit('afterClick', true, toRemove);\\n\\n}\\n\\ndefineExpose({\\n  setSelected\\n})\\n\\n\\nfunction setSelected(orgName) {\\n  selected.value = orgName;\\n}\\n</script>\\n\\n  \\n<style scoped>\\n/*You should put other CSS properties with same class names in the parent component's style tag that is not scoped.*/\\n* {\\n  font-family: \\\"Roboto\\\"\\n}\\n\\n.extra-button-section {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  padding: 8px 0;\\n  color: var(--Grey-darken-2, #757575);\\n  text-align: center;\\n  font-family: Roboto;\\n  font-size: 16px;\\n  font-style: normal;\\n  font-weight: 500;\\n  line-height: normal;\\n  text-transform: capitalize;\\n\\n}\\n\\n.select-extra-button {\\n  color: var(--Grey-darken-2, #757575);\\n  text-align: center;\\n  font-family: Material Design Icons;\\n  font-size: 24px;\\n  font-style: normal;\\n  font-weight: 400;\\n  line-height: normal;\\n  margin-right: 4px;\\n}\\n\\n.custom-select {\\n  position: relative;\\n  width: 100%;\\n  text-align: left;\\n  outline: none;\\n}\\n\\n.custom-select.disabled {\\n    opacity: 0.4;\\n    pointer-events: none;\\n  }\\n\\n.custom-select .selected {\\n\\n  cursor: pointer;\\n  user-select: none;\\n}\\n\\n.custom-select .selected .select-down,\\n.custom-select .selected .cleanIcon {\\n  position: absolute;\\n  right: 10px;\\n  float: right;\\n}\\n\\n.custom-select .items {\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n  z-index: 1;\\n  border-radius: 8px;\\n  border: 1px solid #E3E3E3;\\n  overflow: hidden;\\n  background-color: #FFFFFF;\\n  box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\\n  padding: 10px 0px;\\n}\\n\\n.custom-select .items .option {\\n  cursor: pointer;\\n  padding: 6px 12px;\\n  user-select: none;\\n  color: var(--Text-color, #212121);\\n  font-family: Roboto;\\n  font-size: 15px;\\n  font-style: normal;\\n  font-weight: 400;\\n  line-height: normal;\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.custom-select .option img {\\n  display: flex;\\n  height: 22px;\\n  border-radius: 99px;\\n  background: var(--cvcv, #FFF);\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-left: 10px;\\n  margin-right: 16px;\\n}\\n\\n.custom-select .items .option.disabled div {\\n  cursor: default;\\n  user-select: none;\\n  opacity: 0.4;\\n}\\n\\n.custom-select .items .option:hover {\\n  background-color: #2C5A86;\\n  color: #FFFFFF\\n}\\n\\n.custom-select .items .option.disabled:active {\\n  pointer-events: none;\\n}\\n\\n.selectHide {\\n  display: none;\\n}\\n\\n.button-div {\\n  justify-content: center;\\n  display: grid;\\n  padding: 13px 0 19px;\\n  margin-top: 10px\\n}\\n\\n.button {\\n  cursor: pointer;\\n}\\n\\n.custom-placeholder {\\n  color: #BCBCBC !important;\\n}\\n\\n.custom-placeholder:empty:before {\\n  content: attr(data-placeholder);\\n  color: #BCBCBC;\\n}\\n\\n.custom-placeholder:focus-visible {\\n  outline: none;\\n}\\n\\n.button-tooltip {\\n  visibility: hidden;\\n  display: flex;\\n  flex-direction: row;\\n  align-items: flex-start;\\n  padding: 8px;\\n  top: 39px;\\n  left: 65px;\\n  height: 30px;\\n  position: absolute;\\n  background: #757575;\\n  color: #FFFFFF;\\n  font-size: 12px;\\n  line-height: 14px;\\n  text-align: center;\\n  border-radius: 4px;\\n  letter-spacing: 0.2px;\\n  opacity: 0;\\n  z-index: 1;\\n}\\n\\n.custom-select .items .option:hover .button-tooltip {\\n  visibility: visible;\\n  transition: opacity 0.3s ease-out 0.5s;\\n  opacity: 1;\\n}\\n\\n.cleanIcon {\\n  display: none;\\n}\\n\\n.selected:hover .cleanIcon {\\n  display: inline-block;\\n}\\n\\n.multipleSelected {\\n  display: flex;\\n  align-items: center;\\n  height: 40px;\\n  flex-wrap: wrap;\\n  line-height: 18px;\\n  max-width: 100%;\\n  min-width: 0;\\n}\\n\\n.multipleSelected .remove-item {\\n  position: relative;\\n  color: #000000;\\n  margin-left: 4px;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","<template>\n  <div :class=\"{'custom-select': true, 'disabled': props.disabled}\" :tabindex=\"tabindex\" @blur=\"open = false\">\n    <div v-if=\"!multiple\">\n      <div\n        :class=\"(open ? 'open ' : '') + 'selected ' + selectedClass + (selected == placeholder ? ' custom-placeholder' : '')\"\n        @click=\"open = !open\">\n        <div v-if=\"selected\">{{ typeof selected === 'object' ? selected.name : selected }}\n          <i class=\"mdi mdi-chevron-down select-down\"></i>\n          <i v-if=\"iconInSelect\" class=\"mdi mdi-close cleanIcon\" style=\"right: 30px\" @click=\"cleanSelected($event)\"></i>\n        </div>\n        <div v-else>\n          <span contenteditable=\"true\" :data-placeholder=\"placeholder\" class=\"custom-placeholder\"></span>\n          <i class=\"mdi mdi-chevron-down select-down\"></i>\n        </div>\n      </div>\n      <div class=\"items\" :class=\"{ selectHide: !open }\">\n        <template v-if=\"extraPrefixButton\">\n          <div class=\"option\">\n           <i class=\"mdi mdi-chart-donut\" style=\"font-size: 20px; margin-right: 16px;\"></i>\n            <div v-for=\"(button, index) in prefixButtons\" :key=\"index\" :id=\"button.buttonID\"\n              :class=\"button.buttonClass + ' button'\" @click=\"prefixClicked(button)\">{{ button.buttonText }}\n            </div>\n          </div>\n          <div class=\"user-menu-border\"></div>\n        </template>\n        <div v-for=\"(option, i) of options\" :key=\"i\" @click=\"handleClick(option)\"\n          :class=\"['option', (props.disabledOptions && getDisabledOptionsText(i)) ? 'disabled' : '']\">\n           <i v-if=\"optionIcon\" :class=\"optionIcon\" style=\"font-size: 20px; margin-right: 16px;\"></i>\n          <span v-if=\"props.disabledOptions && getDisabledOptionsText(i)\" class=\"button-tooltip\"\n            :style=\"{ top: (i * 32) + 85 + 'px' }\">{{ getDisabledOptionsText(i) }}</span>\n          <div :class=\"typeof option === 'string' && option == placeholder ? 'custom-placeholder' : ''\">{{ typeof option\n            === 'object' ? option.name : option }}</div>\n        </div>\n        <template v-if=\"extraButton\">\n          <div class=\"user-menu-border\"></div>\n          <div class=\"extra-button-section\">\n            <i class=\"mdi mdi-plus select-extra-button\"></i>\n            <div v-for=\"(button, index) in buttons\" :key=\"index\" :id=\"button.buttonID\"\n              :class=\"button.buttonClass + ' button'\" @click=\"button.onClick(); open = false\">{{\n                button.buttonText\n              }}</div>\n          </div>\n        </template>\n      </div>\n    </div>\n    <div v-else>\n      <div :class=\"open ? 'open selected ' + selectedClass : 'selected ' + selectedClass\" @click=\"open = !open\">\n        <div v-if=\"selectedItems && selectedItems.length > 0\" class=\"multipleSelected\">\n          <span v-for=\"item in selectedItems\" :key=\"item\" :class=\"multipleSelectedClass\">{{ item.name }}\n            <i class=\"mdi mdi-close remove-item\" @click=\"removeItem($event, item)\"></i>\n          </span>\n          <i class=\"mdi mdi-chevron-down select-down\"></i>\n          <i v-if=\"iconInSelect\" class=\"mdi mdi-close cleanIcon\" style=\"right: 30px\" @click=\"cleanSelected($event)\"></i>\n        </div>\n        <div v-else>\n          <span contenteditable=\"true\" :data-placeholder=\"placeholder\" class=\"custom-placeholder\"></span>\n          <i class=\"mdi mdi-chevron-down select-down\"></i>\n        </div>\n      </div>\n      <div class=\"items\" :class=\"{ selectHide: !open }\" :style=\"{ padding: extraButton ? '10px 0 0' : '10px 0' }\">\n        <div v-for=\"(option, i) of options\" :key=\"i\" @click=\"handleClick(option)\"\n          :class=\"['option', (props.disabledOptions && getDisabledOptionsText(i)) ? 'disabled' : '']\">\n          <span v-if=\"props.disabledOptions && getDisabledOptionsText(i)\" class=\"button-tooltip\"\n            :style=\"{ top: (i * 32) + 85 + 'px' }\">{{ getDisabledOptionsText(i) }}</span>\n          <div>{{ typeof option === 'object' ? option.name : option }}</div>\n        </div>\n        <div v-if=\"extraButton\" class=\"button-div\" :style=\"{ borderTop: extraButton ? '1px solid #EEEEEE' : 'none' }\">\n          <div v-for=\"(button, index) in buttons\" :key=\"index\">\n            <div :id=\"button.buttonID\" :class=\"button.buttonClass + ' button'\" @click=\"button.onClick(); open = false\">{{\n              button.buttonText\n            }}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, watchEffect } from 'vue'\nconst emit = defineEmits([\"input\", \"afterClick\"]);\nconst props = defineProps({\n  options: {\n    type: Array,\n    required: true,\n  },\n  disabledOptions: {\n    type: Array,\n    required: false\n  },\n  default: {\n    type: String,\n    required: false,\n    default: '',\n  },\n  defaultForObject: {\n    type: Object,\n    required: false,\n    default: null,\n  },\n  defaultMultiple: {\n    type: Array,\n    required: false,\n    default: [],\n  },\n  selectedOption: {\n    type: String,\n    required: false\n  },\n  multiple: {\n    type: Boolean,\n    required: false,\n    default: false\n  },\n  tabindex: {\n    type: Number,\n    required: false,\n    default: 0,\n  },\n  placeholder: {\n    type: String,\n    required: false,\n    default: \"\",\n  },\n  selectedClass: {\n    type: String,\n    required: false,\n    default: \"\",\n  },\n  multipleSelectedClass: {\n    type: String,\n    required: false,\n    default: \"\",\n  },\n  extraPrefixButton: {\n    type: Boolean,\n    required: false,\n    default: false,\n  },\n  extraButton: {\n    type: Boolean,\n    required: false,\n    default: false,\n  },\n  iconInSelect: {\n    type: Boolean,\n    required: false,\n    default: false,\n    // validator: () => {\n    //   return (icon) => typeof icon.iconName === \"string\" && typeof icon.iconClass === \"string\" && typeof icon.iconFunc === \"function\"\n    // }\n  },\n  optionIcon: {\n    type: String,\n    required: false,\n  },\n  prefixButtons: {\n    type: Array,\n    required: false,\n    default: () => [],\n    validator: (value) => {\n      return value.every(\n        (button) =>\n          typeof button === \"object\" &&\n          typeof button.buttonText === \"string\" &&\n          typeof button.buttonClass === \"string\" &&\n          typeof button.buttonID === \"string\" &&\n          typeof button.onClick === \"function\"\n      );\n    },\n  },\n  buttons: {\n    type: Array,\n    required: false,\n    default: () => [],\n    validator: (value) => {\n      return value.every(\n        (button) =>\n          typeof button === \"object\" &&\n          typeof button.buttonText === \"string\" &&\n          typeof button.buttonClass === \"string\" &&\n          typeof button.buttonID === \"string\" &&\n          typeof button.onClick === \"function\"\n      );\n    },\n  },\n  disabled: {\n    type: Boolean,\n    default: false\n  }\n})\n\nconst open = ref(false);\nconst selected = ref(props.default ? props.default : props.defaultForObject ? props.defaultForObject : null);\nconst selectedItems = ref(props.defaultMultiple ? props.defaultMultiple : []);\n\nwatchEffect(() => {\n  if (props && props.selectedOption) {\n    selected.value = props.selectedOption;\n    open.value = false;\n  }\n  if(props.defaultMultiple) {\n    selectedItems.value = props.defaultMultiple;\n  }\n})\n\nfunction prefixClicked(button) {\n  selected.value = button.buttonText;\n  button.onClick();\n  open.value = false;\n}\n\nconst handleClick = (option) => {\n  if (!props.multiple) {\n    if (typeof option === 'object') {\n      emit('input', option.id ? option.id : option.ID);\n      selected.value = option;\n      open.value = false;\n      emit('input', selected.value.id ? selected.value.id : selected.value.ID);\n    }\n    else if (typeof option === 'string') {\n      emit('input', option);\n      selected.value = option;\n      open.value = false;\n      emit('input', selected.value);\n    }\n  }\n  else {\n    // emit('input', option.id);\n    selectedItems.value.push(option);\n    emit('input', selectedItems.value);\n    emit('afterClick');\n  }\n}\n\nconst getDisabledOptionsText = (index) => {\n  const opt = props.disabledOptions.find(e => e.index == index);\n  if (opt)\n    return opt.cause;\n  return undefined;\n}\nconst cleanSelected = (event) => {\n  event.stopPropagation();\n  selected.value = null;\n  emit('input', selected.value);\n}\nconst removeItem = (event, toRemove) => {\n  event.stopPropagation();\n  selectedItems.value = selectedItems.value.filter(item => item.ID != toRemove.ID);\n  emit('input', selectedItems.value);\n  emit('afterClick', true, toRemove);\n\n}\n\ndefineExpose({\n  setSelected\n})\n\n\nfunction setSelected(orgName) {\n  selected.value = orgName;\n}\n</script>\n\n  \n<style scoped>\n/*You should put other CSS properties with same class names in the parent component's style tag that is not scoped.*/\n* {\n  font-family: \"Roboto\"\n}\n\n.extra-button-section {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 8px 0;\n  color: var(--Grey-darken-2, #757575);\n  text-align: center;\n  font-family: Roboto;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  text-transform: capitalize;\n\n}\n\n.select-extra-button {\n  color: var(--Grey-darken-2, #757575);\n  text-align: center;\n  font-family: Material Design Icons;\n  font-size: 24px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  margin-right: 4px;\n}\n\n.custom-select {\n  position: relative;\n  width: 100%;\n  text-align: left;\n  outline: none;\n}\n\n.custom-select.disabled {\n    opacity: 0.4;\n    pointer-events: none;\n  }\n\n.custom-select .selected {\n\n  cursor: pointer;\n  user-select: none;\n}\n\n.custom-select .selected .select-down,\n.custom-select .selected .cleanIcon {\n  position: absolute;\n  right: 10px;\n  float: right;\n}\n\n.custom-select .items {\n  position: absolute;\n  left: 0;\n  right: 0;\n  z-index: 1;\n  border-radius: 8px;\n  border: 1px solid #E3E3E3;\n  overflow: hidden;\n  background-color: #FFFFFF;\n  box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\n  padding: 10px 0px;\n}\n\n.custom-select .items .option {\n  cursor: pointer;\n  padding: 6px 12px;\n  user-select: none;\n  color: var(--Text-color, #212121);\n  font-family: Roboto;\n  font-size: 15px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  display: flex;\n  align-items: center;\n}\n\n.custom-select .option img {\n  display: flex;\n  height: 22px;\n  border-radius: 99px;\n  background: var(--cvcv, #FFF);\n  justify-content: space-between;\n  align-items: center;\n  margin-left: 10px;\n  margin-right: 16px;\n}\n\n.custom-select .items .option.disabled div {\n  cursor: default;\n  user-select: none;\n  opacity: 0.4;\n}\n\n.custom-select .items .option:hover {\n  background-color: #2C5A86;\n  color: #FFFFFF\n}\n\n.custom-select .items .option.disabled:active {\n  pointer-events: none;\n}\n\n.selectHide {\n  display: none;\n}\n\n.button-div {\n  justify-content: center;\n  display: grid;\n  padding: 13px 0 19px;\n  margin-top: 10px\n}\n\n.button {\n  cursor: pointer;\n}\n\n.custom-placeholder {\n  color: #BCBCBC !important;\n}\n\n.custom-placeholder:empty:before {\n  content: attr(data-placeholder);\n  color: #BCBCBC;\n}\n\n.custom-placeholder:focus-visible {\n  outline: none;\n}\n\n.button-tooltip {\n  visibility: hidden;\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  padding: 8px;\n  top: 39px;\n  left: 65px;\n  height: 30px;\n  position: absolute;\n  background: #757575;\n  color: #FFFFFF;\n  font-size: 12px;\n  line-height: 14px;\n  text-align: center;\n  border-radius: 4px;\n  letter-spacing: 0.2px;\n  opacity: 0;\n  z-index: 1;\n}\n\n.custom-select .items .option:hover .button-tooltip {\n  visibility: visible;\n  transition: opacity 0.3s ease-out 0.5s;\n  opacity: 1;\n}\n\n.cleanIcon {\n  display: none;\n}\n\n.selected:hover .cleanIcon {\n  display: inline-block;\n}\n\n.multipleSelected {\n  display: flex;\n  align-items: center;\n  height: 40px;\n  flex-wrap: wrap;\n  line-height: 18px;\n  max-width: 100%;\n  min-width: 0;\n}\n\n.multipleSelected .remove-item {\n  position: relative;\n  color: #000000;\n  margin-left: 4px;\n}\n</style>\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./customSelect.vue?vue&type=style&index=0&id=127b3c94&scoped=true&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./customSelect.vue?vue&type=style&index=0&id=127b3c94&scoped=true&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","import script from \"./customSelect.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./customSelect.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./customSelect.vue?vue&type=style&index=0&id=127b3c94&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/studio/studio/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-127b3c94\"]])\n\nexport default __exports__"],"names":["___CSS_LOADER_EXPORT___","push","module","id","open","selected","props","default","defaultForObject","selectedItems","defaultMultiple","selectedOption","value","handleClick","option","multiple","emit","ID","getDisabledOptionsText","index","opt","disabledOptions","find","e","cause","cleanSelected","event","stopPropagation","setSelected","orgName","toRemove","filter","item","button","buttonText","onClick","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement"],"sourceRoot":""}