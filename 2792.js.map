{"version":3,"file":"2792.js?ver=0.0.313_1711961047957","mappings":"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","sources":["webpack://qcloud_shell/./src/presentation/vue3/components/application/appItemsTable.vue?47e7","webpack://qcloud_shell/./src/presentation/vue3/components/application/appItemsTable.vue?478d","webpack://qcloud_shell/./src/presentation/vue3/components/application/createAppVersion.vue?329d","webpack://qcloud_shell/./src/presentation/vue3/components/application/createAppVersion.vue?8044","webpack://qcloud_shell/./src/presentation/vue3/components/application/appItemsTable.vue?9b18","webpack://qcloud_shell/./src/presentation/vue3/components/application/appItemsTable.vue?c602","webpack://qcloud_shell/./src/presentation/vue3/components/application/appItemsTable.vue?8173","webpack://qcloud_shell/./src/presentation/vue3/components/application/appItemsTable.vue","webpack://qcloud_shell/./src/presentation/vue3/components/application/createAppVersion.vue?2498","webpack://qcloud_shell/./src/presentation/vue3/components/application/createAppVersion.vue?d571","webpack://qcloud_shell/./src/presentation/vue3/components/application/createAppVersion.vue?0127","webpack://qcloud_shell/./src/presentation/vue3/components/application/createAppVersion.vue"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.container[data-v-2bcaf64a] {\\n    padding: 32px 20px 20px;\\n}\\n.settings-container[data-v-2bcaf64a] {\\n    position: relative;\\n    top: 0px;\\n    left: 0px;\\n}\\n.custom-text[data-v-2bcaf64a] {\\n    /* position: absolute; */\\n    font-family: 'Roboto';\\n    font-style: normal;\\n    font-weight: 500;\\n    font-size: 15px;\\n    line-height: 18px;\\n    /* left: 24px; */\\n    color: #212121;\\n}\\n\\n/* .custom-text.title{\\n    top: 92px;\\n}\\n\\n.custom-text.environment{\\n    top: 174px;\\n} */\\n.radio-button[data-v-2bcaf64a] {\\n    position: absolute;\\n    top: 60px;\\n    left: 20px;\\n    cursor: pointer;\\n}\\n.radio-text[data-v-2bcaf64a] {\\n    position: absolute;\\n    top: 59px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n    user-select: none;\\n    cursor: pointer;\\n}\\n.existing-app-url[data-v-2bcaf64a] {\\n    position: absolute;\\n    width: 100%;\\n    height: 40px;\\n    top: 114px;\\n    left: 20px;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #bcbcbc;\\n    border-radius: 4px;\\n    font: normal normal normal 14px/19px Roboto;\\n    letter-spacing: 0px;\\n    padding: 10px 0px 10px 10px;\\n}\\n.url-error[data-v-2bcaf64a] {\\n    border: 1px solid red;\\n}\\n.url-disable[data-v-2bcaf64a] {\\n    opacity: 0.5;\\n}\\n.existing-app-url[data-v-2bcaf64a]::placeholder {\\n    color: #bcbcbc;\\n    user-select: none;\\n}\\n.modules-selected-checkbox[data-v-2bcaf64a] {\\n    cursor: pointer;\\n}\\n.modules-selected-text[data-v-2bcaf64a] {\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #757575;\\n    margin: 0 0 13px 30px;\\n}\\n\\n/* .modules-selected-text.deploy {\\n    top: 257px;\\n} */\\n.text-number[data-v-2bcaf64a] {\\n    font: normal normal bold 14px/19px Roboto;\\n    color: #212121;\\n}\\n.modules-datatable[data-v-2bcaf64a] {\\n    width: 100%;\\n}\\n\\n/* .modules-datatable.deploy {\\n    top: 286px;\\n} */\\n.modules-datatable[data-v-2bcaf64a]::-webkit-scrollbar {\\n    width: 4px;\\n}\\n.modules-datatable[data-v-2bcaf64a]::-webkit-scrollbar-thumb {\\n    background: #bcbcbc 0% 0% no-repeat padding-box;\\n    border-radius: 10px;\\n}\\n.modules-datatable[data-v-2bcaf64a]::-webkit-scrollbar-thumb:hover {\\n    background: #555;\\n}\\n.row-container[data-v-2bcaf64a] {\\n    width: 100%;\\n    height: 36px;\\n    position: relative;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #e0e0e0;\\n}\\n.chevron[data-v-2bcaf64a] {\\n    position: absolute;\\n    left: 4px;\\n    color: #757575;\\n    font-size: 24px;\\n}\\n.chevron.disabled[data-v-2bcaf64a] {\\n    pointer-events: none;\\n    color: #D5D5D5;\\n}\\n.module-checkbox[data-v-2bcaf64a] {\\n    position: absolute;\\n    top: 10px;\\n    left: 43px;\\n    cursor: pointer;\\n}\\n.module-name[data-v-2bcaf64a] {\\n    position: absolute;\\n    top: 9px;\\n    left: 69px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n.module-name.imported[data-v-2bcaf64a] {\\n    top: 10px;\\n    left: 87px;\\n}\\n.module-name.disabled[data-v-2bcaf64a] {\\n    color: #D5D5D5;\\n}\\n.model-checkbox[data-v-2bcaf64a] {\\n    position: absolute;\\n    top: 10px;\\n    left: 59px;\\n    cursor: pointer;\\n}\\n.model-icon[data-v-2bcaf64a] {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 85px;\\n}\\n.app-tier-model-icon[data-v-2bcaf64a] {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 69px\\n}\\n.app-tier-model-name[data-v-2bcaf64a] {\\n    position: absolute;\\n    top: 10px;\\n    left: 87px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n.app-tier-model-name.disabled[data-v-2bcaf64a] {\\n    color: #D5D5D5;\\n}\\n.model-name[data-v-2bcaf64a] {\\n    position: absolute;\\n    top: 9px;\\n    left: 103px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n.model-name.disabled[data-v-2bcaf64a] {\\n    color: #D5D5D5;\\n}\\n.version-text[data-v-2bcaf64a] {\\n    margin: 10px 7px 10px auto;\\n    display: table;\\n    font: normal normal normal 12px/16px Roboto;\\n    color: #757575;\\n    cursor: pointer;\\n    user-select: none;\\n}\\n.version-text.disabled[data-v-2bcaf64a] {\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n.version-icon[data-v-2bcaf64a] {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #D5D5D5;\\n}\\n.version-icon.disabled[data-v-2bcaf64a] {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #EEEEEE;\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n.footer[data-v-2bcaf64a] {\\n    position: relative;\\n    width: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: end;\\n}\\n.footer.deploy[data-v-2bcaf64a] {\\n    position: relative;\\n    width: 100%;\\n}\\n.footer.export[data-v-2bcaf64a] {\\n    margin: 50px 0 24px;\\n}\\n.cancel-button[data-v-2bcaf64a] {\\n    border-radius: 4px;\\n    user-select: none;\\n    font-style: normal;\\n    font-weight: 500;\\n    font-family: \\\"ROBOTO\\\";\\n    font-size: 15px;\\n    color: #757575;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n.save-button[data-v-2bcaf64a] {\\n    background: #151233 0% 0% no-repeat padding-box;\\n    border-radius: 4px;\\n    user-select: none;\\n    font-weight: 500;\\n    font-size: 15px;\\n    color: #ffffff;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n.mobile-publish-text[data-v-2bcaf64a],\\n.web-publish-text[data-v-2bcaf64a] {\\n    padding: 5px 12px;\\n    margin-bottom: 52px;\\n    width: 100%;\\n    color: #757575;\\n    font-size: 14px;\\n    background: #F5F5FA;\\n    border-radius: 4px;\\n    display: flex;\\n    align-items: center;\\n}\\n.mobile-publish-text i[data-v-2bcaf64a],\\n.web-publish-text i[data-v-2bcaf64a] {\\n    font-size: 24px;\\n    color: #151233;\\n    margin-right: 4px;\\n}\\n.save-button.deploy[data-v-2bcaf64a] {\\n    padding: 10px 16px;\\n}\\n.button-disable .save-button[data-v-2bcaf64a] {\\n    color: #757575;\\n    cursor: default;\\n}\\n.button-disable .save-button:hover+.button-tooltip[data-v-2bcaf64a],\\n.start-screen:hover .button-tooltip[data-v-2bcaf64a],\\n.row-container:hover .button-tooltip[data-v-2bcaf64a],\\n.publish-info:hover .button-tooltip[data-v-2bcaf64a] {\\n    visibility: visible;\\n    transition: opacity 0.3s ease-out 1s;\\n    opacity: 1;\\n}\\n.button-tooltip[data-v-2bcaf64a] {\\n    visibility: hidden;\\n    position: absolute;\\n    background: #757575;\\n    color: #FFFFFF;\\n    font-size: 11px;\\n    font-family: 'Roboto';\\n    text-align: center;\\n    border-radius: 4px;\\n    letter-spacing: 0.2px;\\n    padding: 6px 8px 6px 8px;\\n    top: 56px;\\n    left: 63px;\\n    opacity: 0;\\n}\\n.publish-info[data-v-2bcaf64a] {\\n    color: #757575;\\n    font-size: 20px;\\n    margin-left: 10px;\\n}\\n.select-environment[data-v-2bcaf64a] {\\n    width: 100%;\\n    font-size: 15px;\\n    height: 40px;\\n    line-height: 40px;\\n    margin-top: 4px\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/presentation/vue3/components/application/appItemsTable.vue\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"<template>\\n    <div style=\\\"display: flex; flex-direction: column; flex: 1\\\">\\n        <div>\\n            <CheckboxComp :class=\\\"['modules-selected-checkbox', props.screenType == 'Deploy' ? 'deploy' : '']\\\"\\n                :minus=\\\"mainCheckboxState == false\\\" :check=\\\"mainCheckboxState == true\\\"\\n                @click=\\\"handleModuleCountCheckboxEvent(mainCheckboxState == undefined)\\\" />\\n            <div :class=\\\"['modules-selected-text', props.screenType == 'Deploy' ? 'deploy' : '']\\\">\\n                <span class=\\\"text-number\\\">{{ allChildCheckedModulesCount + anyChildCheckedModulesCount + checkedRootLevelModelsCount }}</span>\\n                of <span class=\\\"text-number\\\">{{ totalRootLevelCount }}</span> items selected\\n            </div>\\n        </div>\\n\\n        <div :class=\\\"['modules-datatable', props.screenType == 'Deploy' ? 'deploy' : '']\\\" id=\\\"module-container-div\\\" :style=\\\"[props.openedInDialog ? 'max-height: 300px; overflow: auto' : 'flex: 1']\\\" ></div>\\n        <div v-if=\\\"props.screenType == 'Deploy'\\\" style=\\\"margin-bottom: 102px\\\">\\n            <div style=\\\"display: flex; align-items: center;\\\">\\n                <span class=\\\"custom-text environment\\\"> Publish To </span>\\n                <span class=\\\"publish-info\\\">\\n                    <i class=\\\"mdi mdi-information\\\"></i>\\n                    <span class=\\\"button-tooltip\\\" style=\\\"top: 460px; left: 96px; z-index: 1; width: 231px;\\\">Publish To\\n                        options may change depending on the module type you choose.</span>\\n                </span>\\n            </div>\\n\\n            <CustomSelect :options=\\\"publishTargets\\\" @input=\\\"onTargetSelect\\\" :selectedOption=\\\"selectedTarget\\\"\\n                :default=\\\"selectedTarget\\\" :disabledOptions=\\\"disabledOptions\\\" selectedClass=\\\"selected-environment\\\"\\n                placeholder=\\\"Select the publish environment of your application\\\" class=\\\"select-environment\\\">\\n            </CustomSelect>\\n        </div>\\n        <div :class=\\\"['footer', props.screenType == 'Deploy' ? 'deploy' : 'export']\\\">\\n            <div :class=\\\"['cancel-button', props.screenType == 'Deploy' ? 'deploy' : '']\\\" @click=\\\"close\\\">Cancel</div>\\n            <div :class=\\\"[(saveButtonDisable ? ' button-disable' : '')]\\\"\\n                @click=\\\"!saveButtonDisable && props.buttonCb()\\\">\\n                <span class=\\\"save-button deploy\\\">{{ buttonNameDict[props.screenType] }}</span>\\n                <span v-if=\\\"!isStartScreenOK\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -46px; left: 652px; z-index: 1; width: 120px;\\\">You need to include your start screen.</span>\\n                <span v-else-if=\\\"props.screenType == 'Deploy' && !selectedTarget\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -46px; left: 644px; z-index: 1; width: 123px;\\\">You need to select a publish\\n                    environment.</span>\\n                <span v-else-if=\\\"!isThereVersion\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -95px; left: 644px; z-index: 1; width: 135px;\\\">There are no items ready to publish. At least\\n                    one of your items must be ready to publish.</span>\\n                <span v-else-if=\\\"!isAllDependenciesOK\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -95px; left: 644px; z-index: 1; width: 135px;\\\">{{ dependencyErrorStr }}</span>\\n            </div>\\n\\n        </div>\\n    </div>\\n</template>\\n\\n\\n<script setup lang=\\\"ts\\\">\\nimport { CryptoHelper } from \\\"@stechquick/algae/lib/helpers/cryptoHelper\\\";\\nimport { ModelContants } from \\\"../../../../../../common/qCloudTemp/modelContants\\\";\\nimport { computed, createApp, defineAsyncComponent, onMounted, ref } from \\\"vue\\\";\\nimport { IOrganizationCloud } from \\\"../../../../../../common/clean/domain/useCases/ICloudProvider\\\";\\nimport { IPlatformSelection, ITableData } from \\\"../../../../../../common/qCloudTemp/exporter\\\";\\nimport { IModuleRelatedModelItem, IQJsonAdditionals } from \\\"../../../../../../common/qCloudTemp/quickCloud\\\";\\nimport { container } from \\\"../../../../domain/core/diContainer\\\";\\nimport { IQCloudApi } from \\\"../../../../domain/infrastructure/IQCloudApi\\\";\\nimport { IModel, IModelHistoryInfo, IModule, IModuleVersion } from \\\"../../../../domain/model/models\\\";\\nimport { IDialog } from \\\"../../../../domain/presentation/IDialog\\\";\\nimport { IDeployJobs } from \\\"../../../../domain/useCase/IDeployJobs\\\";\\nimport { IJobUtils } from \\\"../../../../domain/useCase/IJobUtils\\\";\\nimport { IListMultiModelVersions } from \\\"../../../../domain/useCase/IListMultiModelVersions\\\";\\nimport { IListMultiModuleVersions } from \\\"../../../../domain/useCase/IListMultiModuleVersions\\\";\\nimport { IPackJobs } from \\\"../../../../domain/useCase/IPackJobs\\\";\\nimport { IUseCaseExecutor } from \\\"../../../../domain/useCase/IUseCaseExecutor\\\";\\nimport { IViewModel } from \\\"../../../../domain/viewModel/IViewModel\\\";\\nimport { IViewModelManager } from \\\"../../../../domain/viewModel/IViewModelManager\\\";\\nimport { IBackofficeUseCase } from \\\"../../../../domain/useCase/IBackofficeUseCase\\\";\\nimport { IApplicationUseCase } from \\\"../../../../domain/useCase/IApplicationUseCase\\\";\\nimport ExportDialogItem from \\\"../../components/dialogs/publish/components/exportDialogItem.vue\\\";\\nimport CustomSelect from \\\"../customSelect.vue\\\";\\nimport CheckboxComp from \\\"../checkboxComp.vue\\\";\\nimport { FileDisplayerExternalData, IFileDisplayerUseCase } from \\\"../../../../domain/useCase/IFileDisplayerUseCase\\\";\\nimport { ITreeItem } from \\\"../../../../domain/presentation/ITreeView\\\";\\nimport { FileExplorerConstants } from \\\"../../../../domain/useCase/IFileExplorer\\\";\\nimport { IObjectUseCase } from \\\"../../../../domain/useCase/IObjectUseCase\\\";\\n\\ninterface IDeployScreenAdditionalProps {\\n    screenType: \\\"Export\\\" | \\\"Deploy\\\" | \\\"Release\\\" | \\\"Create\\\" | \\\"Save\\\" | \\\"Update\\\";\\n    platformSelection: IPlatformSelection;\\n    buttonCb: () => void;\\n    buttonDisableCond: boolean;\\n    openedInDialog?: boolean;\\n}\\n\\ninterface IDisabledOptions {\\n    index: number\\n    cause: string;\\n}\\n\\nconst props = defineProps<IDeployScreenAdditionalProps>();\\nconst viewModel = container.resolve<IViewModel>(IViewModel);\\nconst viewModelManager = container.resolve<IViewModelManager>(IViewModelManager);\\nconst dialog = container.resolve<IDialog>(IDialog);\\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\\nconst fileDisplayerUseCase = container.resolve<IFileDisplayerUseCase>(IFileDisplayerUseCase);\\nconst objectUseCase = container.resolve<IObjectUseCase>(IObjectUseCase);\\n\\n\\nconst emit = defineEmits([\\\"close\\\", \\\"getItem\\\"]);\\nconst items = ref<Array<ITableData>>([]);\\nconst validations = ref<boolean>(true);\\nconst selectedTarget = ref<string>(\\\"\\\");\\nconst disabledOptions = ref<Array<IDisabledOptions>>();\\nconst publishTargets = ref<Array<string>>();\\nconst modelHistories = ref<Map<string, Array<IModelHistoryInfo>>>();\\nconst importedModuleVersions = ref<Map<string, Array<IModuleVersion>>>();\\nconst startScreen = ref<IModel>();\\nconst dependencyMap = ref<Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>>();\\nconst dependencyErrorStr = ref<string>('');\\nconst currentApp = computed(() => viewModel.apps.find((app) => app.ID == viewModel.studio.appId));\\nconst buttonNameDict = {\\n    \\\"Export\\\" : \\\"DOWNLOAD\\\",\\n    \\\"Deploy\\\": \\\"PUBLISH\\\",\\n    \\\"Release\\\": \\\"RELEASE\\\",\\n    \\\"Create\\\": \\\"CREATE\\\",\\n    \\\"Save\\\": \\\"SAVE\\\",\\n    \\\"Update\\\": \\\"UPDATE\\\"\\n} \\n\\n\\nonMounted(async () => {\\n    await executor.execute(async () => {\\n        await Promise.all([\\n            executor.executeUseCase<IListMultiModelVersions>(IListMultiModelVersions, {}).then(res => modelHistories.value = res),\\n            executor.executeUseCase<IListMultiModuleVersions>(IListMultiModuleVersions, {}).then(res => importedModuleVersions.value = res)\\n        ])\\n        initDependencies();\\n        handleItems();\\n        props.screenType == \\\"Deploy\\\" && syncPublishTargets();\\n        validations.value = validate();\\n        sendItems();\\n    }, { loading: true });\\n})\\n\\nconst allChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == \\\"module\\\" && e.allChildChecked).length);\\nconst anyChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == \\\"module\\\" && !e.allChildChecked && e.anyChildChecked).length);\\nconst checkedRootLevelModelsCount = computed(() => items.value.filter(e => e.type != \\\"module\\\" && e.checked).length)\\nconst totalRootLevelCount = computed(() => items.value.length);\\nconst saveButtonDisable = computed(() => (props.screenType == \\\"Deploy\\\" && props.platformSelection.web && selectedTarget.value == \\\"\\\") || !validations.value || !items.value.some((item) => item.checked || item.anyChildChecked) || !validateStartScreen() || !validateDependencies() || props.buttonDisableCond);\\nconst mainCheckboxState = computed(() => items.value.length == allChildCheckedModulesCount.value ? true\\n    : (anyChildCheckedModulesCount.value + checkedRootLevelModelsCount.value > 0 ? false : undefined));\\nconst isThereVersion = computed(() => checkMaxVersionOfAllItems());\\nconst isAllDependenciesOK = computed(validateDependencies)\\nconst isStartScreenOK = computed(validateStartScreen)\\n\\nfunction validate() {\\n    let result = true;\\n    const modules = items.value.filter(e => e.type == \\\"module\\\" && e.anyChildChecked);\\n    const appLayerItems = items.value.filter(e => e.type == \\\"qjson\\\" && e.checked);\\n\\n    startScreen.value = (viewModel.studio.items as Array<IModel>).find(item => (item.additionals as IQJsonAdditionals | undefined)?.isRootPage);\\n    if (!startScreen.value)\\n        return false;\\n\\n    if (props.screenType == \\\"Deploy\\\") {\\n        if (modules.length > 0)\\n            result = modules.map(e => e.children).filter(e => !e?.find(f => f.type == \\\"entityDesigner\\\" && f.checked)).length <= 0\\n\\n        let isApplicationWillDeploy = appLayerItems.length > 0;\\n        if (isApplicationWillDeploy) {\\n            result = appLayerItems\\n                .map(e => viewModel.studio.items.find(item => item.ID == e.id) as IModel)\\n                .findIndex(e => ((e.additionals as IQJsonAdditionals).isRootPage)) != -1;\\n        }\\n    }\\n\\n    return result;\\n}\\n\\nfunction validateDependencies() {\\n    const checkMap = new Map<string, boolean>();\\n    items.value.forEach(item => {\\n        if (item.type == 'module' && item.children && item.children.length > 0)\\n            item.children.forEach(child => checkMap.set(child.id, child.checked == true))\\n        else\\n            checkMap.set(item.id, item.checked == true)\\n    })\\n\\n    const mustBeCheckedMap = new Map<string, Array<string>>();\\n    dependencyMap.value?.forEach((deps, id) => {\\n        if (!checkMap.get(id))\\n            return;\\n\\n        deps.dependedTo.forEach(dependedId => {\\n            if (checkMap.get(dependedId))\\n                return;\\n\\n            if (mustBeCheckedMap.has(id)) {\\n                const vals = mustBeCheckedMap.get(id)!\\n                vals.push(dependedId)\\n                mustBeCheckedMap.set(id, vals)\\n            } else {\\n                mustBeCheckedMap.set(id, [dependedId])\\n            }\\n\\n        });\\n    })\\n\\n    //set deps error text\\n    const [firstItemID] = mustBeCheckedMap.keys();\\n    if (firstItemID) {\\n        const firstItemDeps = mustBeCheckedMap.get(firstItemID);\\n        const firstItemDepStr = firstItemDeps ? firstItemDeps.map(findItem).map(e => e?.name).join(', ') : '';\\n        dependencyErrorStr.value = `Select ${firstItemDepStr} first. ${findItem(firstItemID)?.name} depends on ${firstItemDepStr}.`\\n    }\\n\\n    return mustBeCheckedMap.size == 0\\n}\\n\\nfunction validateStartScreen() {\\n    return (items.value.find((item) => item.id == startScreen.value?.ID))?.checked\\n}\\n\\nfunction findItem(ID: string) {\\n    for (const item of items.value) {\\n        if (item.type != 'module' && item.id == ID)\\n            return item;\\n        if (item.type == 'module' && item.children && item.children.length > 0) {\\n            const f = item.children.find(e => e.id == ID)\\n            if (f) return f\\n        }\\n    }\\n}\\nfunction sendItems() {\\n    items.value.forEach(item => {\\n            if(item.type != \\\"module\\\" && item.type != \\\"folder\\\" && item.usageType != \\\"appAssetList\\\")  {\\n                item.checked && getItem(item);\\n            }\\n            else {\\n                item.children?.forEach(child => {\\n                    child.checked && getItem(child);\\n                 })\\n            }\\n        })\\n}\\nfunction initDependencies() {\\n    const map = new Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>();\\n    const depMap = new Map<string, Array<string>>();\\n\\n    viewModelManager.flatMapItems(viewModel.studio.items, (item) => {\\n        if (item.objectType != \\\"model\\\") { return; }\\n\\n        const isImportedModule = item.owner.objectType == \\\"module\\\" && isModuleImported(item.owner as IModule);\\n\\n        let version: string | undefined;\\n        if (!isImportedModule) {\\n            const maxVersion = getItemMaxVersion(item)\\n            if (!maxVersion)\\n                return depMap.set(item.ID, item.dependentModels ? item.dependentModels.map(e => e.modelId) : Array<string>());\\n            version = maxVersion;\\n        }\\n        else {\\n            const moduleVersions = importedModuleVersions.value?.get(item.owner.ID)\\n            const moduleVersion = (item.owner as IModule).relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion\\n\\n            const importedModuleModel = moduleVersions?.filter(e => e.version == moduleVersion).flatMap(e => e.relatedModelHistories).find(e => e.modelID == item.ID)\\n            version = importedModuleModel?.version\\n        }\\n\\n        const historyItem = modelHistories.value?.get(item.ID)?.find(e => e.version == version);\\n\\n        depMap.set(item.ID, historyItem?.dependentModels ? historyItem?.dependentModels.map(e => e.modelId) : Array<string>())\\n    });\\n\\n\\n    depMap.forEach((dependedTo, modelId) => {\\n        const dependedBy = Array<string>();\\n        depMap.forEach((dependencies, depModelId) => {\\n            if (dependencies.some(depId => depId == modelId))\\n                dependedBy.push(depModelId)\\n        })\\n        map.set(modelId, { dependedBy, dependedTo });\\n    })\\n    dependencyMap.value = map;\\n}\\n\\nfunction isModelDepended(item: ITableData) {\\n    const deps = dependencyMap.value?.get(item.id)?.dependedBy\\n    if (!deps) return false;\\n\\n    return deps.some(dep => items.value.some(item => {\\n        if (item.type == 'module' && item.anyChildChecked) {\\n            return item.children?.some(child => child.checked && child.id == dep)\\n        }\\n        return item.id == dep && item.checked\\n    }));\\n}\\nfunction createDialogComp(item: ITableData) {\\n    const newChild = createApp(ExportDialogItem, {\\n        handleItemCheckEvent,\\n        startScreen,\\n        versionDialog,\\n        handleCollapse,\\n        item: item,\\n        moduleVersionDialog\\n    });\\n    const mountEl = document.createElement('div');\\n    newChild.mount(mountEl);\\n    const parentEl = document.getElementById('module-container-div');\\n    parentEl?.appendChild(mountEl);\\n}\\nfunction createAndAppendItem({ newItem }: { newItem: ITableData }) {\\n    createDialogComp(newItem);\\n    if ((newItem).type != \\\"module\\\") {\\n        items.value.push(newItem);\\n    }\\n}\\n\\nfunction handleItems() {\\n    // - App Settings\\n    const appSettings = viewModel.studio.items.find(e => e.name == 'App Settings');\\n    const maxVersion = getItemMaxVersion(appSettings as IModel)\\n    const settingsData = appSettings && {\\n        id: appSettings.ID,\\n        name: appSettings.name,\\n        checked: true,\\n        disabled: false,\\n        type: (appSettings as IModel).modelType,\\n        version: !maxVersion ? 'latest' : maxVersion\\n    };\\n    appSettings && settingsData && createAndAppendItem({ newItem: settingsData });\\n\\n\\n    // - UI Settings\\n    const uiSettingsID = CryptoHelper.CreateGuid();\\n    const uiSettingsModels = viewModel.studio.items.filter((item) => item.objectType == \\\"model\\\" && item.usageType == \\\"appSettings\\\") as Array<IModel>;\\n    const uiSettings: ITableData = {\\n        id: uiSettingsID,\\n        collapsed: true,\\n        name: \\\"UI Settings\\\",\\n        type: \\\"module\\\",\\n        imported: false,\\n        checked: true,\\n        children: [{} as ITableData]\\n    };\\n    uiSettings && createAndAppendItem({ newItem: uiSettings });\\n    uiSettings.children = uiSettingsModels.map(settings => {\\n        const maxVersion = getItemMaxVersion(settings)\\n        const childData = {\\n            id: settings.ID,\\n            parent: uiSettings,\\n            name: settings.name,\\n            type: settings.modelType,\\n            checked: maxVersion != undefined,\\n            usageType: settings?.usageType,\\n            disabled: !maxVersion,\\n            version: maxVersion,\\n            level: 2\\n        }\\n        createAndAppendItem({ newItem: childData });\\n        return childData;\\n    })\\n    handleParentCheckedStatus(uiSettings, false);\\n\\n\\n    // - Styled Components\\n    const uiAssetID = CryptoHelper.CreateGuid();\\n    const appAssetList = viewModel.studio.items.filter((item) => item.objectType == \\\"model\\\" && item.usageType == \\\"appAssetList\\\") as Array<IModel>;\\n    const uiAssetList: ITableData = {\\n        id: uiAssetID,\\n        collapsed: true,\\n        name: \\\"Styled Components\\\",\\n        type: \\\"module\\\",\\n        imported: false,\\n        anyChildChecked: true,\\n        allChildChecked: true,\\n        children: [{} as ITableData]\\n    };\\n    uiAssetList && createAndAppendItem({ newItem: uiAssetList });\\n    uiAssetList.children = appAssetList.map((asset) => {\\n        const childAsset = {\\n            id: asset.ID,\\n            parent: uiAssetList,\\n            name: asset.name,\\n            type: asset.modelType,\\n            checked: true,\\n            usageType: asset?.usageType,\\n            level: 2\\n        }\\n        createAndAppendItem({ newItem: childAsset });\\n        return childAsset;\\n    }) as Array<ITableData>;\\n    handleParentCheckedStatus(uiAssetList, false);\\n\\n    \\n    const treeItems = fileDisplayerUseCase.cloneFileExplorerTreeView({\\n        displayFilterer: (item, hasChildren) => {\\n            switch (item.ID) { case FileExplorerConstants.uiAssetListID: case FileExplorerConstants.uiSettingsID: return false; default: break; }\\n            switch (item.objectType) {\\n                case \\\"application\\\": return false;\\n                case \\\"module\\\": return true;\\n                case \\\"folder\\\": return hasChildren;\\n                case \\\"model\\\": return true;\\n            }\\n        },\\n    });\\n\\n    const converter = (treeItem: ITreeItem<FileDisplayerExternalData>, options: {ownerModule?: {isImportedModule: boolean;moduleVersion: string | undefined;relatedModelHistories: IModuleRelatedModelItem[] | undefined}}): ITableData => {\\n        const item = treeItem.externalData;\\n        if (item.objectType == \\\"application\\\") { throw new Error(\\\"unexpected item type\\\"); }\\n\\n        const fullPath = objectUseCase.getFullPath(item, \\\"self\\\");\\n        let level = fullPath.split(\\\"/\\\").length - 1;\\n\\n        let tableData: ITableData;\\n        switch(item.objectType) {\\n            case \\\"folder\\\":\\n                tableData = {\\n                    id: item.ID, name: item.name, type: \\\"folder\\\", collapsed: true, level,\\n                    children: treeItem.children?.map((item) => converter(item, { ownerModule: options.ownerModule })),\\n                    path: item.path \\n                };\\n                tableData.children?.forEach(child => child.parent = tableData);\\n                handleParentCheckedStatus(tableData, false);\\n                break;\\n            case \\\"model\\\":\\n                if (options.ownerModule) {\\n                    tableData = { id: item.ID, name: item.name, type: item.modelType, level };\\n                    if (!options.ownerModule.isImportedModule || item.isUnmodifiable) {\\n                        const maxVersion = getItemMaxVersion(item);\\n                        tableData = {\\n                            ...tableData,\\n                            checked: maxVersion ? true : item.isUnmodifiable,\\n                            disabled: maxVersion ? false : !item.isUnmodifiable,\\n                            version: item.isUnmodifiable ? 'latest' : maxVersion,\\n                            ownerName: item.owner.name, ownerType: item.owner.objectType,\\n                            path: item.path\\n                        };\\n                    } else {\\n                        const importedModulesModel = options.ownerModule.relatedModelHistories?.find(e => e.modelID == item.ID)\\n                        tableData = { \\n                            ...tableData, \\n                            checked: true, \\n                            disabled: false, \\n                            version: importedModulesModel?.version, \\n                            ownerName: item.owner.name, \\n                            ownerType: item.owner.objectType, \\n                            path: item.path \\n                        };\\n                    }\\n                } else {\\n                    const maxVersion = getItemMaxVersion(item);\\n                    tableData = {\\n                        id: item.ID,\\n                        name: item.name,\\n                        checked: maxVersion ? true : item.isUnmodifiable,\\n                        disabled: maxVersion ? false : !item.isUnmodifiable,\\n                        type: item.modelType,\\n                        version: item.isUnmodifiable ? 'latest' : maxVersion,\\n                        level,\\n                        path: item.path \\n                    };\\n                }\\n                break;\\n            case \\\"module\\\":\\n                const isImportedModule = isModuleImported(item);\\n                const moduleVersion = item.relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion;\\n                const relatedModelHistories = isImportedModule ? importedModuleVersions.value?.get(item.ID)?.find(module => module.version == moduleVersion)?.relatedModelHistories : undefined\\n                \\n                tableData = {\\n                    id: item.ID,\\n                    collapsed: true,\\n                    name: item.name,\\n                    type: \\\"module\\\",\\n                    imported: isImportedModule,\\n                    version: moduleVersion,\\n                    children: treeItem.children?.map((item) => converter(item, {ownerModule: {isImportedModule, moduleVersion, relatedModelHistories}})),\\n                }\\n                tableData.children?.forEach(child => child.parent = tableData);\\n                handleParentCheckedStatus(tableData, false);\\n                break;\\n        }\\n        return tableData;\\n    };\\n    const tableDatas = treeItems.map(item => converter(item, {}));\\n\\n    const traverser = (tableData: ITableData) => {\\n        createAndAppendItem({ newItem: tableData });\\n        tableData.children?.forEach(traverser);\\n    };\\n    \\n    tableDatas.forEach(traverser);\\n}\\n\\nfunction getItemMaxVersion(item: IModel): string | undefined {\\n    if (!modelHistories.value?.has(item.ID))\\n        return undefined;\\n\\n    const versions = modelHistories.value.get(item.ID);\\n    if (!versions)\\n        return undefined;\\n\\n    const findMaxVersion = (versions: Array<string>) => {\\n        const versionNumbers = versions.map(v => {\\n            const parts: Array<string> = v.split(\\\".\\\");\\n            return parseInt(parts[0]) * 10 + parseInt(parts[1]) * 1;\\n        })\\n\\n        versionNumbers.sort((a, b) => b - a);\\n\\n        const maxVersion = versionNumbers[0];\\n        return `${Math.floor(maxVersion / 10)}.${maxVersion % 10}`;\\n    }\\n\\n    return findMaxVersion(versions.map(e => e.version!));\\n\\n}\\nfunction checkMaxVersionOfAllItems() {\\n    let isThereVersion: boolean = false;\\n    items.value.forEach(item => {\\n        if (item.type == \\\"module\\\") {\\n            item.children?.forEach(child => {\\n                if (child.version) {\\n                    isThereVersion = true;\\n                }\\n\\n            })\\n        }\\n        else {\\n            if (item.version) {\\n                isThereVersion = true;\\n            }\\n        }\\n    })\\n    return isThereVersion;\\n}\\nfunction handleModuleCountCheckboxEvent(value: boolean) {\\n    items.value.filter(e => !e.disabled).forEach((item) => {\\n        item.checked = value;\\n        const allItemsCheckable = item.allChildChecked != undefined && item.children && item.children.length > 0 && !item.children.some(c => c.disabled);\\n        if (allItemsCheckable) item.allChildChecked = value;\\n        if (item.anyChildChecked != undefined) item.anyChildChecked = value;\\n        if (item.children) item.children.filter(c => !c.disabled).forEach((child) => (child.checked = value));\\n    });\\n    \\n    validations.value = validate();\\n    props.screenType == \\\"Deploy\\\" && syncPublishTargets();\\n}\\n\\nfunction handleCollapse(item: ITableData, childIterate?: boolean, collapsed?: boolean) {\\n    item.collapsed = collapsed !== undefined ? collapsed : !item.collapsed;\\n    if (childIterate) {\\n        item.children?.forEach(child => {\\n            const childEl = document.getElementById(child.id);\\n            childEl!.style.display = item.collapsed ? \\\"none\\\" : \\\"block\\\";\\n            handleCollapse(child, childIterate, item.collapsed);\\n        })\\n    }\\n}\\n\\nfunction checkAllDependents(item: ITableData, recurseParent: boolean) {\\n    if (item.disabled || item.checked) return;\\n\\n    item.checked = true\\n    item.parent && handleParentCheckedStatus(item.parent, recurseParent);\\n\\n    const deps = dependencyMap.value?.get(item.id)?.dependedTo\\n    if (!deps) return;\\n\\n    deps.forEach(dep => {\\n        items.value.forEach(item => {\\n            if (item.type == 'module' && !item.allChildChecked) {\\n                const willCheckItem = item.children?.find(child => !child.checked && child.id == dep)\\n                willCheckItem && checkAllDependents(willCheckItem, recurseParent);\\n                handleParentCheckedStatus(item, recurseParent);\\n                return;\\n            }\\n\\n            if (!item.checked && item.id == dep) {\\n                checkAllDependents(item, recurseParent);\\n                item.parent && handleParentCheckedStatus(item.parent, recurseParent);\\n            }\\n        })\\n    });\\n}\\n\\nfunction handleItemCheckEvent(item: ITableData) {\\n    if (item.disabled || isModelDepended(item) || item.name == 'App Settings')\\n        return;\\n\\n    if (item.type != \\\"module\\\" && item.type != \\\"folder\\\") {\\n        if (item.checked) {\\n            item.checked = false;\\n            item.parent && handleParentCheckedStatus(item.parent, true);\\n        } else {\\n            checkAllDependents(item, true);\\n        }\\n    } else {\\n        if (item.children && item.children.filter(c => !c.disabled).length > 0) {\\n            if (item.anyChildChecked) {\\n                item.children.filter(c => !c.disabled).forEach(child => child.checked = false);\\n                item.checked = false;\\n                handleParentCheckedStatus(item, true);\\n            } else {\\n                item.children.forEach(child => checkAllDependents(child, true));\\n                item.checked = true;\\n            }\\n        }\\n        else {\\n            item.checked = !item.checked;\\n            item.allChildChecked = false;\\n        }\\n    }\\n    getItem(item);\\n    validations.value = validate();\\n    props.screenType == \\\"Deploy\\\" && syncPublishTargets();\\n}\\n\\nfunction handleParentCheckedStatus(item: ITableData, recurseParent: boolean) {\\n    item.disabled = item.children && (item.children.length == 0 || !item.children?.some(child => !child.disabled))\\n    item.allChildChecked = item.children && item.children.length > 0 && !item.children.some((child) => !child.checked || child.disabled);\\n    item.anyChildChecked = item.children?.some((child) => child.checked && !child.disabled);\\n    if (recurseParent && item.parent) {\\n        handleParentCheckedStatus(item.parent, true);\\n    }\\n}\\n\\nfunction syncPublishTargets() {\\n    publishTargets.value = []; disabledOptions.value = [];\\n\\n    const targets = viewModel.user?.selectedOrganization?.actions?.publish?.targets;\\n    if (!targets)\\n        return;\\n\\n    const isSelectAnyItem = items.value.find(e => e.anyChildChecked || e.checked);\\n    if (!isSelectAnyItem) {\\n        publishTargets.value = Object.entries(targets).map(e => cloudTargetMap(e[0])!);\\n        const disabledOptionList = Array<IDisabledOptions>();\\n        for (let i = 0; i < publishTargets.value.length; i++) {\\n            disabledOptionList.push({ index: i, cause: \\\"You need to include items to publish.\\\" })\\n        }\\n        disabledOptions.value = disabledOptionList;\\n        return;\\n    }\\n\\n    const checkedPublishTargets = checkAndSetDisabledCauses(targets);\\n    const sortedTargets = checkedPublishTargets.sort((e, f) => (!e.cause === !f.cause) ? 0 : e.cause ? 1 : -1);\\n\\n    const disabledOptionList = Array<IDisabledOptions>();\\n    for (let i = 0; i < sortedTargets.length; i++) {\\n        const cause = sortedTargets[i].cause;\\n        if (cause) disabledOptionList.push({ index: i, cause })\\n    }\\n    disabledOptions.value = disabledOptionList;\\n    publishTargets.value = sortedTargets.map(e => e.optionName);\\n\\n    selectedTarget.value = !sortedTargets[0].cause ? sortedTargets[0].optionName : \\\"\\\";\\n}\\n\\nfunction checkAndSetDisabledCauses(targets: Record<keyof IOrganizationCloud, boolean>) {\\n    const list = Array<{ optionName: string, cause?: string }>();\\n\\n    Object.keys(targets).forEach(e => {\\n        const key = e as keyof IOrganizationCloud;\\n        const value = targets[key];\\n        const optionName = cloudTargetMap(key)!;\\n        if (!value)\\n            return list.push({ optionName, cause: \\\"You are not authorized to publish to this target.\\\" });\\n\\n\\n        switch (key) {\\n            case \\\"azure\\\":\\n                const traverseSelectedItems = (status: boolean, items?: Array<ITableData>) => {\\n                    if (!items || items.length == 0) { return status; }\\n                    for (const item of items) {\\n                        if (item.checked || item.anyChildChecked) {\\n                            if (item.type == \\\"module\\\") {\\n                                status = traverseSelectedItems(status, item.children);\\n                            }\\n                            if (item.type == \\\"entityDesigner\\\" || item.type == \\\"bpmn\\\" || item.type == \\\"process\\\") {\\n                                status = false;\\n                                break;\\n                            }\\n                        }\\n\\n                    }\\n                    return status;\\n                }\\n\\n                const status = traverseSelectedItems(true, items.value);\\n                if (!status)\\n                    return list.push({ optionName, cause: \\\"Entity and process models cannot be published to this target.\\\" });\\n                break;\\n            case \\\"plateauGCP\\\":\\n                const modulesHasNotAnEDModel = items.value.filter(e => e.name != \\\"UI Settings\\\").find(e => e.type == \\\"module\\\" && e.anyChildChecked && e.children?.some(c => c.checked && (c.type == \\\"bpmn\\\" || c.type == \\\"process\\\")) && !e.children?.some(c => c.type == \\\"entityDesigner\\\" && c.checked))\\n                if (modulesHasNotAnEDModel)\\n                    return list.push({ optionName, cause: `This target not available. Selected module '${modulesHasNotAnEDModel.name}' has not any Data Model.` })\\n                break;\\n        }\\n\\n        list.push({ optionName });\\n    })\\n\\n    return list;\\n}\\n\\nfunction updateDependencyMap(newVersion: string, item: ITableData) {\\n    const deps = dependencyMap.value?.get(item.id);\\n    dependencyMap.value?.set(item.id, {\\n        dependedBy: deps?.dependedBy || Array<string>(),\\n        dependedTo: modelHistories.value?.get(item.id)?.find(e => e.version == newVersion)?.dependentModels?.map(e => e.modelId) || Array<string>()\\n    })\\n}\\n\\nfunction versionDialog(item: ITableData) {\\n    const clickedNode = { id: item.id, state: { checked: item.checked }, text: item.name, type: item.type, version: item.version };\\n    const hasAnyVersion = modelHistories.value?.has(item.id);\\n    const options = {\\n        clickedNode, cb: (version: string) => {\\n            item.version = version;\\n            updateDependencyMap(version, item);\\n        }\\n    } as any;\\n\\n    if (hasAnyVersion) {\\n        options.versions = modelHistories.value?.get(item.id)\\n    }\\n    dialog.showDialog(\\n        defineAsyncComponent(() => import(\\\"../application/modelVersionDialog.vue\\\")),\\n        { closable: true, title: \\\"Change Version\\\", width: \\\"1080px\\\", maxHeight: \\\"500px\\\", overflow: \\\"auto\\\" }, options\\n    );\\n}\\n\\n\\nfunction moduleVersionDialog(item: ITableData) {\\n    dialog.showDialog(\\n        defineAsyncComponent(() => import(\\\"../application/moduleVersionDialog.vue\\\")),\\n        { closable: true, title: \\\"Change Version\\\", width: \\\"1080px\\\", maxHeight: \\\"500px\\\", overflow: \\\"auto\\\" },\\n        {\\n            module: { ID: item.id }, versions: importedModuleVersions.value?.get(item.id), cb: (moduleVersion: IModuleVersion) => {\\n                item.version = moduleVersion.version;\\n                item.children?.forEach(child => {\\n                    const modulesModel = moduleVersion.relatedModelHistories.find(e => e.modelID == child.id)\\n                    child.version = modulesModel?.version\\n                    updateDependencyMap(modulesModel?.version!, child);\\n                })\\n            }\\n        }\\n    );\\n}\\n\\nfunction close() {\\n    emit(\\\"close\\\");\\n}\\nfunction getItem(item: ITableData) {\\n    emit(\\\"getItem\\\", item);\\n}\\n\\nfunction cloudTargetMap(name: string, pureVal: boolean = false) {\\n    const map: Record<keyof IOrganizationCloud, string> = { azure: \\\"Public Cloud\\\", plateauGCP: \\\"Plateau Platform Playground\\\" };\\n    if (pureVal) {\\n        return Object.keys(map).find(e => {\\n            if (map[e as keyof IOrganizationCloud] === name) {\\n                return true;\\n            }\\n        })\\n    } else {\\n        let key = Object.keys(map).includes(name);\\n        if (!key)\\n            return;\\n        return map[name as keyof IOrganizationCloud];\\n    }\\n}\\n\\nfunction onTargetSelect(value: string) {\\n    selectedTarget.value = value\\n}\\n\\nconst isModuleImported = (item: IModule) => {\\n    return objectUseCase.isModuleImported(item);\\n}\\n\\n</script>\\n\\n\\n<style scoped>\\n.container {\\n    padding: 32px 20px 20px;\\n}\\n\\n.settings-container {\\n    position: relative;\\n    top: 0px;\\n    left: 0px;\\n}\\n\\n.custom-text {\\n    /* position: absolute; */\\n    font-family: 'Roboto';\\n    font-style: normal;\\n    font-weight: 500;\\n    font-size: 15px;\\n    line-height: 18px;\\n    /* left: 24px; */\\n    color: #212121;\\n}\\n\\n/* .custom-text.title{\\n    top: 92px;\\n}\\n\\n.custom-text.environment{\\n    top: 174px;\\n} */\\n\\n.radio-button {\\n    position: absolute;\\n    top: 60px;\\n    left: 20px;\\n    cursor: pointer;\\n}\\n\\n.radio-text {\\n    position: absolute;\\n    top: 59px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n    user-select: none;\\n    cursor: pointer;\\n}\\n\\n.existing-app-url {\\n    position: absolute;\\n    width: 100%;\\n    height: 40px;\\n    top: 114px;\\n    left: 20px;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #bcbcbc;\\n    border-radius: 4px;\\n    font: normal normal normal 14px/19px Roboto;\\n    letter-spacing: 0px;\\n    padding: 10px 0px 10px 10px;\\n}\\n\\n.url-error {\\n    border: 1px solid red;\\n}\\n\\n.url-disable {\\n    opacity: 0.5;\\n}\\n\\n.existing-app-url::placeholder {\\n    color: #bcbcbc;\\n    user-select: none;\\n}\\n\\n.modules-selected-checkbox {\\n    cursor: pointer;\\n}\\n\\n.modules-selected-text {\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #757575;\\n    margin: 0 0 13px 30px;\\n    ;\\n}\\n\\n/* .modules-selected-text.deploy {\\n    top: 257px;\\n} */\\n\\n.text-number {\\n    font: normal normal bold 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.modules-datatable {\\n    width: 100%;\\n}\\n\\n/* .modules-datatable.deploy {\\n    top: 286px;\\n} */\\n\\n.modules-datatable::-webkit-scrollbar {\\n    width: 4px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar-thumb {\\n    background: #bcbcbc 0% 0% no-repeat padding-box;\\n    border-radius: 10px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar-thumb:hover {\\n    background: #555;\\n}\\n\\n.row-container {\\n    width: 100%;\\n    height: 36px;\\n    position: relative;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #e0e0e0;\\n}\\n\\n.chevron {\\n    position: absolute;\\n    left: 4px;\\n    color: #757575;\\n    font-size: 24px;\\n}\\n\\n.chevron.disabled {\\n    pointer-events: none;\\n    color: #D5D5D5;\\n}\\n\\n.module-checkbox {\\n    position: absolute;\\n    top: 10px;\\n    left: 43px;\\n    cursor: pointer;\\n}\\n\\n.module-name {\\n    position: absolute;\\n    top: 9px;\\n    left: 69px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.module-name.imported {\\n    top: 10px;\\n    left: 87px;\\n}\\n\\n.module-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.model-checkbox {\\n    position: absolute;\\n    top: 10px;\\n    left: 59px;\\n    cursor: pointer;\\n}\\n\\n.model-icon {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 85px;\\n}\\n\\n.app-tier-model-icon {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 69px\\n}\\n\\n.app-tier-model-name {\\n    position: absolute;\\n    top: 10px;\\n    left: 87px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.app-tier-model-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.model-name {\\n    position: absolute;\\n    top: 9px;\\n    left: 103px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.model-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.version-text {\\n    margin: 10px 7px 10px auto;\\n    display: table;\\n    font: normal normal normal 12px/16px Roboto;\\n    color: #757575;\\n    cursor: pointer;\\n    user-select: none;\\n}\\n\\n.version-text.disabled {\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n\\n.version-icon {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #D5D5D5;\\n}\\n\\n.version-icon.disabled {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #EEEEEE;\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n\\n.footer {\\n    position: relative;\\n    width: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: end;\\n}\\n\\n.footer.deploy {\\n    position: relative;\\n    width: 100%;\\n}\\n\\n.footer.export {\\n    margin: 50px 0 24px;\\n}\\n\\n.cancel-button {\\n    border-radius: 4px;\\n    user-select: none;\\n    font-style: normal;\\n    font-weight: 500;\\n    font-family: \\\"ROBOTO\\\";\\n    font-size: 15px;\\n    color: #757575;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n\\n\\n\\n.save-button {\\n    background: #151233 0% 0% no-repeat padding-box;\\n    border-radius: 4px;\\n    user-select: none;\\n    font-weight: 500;\\n    font-size: 15px;\\n    color: #ffffff;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n\\n.mobile-publish-text,\\n.web-publish-text {\\n    padding: 5px 12px;\\n    margin-bottom: 52px;\\n    width: 100%;\\n    color: #757575;\\n    font-size: 14px;\\n    background: #F5F5FA;\\n    border-radius: 4px;\\n    display: flex;\\n    align-items: center;\\n}\\n\\n.mobile-publish-text i,\\n.web-publish-text i {\\n    font-size: 24px;\\n    color: #151233;\\n    margin-right: 4px;\\n}\\n\\n.save-button.deploy {\\n    padding: 10px 16px;\\n}\\n\\n.button-disable .save-button {\\n    color: #757575;\\n    cursor: default;\\n}\\n\\n.button-disable .save-button:hover+.button-tooltip,\\n.start-screen:hover .button-tooltip,\\n.row-container:hover .button-tooltip,\\n.publish-info:hover .button-tooltip {\\n    visibility: visible;\\n    transition: opacity 0.3s ease-out 1s;\\n    opacity: 1;\\n}\\n\\n.button-tooltip {\\n    visibility: hidden;\\n    position: absolute;\\n    background: #757575;\\n    color: #FFFFFF;\\n    font-size: 11px;\\n    font-family: 'Roboto';\\n    text-align: center;\\n    border-radius: 4px;\\n    letter-spacing: 0.2px;\\n    padding: 6px 8px 6px 8px;\\n    top: 56px;\\n    left: 63px;\\n    opacity: 0;\\n}\\n\\n.publish-info {\\n    color: #757575;\\n    font-size: 20px;\\n    margin-left: 10px;\\n}\\n\\n.select-environment {\\n    width: 100%;\\n    font-size: 15px;\\n    height: 40px;\\n    line-height: 40px;\\n    margin-top: 4px\\n}\\n</style>\\n\\n<style>\\n.selected-environment {\\n    background-color: transparent;\\n    border-radius: 4px;\\n    border: 1px solid #BCBCBC;\\n    color: #212121;\\n    padding-left: 12px;\\n}\\n\\n.custom-placeholder:empty:before {\\n    color: #BCBCBC !important;\\n    font-weight: 400;\\n}\\n\\n.custom-select .items .option {\\n    font-size: 14px;\\n    padding-left: 12px;\\n    line-height: 32px;\\n}\\n\\n.custom-select .items .option:hover {\\n    background-color: #EEEEEE;\\n    color: #212121;\\n}\\n\\n.custom-select .items .option.disabled:hover {\\n    background-color: #FFFFFF;\\n    color: #212121;\\n}\\n\\n.custom-select.select-environment .items {\\n    margin-top: 4px;\\n    color: #212121;\\n    border-radius: 4px;\\n    border: 1px solid #E3E3E3;\\n    overflow: hidden;\\n    background-color: #FFFFFF;\\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\\n    position: static !important;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.selected-environment {\\n    background-color: transparent;\\n    border-radius: 4px;\\n    border: 1px solid #BCBCBC;\\n    color: #212121;\\n    padding-left: 12px;\\n}\\n.custom-placeholder:empty:before {\\n    color: #BCBCBC !important;\\n    font-weight: 400;\\n}\\n.custom-select .items .option {\\n    font-size: 14px;\\n    padding-left: 12px;\\n    line-height: 32px;\\n}\\n.custom-select .items .option:hover {\\n    background-color: #EEEEEE;\\n    color: #212121;\\n}\\n.custom-select .items .option.disabled:hover {\\n    background-color: #FFFFFF;\\n    color: #212121;\\n}\\n.custom-select.select-environment .items {\\n    margin-top: 4px;\\n    color: #212121;\\n    border-radius: 4px;\\n    border: 1px solid #E3E3E3;\\n    overflow: hidden;\\n    background-color: #FFFFFF;\\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\\n    position: static !important;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/presentation/vue3/components/application/appItemsTable.vue\"],\"names\":[],\"mappings\":\";AAimCA;IACI,6BAA6B;IAC7B,kBAAkB;IAClB,yBAAyB;IACzB,cAAc;IACd,kBAAkB;AACtB;AAEA;IACI,yBAAyB;IACzB,gBAAgB;AACpB;AAEA;IACI,eAAe;IACf,kBAAkB;IAClB,iBAAiB;AACrB;AAEA;IACI,yBAAyB;IACzB,cAAc;AAClB;AAEA;IACI,yBAAyB;IACzB,cAAc;AAClB;AAEA;IACI,eAAe;IACf,cAAc;IACd,kBAAkB;IAClB,yBAAyB;IACzB,gBAAgB;IAChB,yBAAyB;IACzB,0CAA0C;IAC1C,2BAA2B;AAC/B\",\"sourcesContent\":[\"<template>\\n    <div style=\\\"display: flex; flex-direction: column; flex: 1\\\">\\n        <div>\\n            <CheckboxComp :class=\\\"['modules-selected-checkbox', props.screenType == 'Deploy' ? 'deploy' : '']\\\"\\n                :minus=\\\"mainCheckboxState == false\\\" :check=\\\"mainCheckboxState == true\\\"\\n                @click=\\\"handleModuleCountCheckboxEvent(mainCheckboxState == undefined)\\\" />\\n            <div :class=\\\"['modules-selected-text', props.screenType == 'Deploy' ? 'deploy' : '']\\\">\\n                <span class=\\\"text-number\\\">{{ allChildCheckedModulesCount + anyChildCheckedModulesCount + checkedRootLevelModelsCount }}</span>\\n                of <span class=\\\"text-number\\\">{{ totalRootLevelCount }}</span> items selected\\n            </div>\\n        </div>\\n\\n        <div :class=\\\"['modules-datatable', props.screenType == 'Deploy' ? 'deploy' : '']\\\" id=\\\"module-container-div\\\" :style=\\\"[props.openedInDialog ? 'max-height: 300px; overflow: auto' : 'flex: 1']\\\" ></div>\\n        <div v-if=\\\"props.screenType == 'Deploy'\\\" style=\\\"margin-bottom: 102px\\\">\\n            <div style=\\\"display: flex; align-items: center;\\\">\\n                <span class=\\\"custom-text environment\\\"> Publish To </span>\\n                <span class=\\\"publish-info\\\">\\n                    <i class=\\\"mdi mdi-information\\\"></i>\\n                    <span class=\\\"button-tooltip\\\" style=\\\"top: 460px; left: 96px; z-index: 1; width: 231px;\\\">Publish To\\n                        options may change depending on the module type you choose.</span>\\n                </span>\\n            </div>\\n\\n            <CustomSelect :options=\\\"publishTargets\\\" @input=\\\"onTargetSelect\\\" :selectedOption=\\\"selectedTarget\\\"\\n                :default=\\\"selectedTarget\\\" :disabledOptions=\\\"disabledOptions\\\" selectedClass=\\\"selected-environment\\\"\\n                placeholder=\\\"Select the publish environment of your application\\\" class=\\\"select-environment\\\">\\n            </CustomSelect>\\n        </div>\\n        <div :class=\\\"['footer', props.screenType == 'Deploy' ? 'deploy' : 'export']\\\">\\n            <div :class=\\\"['cancel-button', props.screenType == 'Deploy' ? 'deploy' : '']\\\" @click=\\\"close\\\">Cancel</div>\\n            <div :class=\\\"[(saveButtonDisable ? ' button-disable' : '')]\\\"\\n                @click=\\\"!saveButtonDisable && props.buttonCb()\\\">\\n                <span class=\\\"save-button deploy\\\">{{ buttonNameDict[props.screenType] }}</span>\\n                <span v-if=\\\"!isStartScreenOK\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -46px; left: 652px; z-index: 1; width: 120px;\\\">You need to include your start screen.</span>\\n                <span v-else-if=\\\"props.screenType == 'Deploy' && !selectedTarget\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -46px; left: 644px; z-index: 1; width: 123px;\\\">You need to select a publish\\n                    environment.</span>\\n                <span v-else-if=\\\"!isThereVersion\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -95px; left: 644px; z-index: 1; width: 135px;\\\">There are no items ready to publish. At least\\n                    one of your items must be ready to publish.</span>\\n                <span v-else-if=\\\"!isAllDependenciesOK\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -95px; left: 644px; z-index: 1; width: 135px;\\\">{{ dependencyErrorStr }}</span>\\n            </div>\\n\\n        </div>\\n    </div>\\n</template>\\n\\n\\n<script setup lang=\\\"ts\\\">\\nimport { CryptoHelper } from \\\"@stechquick/algae/lib/helpers/cryptoHelper\\\";\\nimport { ModelContants } from \\\"../../../../../../common/qCloudTemp/modelContants\\\";\\nimport { computed, createApp, defineAsyncComponent, onMounted, ref } from \\\"vue\\\";\\nimport { IOrganizationCloud } from \\\"../../../../../../common/clean/domain/useCases/ICloudProvider\\\";\\nimport { IPlatformSelection, ITableData } from \\\"../../../../../../common/qCloudTemp/exporter\\\";\\nimport { IModuleRelatedModelItem, IQJsonAdditionals } from \\\"../../../../../../common/qCloudTemp/quickCloud\\\";\\nimport { container } from \\\"../../../../domain/core/diContainer\\\";\\nimport { IQCloudApi } from \\\"../../../../domain/infrastructure/IQCloudApi\\\";\\nimport { IModel, IModelHistoryInfo, IModule, IModuleVersion } from \\\"../../../../domain/model/models\\\";\\nimport { IDialog } from \\\"../../../../domain/presentation/IDialog\\\";\\nimport { IDeployJobs } from \\\"../../../../domain/useCase/IDeployJobs\\\";\\nimport { IJobUtils } from \\\"../../../../domain/useCase/IJobUtils\\\";\\nimport { IListMultiModelVersions } from \\\"../../../../domain/useCase/IListMultiModelVersions\\\";\\nimport { IListMultiModuleVersions } from \\\"../../../../domain/useCase/IListMultiModuleVersions\\\";\\nimport { IPackJobs } from \\\"../../../../domain/useCase/IPackJobs\\\";\\nimport { IUseCaseExecutor } from \\\"../../../../domain/useCase/IUseCaseExecutor\\\";\\nimport { IViewModel } from \\\"../../../../domain/viewModel/IViewModel\\\";\\nimport { IViewModelManager } from \\\"../../../../domain/viewModel/IViewModelManager\\\";\\nimport { IBackofficeUseCase } from \\\"../../../../domain/useCase/IBackofficeUseCase\\\";\\nimport { IApplicationUseCase } from \\\"../../../../domain/useCase/IApplicationUseCase\\\";\\nimport ExportDialogItem from \\\"../../components/dialogs/publish/components/exportDialogItem.vue\\\";\\nimport CustomSelect from \\\"../customSelect.vue\\\";\\nimport CheckboxComp from \\\"../checkboxComp.vue\\\";\\nimport { FileDisplayerExternalData, IFileDisplayerUseCase } from \\\"../../../../domain/useCase/IFileDisplayerUseCase\\\";\\nimport { ITreeItem } from \\\"../../../../domain/presentation/ITreeView\\\";\\nimport { FileExplorerConstants } from \\\"../../../../domain/useCase/IFileExplorer\\\";\\nimport { IObjectUseCase } from \\\"../../../../domain/useCase/IObjectUseCase\\\";\\n\\ninterface IDeployScreenAdditionalProps {\\n    screenType: \\\"Export\\\" | \\\"Deploy\\\" | \\\"Release\\\" | \\\"Create\\\" | \\\"Save\\\" | \\\"Update\\\";\\n    platformSelection: IPlatformSelection;\\n    buttonCb: () => void;\\n    buttonDisableCond: boolean;\\n    openedInDialog?: boolean;\\n}\\n\\ninterface IDisabledOptions {\\n    index: number\\n    cause: string;\\n}\\n\\nconst props = defineProps<IDeployScreenAdditionalProps>();\\nconst viewModel = container.resolve<IViewModel>(IViewModel);\\nconst viewModelManager = container.resolve<IViewModelManager>(IViewModelManager);\\nconst dialog = container.resolve<IDialog>(IDialog);\\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\\nconst fileDisplayerUseCase = container.resolve<IFileDisplayerUseCase>(IFileDisplayerUseCase);\\nconst objectUseCase = container.resolve<IObjectUseCase>(IObjectUseCase);\\n\\n\\nconst emit = defineEmits([\\\"close\\\", \\\"getItem\\\"]);\\nconst items = ref<Array<ITableData>>([]);\\nconst validations = ref<boolean>(true);\\nconst selectedTarget = ref<string>(\\\"\\\");\\nconst disabledOptions = ref<Array<IDisabledOptions>>();\\nconst publishTargets = ref<Array<string>>();\\nconst modelHistories = ref<Map<string, Array<IModelHistoryInfo>>>();\\nconst importedModuleVersions = ref<Map<string, Array<IModuleVersion>>>();\\nconst startScreen = ref<IModel>();\\nconst dependencyMap = ref<Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>>();\\nconst dependencyErrorStr = ref<string>('');\\nconst currentApp = computed(() => viewModel.apps.find((app) => app.ID == viewModel.studio.appId));\\nconst buttonNameDict = {\\n    \\\"Export\\\" : \\\"DOWNLOAD\\\",\\n    \\\"Deploy\\\": \\\"PUBLISH\\\",\\n    \\\"Release\\\": \\\"RELEASE\\\",\\n    \\\"Create\\\": \\\"CREATE\\\",\\n    \\\"Save\\\": \\\"SAVE\\\",\\n    \\\"Update\\\": \\\"UPDATE\\\"\\n} \\n\\n\\nonMounted(async () => {\\n    await executor.execute(async () => {\\n        await Promise.all([\\n            executor.executeUseCase<IListMultiModelVersions>(IListMultiModelVersions, {}).then(res => modelHistories.value = res),\\n            executor.executeUseCase<IListMultiModuleVersions>(IListMultiModuleVersions, {}).then(res => importedModuleVersions.value = res)\\n        ])\\n        initDependencies();\\n        handleItems();\\n        props.screenType == \\\"Deploy\\\" && syncPublishTargets();\\n        validations.value = validate();\\n        sendItems();\\n    }, { loading: true });\\n})\\n\\nconst allChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == \\\"module\\\" && e.allChildChecked).length);\\nconst anyChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == \\\"module\\\" && !e.allChildChecked && e.anyChildChecked).length);\\nconst checkedRootLevelModelsCount = computed(() => items.value.filter(e => e.type != \\\"module\\\" && e.checked).length)\\nconst totalRootLevelCount = computed(() => items.value.length);\\nconst saveButtonDisable = computed(() => (props.screenType == \\\"Deploy\\\" && props.platformSelection.web && selectedTarget.value == \\\"\\\") || !validations.value || !items.value.some((item) => item.checked || item.anyChildChecked) || !validateStartScreen() || !validateDependencies() || props.buttonDisableCond);\\nconst mainCheckboxState = computed(() => items.value.length == allChildCheckedModulesCount.value ? true\\n    : (anyChildCheckedModulesCount.value + checkedRootLevelModelsCount.value > 0 ? false : undefined));\\nconst isThereVersion = computed(() => checkMaxVersionOfAllItems());\\nconst isAllDependenciesOK = computed(validateDependencies)\\nconst isStartScreenOK = computed(validateStartScreen)\\n\\nfunction validate() {\\n    let result = true;\\n    const modules = items.value.filter(e => e.type == \\\"module\\\" && e.anyChildChecked);\\n    const appLayerItems = items.value.filter(e => e.type == \\\"qjson\\\" && e.checked);\\n\\n    startScreen.value = (viewModel.studio.items as Array<IModel>).find(item => (item.additionals as IQJsonAdditionals | undefined)?.isRootPage);\\n    if (!startScreen.value)\\n        return false;\\n\\n    if (props.screenType == \\\"Deploy\\\") {\\n        if (modules.length > 0)\\n            result = modules.map(e => e.children).filter(e => !e?.find(f => f.type == \\\"entityDesigner\\\" && f.checked)).length <= 0\\n\\n        let isApplicationWillDeploy = appLayerItems.length > 0;\\n        if (isApplicationWillDeploy) {\\n            result = appLayerItems\\n                .map(e => viewModel.studio.items.find(item => item.ID == e.id) as IModel)\\n                .findIndex(e => ((e.additionals as IQJsonAdditionals).isRootPage)) != -1;\\n        }\\n    }\\n\\n    return result;\\n}\\n\\nfunction validateDependencies() {\\n    const checkMap = new Map<string, boolean>();\\n    items.value.forEach(item => {\\n        if (item.type == 'module' && item.children && item.children.length > 0)\\n            item.children.forEach(child => checkMap.set(child.id, child.checked == true))\\n        else\\n            checkMap.set(item.id, item.checked == true)\\n    })\\n\\n    const mustBeCheckedMap = new Map<string, Array<string>>();\\n    dependencyMap.value?.forEach((deps, id) => {\\n        if (!checkMap.get(id))\\n            return;\\n\\n        deps.dependedTo.forEach(dependedId => {\\n            if (checkMap.get(dependedId))\\n                return;\\n\\n            if (mustBeCheckedMap.has(id)) {\\n                const vals = mustBeCheckedMap.get(id)!\\n                vals.push(dependedId)\\n                mustBeCheckedMap.set(id, vals)\\n            } else {\\n                mustBeCheckedMap.set(id, [dependedId])\\n            }\\n\\n        });\\n    })\\n\\n    //set deps error text\\n    const [firstItemID] = mustBeCheckedMap.keys();\\n    if (firstItemID) {\\n        const firstItemDeps = mustBeCheckedMap.get(firstItemID);\\n        const firstItemDepStr = firstItemDeps ? firstItemDeps.map(findItem).map(e => e?.name).join(', ') : '';\\n        dependencyErrorStr.value = `Select ${firstItemDepStr} first. ${findItem(firstItemID)?.name} depends on ${firstItemDepStr}.`\\n    }\\n\\n    return mustBeCheckedMap.size == 0\\n}\\n\\nfunction validateStartScreen() {\\n    return (items.value.find((item) => item.id == startScreen.value?.ID))?.checked\\n}\\n\\nfunction findItem(ID: string) {\\n    for (const item of items.value) {\\n        if (item.type != 'module' && item.id == ID)\\n            return item;\\n        if (item.type == 'module' && item.children && item.children.length > 0) {\\n            const f = item.children.find(e => e.id == ID)\\n            if (f) return f\\n        }\\n    }\\n}\\nfunction sendItems() {\\n    items.value.forEach(item => {\\n            if(item.type != \\\"module\\\" && item.type != \\\"folder\\\" && item.usageType != \\\"appAssetList\\\")  {\\n                item.checked && getItem(item);\\n            }\\n            else {\\n                item.children?.forEach(child => {\\n                    child.checked && getItem(child);\\n                 })\\n            }\\n        })\\n}\\nfunction initDependencies() {\\n    const map = new Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>();\\n    const depMap = new Map<string, Array<string>>();\\n\\n    viewModelManager.flatMapItems(viewModel.studio.items, (item) => {\\n        if (item.objectType != \\\"model\\\") { return; }\\n\\n        const isImportedModule = item.owner.objectType == \\\"module\\\" && isModuleImported(item.owner as IModule);\\n\\n        let version: string | undefined;\\n        if (!isImportedModule) {\\n            const maxVersion = getItemMaxVersion(item)\\n            if (!maxVersion)\\n                return depMap.set(item.ID, item.dependentModels ? item.dependentModels.map(e => e.modelId) : Array<string>());\\n            version = maxVersion;\\n        }\\n        else {\\n            const moduleVersions = importedModuleVersions.value?.get(item.owner.ID)\\n            const moduleVersion = (item.owner as IModule).relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion\\n\\n            const importedModuleModel = moduleVersions?.filter(e => e.version == moduleVersion).flatMap(e => e.relatedModelHistories).find(e => e.modelID == item.ID)\\n            version = importedModuleModel?.version\\n        }\\n\\n        const historyItem = modelHistories.value?.get(item.ID)?.find(e => e.version == version);\\n\\n        depMap.set(item.ID, historyItem?.dependentModels ? historyItem?.dependentModels.map(e => e.modelId) : Array<string>())\\n    });\\n\\n\\n    depMap.forEach((dependedTo, modelId) => {\\n        const dependedBy = Array<string>();\\n        depMap.forEach((dependencies, depModelId) => {\\n            if (dependencies.some(depId => depId == modelId))\\n                dependedBy.push(depModelId)\\n        })\\n        map.set(modelId, { dependedBy, dependedTo });\\n    })\\n    dependencyMap.value = map;\\n}\\n\\nfunction isModelDepended(item: ITableData) {\\n    const deps = dependencyMap.value?.get(item.id)?.dependedBy\\n    if (!deps) return false;\\n\\n    return deps.some(dep => items.value.some(item => {\\n        if (item.type == 'module' && item.anyChildChecked) {\\n            return item.children?.some(child => child.checked && child.id == dep)\\n        }\\n        return item.id == dep && item.checked\\n    }));\\n}\\nfunction createDialogComp(item: ITableData) {\\n    const newChild = createApp(ExportDialogItem, {\\n        handleItemCheckEvent,\\n        startScreen,\\n        versionDialog,\\n        handleCollapse,\\n        item: item,\\n        moduleVersionDialog\\n    });\\n    const mountEl = document.createElement('div');\\n    newChild.mount(mountEl);\\n    const parentEl = document.getElementById('module-container-div');\\n    parentEl?.appendChild(mountEl);\\n}\\nfunction createAndAppendItem({ newItem }: { newItem: ITableData }) {\\n    createDialogComp(newItem);\\n    if ((newItem).type != \\\"module\\\") {\\n        items.value.push(newItem);\\n    }\\n}\\n\\nfunction handleItems() {\\n    // - App Settings\\n    const appSettings = viewModel.studio.items.find(e => e.name == 'App Settings');\\n    const maxVersion = getItemMaxVersion(appSettings as IModel)\\n    const settingsData = appSettings && {\\n        id: appSettings.ID,\\n        name: appSettings.name,\\n        checked: true,\\n        disabled: false,\\n        type: (appSettings as IModel).modelType,\\n        version: !maxVersion ? 'latest' : maxVersion\\n    };\\n    appSettings && settingsData && createAndAppendItem({ newItem: settingsData });\\n\\n\\n    // - UI Settings\\n    const uiSettingsID = CryptoHelper.CreateGuid();\\n    const uiSettingsModels = viewModel.studio.items.filter((item) => item.objectType == \\\"model\\\" && item.usageType == \\\"appSettings\\\") as Array<IModel>;\\n    const uiSettings: ITableData = {\\n        id: uiSettingsID,\\n        collapsed: true,\\n        name: \\\"UI Settings\\\",\\n        type: \\\"module\\\",\\n        imported: false,\\n        checked: true,\\n        children: [{} as ITableData]\\n    };\\n    uiSettings && createAndAppendItem({ newItem: uiSettings });\\n    uiSettings.children = uiSettingsModels.map(settings => {\\n        const maxVersion = getItemMaxVersion(settings)\\n        const childData = {\\n            id: settings.ID,\\n            parent: uiSettings,\\n            name: settings.name,\\n            type: settings.modelType,\\n            checked: maxVersion != undefined,\\n            usageType: settings?.usageType,\\n            disabled: !maxVersion,\\n            version: maxVersion,\\n            level: 2\\n        }\\n        createAndAppendItem({ newItem: childData });\\n        return childData;\\n    })\\n    handleParentCheckedStatus(uiSettings, false);\\n\\n\\n    // - Styled Components\\n    const uiAssetID = CryptoHelper.CreateGuid();\\n    const appAssetList = viewModel.studio.items.filter((item) => item.objectType == \\\"model\\\" && item.usageType == \\\"appAssetList\\\") as Array<IModel>;\\n    const uiAssetList: ITableData = {\\n        id: uiAssetID,\\n        collapsed: true,\\n        name: \\\"Styled Components\\\",\\n        type: \\\"module\\\",\\n        imported: false,\\n        anyChildChecked: true,\\n        allChildChecked: true,\\n        children: [{} as ITableData]\\n    };\\n    uiAssetList && createAndAppendItem({ newItem: uiAssetList });\\n    uiAssetList.children = appAssetList.map((asset) => {\\n        const childAsset = {\\n            id: asset.ID,\\n            parent: uiAssetList,\\n            name: asset.name,\\n            type: asset.modelType,\\n            checked: true,\\n            usageType: asset?.usageType,\\n            level: 2\\n        }\\n        createAndAppendItem({ newItem: childAsset });\\n        return childAsset;\\n    }) as Array<ITableData>;\\n    handleParentCheckedStatus(uiAssetList, false);\\n\\n    \\n    const treeItems = fileDisplayerUseCase.cloneFileExplorerTreeView({\\n        displayFilterer: (item, hasChildren) => {\\n            switch (item.ID) { case FileExplorerConstants.uiAssetListID: case FileExplorerConstants.uiSettingsID: return false; default: break; }\\n            switch (item.objectType) {\\n                case \\\"application\\\": return false;\\n                case \\\"module\\\": return true;\\n                case \\\"folder\\\": return hasChildren;\\n                case \\\"model\\\": return true;\\n            }\\n        },\\n    });\\n\\n    const converter = (treeItem: ITreeItem<FileDisplayerExternalData>, options: {ownerModule?: {isImportedModule: boolean;moduleVersion: string | undefined;relatedModelHistories: IModuleRelatedModelItem[] | undefined}}): ITableData => {\\n        const item = treeItem.externalData;\\n        if (item.objectType == \\\"application\\\") { throw new Error(\\\"unexpected item type\\\"); }\\n\\n        const fullPath = objectUseCase.getFullPath(item, \\\"self\\\");\\n        let level = fullPath.split(\\\"/\\\").length - 1;\\n\\n        let tableData: ITableData;\\n        switch(item.objectType) {\\n            case \\\"folder\\\":\\n                tableData = {\\n                    id: item.ID, name: item.name, type: \\\"folder\\\", collapsed: true, level,\\n                    children: treeItem.children?.map((item) => converter(item, { ownerModule: options.ownerModule })),\\n                    path: item.path \\n                };\\n                tableData.children?.forEach(child => child.parent = tableData);\\n                handleParentCheckedStatus(tableData, false);\\n                break;\\n            case \\\"model\\\":\\n                if (options.ownerModule) {\\n                    tableData = { id: item.ID, name: item.name, type: item.modelType, level };\\n                    if (!options.ownerModule.isImportedModule || item.isUnmodifiable) {\\n                        const maxVersion = getItemMaxVersion(item);\\n                        tableData = {\\n                            ...tableData,\\n                            checked: maxVersion ? true : item.isUnmodifiable,\\n                            disabled: maxVersion ? false : !item.isUnmodifiable,\\n                            version: item.isUnmodifiable ? 'latest' : maxVersion,\\n                            ownerName: item.owner.name, ownerType: item.owner.objectType,\\n                            path: item.path\\n                        };\\n                    } else {\\n                        const importedModulesModel = options.ownerModule.relatedModelHistories?.find(e => e.modelID == item.ID)\\n                        tableData = { \\n                            ...tableData, \\n                            checked: true, \\n                            disabled: false, \\n                            version: importedModulesModel?.version, \\n                            ownerName: item.owner.name, \\n                            ownerType: item.owner.objectType, \\n                            path: item.path \\n                        };\\n                    }\\n                } else {\\n                    const maxVersion = getItemMaxVersion(item);\\n                    tableData = {\\n                        id: item.ID,\\n                        name: item.name,\\n                        checked: maxVersion ? true : item.isUnmodifiable,\\n                        disabled: maxVersion ? false : !item.isUnmodifiable,\\n                        type: item.modelType,\\n                        version: item.isUnmodifiable ? 'latest' : maxVersion,\\n                        level,\\n                        path: item.path \\n                    };\\n                }\\n                break;\\n            case \\\"module\\\":\\n                const isImportedModule = isModuleImported(item);\\n                const moduleVersion = item.relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion;\\n                const relatedModelHistories = isImportedModule ? importedModuleVersions.value?.get(item.ID)?.find(module => module.version == moduleVersion)?.relatedModelHistories : undefined\\n                \\n                tableData = {\\n                    id: item.ID,\\n                    collapsed: true,\\n                    name: item.name,\\n                    type: \\\"module\\\",\\n                    imported: isImportedModule,\\n                    version: moduleVersion,\\n                    children: treeItem.children?.map((item) => converter(item, {ownerModule: {isImportedModule, moduleVersion, relatedModelHistories}})),\\n                }\\n                tableData.children?.forEach(child => child.parent = tableData);\\n                handleParentCheckedStatus(tableData, false);\\n                break;\\n        }\\n        return tableData;\\n    };\\n    const tableDatas = treeItems.map(item => converter(item, {}));\\n\\n    const traverser = (tableData: ITableData) => {\\n        createAndAppendItem({ newItem: tableData });\\n        tableData.children?.forEach(traverser);\\n    };\\n    \\n    tableDatas.forEach(traverser);\\n}\\n\\nfunction getItemMaxVersion(item: IModel): string | undefined {\\n    if (!modelHistories.value?.has(item.ID))\\n        return undefined;\\n\\n    const versions = modelHistories.value.get(item.ID);\\n    if (!versions)\\n        return undefined;\\n\\n    const findMaxVersion = (versions: Array<string>) => {\\n        const versionNumbers = versions.map(v => {\\n            const parts: Array<string> = v.split(\\\".\\\");\\n            return parseInt(parts[0]) * 10 + parseInt(parts[1]) * 1;\\n        })\\n\\n        versionNumbers.sort((a, b) => b - a);\\n\\n        const maxVersion = versionNumbers[0];\\n        return `${Math.floor(maxVersion / 10)}.${maxVersion % 10}`;\\n    }\\n\\n    return findMaxVersion(versions.map(e => e.version!));\\n\\n}\\nfunction checkMaxVersionOfAllItems() {\\n    let isThereVersion: boolean = false;\\n    items.value.forEach(item => {\\n        if (item.type == \\\"module\\\") {\\n            item.children?.forEach(child => {\\n                if (child.version) {\\n                    isThereVersion = true;\\n                }\\n\\n            })\\n        }\\n        else {\\n            if (item.version) {\\n                isThereVersion = true;\\n            }\\n        }\\n    })\\n    return isThereVersion;\\n}\\nfunction handleModuleCountCheckboxEvent(value: boolean) {\\n    items.value.filter(e => !e.disabled).forEach((item) => {\\n        item.checked = value;\\n        const allItemsCheckable = item.allChildChecked != undefined && item.children && item.children.length > 0 && !item.children.some(c => c.disabled);\\n        if (allItemsCheckable) item.allChildChecked = value;\\n        if (item.anyChildChecked != undefined) item.anyChildChecked = value;\\n        if (item.children) item.children.filter(c => !c.disabled).forEach((child) => (child.checked = value));\\n    });\\n    \\n    validations.value = validate();\\n    props.screenType == \\\"Deploy\\\" && syncPublishTargets();\\n}\\n\\nfunction handleCollapse(item: ITableData, childIterate?: boolean, collapsed?: boolean) {\\n    item.collapsed = collapsed !== undefined ? collapsed : !item.collapsed;\\n    if (childIterate) {\\n        item.children?.forEach(child => {\\n            const childEl = document.getElementById(child.id);\\n            childEl!.style.display = item.collapsed ? \\\"none\\\" : \\\"block\\\";\\n            handleCollapse(child, childIterate, item.collapsed);\\n        })\\n    }\\n}\\n\\nfunction checkAllDependents(item: ITableData, recurseParent: boolean) {\\n    if (item.disabled || item.checked) return;\\n\\n    item.checked = true\\n    item.parent && handleParentCheckedStatus(item.parent, recurseParent);\\n\\n    const deps = dependencyMap.value?.get(item.id)?.dependedTo\\n    if (!deps) return;\\n\\n    deps.forEach(dep => {\\n        items.value.forEach(item => {\\n            if (item.type == 'module' && !item.allChildChecked) {\\n                const willCheckItem = item.children?.find(child => !child.checked && child.id == dep)\\n                willCheckItem && checkAllDependents(willCheckItem, recurseParent);\\n                handleParentCheckedStatus(item, recurseParent);\\n                return;\\n            }\\n\\n            if (!item.checked && item.id == dep) {\\n                checkAllDependents(item, recurseParent);\\n                item.parent && handleParentCheckedStatus(item.parent, recurseParent);\\n            }\\n        })\\n    });\\n}\\n\\nfunction handleItemCheckEvent(item: ITableData) {\\n    if (item.disabled || isModelDepended(item) || item.name == 'App Settings')\\n        return;\\n\\n    if (item.type != \\\"module\\\" && item.type != \\\"folder\\\") {\\n        if (item.checked) {\\n            item.checked = false;\\n            item.parent && handleParentCheckedStatus(item.parent, true);\\n        } else {\\n            checkAllDependents(item, true);\\n        }\\n    } else {\\n        if (item.children && item.children.filter(c => !c.disabled).length > 0) {\\n            if (item.anyChildChecked) {\\n                item.children.filter(c => !c.disabled).forEach(child => child.checked = false);\\n                item.checked = false;\\n                handleParentCheckedStatus(item, true);\\n            } else {\\n                item.children.forEach(child => checkAllDependents(child, true));\\n                item.checked = true;\\n            }\\n        }\\n        else {\\n            item.checked = !item.checked;\\n            item.allChildChecked = false;\\n        }\\n    }\\n    getItem(item);\\n    validations.value = validate();\\n    props.screenType == \\\"Deploy\\\" && syncPublishTargets();\\n}\\n\\nfunction handleParentCheckedStatus(item: ITableData, recurseParent: boolean) {\\n    item.disabled = item.children && (item.children.length == 0 || !item.children?.some(child => !child.disabled))\\n    item.allChildChecked = item.children && item.children.length > 0 && !item.children.some((child) => !child.checked || child.disabled);\\n    item.anyChildChecked = item.children?.some((child) => child.checked && !child.disabled);\\n    if (recurseParent && item.parent) {\\n        handleParentCheckedStatus(item.parent, true);\\n    }\\n}\\n\\nfunction syncPublishTargets() {\\n    publishTargets.value = []; disabledOptions.value = [];\\n\\n    const targets = viewModel.user?.selectedOrganization?.actions?.publish?.targets;\\n    if (!targets)\\n        return;\\n\\n    const isSelectAnyItem = items.value.find(e => e.anyChildChecked || e.checked);\\n    if (!isSelectAnyItem) {\\n        publishTargets.value = Object.entries(targets).map(e => cloudTargetMap(e[0])!);\\n        const disabledOptionList = Array<IDisabledOptions>();\\n        for (let i = 0; i < publishTargets.value.length; i++) {\\n            disabledOptionList.push({ index: i, cause: \\\"You need to include items to publish.\\\" })\\n        }\\n        disabledOptions.value = disabledOptionList;\\n        return;\\n    }\\n\\n    const checkedPublishTargets = checkAndSetDisabledCauses(targets);\\n    const sortedTargets = checkedPublishTargets.sort((e, f) => (!e.cause === !f.cause) ? 0 : e.cause ? 1 : -1);\\n\\n    const disabledOptionList = Array<IDisabledOptions>();\\n    for (let i = 0; i < sortedTargets.length; i++) {\\n        const cause = sortedTargets[i].cause;\\n        if (cause) disabledOptionList.push({ index: i, cause })\\n    }\\n    disabledOptions.value = disabledOptionList;\\n    publishTargets.value = sortedTargets.map(e => e.optionName);\\n\\n    selectedTarget.value = !sortedTargets[0].cause ? sortedTargets[0].optionName : \\\"\\\";\\n}\\n\\nfunction checkAndSetDisabledCauses(targets: Record<keyof IOrganizationCloud, boolean>) {\\n    const list = Array<{ optionName: string, cause?: string }>();\\n\\n    Object.keys(targets).forEach(e => {\\n        const key = e as keyof IOrganizationCloud;\\n        const value = targets[key];\\n        const optionName = cloudTargetMap(key)!;\\n        if (!value)\\n            return list.push({ optionName, cause: \\\"You are not authorized to publish to this target.\\\" });\\n\\n\\n        switch (key) {\\n            case \\\"azure\\\":\\n                const traverseSelectedItems = (status: boolean, items?: Array<ITableData>) => {\\n                    if (!items || items.length == 0) { return status; }\\n                    for (const item of items) {\\n                        if (item.checked || item.anyChildChecked) {\\n                            if (item.type == \\\"module\\\") {\\n                                status = traverseSelectedItems(status, item.children);\\n                            }\\n                            if (item.type == \\\"entityDesigner\\\" || item.type == \\\"bpmn\\\" || item.type == \\\"process\\\") {\\n                                status = false;\\n                                break;\\n                            }\\n                        }\\n\\n                    }\\n                    return status;\\n                }\\n\\n                const status = traverseSelectedItems(true, items.value);\\n                if (!status)\\n                    return list.push({ optionName, cause: \\\"Entity and process models cannot be published to this target.\\\" });\\n                break;\\n            case \\\"plateauGCP\\\":\\n                const modulesHasNotAnEDModel = items.value.filter(e => e.name != \\\"UI Settings\\\").find(e => e.type == \\\"module\\\" && e.anyChildChecked && e.children?.some(c => c.checked && (c.type == \\\"bpmn\\\" || c.type == \\\"process\\\")) && !e.children?.some(c => c.type == \\\"entityDesigner\\\" && c.checked))\\n                if (modulesHasNotAnEDModel)\\n                    return list.push({ optionName, cause: `This target not available. Selected module '${modulesHasNotAnEDModel.name}' has not any Data Model.` })\\n                break;\\n        }\\n\\n        list.push({ optionName });\\n    })\\n\\n    return list;\\n}\\n\\nfunction updateDependencyMap(newVersion: string, item: ITableData) {\\n    const deps = dependencyMap.value?.get(item.id);\\n    dependencyMap.value?.set(item.id, {\\n        dependedBy: deps?.dependedBy || Array<string>(),\\n        dependedTo: modelHistories.value?.get(item.id)?.find(e => e.version == newVersion)?.dependentModels?.map(e => e.modelId) || Array<string>()\\n    })\\n}\\n\\nfunction versionDialog(item: ITableData) {\\n    const clickedNode = { id: item.id, state: { checked: item.checked }, text: item.name, type: item.type, version: item.version };\\n    const hasAnyVersion = modelHistories.value?.has(item.id);\\n    const options = {\\n        clickedNode, cb: (version: string) => {\\n            item.version = version;\\n            updateDependencyMap(version, item);\\n        }\\n    } as any;\\n\\n    if (hasAnyVersion) {\\n        options.versions = modelHistories.value?.get(item.id)\\n    }\\n    dialog.showDialog(\\n        defineAsyncComponent(() => import(\\\"../application/modelVersionDialog.vue\\\")),\\n        { closable: true, title: \\\"Change Version\\\", width: \\\"1080px\\\", maxHeight: \\\"500px\\\", overflow: \\\"auto\\\" }, options\\n    );\\n}\\n\\n\\nfunction moduleVersionDialog(item: ITableData) {\\n    dialog.showDialog(\\n        defineAsyncComponent(() => import(\\\"../application/moduleVersionDialog.vue\\\")),\\n        { closable: true, title: \\\"Change Version\\\", width: \\\"1080px\\\", maxHeight: \\\"500px\\\", overflow: \\\"auto\\\" },\\n        {\\n            module: { ID: item.id }, versions: importedModuleVersions.value?.get(item.id), cb: (moduleVersion: IModuleVersion) => {\\n                item.version = moduleVersion.version;\\n                item.children?.forEach(child => {\\n                    const modulesModel = moduleVersion.relatedModelHistories.find(e => e.modelID == child.id)\\n                    child.version = modulesModel?.version\\n                    updateDependencyMap(modulesModel?.version!, child);\\n                })\\n            }\\n        }\\n    );\\n}\\n\\nfunction close() {\\n    emit(\\\"close\\\");\\n}\\nfunction getItem(item: ITableData) {\\n    emit(\\\"getItem\\\", item);\\n}\\n\\nfunction cloudTargetMap(name: string, pureVal: boolean = false) {\\n    const map: Record<keyof IOrganizationCloud, string> = { azure: \\\"Public Cloud\\\", plateauGCP: \\\"Plateau Platform Playground\\\" };\\n    if (pureVal) {\\n        return Object.keys(map).find(e => {\\n            if (map[e as keyof IOrganizationCloud] === name) {\\n                return true;\\n            }\\n        })\\n    } else {\\n        let key = Object.keys(map).includes(name);\\n        if (!key)\\n            return;\\n        return map[name as keyof IOrganizationCloud];\\n    }\\n}\\n\\nfunction onTargetSelect(value: string) {\\n    selectedTarget.value = value\\n}\\n\\nconst isModuleImported = (item: IModule) => {\\n    return objectUseCase.isModuleImported(item);\\n}\\n\\n</script>\\n\\n\\n<style scoped>\\n.container {\\n    padding: 32px 20px 20px;\\n}\\n\\n.settings-container {\\n    position: relative;\\n    top: 0px;\\n    left: 0px;\\n}\\n\\n.custom-text {\\n    /* position: absolute; */\\n    font-family: 'Roboto';\\n    font-style: normal;\\n    font-weight: 500;\\n    font-size: 15px;\\n    line-height: 18px;\\n    /* left: 24px; */\\n    color: #212121;\\n}\\n\\n/* .custom-text.title{\\n    top: 92px;\\n}\\n\\n.custom-text.environment{\\n    top: 174px;\\n} */\\n\\n.radio-button {\\n    position: absolute;\\n    top: 60px;\\n    left: 20px;\\n    cursor: pointer;\\n}\\n\\n.radio-text {\\n    position: absolute;\\n    top: 59px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n    user-select: none;\\n    cursor: pointer;\\n}\\n\\n.existing-app-url {\\n    position: absolute;\\n    width: 100%;\\n    height: 40px;\\n    top: 114px;\\n    left: 20px;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #bcbcbc;\\n    border-radius: 4px;\\n    font: normal normal normal 14px/19px Roboto;\\n    letter-spacing: 0px;\\n    padding: 10px 0px 10px 10px;\\n}\\n\\n.url-error {\\n    border: 1px solid red;\\n}\\n\\n.url-disable {\\n    opacity: 0.5;\\n}\\n\\n.existing-app-url::placeholder {\\n    color: #bcbcbc;\\n    user-select: none;\\n}\\n\\n.modules-selected-checkbox {\\n    cursor: pointer;\\n}\\n\\n.modules-selected-text {\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #757575;\\n    margin: 0 0 13px 30px;\\n    ;\\n}\\n\\n/* .modules-selected-text.deploy {\\n    top: 257px;\\n} */\\n\\n.text-number {\\n    font: normal normal bold 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.modules-datatable {\\n    width: 100%;\\n}\\n\\n/* .modules-datatable.deploy {\\n    top: 286px;\\n} */\\n\\n.modules-datatable::-webkit-scrollbar {\\n    width: 4px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar-thumb {\\n    background: #bcbcbc 0% 0% no-repeat padding-box;\\n    border-radius: 10px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar-thumb:hover {\\n    background: #555;\\n}\\n\\n.row-container {\\n    width: 100%;\\n    height: 36px;\\n    position: relative;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #e0e0e0;\\n}\\n\\n.chevron {\\n    position: absolute;\\n    left: 4px;\\n    color: #757575;\\n    font-size: 24px;\\n}\\n\\n.chevron.disabled {\\n    pointer-events: none;\\n    color: #D5D5D5;\\n}\\n\\n.module-checkbox {\\n    position: absolute;\\n    top: 10px;\\n    left: 43px;\\n    cursor: pointer;\\n}\\n\\n.module-name {\\n    position: absolute;\\n    top: 9px;\\n    left: 69px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.module-name.imported {\\n    top: 10px;\\n    left: 87px;\\n}\\n\\n.module-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.model-checkbox {\\n    position: absolute;\\n    top: 10px;\\n    left: 59px;\\n    cursor: pointer;\\n}\\n\\n.model-icon {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 85px;\\n}\\n\\n.app-tier-model-icon {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 69px\\n}\\n\\n.app-tier-model-name {\\n    position: absolute;\\n    top: 10px;\\n    left: 87px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.app-tier-model-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.model-name {\\n    position: absolute;\\n    top: 9px;\\n    left: 103px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.model-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.version-text {\\n    margin: 10px 7px 10px auto;\\n    display: table;\\n    font: normal normal normal 12px/16px Roboto;\\n    color: #757575;\\n    cursor: pointer;\\n    user-select: none;\\n}\\n\\n.version-text.disabled {\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n\\n.version-icon {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #D5D5D5;\\n}\\n\\n.version-icon.disabled {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #EEEEEE;\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n\\n.footer {\\n    position: relative;\\n    width: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: end;\\n}\\n\\n.footer.deploy {\\n    position: relative;\\n    width: 100%;\\n}\\n\\n.footer.export {\\n    margin: 50px 0 24px;\\n}\\n\\n.cancel-button {\\n    border-radius: 4px;\\n    user-select: none;\\n    font-style: normal;\\n    font-weight: 500;\\n    font-family: \\\"ROBOTO\\\";\\n    font-size: 15px;\\n    color: #757575;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n\\n\\n\\n.save-button {\\n    background: #151233 0% 0% no-repeat padding-box;\\n    border-radius: 4px;\\n    user-select: none;\\n    font-weight: 500;\\n    font-size: 15px;\\n    color: #ffffff;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n\\n.mobile-publish-text,\\n.web-publish-text {\\n    padding: 5px 12px;\\n    margin-bottom: 52px;\\n    width: 100%;\\n    color: #757575;\\n    font-size: 14px;\\n    background: #F5F5FA;\\n    border-radius: 4px;\\n    display: flex;\\n    align-items: center;\\n}\\n\\n.mobile-publish-text i,\\n.web-publish-text i {\\n    font-size: 24px;\\n    color: #151233;\\n    margin-right: 4px;\\n}\\n\\n.save-button.deploy {\\n    padding: 10px 16px;\\n}\\n\\n.button-disable .save-button {\\n    color: #757575;\\n    cursor: default;\\n}\\n\\n.button-disable .save-button:hover+.button-tooltip,\\n.start-screen:hover .button-tooltip,\\n.row-container:hover .button-tooltip,\\n.publish-info:hover .button-tooltip {\\n    visibility: visible;\\n    transition: opacity 0.3s ease-out 1s;\\n    opacity: 1;\\n}\\n\\n.button-tooltip {\\n    visibility: hidden;\\n    position: absolute;\\n    background: #757575;\\n    color: #FFFFFF;\\n    font-size: 11px;\\n    font-family: 'Roboto';\\n    text-align: center;\\n    border-radius: 4px;\\n    letter-spacing: 0.2px;\\n    padding: 6px 8px 6px 8px;\\n    top: 56px;\\n    left: 63px;\\n    opacity: 0;\\n}\\n\\n.publish-info {\\n    color: #757575;\\n    font-size: 20px;\\n    margin-left: 10px;\\n}\\n\\n.select-environment {\\n    width: 100%;\\n    font-size: 15px;\\n    height: 40px;\\n    line-height: 40px;\\n    margin-top: 4px\\n}\\n</style>\\n\\n<style>\\n.selected-environment {\\n    background-color: transparent;\\n    border-radius: 4px;\\n    border: 1px solid #BCBCBC;\\n    color: #212121;\\n    padding-left: 12px;\\n}\\n\\n.custom-placeholder:empty:before {\\n    color: #BCBCBC !important;\\n    font-weight: 400;\\n}\\n\\n.custom-select .items .option {\\n    font-size: 14px;\\n    padding-left: 12px;\\n    line-height: 32px;\\n}\\n\\n.custom-select .items .option:hover {\\n    background-color: #EEEEEE;\\n    color: #212121;\\n}\\n\\n.custom-select .items .option.disabled:hover {\\n    background-color: #FFFFFF;\\n    color: #212121;\\n}\\n\\n.custom-select.select-environment .items {\\n    margin-top: 4px;\\n    color: #212121;\\n    border-radius: 4px;\\n    border: 1px solid #E3E3E3;\\n    overflow: hidden;\\n    background-color: #FFFFFF;\\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\\n    position: static !important;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n*[data-v-b7f0cb6e] {\\n        font-family: \\\"Roboto\\\";\\n}\\n.container[data-v-b7f0cb6e] {\\n        width: 100%;\\n        height: 100%;\\n        max-width: 100%;\\n        display: flex;\\n        flex-direction: column;\\n}\\n.app-version-type label[data-v-b7f0cb6e] {\\n        font-weight: 500;\\n        font-size: 16px;\\n        line-height: 24px;\\n        color: #151233;\\n        margin-bottom: 4px;\\n}\\n.select-app-version-type[data-v-b7f0cb6e] {\\n        width: 100%;\\n        font-size: 15px;\\n        height: 40px;\\n        line-height: 40px;\\n        border: 1px solid #BCBCBC;\\n        border-radius: 4px;\\n        padding: 0px 12px;\\n}\\n.buttons-div[data-v-b7f0cb6e] {\\n        display: flex;\\n        justify-content: end;\\n        margin-top: 60px;\\n}\\n.cancel-button[data-v-b7f0cb6e] {\\n        font-weight: 500;\\n        font-size: 16px;\\n        text-align: center;\\n        color: #757575;\\n        display: flex;\\n        align-items: center;\\n        padding: 8px 16px;\\n        border-radius: 4px;\\n        margin-right: 4px;\\n        border: none;\\n        background: transparent;\\n}\\n.create-button[data-v-b7f0cb6e] {\\n        font-weight: 500;\\n        font-size: 16px;\\n        text-align: center;\\n        color: #FFFFFF;\\n        background: #151233;\\n        display: flex;\\n        align-items: center;\\n        padding: 8px 16px;\\n        border-radius: 4px;\\n        border: none;\\n}\\n.create-button[data-v-b7f0cb6e]:disabled {\\n        color: #757575;\\n}\\n.title[data-v-b7f0cb6e] {\\n        font-style: normal;\\n        font-weight: 500;\\n        font-size: 20px;\\n        line-height: 23px;\\n        white-space: nowrap;\\n        color: #151233;\\n        margin-top: 40px;\\n        margin-bottom: 8px;\\n}\\n.page-desc[data-v-b7f0cb6e] {\\n        font-size: 16px;\\n        color: #616161;\\n        margin-bottom: 32px;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/presentation/vue3/components/application/createAppVersion.vue\"],\"names\":[],\"mappings\":\";AA8GI;QACI,qBAAqB;AACzB;AACA;QACI,WAAW;QACX,YAAY;QACZ,eAAe;QACf,aAAa;QACb,sBAAsB;AAC1B;AAEA;QACI,gBAAgB;QAChB,eAAe;QACf,iBAAiB;QACjB,cAAc;QACd,kBAAkB;AACtB;AACA;QACI,WAAW;QACX,eAAe;QACf,YAAY;QACZ,iBAAiB;QACjB,yBAAyB;QACzB,kBAAkB;QAClB,iBAAiB;AACrB;AACA;QACI,aAAa;QACb,oBAAoB;QACpB,gBAAgB;AACpB;AACA;QACI,gBAAgB;QAChB,eAAe;QACf,kBAAkB;QAClB,cAAc;QACd,aAAa;QACb,mBAAmB;QACnB,iBAAiB;QACjB,kBAAkB;QAClB,iBAAiB;QACjB,YAAY;QACZ,uBAAuB;AAC3B;AACA;QACI,gBAAgB;QAChB,eAAe;QACf,kBAAkB;QAClB,cAAc;QACd,mBAAmB;QACnB,aAAa;QACb,mBAAmB;QACnB,iBAAiB;QACjB,kBAAkB;QAClB,YAAY;AAChB;AACA;QACI,cAAc;AAClB;AACA;QACI,kBAAkB;QAClB,gBAAgB;QAChB,eAAe;QACf,iBAAiB;QACjB,mBAAmB;QACnB,cAAc;QACd,gBAAgB;QAChB,kBAAkB;AACtB;AACA;QACI,eAAe;QACf,cAAc;QACd,mBAAmB;AACvB\",\"sourcesContent\":[\"<script setup lang=\\\"ts\\\">\\n    import { computed, ref } from \\\"vue\\\";\\n    import { IApplication } from \\\"../../../../domain/model/models\\\";\\n    import { IIDEInputDefinitions } from \\\"../../../../domain/presentation/IIDEInputDefinitions\\\";\\n    import IDEInput from \\\"../../components/application/IDEInput.vue\\\";\\n    import CustomSelect from \\\"../customSelect.vue\\\"\\n    import AppItemsTable from \\\"./appItemsTable.vue\\\"\\n    import { ITableData } from \\\"../../../../../../common/qCloudTemp/exporter\\\";\\n    import { container } from \\\"../../../../domain/core/diContainer\\\";\\n    import { IUseCaseExecutor } from \\\"../../../../domain/useCase/IUseCaseExecutor\\\";\\n    import { IApplicationVersionUseCase, VersionIncType } from \\\"../../../../domain/useCase/IApplicationVersionUseCase\\\";\\n    import { IReleaseApplicationRequest } from \\\"../../../../../../common/qCloudTemp/symDtoObjects\\\";\\n\\n    interface IAppVersionModel {\\n        modelID: string;\\n        version: string;\\n        modelName: string;\\n        path: string;\\n        ownerType?: \\\"module\\\" | \\\"application\\\";\\n        ownerName?: string;\\n    }\\n    interface ICreateAppVersionProp {\\n        app?: IApplication;\\n        showTitleAndDesc?: boolean;\\n        openedInDialog?: boolean;\\n    }\\n    const props = defineProps<ICreateAppVersionProp>();\\n    const executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\\n    const applicationVersionUseCase = container.resolve<IApplicationVersionUseCase>(IApplicationVersionUseCase);\\n\\n    const releaseTypeOptions = ref([`Major Version (v${getLastRelasedVersion(\\\"Major\\\")})`, `Minor Version (v${getLastRelasedVersion(\\\"Minor\\\")})`, `Fix Version (v${getLastRelasedVersion(\\\"Fix\\\")})`]);\\n    const releaseType = ref<VersionIncType>();\\n    const isDescriptionValid = ref<boolean>(true);\\n    const description = ref(\\\"\\\");\\n    const appModels = ref<Array<IAppVersionModel>>([]);\\n    const emit = defineEmits([\\\"close\\\", \\\"hideLeftNav\\\", \\\"showLeftNav\\\"]);\\n    const buttonDisableCond = computed(() => !releaseType.value)\\n    const title = ref(\\\"New App Version\\\");\\n    const pageDesc = ref(\\\"You can create a new version of your application.\\\");\\n    emit(\\\"hideLeftNav\\\");\\n    const validations = ref<Record<\\\"description\\\", IIDEInputDefinitions[\\\"validations\\\"]>>({\\n        description: { minAndMaxLength: { min: 3, max: 100 }, availableCharacters: false, nonSpaceCharacter: false },\\n    });\\n    function close() {\\n        emit('close');\\n        emit(\\\"showLeftNav\\\");\\n    }\\n    function setReleaseType(type: VersionIncType) {\\n        releaseType.value = (type.split(\\\" \\\")[0] as VersionIncType);\\n    }\\n    function descriptionValidationStatus(isValid: boolean) {\\n        isDescriptionValid.value = isValid\\n\\n    }\\n    function setDescValue(desc: string) {\\n        description.value = desc\\n    }\\n    function getItems(item: ITableData) {\\n        const model: IAppVersionModel = {\\n            modelID: item.id,\\n            version: item.version ?? \\\"latest\\\",\\n            modelName: item.name,\\n            path: item.path ?? \\\"/\\\",\\n            ownerType: item.ownerType ?? \\\"application\\\",\\n            ownerName: item.ownerName ?? \\\"\\\",\\n        }\\n        item.checked ? appModels.value?.push(model) : appModels.value = appModels.value?.filter(model => model.modelID != item.id);\\n    }\\n    function createNewAppVersion() {\\n        let request: IReleaseApplicationRequest = {    \\n            appID: props.app!.ID,\\n            appVersionIncType: releaseType.value!,\\n            models: appModels.value,\\n            shortComment: description.value,\\n        }\\n        executor.execute(async () => {\\n            await applicationVersionUseCase.releaseApplication(request);\\n            close();\\n        }, {loading: true})\\n    }\\n    function getLastRelasedVersion(incType: string) {\\n        const [major, minor, fix] = props.app?.lastReleasedVersion ? props.app?.lastReleasedVersion.split(\\\".\\\").map(Number) : [0,0,0]\\n        switch (incType) {\\n            case 'Major':\\n                return `${major + 1}.0.0`;\\n            case 'Minor':\\n                return `${major}.${minor + 1}.0`;\\n            case 'Fix':\\n                return `${major}.${minor}.${fix + 1}`;\\n            default: return;\\n        }\\n    }\\n</script>\\n<template>\\n    <div class=\\\"container\\\" :style=\\\"{padding: openedInDialog ? '20px' : '0'}\\\">\\n        <div v-if=\\\"showTitleAndDesc\\\" class=\\\"title\\\">{{ title }}</div>\\n        <div v-if=\\\"showTitleAndDesc\\\" class=\\\"page-desc\\\">{{ pageDesc }}</div>\\n        <div class=\\\"app-version-type\\\">\\n            <label>Type</label>\\n            <CustomSelect class=\\\"select-app-version-type\\\" :options=\\\"releaseTypeOptions\\\" :placeholder=\\\"'Select Release Type'\\\"  :selectedClass=\\\"'selected-type'\\\" @input=\\\"setReleaseType\\\"></CustomSelect>\\n        </div>\\n        <div style=\\\"margin: 24px 0 \\\">\\n            <IDEInput :isRequired=\\\"false\\\" elementId=\\\"descriptionInput\\\" @validateStatus=\\\"descriptionValidationStatus\\\" placeholder=\\\"\\\" \\n                :type=\\\"'textarea'\\\" :value=\\\"description\\\"   info-text=\\\"Description\\\" :validations=\\\"validations.description\\\" @getValue=\\\"setDescValue\\\" />\\n        </div>\\n        <AppItemsTable :screenType = \\\"'Create'\\\" :buttonCb=\\\"createNewAppVersion\\\" @getItem=\\\"getItems\\\" :platformSelection=\\\"{web: true, mobile: true}\\\" @close=\\\"close\\\" :buttonDisableCond=\\\"buttonDisableCond\\\" :openedInDialog=\\\"openedInDialog\\\"></AppItemsTable>\\n    </div>\\n</template>\\n\\n<style scoped>\\n    * {\\n        font-family: \\\"Roboto\\\";\\n    }\\n    .container {\\n        width: 100%;\\n        height: 100%;\\n        max-width: 100%;\\n        display: flex;\\n        flex-direction: column;\\n    }\\n\\n    .app-version-type label {\\n        font-weight: 500;\\n        font-size: 16px;\\n        line-height: 24px;\\n        color: #151233;\\n        margin-bottom: 4px;\\n    }\\n    .select-app-version-type {\\n        width: 100%;\\n        font-size: 15px;\\n        height: 40px;\\n        line-height: 40px;\\n        border: 1px solid #BCBCBC;\\n        border-radius: 4px;\\n        padding: 0px 12px;\\n    }\\n    .buttons-div {\\n        display: flex;\\n        justify-content: end;\\n        margin-top: 60px;\\n    }\\n    .cancel-button {\\n        font-weight: 500;\\n        font-size: 16px;\\n        text-align: center;\\n        color: #757575;\\n        display: flex;\\n        align-items: center;\\n        padding: 8px 16px;\\n        border-radius: 4px;\\n        margin-right: 4px;\\n        border: none;\\n        background: transparent;\\n    }\\n    .create-button {\\n        font-weight: 500;\\n        font-size: 16px;\\n        text-align: center;\\n        color: #FFFFFF;\\n        background: #151233;\\n        display: flex;\\n        align-items: center;\\n        padding: 8px 16px;\\n        border-radius: 4px;\\n        border: none;\\n    }\\n    .create-button:disabled {\\n        color: #757575;\\n    }\\n    .title {\\n        font-style: normal;\\n        font-weight: 500;\\n        font-size: 20px;\\n        line-height: 23px;\\n        white-space: nowrap;\\n        color: #151233;\\n        margin-top: 40px;\\n        margin-bottom: 8px;\\n    }\\n    .page-desc {\\n        font-size: 16px;\\n        color: #616161;\\n        margin-bottom: 32px;\\n    }\\n</style>\\n<style>\\n    .selected-type {\\n        background-color: transparent;\\n        color: #212121;\\n        height: 40px;\\n    }\\n    .custom-select .items {\\n        color: #212121;\\n        border-radius: 8px;\\n        border: 1px solid #E3E3E3;\\n        overflow: hidden;\\n        background-color: #FFFFFF;\\n        box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\\n        /* margin-top: 40px; */\\n    }\\n    .custom-select .items .option {\\n        font-size: 14px;\\n        padding-left: 12px;\\n    }\\n    .custom-select .items .option:hover {\\n        background-color: #EEEEEE;\\n        color: #212121;\\n    }\\n    .select-release-type i {\\n        font-size: 16px;\\n        color: #BCBCBC;\\n    }\\n    .custom-placeholder:empty:before {\\n        color: #BCBCBC !important;\\n        font-weight: 400;\\n    }\\n    .custom-select.select-release-type .items {\\n        position: static !important;\\n    }\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.selected-type {\\n        background-color: transparent;\\n        color: #212121;\\n        height: 40px;\\n}\\n.custom-select .items {\\n        color: #212121;\\n        border-radius: 8px;\\n        border: 1px solid #E3E3E3;\\n        overflow: hidden;\\n        background-color: #FFFFFF;\\n        box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\\n        /* margin-top: 40px; */\\n}\\n.custom-select .items .option {\\n        font-size: 14px;\\n        padding-left: 12px;\\n}\\n.custom-select .items .option:hover {\\n        background-color: #EEEEEE;\\n        color: #212121;\\n}\\n.select-release-type i {\\n        font-size: 16px;\\n        color: #BCBCBC;\\n}\\n.custom-placeholder:empty:before {\\n        color: #BCBCBC !important;\\n        font-weight: 400;\\n}\\n.custom-select.select-release-type .items {\\n        position: static !important;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/presentation/vue3/components/application/createAppVersion.vue\"],\"names\":[],\"mappings\":\";AA2LI;QACI,6BAA6B;QAC7B,cAAc;QACd,YAAY;AAChB;AACA;QACI,cAAc;QACd,kBAAkB;QAClB,yBAAyB;QACzB,gBAAgB;QAChB,yBAAyB;QACzB,0CAA0C;QAC1C,sBAAsB;AAC1B;AACA;QACI,eAAe;QACf,kBAAkB;AACtB;AACA;QACI,yBAAyB;QACzB,cAAc;AAClB;AACA;QACI,eAAe;QACf,cAAc;AAClB;AACA;QACI,yBAAyB;QACzB,gBAAgB;AACpB;AACA;QACI,2BAA2B;AAC/B\",\"sourcesContent\":[\"<script setup lang=\\\"ts\\\">\\n    import { computed, ref } from \\\"vue\\\";\\n    import { IApplication } from \\\"../../../../domain/model/models\\\";\\n    import { IIDEInputDefinitions } from \\\"../../../../domain/presentation/IIDEInputDefinitions\\\";\\n    import IDEInput from \\\"../../components/application/IDEInput.vue\\\";\\n    import CustomSelect from \\\"../customSelect.vue\\\"\\n    import AppItemsTable from \\\"./appItemsTable.vue\\\"\\n    import { ITableData } from \\\"../../../../../../common/qCloudTemp/exporter\\\";\\n    import { container } from \\\"../../../../domain/core/diContainer\\\";\\n    import { IUseCaseExecutor } from \\\"../../../../domain/useCase/IUseCaseExecutor\\\";\\n    import { IApplicationVersionUseCase, VersionIncType } from \\\"../../../../domain/useCase/IApplicationVersionUseCase\\\";\\n    import { IReleaseApplicationRequest } from \\\"../../../../../../common/qCloudTemp/symDtoObjects\\\";\\n\\n    interface IAppVersionModel {\\n        modelID: string;\\n        version: string;\\n        modelName: string;\\n        path: string;\\n        ownerType?: \\\"module\\\" | \\\"application\\\";\\n        ownerName?: string;\\n    }\\n    interface ICreateAppVersionProp {\\n        app?: IApplication;\\n        showTitleAndDesc?: boolean;\\n        openedInDialog?: boolean;\\n    }\\n    const props = defineProps<ICreateAppVersionProp>();\\n    const executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\\n    const applicationVersionUseCase = container.resolve<IApplicationVersionUseCase>(IApplicationVersionUseCase);\\n\\n    const releaseTypeOptions = ref([`Major Version (v${getLastRelasedVersion(\\\"Major\\\")})`, `Minor Version (v${getLastRelasedVersion(\\\"Minor\\\")})`, `Fix Version (v${getLastRelasedVersion(\\\"Fix\\\")})`]);\\n    const releaseType = ref<VersionIncType>();\\n    const isDescriptionValid = ref<boolean>(true);\\n    const description = ref(\\\"\\\");\\n    const appModels = ref<Array<IAppVersionModel>>([]);\\n    const emit = defineEmits([\\\"close\\\", \\\"hideLeftNav\\\", \\\"showLeftNav\\\"]);\\n    const buttonDisableCond = computed(() => !releaseType.value)\\n    const title = ref(\\\"New App Version\\\");\\n    const pageDesc = ref(\\\"You can create a new version of your application.\\\");\\n    emit(\\\"hideLeftNav\\\");\\n    const validations = ref<Record<\\\"description\\\", IIDEInputDefinitions[\\\"validations\\\"]>>({\\n        description: { minAndMaxLength: { min: 3, max: 100 }, availableCharacters: false, nonSpaceCharacter: false },\\n    });\\n    function close() {\\n        emit('close');\\n        emit(\\\"showLeftNav\\\");\\n    }\\n    function setReleaseType(type: VersionIncType) {\\n        releaseType.value = (type.split(\\\" \\\")[0] as VersionIncType);\\n    }\\n    function descriptionValidationStatus(isValid: boolean) {\\n        isDescriptionValid.value = isValid\\n\\n    }\\n    function setDescValue(desc: string) {\\n        description.value = desc\\n    }\\n    function getItems(item: ITableData) {\\n        const model: IAppVersionModel = {\\n            modelID: item.id,\\n            version: item.version ?? \\\"latest\\\",\\n            modelName: item.name,\\n            path: item.path ?? \\\"/\\\",\\n            ownerType: item.ownerType ?? \\\"application\\\",\\n            ownerName: item.ownerName ?? \\\"\\\",\\n        }\\n        item.checked ? appModels.value?.push(model) : appModels.value = appModels.value?.filter(model => model.modelID != item.id);\\n    }\\n    function createNewAppVersion() {\\n        let request: IReleaseApplicationRequest = {    \\n            appID: props.app!.ID,\\n            appVersionIncType: releaseType.value!,\\n            models: appModels.value,\\n            shortComment: description.value,\\n        }\\n        executor.execute(async () => {\\n            await applicationVersionUseCase.releaseApplication(request);\\n            close();\\n        }, {loading: true})\\n    }\\n    function getLastRelasedVersion(incType: string) {\\n        const [major, minor, fix] = props.app?.lastReleasedVersion ? props.app?.lastReleasedVersion.split(\\\".\\\").map(Number) : [0,0,0]\\n        switch (incType) {\\n            case 'Major':\\n                return `${major + 1}.0.0`;\\n            case 'Minor':\\n                return `${major}.${minor + 1}.0`;\\n            case 'Fix':\\n                return `${major}.${minor}.${fix + 1}`;\\n            default: return;\\n        }\\n    }\\n</script>\\n<template>\\n    <div class=\\\"container\\\" :style=\\\"{padding: openedInDialog ? '20px' : '0'}\\\">\\n        <div v-if=\\\"showTitleAndDesc\\\" class=\\\"title\\\">{{ title }}</div>\\n        <div v-if=\\\"showTitleAndDesc\\\" class=\\\"page-desc\\\">{{ pageDesc }}</div>\\n        <div class=\\\"app-version-type\\\">\\n            <label>Type</label>\\n            <CustomSelect class=\\\"select-app-version-type\\\" :options=\\\"releaseTypeOptions\\\" :placeholder=\\\"'Select Release Type'\\\"  :selectedClass=\\\"'selected-type'\\\" @input=\\\"setReleaseType\\\"></CustomSelect>\\n        </div>\\n        <div style=\\\"margin: 24px 0 \\\">\\n            <IDEInput :isRequired=\\\"false\\\" elementId=\\\"descriptionInput\\\" @validateStatus=\\\"descriptionValidationStatus\\\" placeholder=\\\"\\\" \\n                :type=\\\"'textarea'\\\" :value=\\\"description\\\"   info-text=\\\"Description\\\" :validations=\\\"validations.description\\\" @getValue=\\\"setDescValue\\\" />\\n        </div>\\n        <AppItemsTable :screenType = \\\"'Create'\\\" :buttonCb=\\\"createNewAppVersion\\\" @getItem=\\\"getItems\\\" :platformSelection=\\\"{web: true, mobile: true}\\\" @close=\\\"close\\\" :buttonDisableCond=\\\"buttonDisableCond\\\" :openedInDialog=\\\"openedInDialog\\\"></AppItemsTable>\\n    </div>\\n</template>\\n\\n<style scoped>\\n    * {\\n        font-family: \\\"Roboto\\\";\\n    }\\n    .container {\\n        width: 100%;\\n        height: 100%;\\n        max-width: 100%;\\n        display: flex;\\n        flex-direction: column;\\n    }\\n\\n    .app-version-type label {\\n        font-weight: 500;\\n        font-size: 16px;\\n        line-height: 24px;\\n        color: #151233;\\n        margin-bottom: 4px;\\n    }\\n    .select-app-version-type {\\n        width: 100%;\\n        font-size: 15px;\\n        height: 40px;\\n        line-height: 40px;\\n        border: 1px solid #BCBCBC;\\n        border-radius: 4px;\\n        padding: 0px 12px;\\n    }\\n    .buttons-div {\\n        display: flex;\\n        justify-content: end;\\n        margin-top: 60px;\\n    }\\n    .cancel-button {\\n        font-weight: 500;\\n        font-size: 16px;\\n        text-align: center;\\n        color: #757575;\\n        display: flex;\\n        align-items: center;\\n        padding: 8px 16px;\\n        border-radius: 4px;\\n        margin-right: 4px;\\n        border: none;\\n        background: transparent;\\n    }\\n    .create-button {\\n        font-weight: 500;\\n        font-size: 16px;\\n        text-align: center;\\n        color: #FFFFFF;\\n        background: #151233;\\n        display: flex;\\n        align-items: center;\\n        padding: 8px 16px;\\n        border-radius: 4px;\\n        border: none;\\n    }\\n    .create-button:disabled {\\n        color: #757575;\\n    }\\n    .title {\\n        font-style: normal;\\n        font-weight: 500;\\n        font-size: 20px;\\n        line-height: 23px;\\n        white-space: nowrap;\\n        color: #151233;\\n        margin-top: 40px;\\n        margin-bottom: 8px;\\n    }\\n    .page-desc {\\n        font-size: 16px;\\n        color: #616161;\\n        margin-bottom: 32px;\\n    }\\n</style>\\n<style>\\n    .selected-type {\\n        background-color: transparent;\\n        color: #212121;\\n        height: 40px;\\n    }\\n    .custom-select .items {\\n        color: #212121;\\n        border-radius: 8px;\\n        border: 1px solid #E3E3E3;\\n        overflow: hidden;\\n        background-color: #FFFFFF;\\n        box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\\n        /* margin-top: 40px; */\\n    }\\n    .custom-select .items .option {\\n        font-size: 14px;\\n        padding-left: 12px;\\n    }\\n    .custom-select .items .option:hover {\\n        background-color: #EEEEEE;\\n        color: #212121;\\n    }\\n    .select-release-type i {\\n        font-size: 16px;\\n        color: #BCBCBC;\\n    }\\n    .custom-placeholder:empty:before {\\n        color: #BCBCBC !important;\\n        font-weight: 400;\\n    }\\n    .custom-select.select-release-type .items {\\n        position: static !important;\\n    }\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, normalizeClass as _normalizeClass, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createStaticVNode as _createStaticVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-2bcaf64a\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { style: {\"display\":\"flex\",\"flex-direction\":\"column\",\"flex\":\"1\"} }\nconst _hoisted_2 = { class: \"text-number\" }\nconst _hoisted_3 = { class: \"text-number\" }\nconst _hoisted_4 = {\n  key: 0,\n  style: {\"margin-bottom\":\"102px\"}\n}\nconst _hoisted_5 = /*#__PURE__*/_createStaticVNode(\"<div style=\\\"display:flex;align-items:center;\\\" data-v-2bcaf64a><span class=\\\"custom-text environment\\\" data-v-2bcaf64a> Publish To </span><span class=\\\"publish-info\\\" data-v-2bcaf64a><i class=\\\"mdi mdi-information\\\" data-v-2bcaf64a></i><span class=\\\"button-tooltip\\\" style=\\\"top:460px;left:96px;z-index:1;width:231px;\\\" data-v-2bcaf64a>Publish To options may change depending on the module type you choose.</span></span></div>\", 1)\nconst _hoisted_6 = { class: \"save-button deploy\" }\nconst _hoisted_7 = {\n  key: 0,\n  class: \"button-tooltip\",\n  style: {\"top\":\"-46px\",\"left\":\"652px\",\"z-index\":\"1\",\"width\":\"120px\"}\n}\nconst _hoisted_8 = {\n  key: 1,\n  class: \"button-tooltip\",\n  style: {\"top\":\"-46px\",\"left\":\"644px\",\"z-index\":\"1\",\"width\":\"123px\"}\n}\nconst _hoisted_9 = {\n  key: 2,\n  class: \"button-tooltip\",\n  style: {\"top\":\"-95px\",\"left\":\"644px\",\"z-index\":\"1\",\"width\":\"135px\"}\n}\nconst _hoisted_10 = {\n  key: 3,\n  class: \"button-tooltip\",\n  style: {\"top\":\"-95px\",\"left\":\"644px\",\"z-index\":\"1\",\"width\":\"135px\"}\n}\n\nimport { CryptoHelper } from \"@stechquick/algae/lib/helpers/cryptoHelper\";\nimport { ModelContants } from \"../../../../../../common/qCloudTemp/modelContants\";\nimport { computed, createApp, defineAsyncComponent, onMounted, ref } from \"vue\";\nimport { IOrganizationCloud } from \"../../../../../../common/clean/domain/useCases/ICloudProvider\";\nimport { IPlatformSelection, ITableData } from \"../../../../../../common/qCloudTemp/exporter\";\nimport { IModuleRelatedModelItem, IQJsonAdditionals } from \"../../../../../../common/qCloudTemp/quickCloud\";\nimport { container } from \"../../../../domain/core/diContainer\";\nimport { IQCloudApi } from \"../../../../domain/infrastructure/IQCloudApi\";\nimport { IModel, IModelHistoryInfo, IModule, IModuleVersion } from \"../../../../domain/model/models\";\nimport { IDialog } from \"../../../../domain/presentation/IDialog\";\nimport { IDeployJobs } from \"../../../../domain/useCase/IDeployJobs\";\nimport { IJobUtils } from \"../../../../domain/useCase/IJobUtils\";\nimport { IListMultiModelVersions } from \"../../../../domain/useCase/IListMultiModelVersions\";\nimport { IListMultiModuleVersions } from \"../../../../domain/useCase/IListMultiModuleVersions\";\nimport { IPackJobs } from \"../../../../domain/useCase/IPackJobs\";\nimport { IUseCaseExecutor } from \"../../../../domain/useCase/IUseCaseExecutor\";\nimport { IViewModel } from \"../../../../domain/viewModel/IViewModel\";\nimport { IViewModelManager } from \"../../../../domain/viewModel/IViewModelManager\";\nimport { IBackofficeUseCase } from \"../../../../domain/useCase/IBackofficeUseCase\";\nimport { IApplicationUseCase } from \"../../../../domain/useCase/IApplicationUseCase\";\nimport ExportDialogItem from \"../../components/dialogs/publish/components/exportDialogItem.vue\";\nimport CustomSelect from \"../customSelect.vue\";\nimport CheckboxComp from \"../checkboxComp.vue\";\nimport { FileDisplayerExternalData, IFileDisplayerUseCase } from \"../../../../domain/useCase/IFileDisplayerUseCase\";\nimport { ITreeItem } from \"../../../../domain/presentation/ITreeView\";\nimport { FileExplorerConstants } from \"../../../../domain/useCase/IFileExplorer\";\nimport { IObjectUseCase } from \"../../../../domain/useCase/IObjectUseCase\";\n\ninterface IDeployScreenAdditionalProps {\n    screenType: \"Export\" | \"Deploy\" | \"Release\" | \"Create\" | \"Save\" | \"Update\";\n    platformSelection: IPlatformSelection;\n    buttonCb: () => void;\n    buttonDisableCond: boolean;\n    openedInDialog?: boolean;\n}\n\ninterface IDisabledOptions {\n    index: number\n    cause: string;\n}\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'appItemsTable',\n  props: {\n    screenType: null,\n    platformSelection: null,\n    buttonCb: { type: Function },\n    buttonDisableCond: { type: Boolean },\n    openedInDialog: { type: Boolean }\n  },\n  emits: [\"close\", \"getItem\"],\n  setup(__props: any, { emit }) {\n\nconst props = __props as {\n    screenType: \"Export\" | \"Deploy\" | \"Release\" | \"Create\" | \"Save\" | \"Update\";\n    platformSelection: IPlatformSelection;\n    buttonCb: () => void;\n    buttonDisableCond: boolean;\n    openedInDialog?: boolean;\n};\n\n\nconst viewModel = container.resolve<IViewModel>(IViewModel);\nconst viewModelManager = container.resolve<IViewModelManager>(IViewModelManager);\nconst dialog = container.resolve<IDialog>(IDialog);\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\nconst fileDisplayerUseCase = container.resolve<IFileDisplayerUseCase>(IFileDisplayerUseCase);\nconst objectUseCase = container.resolve<IObjectUseCase>(IObjectUseCase);\n\n\n\nconst items = ref<Array<ITableData>>([]);\nconst validations = ref<boolean>(true);\nconst selectedTarget = ref<string>(\"\");\nconst disabledOptions = ref<Array<IDisabledOptions>>();\nconst publishTargets = ref<Array<string>>();\nconst modelHistories = ref<Map<string, Array<IModelHistoryInfo>>>();\nconst importedModuleVersions = ref<Map<string, Array<IModuleVersion>>>();\nconst startScreen = ref<IModel>();\nconst dependencyMap = ref<Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>>();\nconst dependencyErrorStr = ref<string>('');\nconst currentApp = computed(() => viewModel.apps.find((app) => app.ID == viewModel.studio.appId));\nconst buttonNameDict = {\n    \"Export\" : \"DOWNLOAD\",\n    \"Deploy\": \"PUBLISH\",\n    \"Release\": \"RELEASE\",\n    \"Create\": \"CREATE\",\n    \"Save\": \"SAVE\",\n    \"Update\": \"UPDATE\"\n} \n\n\nonMounted(async () => {\n    await executor.execute(async () => {\n        await Promise.all([\n            executor.executeUseCase<IListMultiModelVersions>(IListMultiModelVersions, {}).then(res => modelHistories.value = res),\n            executor.executeUseCase<IListMultiModuleVersions>(IListMultiModuleVersions, {}).then(res => importedModuleVersions.value = res)\n        ])\n        initDependencies();\n        handleItems();\n        props.screenType == \"Deploy\" && syncPublishTargets();\n        validations.value = validate();\n        sendItems();\n    }, { loading: true });\n})\n\nconst allChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == \"module\" && e.allChildChecked).length);\nconst anyChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == \"module\" && !e.allChildChecked && e.anyChildChecked).length);\nconst checkedRootLevelModelsCount = computed(() => items.value.filter(e => e.type != \"module\" && e.checked).length)\nconst totalRootLevelCount = computed(() => items.value.length);\nconst saveButtonDisable = computed(() => (props.screenType == \"Deploy\" && props.platformSelection.web && selectedTarget.value == \"\") || !validations.value || !items.value.some((item) => item.checked || item.anyChildChecked) || !validateStartScreen() || !validateDependencies() || props.buttonDisableCond);\nconst mainCheckboxState = computed(() => items.value.length == allChildCheckedModulesCount.value ? true\n    : (anyChildCheckedModulesCount.value + checkedRootLevelModelsCount.value > 0 ? false : undefined));\nconst isThereVersion = computed(() => checkMaxVersionOfAllItems());\nconst isAllDependenciesOK = computed(validateDependencies)\nconst isStartScreenOK = computed(validateStartScreen)\n\nfunction validate() {\n    let result = true;\n    const modules = items.value.filter(e => e.type == \"module\" && e.anyChildChecked);\n    const appLayerItems = items.value.filter(e => e.type == \"qjson\" && e.checked);\n\n    startScreen.value = (viewModel.studio.items as Array<IModel>).find(item => (item.additionals as IQJsonAdditionals | undefined)?.isRootPage);\n    if (!startScreen.value)\n        return false;\n\n    if (props.screenType == \"Deploy\") {\n        if (modules.length > 0)\n            result = modules.map(e => e.children).filter(e => !e?.find(f => f.type == \"entityDesigner\" && f.checked)).length <= 0\n\n        let isApplicationWillDeploy = appLayerItems.length > 0;\n        if (isApplicationWillDeploy) {\n            result = appLayerItems\n                .map(e => viewModel.studio.items.find(item => item.ID == e.id) as IModel)\n                .findIndex(e => ((e.additionals as IQJsonAdditionals).isRootPage)) != -1;\n        }\n    }\n\n    return result;\n}\n\nfunction validateDependencies() {\n    const checkMap = new Map<string, boolean>();\n    items.value.forEach(item => {\n        if (item.type == 'module' && item.children && item.children.length > 0)\n            item.children.forEach(child => checkMap.set(child.id, child.checked == true))\n        else\n            checkMap.set(item.id, item.checked == true)\n    })\n\n    const mustBeCheckedMap = new Map<string, Array<string>>();\n    dependencyMap.value?.forEach((deps, id) => {\n        if (!checkMap.get(id))\n            return;\n\n        deps.dependedTo.forEach(dependedId => {\n            if (checkMap.get(dependedId))\n                return;\n\n            if (mustBeCheckedMap.has(id)) {\n                const vals = mustBeCheckedMap.get(id)!\n                vals.push(dependedId)\n                mustBeCheckedMap.set(id, vals)\n            } else {\n                mustBeCheckedMap.set(id, [dependedId])\n            }\n\n        });\n    })\n\n    //set deps error text\n    const [firstItemID] = mustBeCheckedMap.keys();\n    if (firstItemID) {\n        const firstItemDeps = mustBeCheckedMap.get(firstItemID);\n        const firstItemDepStr = firstItemDeps ? firstItemDeps.map(findItem).map(e => e?.name).join(', ') : '';\n        dependencyErrorStr.value = `Select ${firstItemDepStr} first. ${findItem(firstItemID)?.name} depends on ${firstItemDepStr}.`\n    }\n\n    return mustBeCheckedMap.size == 0\n}\n\nfunction validateStartScreen() {\n    return (items.value.find((item) => item.id == startScreen.value?.ID))?.checked\n}\n\nfunction findItem(ID: string) {\n    for (const item of items.value) {\n        if (item.type != 'module' && item.id == ID)\n            return item;\n        if (item.type == 'module' && item.children && item.children.length > 0) {\n            const f = item.children.find(e => e.id == ID)\n            if (f) return f\n        }\n    }\n}\nfunction sendItems() {\n    items.value.forEach(item => {\n            if(item.type != \"module\" && item.type != \"folder\" && item.usageType != \"appAssetList\")  {\n                item.checked && getItem(item);\n            }\n            else {\n                item.children?.forEach(child => {\n                    child.checked && getItem(child);\n                 })\n            }\n        })\n}\nfunction initDependencies() {\n    const map = new Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>();\n    const depMap = new Map<string, Array<string>>();\n\n    viewModelManager.flatMapItems(viewModel.studio.items, (item) => {\n        if (item.objectType != \"model\") { return; }\n\n        const isImportedModule = item.owner.objectType == \"module\" && isModuleImported(item.owner as IModule);\n\n        let version: string | undefined;\n        if (!isImportedModule) {\n            const maxVersion = getItemMaxVersion(item)\n            if (!maxVersion)\n                return depMap.set(item.ID, item.dependentModels ? item.dependentModels.map(e => e.modelId) : Array<string>());\n            version = maxVersion;\n        }\n        else {\n            const moduleVersions = importedModuleVersions.value?.get(item.owner.ID)\n            const moduleVersion = (item.owner as IModule).relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion\n\n            const importedModuleModel = moduleVersions?.filter(e => e.version == moduleVersion).flatMap(e => e.relatedModelHistories).find(e => e.modelID == item.ID)\n            version = importedModuleModel?.version\n        }\n\n        const historyItem = modelHistories.value?.get(item.ID)?.find(e => e.version == version);\n\n        depMap.set(item.ID, historyItem?.dependentModels ? historyItem?.dependentModels.map(e => e.modelId) : Array<string>())\n    });\n\n\n    depMap.forEach((dependedTo, modelId) => {\n        const dependedBy = Array<string>();\n        depMap.forEach((dependencies, depModelId) => {\n            if (dependencies.some(depId => depId == modelId))\n                dependedBy.push(depModelId)\n        })\n        map.set(modelId, { dependedBy, dependedTo });\n    })\n    dependencyMap.value = map;\n}\n\nfunction isModelDepended(item: ITableData) {\n    const deps = dependencyMap.value?.get(item.id)?.dependedBy\n    if (!deps) return false;\n\n    return deps.some(dep => items.value.some(item => {\n        if (item.type == 'module' && item.anyChildChecked) {\n            return item.children?.some(child => child.checked && child.id == dep)\n        }\n        return item.id == dep && item.checked\n    }));\n}\nfunction createDialogComp(item: ITableData) {\n    const newChild = createApp(ExportDialogItem, {\n        handleItemCheckEvent,\n        startScreen,\n        versionDialog,\n        handleCollapse,\n        item: item,\n        moduleVersionDialog\n    });\n    const mountEl = document.createElement('div');\n    newChild.mount(mountEl);\n    const parentEl = document.getElementById('module-container-div');\n    parentEl?.appendChild(mountEl);\n}\nfunction createAndAppendItem({ newItem }: { newItem: ITableData }) {\n    createDialogComp(newItem);\n    if ((newItem).type != \"module\") {\n        items.value.push(newItem);\n    }\n}\n\nfunction handleItems() {\n    // - App Settings\n    const appSettings = viewModel.studio.items.find(e => e.name == 'App Settings');\n    const maxVersion = getItemMaxVersion(appSettings as IModel)\n    const settingsData = appSettings && {\n        id: appSettings.ID,\n        name: appSettings.name,\n        checked: true,\n        disabled: false,\n        type: (appSettings as IModel).modelType,\n        version: !maxVersion ? 'latest' : maxVersion\n    };\n    appSettings && settingsData && createAndAppendItem({ newItem: settingsData });\n\n\n    // - UI Settings\n    const uiSettingsID = CryptoHelper.CreateGuid();\n    const uiSettingsModels = viewModel.studio.items.filter((item) => item.objectType == \"model\" && item.usageType == \"appSettings\") as Array<IModel>;\n    const uiSettings: ITableData = {\n        id: uiSettingsID,\n        collapsed: true,\n        name: \"UI Settings\",\n        type: \"module\",\n        imported: false,\n        checked: true,\n        children: [{} as ITableData]\n    };\n    uiSettings && createAndAppendItem({ newItem: uiSettings });\n    uiSettings.children = uiSettingsModels.map(settings => {\n        const maxVersion = getItemMaxVersion(settings)\n        const childData = {\n            id: settings.ID,\n            parent: uiSettings,\n            name: settings.name,\n            type: settings.modelType,\n            checked: maxVersion != undefined,\n            usageType: settings?.usageType,\n            disabled: !maxVersion,\n            version: maxVersion,\n            level: 2\n        }\n        createAndAppendItem({ newItem: childData });\n        return childData;\n    })\n    handleParentCheckedStatus(uiSettings, false);\n\n\n    // - Styled Components\n    const uiAssetID = CryptoHelper.CreateGuid();\n    const appAssetList = viewModel.studio.items.filter((item) => item.objectType == \"model\" && item.usageType == \"appAssetList\") as Array<IModel>;\n    const uiAssetList: ITableData = {\n        id: uiAssetID,\n        collapsed: true,\n        name: \"Styled Components\",\n        type: \"module\",\n        imported: false,\n        anyChildChecked: true,\n        allChildChecked: true,\n        children: [{} as ITableData]\n    };\n    uiAssetList && createAndAppendItem({ newItem: uiAssetList });\n    uiAssetList.children = appAssetList.map((asset) => {\n        const childAsset = {\n            id: asset.ID,\n            parent: uiAssetList,\n            name: asset.name,\n            type: asset.modelType,\n            checked: true,\n            usageType: asset?.usageType,\n            level: 2\n        }\n        createAndAppendItem({ newItem: childAsset });\n        return childAsset;\n    }) as Array<ITableData>;\n    handleParentCheckedStatus(uiAssetList, false);\n\n    \n    const treeItems = fileDisplayerUseCase.cloneFileExplorerTreeView({\n        displayFilterer: (item, hasChildren) => {\n            switch (item.ID) { case FileExplorerConstants.uiAssetListID: case FileExplorerConstants.uiSettingsID: return false; default: break; }\n            switch (item.objectType) {\n                case \"application\": return false;\n                case \"module\": return true;\n                case \"folder\": return hasChildren;\n                case \"model\": return true;\n            }\n        },\n    });\n\n    const converter = (treeItem: ITreeItem<FileDisplayerExternalData>, options: {ownerModule?: {isImportedModule: boolean;moduleVersion: string | undefined;relatedModelHistories: IModuleRelatedModelItem[] | undefined}}): ITableData => {\n        const item = treeItem.externalData;\n        if (item.objectType == \"application\") { throw new Error(\"unexpected item type\"); }\n\n        const fullPath = objectUseCase.getFullPath(item, \"self\");\n        let level = fullPath.split(\"/\").length - 1;\n\n        let tableData: ITableData;\n        switch(item.objectType) {\n            case \"folder\":\n                tableData = {\n                    id: item.ID, name: item.name, type: \"folder\", collapsed: true, level,\n                    children: treeItem.children?.map((item) => converter(item, { ownerModule: options.ownerModule })),\n                    path: item.path \n                };\n                tableData.children?.forEach(child => child.parent = tableData);\n                handleParentCheckedStatus(tableData, false);\n                break;\n            case \"model\":\n                if (options.ownerModule) {\n                    tableData = { id: item.ID, name: item.name, type: item.modelType, level };\n                    if (!options.ownerModule.isImportedModule || item.isUnmodifiable) {\n                        const maxVersion = getItemMaxVersion(item);\n                        tableData = {\n                            ...tableData,\n                            checked: maxVersion ? true : item.isUnmodifiable,\n                            disabled: maxVersion ? false : !item.isUnmodifiable,\n                            version: item.isUnmodifiable ? 'latest' : maxVersion,\n                            ownerName: item.owner.name, ownerType: item.owner.objectType,\n                            path: item.path\n                        };\n                    } else {\n                        const importedModulesModel = options.ownerModule.relatedModelHistories?.find(e => e.modelID == item.ID)\n                        tableData = { \n                            ...tableData, \n                            checked: true, \n                            disabled: false, \n                            version: importedModulesModel?.version, \n                            ownerName: item.owner.name, \n                            ownerType: item.owner.objectType, \n                            path: item.path \n                        };\n                    }\n                } else {\n                    const maxVersion = getItemMaxVersion(item);\n                    tableData = {\n                        id: item.ID,\n                        name: item.name,\n                        checked: maxVersion ? true : item.isUnmodifiable,\n                        disabled: maxVersion ? false : !item.isUnmodifiable,\n                        type: item.modelType,\n                        version: item.isUnmodifiable ? 'latest' : maxVersion,\n                        level,\n                        path: item.path \n                    };\n                }\n                break;\n            case \"module\":\n                const isImportedModule = isModuleImported(item);\n                const moduleVersion = item.relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion;\n                const relatedModelHistories = isImportedModule ? importedModuleVersions.value?.get(item.ID)?.find(module => module.version == moduleVersion)?.relatedModelHistories : undefined\n                \n                tableData = {\n                    id: item.ID,\n                    collapsed: true,\n                    name: item.name,\n                    type: \"module\",\n                    imported: isImportedModule,\n                    version: moduleVersion,\n                    children: treeItem.children?.map((item) => converter(item, {ownerModule: {isImportedModule, moduleVersion, relatedModelHistories}})),\n                }\n                tableData.children?.forEach(child => child.parent = tableData);\n                handleParentCheckedStatus(tableData, false);\n                break;\n        }\n        return tableData;\n    };\n    const tableDatas = treeItems.map(item => converter(item, {}));\n\n    const traverser = (tableData: ITableData) => {\n        createAndAppendItem({ newItem: tableData });\n        tableData.children?.forEach(traverser);\n    };\n    \n    tableDatas.forEach(traverser);\n}\n\nfunction getItemMaxVersion(item: IModel): string | undefined {\n    if (!modelHistories.value?.has(item.ID))\n        return undefined;\n\n    const versions = modelHistories.value.get(item.ID);\n    if (!versions)\n        return undefined;\n\n    const findMaxVersion = (versions: Array<string>) => {\n        const versionNumbers = versions.map(v => {\n            const parts: Array<string> = v.split(\".\");\n            return parseInt(parts[0]) * 10 + parseInt(parts[1]) * 1;\n        })\n\n        versionNumbers.sort((a, b) => b - a);\n\n        const maxVersion = versionNumbers[0];\n        return `${Math.floor(maxVersion / 10)}.${maxVersion % 10}`;\n    }\n\n    return findMaxVersion(versions.map(e => e.version!));\n\n}\nfunction checkMaxVersionOfAllItems() {\n    let isThereVersion: boolean = false;\n    items.value.forEach(item => {\n        if (item.type == \"module\") {\n            item.children?.forEach(child => {\n                if (child.version) {\n                    isThereVersion = true;\n                }\n\n            })\n        }\n        else {\n            if (item.version) {\n                isThereVersion = true;\n            }\n        }\n    })\n    return isThereVersion;\n}\nfunction handleModuleCountCheckboxEvent(value: boolean) {\n    items.value.filter(e => !e.disabled).forEach((item) => {\n        item.checked = value;\n        const allItemsCheckable = item.allChildChecked != undefined && item.children && item.children.length > 0 && !item.children.some(c => c.disabled);\n        if (allItemsCheckable) item.allChildChecked = value;\n        if (item.anyChildChecked != undefined) item.anyChildChecked = value;\n        if (item.children) item.children.filter(c => !c.disabled).forEach((child) => (child.checked = value));\n    });\n    \n    validations.value = validate();\n    props.screenType == \"Deploy\" && syncPublishTargets();\n}\n\nfunction handleCollapse(item: ITableData, childIterate?: boolean, collapsed?: boolean) {\n    item.collapsed = collapsed !== undefined ? collapsed : !item.collapsed;\n    if (childIterate) {\n        item.children?.forEach(child => {\n            const childEl = document.getElementById(child.id);\n            childEl!.style.display = item.collapsed ? \"none\" : \"block\";\n            handleCollapse(child, childIterate, item.collapsed);\n        })\n    }\n}\n\nfunction checkAllDependents(item: ITableData, recurseParent: boolean) {\n    if (item.disabled || item.checked) return;\n\n    item.checked = true\n    item.parent && handleParentCheckedStatus(item.parent, recurseParent);\n\n    const deps = dependencyMap.value?.get(item.id)?.dependedTo\n    if (!deps) return;\n\n    deps.forEach(dep => {\n        items.value.forEach(item => {\n            if (item.type == 'module' && !item.allChildChecked) {\n                const willCheckItem = item.children?.find(child => !child.checked && child.id == dep)\n                willCheckItem && checkAllDependents(willCheckItem, recurseParent);\n                handleParentCheckedStatus(item, recurseParent);\n                return;\n            }\n\n            if (!item.checked && item.id == dep) {\n                checkAllDependents(item, recurseParent);\n                item.parent && handleParentCheckedStatus(item.parent, recurseParent);\n            }\n        })\n    });\n}\n\nfunction handleItemCheckEvent(item: ITableData) {\n    if (item.disabled || isModelDepended(item) || item.name == 'App Settings')\n        return;\n\n    if (item.type != \"module\" && item.type != \"folder\") {\n        if (item.checked) {\n            item.checked = false;\n            item.parent && handleParentCheckedStatus(item.parent, true);\n        } else {\n            checkAllDependents(item, true);\n        }\n    } else {\n        if (item.children && item.children.filter(c => !c.disabled).length > 0) {\n            if (item.anyChildChecked) {\n                item.children.filter(c => !c.disabled).forEach(child => child.checked = false);\n                item.checked = false;\n                handleParentCheckedStatus(item, true);\n            } else {\n                item.children.forEach(child => checkAllDependents(child, true));\n                item.checked = true;\n            }\n        }\n        else {\n            item.checked = !item.checked;\n            item.allChildChecked = false;\n        }\n    }\n    getItem(item);\n    validations.value = validate();\n    props.screenType == \"Deploy\" && syncPublishTargets();\n}\n\nfunction handleParentCheckedStatus(item: ITableData, recurseParent: boolean) {\n    item.disabled = item.children && (item.children.length == 0 || !item.children?.some(child => !child.disabled))\n    item.allChildChecked = item.children && item.children.length > 0 && !item.children.some((child) => !child.checked || child.disabled);\n    item.anyChildChecked = item.children?.some((child) => child.checked && !child.disabled);\n    if (recurseParent && item.parent) {\n        handleParentCheckedStatus(item.parent, true);\n    }\n}\n\nfunction syncPublishTargets() {\n    publishTargets.value = []; disabledOptions.value = [];\n\n    const targets = viewModel.user?.selectedOrganization?.actions?.publish?.targets;\n    if (!targets)\n        return;\n\n    const isSelectAnyItem = items.value.find(e => e.anyChildChecked || e.checked);\n    if (!isSelectAnyItem) {\n        publishTargets.value = Object.entries(targets).map(e => cloudTargetMap(e[0])!);\n        const disabledOptionList = Array<IDisabledOptions>();\n        for (let i = 0; i < publishTargets.value.length; i++) {\n            disabledOptionList.push({ index: i, cause: \"You need to include items to publish.\" })\n        }\n        disabledOptions.value = disabledOptionList;\n        return;\n    }\n\n    const checkedPublishTargets = checkAndSetDisabledCauses(targets);\n    const sortedTargets = checkedPublishTargets.sort((e, f) => (!e.cause === !f.cause) ? 0 : e.cause ? 1 : -1);\n\n    const disabledOptionList = Array<IDisabledOptions>();\n    for (let i = 0; i < sortedTargets.length; i++) {\n        const cause = sortedTargets[i].cause;\n        if (cause) disabledOptionList.push({ index: i, cause })\n    }\n    disabledOptions.value = disabledOptionList;\n    publishTargets.value = sortedTargets.map(e => e.optionName);\n\n    selectedTarget.value = !sortedTargets[0].cause ? sortedTargets[0].optionName : \"\";\n}\n\nfunction checkAndSetDisabledCauses(targets: Record<keyof IOrganizationCloud, boolean>) {\n    const list = Array<{ optionName: string, cause?: string }>();\n\n    Object.keys(targets).forEach(e => {\n        const key = e as keyof IOrganizationCloud;\n        const value = targets[key];\n        const optionName = cloudTargetMap(key)!;\n        if (!value)\n            return list.push({ optionName, cause: \"You are not authorized to publish to this target.\" });\n\n\n        switch (key) {\n            case \"azure\":\n                const traverseSelectedItems = (status: boolean, items?: Array<ITableData>) => {\n                    if (!items || items.length == 0) { return status; }\n                    for (const item of items) {\n                        if (item.checked || item.anyChildChecked) {\n                            if (item.type == \"module\") {\n                                status = traverseSelectedItems(status, item.children);\n                            }\n                            if (item.type == \"entityDesigner\" || item.type == \"bpmn\" || item.type == \"process\") {\n                                status = false;\n                                break;\n                            }\n                        }\n\n                    }\n                    return status;\n                }\n\n                const status = traverseSelectedItems(true, items.value);\n                if (!status)\n                    return list.push({ optionName, cause: \"Entity and process models cannot be published to this target.\" });\n                break;\n            case \"plateauGCP\":\n                const modulesHasNotAnEDModel = items.value.filter(e => e.name != \"UI Settings\").find(e => e.type == \"module\" && e.anyChildChecked && e.children?.some(c => c.checked && (c.type == \"bpmn\" || c.type == \"process\")) && !e.children?.some(c => c.type == \"entityDesigner\" && c.checked))\n                if (modulesHasNotAnEDModel)\n                    return list.push({ optionName, cause: `This target not available. Selected module '${modulesHasNotAnEDModel.name}' has not any Data Model.` })\n                break;\n        }\n\n        list.push({ optionName });\n    })\n\n    return list;\n}\n\nfunction updateDependencyMap(newVersion: string, item: ITableData) {\n    const deps = dependencyMap.value?.get(item.id);\n    dependencyMap.value?.set(item.id, {\n        dependedBy: deps?.dependedBy || Array<string>(),\n        dependedTo: modelHistories.value?.get(item.id)?.find(e => e.version == newVersion)?.dependentModels?.map(e => e.modelId) || Array<string>()\n    })\n}\n\nfunction versionDialog(item: ITableData) {\n    const clickedNode = { id: item.id, state: { checked: item.checked }, text: item.name, type: item.type, version: item.version };\n    const hasAnyVersion = modelHistories.value?.has(item.id);\n    const options = {\n        clickedNode, cb: (version: string) => {\n            item.version = version;\n            updateDependencyMap(version, item);\n        }\n    } as any;\n\n    if (hasAnyVersion) {\n        options.versions = modelHistories.value?.get(item.id)\n    }\n    dialog.showDialog(\n        defineAsyncComponent(() => import(\"../application/modelVersionDialog.vue\")),\n        { closable: true, title: \"Change Version\", width: \"1080px\", maxHeight: \"500px\", overflow: \"auto\" }, options\n    );\n}\n\n\nfunction moduleVersionDialog(item: ITableData) {\n    dialog.showDialog(\n        defineAsyncComponent(() => import(\"../application/moduleVersionDialog.vue\")),\n        { closable: true, title: \"Change Version\", width: \"1080px\", maxHeight: \"500px\", overflow: \"auto\" },\n        {\n            module: { ID: item.id }, versions: importedModuleVersions.value?.get(item.id), cb: (moduleVersion: IModuleVersion) => {\n                item.version = moduleVersion.version;\n                item.children?.forEach(child => {\n                    const modulesModel = moduleVersion.relatedModelHistories.find(e => e.modelID == child.id)\n                    child.version = modulesModel?.version\n                    updateDependencyMap(modulesModel?.version!, child);\n                })\n            }\n        }\n    );\n}\n\nfunction close() {\n    emit(\"close\");\n}\nfunction getItem(item: ITableData) {\n    emit(\"getItem\", item);\n}\n\nfunction cloudTargetMap(name: string, pureVal: boolean = false) {\n    const map: Record<keyof IOrganizationCloud, string> = { azure: \"Public Cloud\", plateauGCP: \"Plateau Platform Playground\" };\n    if (pureVal) {\n        return Object.keys(map).find(e => {\n            if (map[e as keyof IOrganizationCloud] === name) {\n                return true;\n            }\n        })\n    } else {\n        let key = Object.keys(map).includes(name);\n        if (!key)\n            return;\n        return map[name as keyof IOrganizationCloud];\n    }\n}\n\nfunction onTargetSelect(value: string) {\n    selectedTarget.value = value\n}\n\nconst isModuleImported = (item: IModule) => {\n    return objectUseCase.isModuleImported(item);\n}\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", null, [\n      _createVNode(CheckboxComp, {\n        class: _normalizeClass(['modules-selected-checkbox', props.screenType == 'Deploy' ? 'deploy' : '']),\n        minus: _unref(mainCheckboxState) == false,\n        check: _unref(mainCheckboxState) == true,\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (handleModuleCountCheckboxEvent(_unref(mainCheckboxState) == undefined)))\n      }, null, 8 /* PROPS */, [\"class\", \"minus\", \"check\"]),\n      _createElementVNode(\"div\", {\n        class: _normalizeClass(['modules-selected-text', props.screenType == 'Deploy' ? 'deploy' : ''])\n      }, [\n        _createElementVNode(\"span\", _hoisted_2, _toDisplayString(_unref(allChildCheckedModulesCount) + _unref(anyChildCheckedModulesCount) + _unref(checkedRootLevelModelsCount)), 1 /* TEXT */),\n        _createTextVNode(\" of \"),\n        _createElementVNode(\"span\", _hoisted_3, _toDisplayString(_unref(totalRootLevelCount)), 1 /* TEXT */),\n        _createTextVNode(\" items selected \")\n      ], 2 /* CLASS */)\n    ]),\n    _createElementVNode(\"div\", {\n      class: _normalizeClass(['modules-datatable', props.screenType == 'Deploy' ? 'deploy' : '']),\n      id: \"module-container-div\",\n      style: _normalizeStyle([props.openedInDialog ? 'max-height: 300px; overflow: auto' : 'flex: 1'])\n    }, null, 6 /* CLASS, STYLE */),\n    (props.screenType == 'Deploy')\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n          _hoisted_5,\n          _createVNode(CustomSelect, {\n            options: publishTargets.value,\n            onInput: onTargetSelect,\n            selectedOption: selectedTarget.value,\n            default: selectedTarget.value,\n            disabledOptions: disabledOptions.value,\n            selectedClass: \"selected-environment\",\n            placeholder: \"Select the publish environment of your application\",\n            class: \"select-environment\"\n          }, null, 8 /* PROPS */, [\"options\", \"selectedOption\", \"default\", \"disabledOptions\"])\n        ]))\n      : _createCommentVNode(\"v-if\", true),\n    _createElementVNode(\"div\", {\n      class: _normalizeClass(['footer', props.screenType == 'Deploy' ? 'deploy' : 'export'])\n    }, [\n      _createElementVNode(\"div\", {\n        class: _normalizeClass(['cancel-button', props.screenType == 'Deploy' ? 'deploy' : '']),\n        onClick: close\n      }, \"Cancel\", 2 /* CLASS */),\n      _createElementVNode(\"div\", {\n        class: _normalizeClass([(_unref(saveButtonDisable) ? ' button-disable' : '')]),\n        onClick: _cache[1] || (_cache[1] = ($event: any) => (!_unref(saveButtonDisable) && props.buttonCb()))\n      }, [\n        _createElementVNode(\"span\", _hoisted_6, _toDisplayString(buttonNameDict[props.screenType]), 1 /* TEXT */),\n        (!_unref(isStartScreenOK))\n          ? (_openBlock(), _createElementBlock(\"span\", _hoisted_7, \"You need to include your start screen.\"))\n          : (props.screenType == 'Deploy' && !selectedTarget.value)\n            ? (_openBlock(), _createElementBlock(\"span\", _hoisted_8, \"You need to select a publish environment.\"))\n            : (!_unref(isThereVersion))\n              ? (_openBlock(), _createElementBlock(\"span\", _hoisted_9, \"There are no items ready to publish. At least one of your items must be ready to publish.\"))\n              : (!_unref(isAllDependenciesOK))\n                ? (_openBlock(), _createElementBlock(\"span\", _hoisted_10, _toDisplayString(dependencyErrorStr.value), 1 /* TEXT */))\n                : _createCommentVNode(\"v-if\", true)\n      ], 2 /* CLASS */)\n    ], 2 /* CLASS */)\n  ]))\n}\n}\n\n})","\n      import API from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./appItemsTable.vue?vue&type=style&index=0&id=2bcaf64a&scoped=true&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./appItemsTable.vue?vue&type=style&index=0&id=2bcaf64a&scoped=true&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./appItemsTable.vue?vue&type=style&index=1&id=2bcaf64a&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./appItemsTable.vue?vue&type=style&index=1&id=2bcaf64a&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","import script from \"./appItemsTable.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./appItemsTable.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./appItemsTable.vue?vue&type=style&index=0&id=2bcaf64a&scoped=true&lang=css\"\nimport \"./appItemsTable.vue?vue&type=style&index=1&id=2bcaf64a&lang=css\"\n\nimport exportComponent from \"/home/runner/work/studio/studio/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2bcaf64a\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createVNode as _createVNode, unref as _unref, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-b7f0cb6e\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = {\n  key: 0,\n  class: \"title\"\n}\nconst _hoisted_2 = {\n  key: 1,\n  class: \"page-desc\"\n}\nconst _hoisted_3 = { class: \"app-version-type\" }\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"Type\", -1 /* HOISTED */))\nconst _hoisted_5 = { style: {\"margin\":\"24px 0\"} }\n\nimport { computed, ref } from \"vue\";\n    import { IApplication } from \"../../../../domain/model/models\";\n    import { IIDEInputDefinitions } from \"../../../../domain/presentation/IIDEInputDefinitions\";\n    import IDEInput from \"../../components/application/IDEInput.vue\";\n    import CustomSelect from \"../customSelect.vue\"\n    import AppItemsTable from \"./appItemsTable.vue\"\n    import { ITableData } from \"../../../../../../common/qCloudTemp/exporter\";\n    import { container } from \"../../../../domain/core/diContainer\";\n    import { IUseCaseExecutor } from \"../../../../domain/useCase/IUseCaseExecutor\";\n    import { IApplicationVersionUseCase, VersionIncType } from \"../../../../domain/useCase/IApplicationVersionUseCase\";\n    import { IReleaseApplicationRequest } from \"../../../../../../common/qCloudTemp/symDtoObjects\";\n\n    interface IAppVersionModel {\n        modelID: string;\n        version: string;\n        modelName: string;\n        path: string;\n        ownerType?: \"module\" | \"application\";\n        ownerName?: string;\n    }\n    interface ICreateAppVersionProp {\n        app?: IApplication;\n        showTitleAndDesc?: boolean;\n        openedInDialog?: boolean;\n    }\n    \nexport default /*#__PURE__*/_defineComponent({\n  __name: 'createAppVersion',\n  props: {\n    app: null,\n    showTitleAndDesc: { type: Boolean },\n    openedInDialog: { type: Boolean }\n  },\n  emits: [\"close\", \"hideLeftNav\", \"showLeftNav\"],\n  setup(__props: any, { emit }) {\n\nconst props = __props as {\n        app?: IApplication;\n        showTitleAndDesc?: boolean;\n        openedInDialog?: boolean;\n    };\n\n    \n    const executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\n    const applicationVersionUseCase = container.resolve<IApplicationVersionUseCase>(IApplicationVersionUseCase);\n\n    const releaseTypeOptions = ref([`Major Version (v${getLastRelasedVersion(\"Major\")})`, `Minor Version (v${getLastRelasedVersion(\"Minor\")})`, `Fix Version (v${getLastRelasedVersion(\"Fix\")})`]);\n    const releaseType = ref<VersionIncType>();\n    const isDescriptionValid = ref<boolean>(true);\n    const description = ref(\"\");\n    const appModels = ref<Array<IAppVersionModel>>([]);\n    \n    const buttonDisableCond = computed(() => !releaseType.value)\n    const title = ref(\"New App Version\");\n    const pageDesc = ref(\"You can create a new version of your application.\");\n    emit(\"hideLeftNav\");\n    const validations = ref<Record<\"description\", IIDEInputDefinitions[\"validations\"]>>({\n        description: { minAndMaxLength: { min: 3, max: 100 }, availableCharacters: false, nonSpaceCharacter: false },\n    });\n    function close() {\n        emit('close');\n        emit(\"showLeftNav\");\n    }\n    function setReleaseType(type: VersionIncType) {\n        releaseType.value = (type.split(\" \")[0] as VersionIncType);\n    }\n    function descriptionValidationStatus(isValid: boolean) {\n        isDescriptionValid.value = isValid\n\n    }\n    function setDescValue(desc: string) {\n        description.value = desc\n    }\n    function getItems(item: ITableData) {\n        const model: IAppVersionModel = {\n            modelID: item.id,\n            version: item.version ?? \"latest\",\n            modelName: item.name,\n            path: item.path ?? \"/\",\n            ownerType: item.ownerType ?? \"application\",\n            ownerName: item.ownerName ?? \"\",\n        }\n        item.checked ? appModels.value?.push(model) : appModels.value = appModels.value?.filter(model => model.modelID != item.id);\n    }\n    function createNewAppVersion() {\n        let request: IReleaseApplicationRequest = {    \n            appID: props.app!.ID,\n            appVersionIncType: releaseType.value!,\n            models: appModels.value,\n            shortComment: description.value,\n        }\n        executor.execute(async () => {\n            await applicationVersionUseCase.releaseApplication(request);\n            close();\n        }, {loading: true})\n    }\n    function getLastRelasedVersion(incType: string) {\n        const [major, minor, fix] = props.app?.lastReleasedVersion ? props.app?.lastReleasedVersion.split(\".\").map(Number) : [0,0,0]\n        switch (incType) {\n            case 'Major':\n                return `${major + 1}.0.0`;\n            case 'Minor':\n                return `${major}.${minor + 1}.0`;\n            case 'Fix':\n                return `${major}.${minor}.${fix + 1}`;\n            default: return;\n        }\n    }\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: \"container\",\n    style: _normalizeStyle({padding: __props.openedInDialog ? '20px' : '0'})\n  }, [\n    (__props.showTitleAndDesc)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, _toDisplayString(title.value), 1 /* TEXT */))\n      : _createCommentVNode(\"v-if\", true),\n    (__props.showTitleAndDesc)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString(pageDesc.value), 1 /* TEXT */))\n      : _createCommentVNode(\"v-if\", true),\n    _createElementVNode(\"div\", _hoisted_3, [\n      _hoisted_4,\n      _createVNode(CustomSelect, {\n        class: \"select-app-version-type\",\n        options: releaseTypeOptions.value,\n        placeholder: 'Select Release Type',\n        selectedClass: 'selected-type',\n        onInput: setReleaseType\n      }, null, 8 /* PROPS */, [\"options\"])\n    ]),\n    _createElementVNode(\"div\", _hoisted_5, [\n      _createVNode(IDEInput, {\n        isRequired: false,\n        elementId: \"descriptionInput\",\n        onValidateStatus: descriptionValidationStatus,\n        placeholder: \"\",\n        type: 'textarea',\n        value: description.value,\n        \"info-text\": \"Description\",\n        validations: validations.value.description,\n        onGetValue: setDescValue\n      }, null, 8 /* PROPS */, [\"value\", \"validations\"])\n    ]),\n    _createVNode(AppItemsTable, {\n      screenType: 'Create',\n      buttonCb: createNewAppVersion,\n      onGetItem: getItems,\n      platformSelection: {web: true, mobile: true},\n      onClose: close,\n      buttonDisableCond: _unref(buttonDisableCond),\n      openedInDialog: __props.openedInDialog\n    }, null, 8 /* PROPS */, [\"buttonDisableCond\", \"openedInDialog\"])\n  ], 4 /* STYLE */))\n}\n}\n\n})","\n      import API from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./createAppVersion.vue?vue&type=style&index=0&id=b7f0cb6e&scoped=true&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./createAppVersion.vue?vue&type=style&index=0&id=b7f0cb6e&scoped=true&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./createAppVersion.vue?vue&type=style&index=1&id=b7f0cb6e&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./createAppVersion.vue?vue&type=style&index=1&id=b7f0cb6e&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","import script from \"./createAppVersion.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./createAppVersion.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./createAppVersion.vue?vue&type=style&index=0&id=b7f0cb6e&scoped=true&lang=css\"\nimport \"./createAppVersion.vue?vue&type=style&index=1&id=b7f0cb6e&lang=css\"\n\nimport exportComponent from \"/home/runner/work/studio/studio/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-b7f0cb6e\"]])\n\nexport default __exports__"],"names":["___CSS_LOADER_EXPORT___","push","module","id","_hoisted_1","style","_hoisted_2","class","_hoisted_3","_hoisted_4","key","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","__name","props","screenType","platformSelection","buttonCb","type","Function","buttonDisableCond","Boolean","openedInDialog","emits","setup","__props","emit","viewModel","IViewModel","viewModelManager","IViewModelManager","dialog","IDialog","executor","IUseCaseExecutor","fileDisplayerUseCase","IFileDisplayerUseCase","objectUseCase","IObjectUseCase","items","validations","selectedTarget","disabledOptions","publishTargets","modelHistories","importedModuleVersions","startScreen","dependencyMap","dependencyErrorStr","buttonNameDict","apps","find","app","ID","studio","appId","async","execute","Promise","all","executeUseCase","IListMultiModelVersions","then","res","value","IListMultiModuleVersions","map","Map","depMap","flatMapItems","item","objectType","version","owner","isModuleImported","moduleVersions","get","moduleVersion","relatedApplications","applicationID","importedVersion","importedModuleModel","filter","e","flatMap","relatedModelHistories","modelID","maxVersion","getItemMaxVersion","set","dependentModels","modelId","Array","historyItem","forEach","dependedTo","dependedBy","dependencies","depModelId","some","depId","initDependencies","appSettings","name","settingsData","checked","disabled","modelType","createAndAppendItem","newItem","uiSettingsID","CryptoHelper","uiSettingsModels","usageType","uiSettings","collapsed","imported","children","settings","childData","parent","undefined","level","handleParentCheckedStatus","uiAssetID","appAssetList","uiAssetList","anyChildChecked","allChildChecked","asset","childAsset","treeItems","cloneFileExplorerTreeView","displayFilterer","hasChildren","converter","treeItem","options","externalData","Error","tableData","getFullPath","split","length","ownerModule","path","child","isImportedModule","isUnmodifiable","ownerName","ownerType","importedModulesModel","tableDatas","traverser","handleItems","syncPublishTargets","validate","getItem","loading","allChildCheckedModulesCount","anyChildCheckedModulesCount","checkedRootLevelModelsCount","totalRootLevelCount","saveButtonDisable","web","validateStartScreen","validateDependencies","mainCheckboxState","isThereVersion","checkMaxVersionOfAllItems","isAllDependenciesOK","isStartScreenOK","result","modules","appLayerItems","additionals","isRootPage","f","findIndex","checkMap","mustBeCheckedMap","deps","dependedId","has","vals","firstItemID","keys","firstItemDeps","firstItemDepStr","findItem","join","size","newChild","createApp","handleItemCheckEvent","versionDialog","handleCollapse","moduleVersionDialog","mountEl","document","createElement","mount","parentEl","getElementById","appendChild","createDialogComp","versions","versionNumbers","v","parts","parseInt","sort","a","b","Math","floor","findMaxVersion","childIterate","display","checkAllDependents","recurseParent","dep","willCheckItem","isModelDepended","c","targets","user","selectedOrganization","actions","publish","Object","entries","cloudTargetMap","disabledOptionList","i","index","cause","checkedPublishTargets","list","optionName","traverseSelectedItems","status","modulesHasNotAnEDModel","checkAndSetDisabledCauses","sortedTargets","updateDependencyMap","newVersion","clickedNode","state","text","cb","showDialog","closable","title","width","maxHeight","overflow","modulesModel","close","pureVal","azure","plateauGCP","includes","onTargetSelect","_ctx","_cache","_","minus","check","onClick","$event","onInput","selectedOption","default","selectedClass","placeholder","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","n","showTitleAndDesc","applicationVersionUseCase","IApplicationVersionUseCase","releaseTypeOptions","getLastRelasedVersion","releaseType","isDescriptionValid","description","appModels","pageDesc","minAndMaxLength","min","max","availableCharacters","nonSpaceCharacter","setReleaseType","descriptionValidationStatus","isValid","setDescValue","desc","getItems","model","modelName","createNewAppVersion","request","appID","appVersionIncType","models","shortComment","releaseApplication","incType","major","minor","fix","lastReleasedVersion","Number","padding","IDEInput","isRequired","elementId","onValidateStatus","onGetValue","onGetItem","mobile","onClose"],"sourceRoot":""}