{"version":3,"file":"7498.js","mappings":"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","sources":["webpack://qcloud_shell/./src/presentation/vue3/components/customSelect.vue?7c45","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/publishDialog.vue?9d56","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/publishDialog.vue?63d7","webpack://qcloud_shell/../node_modules/@stechquick/algae/src/helpers/cryptoHelper.ts","webpack://qcloud_shell/../node_modules/@stechquick/algae/src/helpers/plateau/plateauHelper.ts","webpack://qcloud_shell/../common/qCloudTemp/modelContants.ts","webpack://qcloud_shell/./src/domain/infrastructure/IQCloudApi.ts","webpack://qcloud_shell/./src/domain/useCase/ICreateExportJob.ts","webpack://qcloud_shell/./src/domain/useCase/IDeployJobs.ts","webpack://qcloud_shell/./src/domain/useCase/IJobUtils.ts","webpack://qcloud_shell/./src/domain/useCase/IListMultiModelVersions.ts","webpack://qcloud_shell/./src/domain/useCase/IPackJobs.ts","webpack://qcloud_shell/./src/presentation/vue3/components/customSelect.vue","webpack://qcloud_shell/./src/presentation/vue3/components/customSelect.vue?c433","webpack://qcloud_shell/./src/presentation/vue3/components/customSelect.vue?043d","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/publishDialog.vue?3bef","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/publishDialog.vue?0850","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/publishDialog.vue?5e50","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/publishDialog.vue"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `\n  /*You should put other CSS properties with same class names in the parent component's style tag that is not scoped.*/\n*[data-v-d120e788] {\n    font-family: \"Roboto\"\n}\n.custom-select[data-v-d120e788] {\n    position: relative;\n    width: 100%;\n    text-align: left;\n    outline: none;\n}\n.custom-select .selected[data-v-d120e788] {\n\n    cursor: pointer;\n    user-select: none;\n}\n.custom-select .selected i[data-v-d120e788] {\n    position: absolute;\n    right: 10px;\n    float: right;\n}\n.custom-select .items[data-v-d120e788] {\n    position: absolute;\n    left: 0;\n    right: 0;\n    z-index: 1;\n}\n.custom-select .items .option[data-v-d120e788] {\n    cursor: pointer;\n    user-select: none;\n}\n.custom-select .items .option.disabled div[data-v-d120e788] {\n    cursor: default;\n    user-select: none;\n    opacity: 0.4;\n}\n.custom-select .items .option.disabled[data-v-d120e788]:active {\n    pointer-events: none;\n}\n.selectHide[data-v-d120e788] {\n    display: none;\n}\n.button-div[data-v-d120e788] {\n    justify-content: center;\n    display: grid;\n    padding: 13px 0 19px;\n    margin-top: 10px\n}\n.button[data-v-d120e788] {\n    cursor: pointer;\n}\n.custom-placeholder[data-v-d120e788]:empty:before {\n    content:attr(data-placeholder);\n    color:#BCBCBC\n}\n.custom-placeholder[data-v-d120e788]:focus-visible {\n    outline: none;\n}\n.button-tooltip[data-v-d120e788] {\n    visibility: hidden;\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n    padding: 8px;\n    top: 39px;\n    left: 65px;\n    height: 30px;\n    position: absolute;\n    background: #757575;\n    color: #FFFFFF;\n    font-size: 12px;\n    line-height: 14px;\n    text-align: center;\n    border-radius: 4px;\n    letter-spacing: 0.2px;\n    opacity: 0;\n    z-index: 1;\n}\n.custom-select .items .option:hover .button-tooltip[data-v-d120e788] {\n    visibility: visible;\n    transition: opacity 0.3s ease-out 0.5s;\n    opacity: 1;\n}\n.cleanIcon[data-v-d120e788] {\n    display: none;\n}\n.selected:hover .cleanIcon[data-v-d120e788]{\n    display: inline-block;\n}\n  `, \"\",{\"version\":3,\"sources\":[\"webpack://./src/presentation/vue3/components/customSelect.vue\"],\"names\":[],\"mappings\":\";EAmIE,oHAAoH;AACpH;IACE;AACF;AACA;IACE,kBAAkB;IAClB,WAAW;IACX,gBAAgB;IAChB,aAAa;AACf;AAEA;;IAEE,eAAe;IACf,iBAAiB;AACnB;AAEA;IACE,kBAAkB;IAClB,WAAW;IACX,YAAY;AACd;AAEA;IACE,kBAAkB;IAClB,OAAO;IACP,QAAQ;IACR,UAAU;AACZ;AAEA;IACE,eAAe;IACf,iBAAiB;AACnB;AAEA;IACE,eAAe;IACf,iBAAiB;IACjB,YAAY;AACd;AACA;IACE,oBAAoB;AACtB;AAEA;IACE,aAAa;AACf;AACA;IACE,uBAAuB;IACvB,aAAa;IACb,oBAAoB;IACpB;AACF;AACA;IACE,eAAe;AACjB;AACA;IACE,8BAA8B;IAC9B;AACF;AACA;IACE,aAAa;AACf;AACA;IACE,kBAAkB;IAClB,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,YAAY;IACZ,SAAS;IACT,UAAU;IACV,YAAY;IACZ,kBAAkB;IAClB,mBAAmB;IACnB,cAAc;IACd,eAAe;IACf,iBAAiB;IACjB,kBAAkB;IAClB,kBAAkB;IAClB,qBAAqB;IACrB,UAAU;IACV,UAAU;AACZ;AACA;IACE,mBAAmB;IACnB,sCAAsC;IACtC,UAAU;AACZ;AACA;IACE,aAAa;AACf;AACA;IACE,qBAAqB;AACvB\",\"sourcesContent\":[\"<template>\\n  <div class=\\\"custom-select\\\" :tabindex=\\\"tabindex\\\" @blur=\\\"open = false\\\">\\n    <div :class=\\\"open ? 'open selected ' + selectedClass : 'selected ' + selectedClass\\\" @click=\\\"open = !open\\\">\\n      <div v-if = \\\"selected\\\">{{ typeof selected === 'object' ? selected.name : selected }}\\n        <i class=\\\"mdi mdi-chevron-down\\\"></i>\\n        <i v-if=\\\"iconInSelect\\\" class=\\\"mdi mdi-close cleanIcon\\\" style=\\\"right: 30px\\\" @click=\\\"cleanSelected($event)\\\"></i>\\n      </div>\\n      <div v-else>\\n        <span contenteditable=\\\"true\\\" :data-placeholder=\\\"placeholder\\\" class=\\\"custom-placeholder\\\"></span>\\n        <i class=\\\"mdi mdi-chevron-down\\\"></i>\\n      </div>\\n    </div>\\n    <div class=\\\"items\\\" :class=\\\"{ selectHide: !open }\\\" :style=\\\"{padding: extraButton ? '10px 0 0' : '10px 0'}\\\">\\n      <div v-for=\\\"(option, i) of options\\\" :key=\\\"i\\\" @click=\\\"handleClick(option)\\\" :class=\\\"['option' , (props.disabledOptions && getDisabledOptionsText(i)) ? 'disabled' : '' ]\\\">\\n        <span v-if=\\\"props.disabledOptions && getDisabledOptionsText(i)\\\" class=\\\"button-tooltip\\\" :style=\\\"{top: (i*32) + 85 + 'px'}\\\">{{getDisabledOptionsText(i)}}</span>\\n        <div>{{typeof option === 'object' ? option.name : option }}</div>\\n      </div>\\n      <div v-if=\\\"extraButton\\\" class=\\\"button-div\\\" :style=\\\"{borderTop: extraButton ? '1px solid #EEEEEE' :  'none'}\\\" >\\n        <div v-for=\\\"(button, index) in buttons\\\" :key=\\\"index\\\">\\n            <div :id=\\\"button.buttonID\\\" :class=\\\"button.buttonClass + ' button'\\\" @click=\\\"open=false\\\">{{ button.buttonText }}</div>\\n        </div>\\n      </div>\\n    </div>  \\n  </div>\\n</template>\\n\\n<script setup>\\nimport { ref, watchEffect } from 'vue'\\nconst emit = defineEmits([\\\"input\\\"]);\\nconst props = defineProps({\\n  options: {\\n    type: Array,\\n    required: true,\\n  },\\n  disabledOptions: {\\n    type: Array,\\n    required: false\\n  },\\n  default: {\\n    type: String,\\n    required: false,\\n    default: '',\\n  },\\n  selectedOption: {\\n    type: String,\\n    required: false\\n  },\\n  tabindex: {\\n    type: Number,\\n    required: false,\\n    default: 0,\\n  },\\n  placeholder: {\\n    type: String,\\n    required: false,\\n    default: \\\"\\\",\\n  },\\n  selectedClass: {\\n    type: String,\\n    required: false,\\n    default: \\\"\\\",\\n  },\\n  extraButton: {\\n    type: Boolean,\\n    required: false,\\n    default: false,\\n  },\\n  iconInSelect: {\\n    type: Boolean,\\n    required: false,\\n    default: false,\\n    // validator: () => {\\n    //   return (icon) => typeof icon.iconName === \\\"string\\\" && typeof icon.iconClass === \\\"string\\\" && typeof icon.iconFunc === \\\"function\\\"\\n    // }\\n  },\\n  buttons: {\\n    type: Array,\\n    required: false,\\n    default: () => [],\\n    validator: (value) => {\\n      return value.every(\\n        (button) =>\\n          typeof button === \\\"object\\\" &&\\n          typeof button.buttonText === \\\"string\\\" &&\\n          typeof button.buttonClass === \\\"string\\\" &&\\n          typeof button.buttonID === \\\"string\\\"\\n      );\\n    },\\n  },\\n})\\n\\nconst open = ref(false);\\nconst selected = ref(props.default ? props.default : null);\\n\\nwatchEffect(() => {\\n  if(props && props.selectedOption){\\n    selected.value = props.selectedOption;\\n    open.value = false;\\n  }\\n});\\n\\nconst handleClick = (option) => {\\n    if(typeof option === 'object'){\\n      emit('input', option.id);\\n      selected.value = option;\\n      open.value = false;\\n      emit('input', selected.value.id);\\n    }\\n    else if(typeof option === 'string') {\\n      emit('input', option);\\n      selected.value = option;\\n      open.value = false;\\n      emit('input', selected.value);\\n    }\\n}\\n\\nconst getDisabledOptionsText = (index) => {\\n  const opt = props.disabledOptions.find(e => e.index == index);\\n  if(opt)\\n    return opt.cause;\\n  return undefined;\\n}\\nconst cleanSelected = (event) => {\\n  event.stopPropagation();\\n  selected.value = null;\\n  emit('input', selected.value);\\n}\\n</script>\\n\\n  \\n  <style scoped>\\n  /*You should put other CSS properties with same class names in the parent component's style tag that is not scoped.*/\\n  * {\\n    font-family: \\\"Roboto\\\"\\n  }\\n  .custom-select {\\n    position: relative;\\n    width: 100%;\\n    text-align: left;\\n    outline: none;\\n  }\\n  \\n  .custom-select .selected {\\n\\n    cursor: pointer;\\n    user-select: none;\\n  }\\n  \\n  .custom-select .selected i {\\n    position: absolute;\\n    right: 10px;\\n    float: right;\\n  }\\n  \\n  .custom-select .items {\\n    position: absolute;\\n    left: 0;\\n    right: 0;\\n    z-index: 1;\\n  }\\n  \\n  .custom-select .items .option {\\n    cursor: pointer;\\n    user-select: none;\\n  }  \\n  \\n  .custom-select .items .option.disabled div {\\n    cursor: default;\\n    user-select: none;\\n    opacity: 0.4;\\n  } \\n  .custom-select .items .option.disabled:active {\\n    pointer-events: none;\\n  }\\n  \\n  .selectHide {\\n    display: none;\\n  }\\n  .button-div {\\n    justify-content: center;\\n    display: grid;\\n    padding: 13px 0 19px;\\n    margin-top: 10px\\n  }\\n  .button {\\n    cursor: pointer;\\n  }\\n  .custom-placeholder:empty:before {\\n    content:attr(data-placeholder);\\n    color:#BCBCBC\\n  }\\n  .custom-placeholder:focus-visible {\\n    outline: none;\\n  }\\n  .button-tooltip {\\n    visibility: hidden;\\n    display: flex;\\n    flex-direction: row;\\n    align-items: flex-start;\\n    padding: 8px;\\n    top: 39px;\\n    left: 65px;\\n    height: 30px;\\n    position: absolute;\\n    background: #757575;\\n    color: #FFFFFF;\\n    font-size: 12px;\\n    line-height: 14px;\\n    text-align: center;\\n    border-radius: 4px;\\n    letter-spacing: 0.2px;\\n    opacity: 0;\\n    z-index: 1;\\n  }\\n  .custom-select .items .option:hover .button-tooltip {\\n    visibility: visible;\\n    transition: opacity 0.3s ease-out 0.5s;\\n    opacity: 1;\\n  }\\n  .cleanIcon {\\n    display: none;\\n  }\\n  .selected:hover .cleanIcon{\\n    display: inline-block;\\n  }\\n  </style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `\n.container[data-v-03b14658] {\n    padding: 32px 20px 20px;\n}\n.settings-container[data-v-03b14658] {\n    position: relative;\n    top: 0px;\n    left: 0px;\n}\n.custom-text[data-v-03b14658] {\n    /* position: absolute; */\n    font-family: 'Roboto';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 15px;\n    line-height: 18px;\n    /* left: 24px; */\n    color: #212121;\n}\n\n/* .custom-text.title{\n    top: 92px;\n}\n\n.custom-text.environment{\n    top: 174px;\n} */\n.radio-button[data-v-03b14658] {\n    position: absolute;\n    top: 60px;\n    left: 20px;\n    cursor: pointer;\n}\n.radio-text[data-v-03b14658] {\n    position: absolute;\n    top: 59px;\n    font: normal normal normal 14px/19px Roboto;\n    color: #212121;\n    user-select: none;\n    cursor: pointer;\n}\n.existing-app-url[data-v-03b14658] {\n    position: absolute;\n    width: 760px;\n    height: 40px;\n    top: 114px;\n    left: 20px;\n    background: #ffffff 0% 0% no-repeat padding-box;\n    border: 1px solid #bcbcbc;\n    border-radius: 4px;\n    font: normal normal normal 14px/19px Roboto;\n    letter-spacing: 0px;\n    padding: 10px 0px 10px 10px;\n}\n.url-error[data-v-03b14658] {\n    border: 1px solid red;\n}\n.url-disable[data-v-03b14658] {\n    opacity: 0.5;\n}\n.existing-app-url[data-v-03b14658]::placeholder {\n    color: #bcbcbc;\n    user-select: none;\n}\n.modules-selected-checkbox[data-v-03b14658] {\n    cursor: pointer;\n}\n.modules-selected-text[data-v-03b14658] {\n    font: normal normal normal 14px/19px Roboto;\n    color: #757575;\n    margin: 0 0 13px 30px;\n}\n\n/* .modules-selected-text.deploy {\n    top: 257px;\n} */\n.text-number[data-v-03b14658] {\n    font: normal normal bold 14px/19px Roboto;\n    color: #212121;\n}\n.modules-datatable[data-v-03b14658] {\n    width: 760px;\n    height: 288px;\n    border: 1px solid #bcbcbc;\n    overflow-x: hidden;\n    overflow-y: auto;\n    margin-bottom: 20px;\n}\n\n/* .modules-datatable.deploy {\n    top: 286px;\n} */\n.modules-datatable[data-v-03b14658]::-webkit-scrollbar {\n    width: 4px;\n}\n.modules-datatable[data-v-03b14658]::-webkit-scrollbar-thumb {\n    background: #bcbcbc 0% 0% no-repeat padding-box;\n    border-radius: 10px;\n}\n.modules-datatable[data-v-03b14658]::-webkit-scrollbar-thumb:hover {\n    background: #555;\n}\n.row-container[data-v-03b14658] {\n    width: 100%;\n    height: 36px;\n    position: relative;\n    background: #ffffff 0% 0% no-repeat padding-box;\n    border: 1px solid #e0e0e0;\n}\n.chevron[data-v-03b14658] {\n    position: absolute;\n    left: 4px;\n    color: #757575;\n    font-size: 24px;\n}\n.chevron.disabled[data-v-03b14658] {\n    pointer-events: none;\n    color: #D5D5D5;\n}\n.module-checkbox[data-v-03b14658] {\n    position: absolute;\n    top: 10px;\n    left: 43px;\n    cursor: pointer;\n}\n.module-name[data-v-03b14658] {\n    position: absolute;\n    top: 9px;\n    left: 69px;\n    font: normal normal normal 14px/19px Roboto;\n    color: #212121;\n}\n.module-name.disabled[data-v-03b14658] {\n    color: #D5D5D5;\n}\n.model-checkbox[data-v-03b14658] {\n    position: absolute;\n    top: 10px;\n    left: 59px;\n    cursor: pointer;\n}\n.model-icon[data-v-03b14658] {\n    position: absolute;\n    width: 16px;\n    height: 16px;\n    top: 6px;\n    left: 85px;\n}\n.app-tier-model-icon[data-v-03b14658] {\n    position: absolute;\n    width: 16px;\n    height: 16px;\n    top: 6px;\n    left: 69px;\n}\n.app-tier-model-name[data-v-03b14658] {\n    position: absolute;\n    top: 10px;\n    left: 87px;\n    font: normal normal normal 14px/19px Roboto;\n    color: #212121;\n}\n.app-tier-model-name.disabled[data-v-03b14658] {\n    color: #D5D5D5;\n}\n.model-name[data-v-03b14658] {\n    position: absolute;\n    top: 9px;\n    left: 103px;\n    font: normal normal normal 14px/19px Roboto;\n    color: #212121;\n}\n.model-name.disabled[data-v-03b14658] {\n    color: #D5D5D5;\n}\n.version-text[data-v-03b14658] {\n    margin: 10px 7px 10px auto;\n    display: table;\n    font: normal normal normal 12px/16px Roboto;\n    color: #757575;\n    cursor: pointer;\n    user-select: none;\n}\n.version-text.disabled[data-v-03b14658] {\n    pointer-events: none;\n    cursor: pointer;\n}\n.version-icon[data-v-03b14658] {\n    font: normal normal normal 16px/19px Material Design Icons;\n    color: #D5D5D5;\n}\n.version-icon.disabled[data-v-03b14658] {\n    font: normal normal normal 16px/19px Material Design Icons;\n    color: #EEEEEE;\n    pointer-events: none;\n    cursor: pointer;\n}\n.footer[data-v-03b14658] {\n    position: relative;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: end;\n}\n.footer.deploy[data-v-03b14658] {\n    position: relative;\n    width: 100%;\n}\n.footer.export[data-v-03b14658] {\n    margin-top: 102px;\n}\n.cancel-button[data-v-03b14658] {\n    border-radius: 4px;\n    user-select: none;\n    font-style: normal;\n    font-weight: 500;\n    font-family: \"ROBOTO\";\n    font-size: 15px;\n    color: #757575;\n    padding: 10px 16px;\n    cursor: pointer;\n}\n.save-button[data-v-03b14658] {\n    background: #151233 0% 0% no-repeat padding-box;\n    border-radius: 4px;\n    user-select: none;\n    font-weight: 500;\n    font-size: 15px;\n    color: #ffffff;\n    padding: 10px 16px;\n    cursor: pointer;\n}\n.mobile-publish-text[data-v-03b14658],\n.web-publish-text[data-v-03b14658] {\n    padding: 5px 12px;\n    margin-bottom: 52px;\n    width: 100%;\n    color: #757575;\n    font-size: 14px;\n    background: #F5F5FA;\n    border-radius: 4px;\n    display: flex;\n    align-items: center;\n}\n.mobile-publish-text i[data-v-03b14658],\n.web-publish-text i[data-v-03b14658] {\n    font-size: 24px;\n    color: #151233;\n    margin-right: 4px;\n}\n.save-button.deploy[data-v-03b14658] {\n    padding: 10px 16px;\n}\n.button-disable .save-button[data-v-03b14658] {\n    color: #757575;\n    cursor: default;\n}\n.button-disable .save-button:hover+.button-tooltip[data-v-03b14658],\n.start-screen:hover .button-tooltip[data-v-03b14658],\n.row-container:hover .button-tooltip[data-v-03b14658],\n.publish-info:hover .button-tooltip[data-v-03b14658] {\n    visibility: visible;\n    transition: opacity 0.3s ease-out 1s;\n    opacity: 1;\n}\n.button-tooltip[data-v-03b14658] {\n    visibility: hidden;\n    position: absolute;\n    background: #757575;\n    color: #FFFFFF;\n    font-size: 11px;\n    font-family: 'Roboto';\n    text-align: center;\n    border-radius: 4px;\n    letter-spacing: 0.2px;\n    padding: 6px 8px 6px 8px;\n    top: 56px;\n    left: 63px;\n    opacity: 0;\n}\n.publish-info[data-v-03b14658] {\n    color: #757575;\n    font-size: 20px;\n    margin-left: 10px;\n}\n.qjson-color[data-v-03b14658] {\n    color: #449dd1;\n}\n.yaml-color[data-v-03b14658] {\n    color: #449dd1;\n}\n.namedcomp-color[data-v-03b14658] {\n    color: #212121;\n}\n.js-color[data-v-03b14658] {\n    color: #449dd1;\n}\n.css-color[data-v-03b14658] {\n    color: #151233;\n}\n.process-color[data-v-03b14658] {\n    color: #007c77;\n}\n.bpmn-color[data-v-03b14658] {\n    color: #007c77;\n}\n.entity-designer-color[data-v-03b14658] {\n    color: #e9724c;\n}\n.select-environment[data-v-03b14658] {\n    width: 100%;\n    font-size: 15px;\n    height: 40px;\n    line-height: 40px;\n    margin-top: 4px\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/presentation/vue3/components/dialogs/publish/publishDialog.vue\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"<template>\\n    <div class=\\\"container\\\">\\n        <div>\\n            <CheckboxComp :class=\\\"['modules-selected-checkbox', props.screenType == 'Deploy' ? 'deploy' : '']\\\"\\n                :minus=\\\"mainCheckboxState == false\\\" :check=\\\"mainCheckboxState == true\\\"\\n                @click=\\\"handleModuleCountCheckboxEvent(mainCheckboxState == undefined)\\\" />\\n            <div :class=\\\"['modules-selected-text', props.screenType == 'Deploy' ? 'deploy' : '']\\\">\\n                <span class=\\\"text-number\\\">{{  allChildCheckedModulesCount + anyChildCheckedModulesCount + checkedRootLevelModelsCount }}</span>\\n                of <span class=\\\"text-number\\\">{{ totalRootLevelCount }}</span> items selected\\n            </div>\\n        </div>\\n\\n        <div :class=\\\"['modules-datatable', props.screenType == 'Deploy' ? 'deploy' : '']\\\">\\n            <div v-for=\\\"item in items\\\">\\n                <div v-if=\\\"item?.type == 'module'\\\">\\n                    <div class=\\\"row-container\\\">\\n                        <i :class=\\\"'mdi mdi-menu' + (item.collapsed ? '-right' : '-down') + ' chevron' + (!item.children || item.children.length == 0 ? ' disabled': '')\\\"\\n                            @click=\\\"handleCollapse(item)\\\" />\\n                        <CheckboxComp class=\\\"module-checkbox\\\" :check=\\\"item.allChildChecked\\\"\\n                            :minus=\\\"!item.allChildChecked && item.anyChildChecked\\\" :disabled=\\\"item.disabled\\\"\\n                            @click=\\\"handleItemCheckEvent(item)\\\" />\\n                        <span :class=\\\"['module-name', item.disabled ? ' disabled': '']\\\">{{ item.name }}</span>\\n                    </div>\\n                    <div class=\\\"row-container\\\" v-show=\\\"!item.collapsed\\\" v-for=\\\"child in item?.children\\\">\\n                        <CheckboxComp class=\\\"model-checkbox\\\" :check=\\\"child.checked\\\" :disabled=\\\"child.disabled\\\"\\n                            @click=\\\"handleItemCheckEvent(child)\\\" />\\n                        <i v-if=\\\"child.type != 'module'\\\" :class=\\\"'model-icon ' + ModelContants.getModelVisualInfo(child.type, undefined).icon\\\" \\n                            :style=\\\"{ color: ModelContants.getModelVisualInfo(child.type, undefined).color }\\\" />\\n                        \\n                        <span :class=\\\"['model-name', child.disabled ? ' disabled' : '']\\\">{{ child.name }}</span>\\n                        <div v-if=\\\"!child.usageType || child.usageType == 'appSettings'\\\" :class=\\\"['version-text', child.disabled ? 'disabled' : '']\\\" @click=\\\"versionDialog(child)\\\">\\n                            {{ child.version ? child.version : 'No version' }} <i v-if=\\\"!child.usageType || child.usageType == 'appSettings'\\\" :class=\\\"['mdi mdi-pencil-outline version-icon', child.disabled ? 'disabled' : '']\\\"></i>\\n                        </div>\\n                        <span v-if=\\\"child.disabled && !child.version\\\" class=\\\"button-tooltip\\\" \\n                            style=\\\"z-index: 1; width: 300px;\\\">No version available for publishing. <b>Stop Working</b> on this item and choose the <b>Ready to Publish</b> option.\\n                        </span>\\n                    </div>\\n                </div>\\n                <div v-else>\\n                    <div class=\\\"row-container\\\">\\n                        <CheckboxComp class=\\\"module-checkbox\\\" :check=\\\"item?.checked\\\" :disabled=\\\"item.disabled\\\"\\n                            @click=\\\"handleItemCheckEvent(item)\\\" />\\n                        <i v-if=\\\"item?.type == 'qjson'\\\" class=\\\"mdi mdi-palette qjson-color app-tier-model-icon\\\" />\\n                        <i v-else-if=\\\"item?.type == 'yaml'\\\" class=\\\"mdi mdi-cog-outline yaml-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'js'\\\"\\n                            class=\\\"mdi mdi-cog-outline js-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'css'\\\"\\n                            class=\\\"mdi mdi-music-accidental-sharp css-color app-tier-model-icon\\\" />\\n                        <i v-else-if=\\\"item?.type == 'process'\\\" class=\\\"mdi mdi-auto-fix process-color app-tier-model-icon\\\" />\\n                        <i v-else-if=\\\"item?.type == 'bpmn'\\\" class=\\\"mdi mdi-vector-polyline bpmn-color app-tier-model-icon\\\" />\\n                        <i v-else-if=\\\"item?.type == 'entityDesigner'\\\"\\n                            class=\\\"mdi mdi-database entity-designer-color app-tier-model-icon\\\" />\\n                        <i v-else-if=\\\"item?.type == 'flow'\\\" class=\\\"mdi mdi-step-forward bpmn-color app-tier-model-icon\\\" />\\n                        <i v-else-if=\\\"item.type == 'namedComponent'\\\" class=\\\"mdi mdi-cube-outline namedcomp-color app-tier-model-icon\\\"></i>\\n                        <span class=\\\"app-tier-model-name\\\">{{ item?.name }}\\n                            <span class=\\\"start-screen\\\" v-if=\\\"startScreen?.ID == item.id\\\">\\n                                <i class=\\\"mdi mdi-home-outline\\\"></i>\\n                                <span class=\\\"button-tooltip\\\" style=\\\"top: -30px; left: 2px; z-index: 1; width: 80px;\\\">Start\\n                                    Screen</span>\\n                            </span>\\n                        </span>\\n\\n                        <span v-if=\\\"!item.usageType\\\" :class=\\\"['version-text', item.disabled ? 'disabled' : '']\\\" @click=\\\"versionDialog(item)\\\">\\n                            {{ item.version ? item.version : 'No version' }} <i v-if=\\\"!item.usageType\\\" :class=\\\"['mdi mdi-pencil-outline version-icon', item.disabled ? 'disabled' : '']\\\"></i>\\n                        </span>\\n                        <span v-if=\\\"item.disabled && !item.version\\\" class=\\\"button-tooltip\\\"\\n                            style=\\\"z-index: 1; width: 300px;\\\">No version available for publishing. <b>Stop Working</b> on this item and choose the <b>Ready to Publish</b> option.\\n                        </span>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div v-if=\\\"props.screenType == 'Deploy' && props.platformSelection.web\\\" style=\\\"margin-bottom: 102px\\\">\\n            <div style=\\\"display: flex; align-items: center;\\\">\\n                <span class=\\\"custom-text environment\\\"> Publish To </span>\\n                <span class=\\\"publish-info\\\">\\n                    <i class=\\\"mdi mdi-information\\\"></i>\\n                    <span class=\\\"button-tooltip\\\" style=\\\"top: 460px; left: 96px; z-index: 1; width: 231px;\\\">Publish To\\n                        options may change depending on the module type you choose.</span>\\n                </span>\\n            </div>\\n\\n            <CustomSelect :options=\\\"publishTargets\\\" @input=\\\"onTargetSelect\\\" :selectedOption=\\\"selectedTarget\\\"\\n                :default=\\\"selectedTarget\\\" :disabledOptions=\\\"disabledOptions\\\" selectedClass=\\\"selected-environment\\\"\\n                placeholder=\\\"Select the publish environment of your application\\\" class=\\\"select-environment\\\">\\n            </CustomSelect>\\n        </div>\\n        <div v-if=\\\"props.screenType == 'Deploy' && !props.platformSelection.web && props.platformSelection.mobile\\\"\\n            class=\\\"mobile-publish-text\\\">\\n            <i class=\\\"mdi mdi-information\\\"></i>\\n            <span>Models and static files of your mobile application will be served from Public Cloud.</span>\\n\\n        </div>\\n        <div :class=\\\"['footer', props.screenType == 'Deploy' ? 'deploy' : 'export']\\\">\\n            <div :class=\\\"['cancel-button', props.screenType == 'Deploy' ? 'deploy' : '']\\\" @click=\\\"close\\\">Cancel</div>\\n            <div v-if=\\\"props.screenType == 'Export'\\\" :class=\\\"(saveButtonDisable ? ' button-disable' : '')\\\" @click=\\\"!saveButtonDisable && save()\\\">\\n                <span class=\\\"save-button \\\">DOWNLOAD</span>\\n                <span v-if=\\\"!isThereVersion\\\" class=\\\"button-tooltip\\\" \\n                    style=\\\"top: -80px; left: 626px; z-index: 1; width: 145px;\\\">There are no items ready to publish. At least one of your items must be ready to publish.</span>\\n                <span v-else-if=\\\"!isStartScreenOK\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -46px; left: 640px; z-index: 1; width: 120px;\\\">You need to include your start screen.</span>\\n                <span v-else-if=\\\"!isAllDependenciesOK\\\" class=\\\"button-tooltip\\\" \\n                    style=\\\"top: -95px; left: 644px; z-index: 1; width: 135px;\\\">{{ dependencyErrorStr }}</span>\\n            </div>\\n            <div v-if=\\\"props.screenType == 'Deploy'\\\" :class=\\\"[(saveButtonDisable ? ' button-disable' : '')]\\\" @click=\\\"!saveButtonDisable && save()\\\">\\n                <span class=\\\"save-button deploy\\\">PUBLISH</span>\\n                <span v-if=\\\"!isStartScreenOK\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -46px; left: 652px; z-index: 1; width: 120px;\\\">You need to include your start screen.</span>\\n                <span v-else-if=\\\"!selectedTarget\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -46px; left: 644px; z-index: 1; width: 123px;\\\">You need to select a publish environment.</span>\\n                <span v-else-if=\\\"!isThereVersion\\\" class=\\\"button-tooltip\\\" \\n                    style=\\\"top: -95px; left: 644px; z-index: 1; width: 135px;\\\">There are no items ready to publish. At least one of your items must be ready to publish.</span>\\n                <span v-else-if=\\\"!isAllDependenciesOK\\\" class=\\\"button-tooltip\\\" \\n                    style=\\\"top: -95px; left: 644px; z-index: 1; width: 135px;\\\">{{ dependencyErrorStr }}</span>\\n            </div>\\n\\n        </div>\\n    </div>\\n</template>\\n\\n\\n<script setup lang=\\\"ts\\\">\\nimport { CryptoHelper } from \\\"@stechquick/algae/lib/helpers/cryptoHelper\\\";\\nimport { PlateauHelper } from \\\"@stechquick/algae/lib/helpers/plateau/plateauHelper\\\";\\nimport { computed, defineAsyncComponent, onMounted, ref } from \\\"vue\\\";\\nimport { IOrganizationCloud } from \\\"../../../../../../../common/clean/domain/useCases/ICloudProvider\\\";\\nimport { DeployType, ICreateDeployJobParam, ICreateExportJobParam, IExportItem, IExportJobData, IPlatformSelection, IProcessConfigModelItem } from \\\"../../../../../../../common/qCloudTemp/exporter\\\";\\nimport { ModelContants } from \\\"../../../../../../../common/qCloudTemp/modelContants\\\";\\nimport { IQJsonAdditionals, UsageType } from \\\"../../../../../../../common/qCloudTemp/quickCloud\\\";\\nimport { container } from \\\"../../../../../domain/core/diContainer\\\";\\nimport { IQCloudApi } from \\\"../../../../../domain/infrastructure/IQCloudApi\\\";\\nimport { IModel, IModelHistoryInfo, IModule } from \\\"../../../../../domain/model/models\\\";\\nimport { IDialog } from \\\"../../../../../domain/presentation/IDialog\\\";\\nimport { ICreateExportJob } from \\\"../../../../../domain/useCase/ICreateExportJob\\\";\\nimport { IDeployJobs } from \\\"../../../../../domain/useCase/IDeployJobs\\\";\\nimport { IJobUtils } from \\\"../../../../../domain/useCase/IJobUtils\\\";\\nimport { IListMultiModelVersions } from \\\"../../../../../domain/useCase/IListMultiModelVersions\\\";\\nimport { IModelUseCase } from \\\"../../../../../domain/useCase/IModelUseCase\\\";\\nimport { IPackJobs } from \\\"../../../../../domain/useCase/IPackJobs\\\";\\nimport { IUseCaseExecutor } from \\\"../../../../../domain/useCase/IUseCaseExecutor\\\";\\nimport { IViewModel } from \\\"../../../../../domain/viewModel/IViewModel\\\";\\nimport { IViewModelManager } from \\\"../../../../../domain/viewModel/IViewModelManager\\\";\\nimport CustomSelect from \\\"../../../components/customSelect.vue\\\";\\nimport CheckboxComp from \\\"../../checkboxComp.vue\\\";\\n\\ninterface ITableData {\\n    id: string;\\n    parentId?: string;\\n    collapsed?: boolean;\\n    anyChildChecked?: boolean;\\n    allChildChecked?: boolean;\\n    checked?: boolean;\\n    name: string;\\n    type: IModel[\\\"modelType\\\"] | IModule[\\\"objectType\\\"];\\n    version?: string;\\n    disabled?: boolean | true;\\n    children?: Array<ITableData>;\\n    usageType?: UsageType;\\n}\\n\\ninterface IDeployScreenAdditionalProps {\\n    screenType: \\\"Export\\\" | \\\"Deploy\\\";\\n    platformSelection: IPlatformSelection;\\n}\\n\\ninterface IDisabledOptions {\\n    index: number\\n    cause: string;\\n}\\n\\nconst props = defineProps<IDeployScreenAdditionalProps>();\\nconst viewModel = container.resolve<IViewModel>(IViewModel);\\nconst viewModelManager = container.resolve<IViewModelManager>(IViewModelManager);\\nconst dialog = container.resolve<IDialog>(IDialog);\\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\\nconst modelUseCase = container.resolve<IModelUseCase>(IModelUseCase);\\nconst deployJobsUseCase = container.resolve<IDeployJobs>(IDeployJobs);\\nconst qcloudApi = container.resolve<IQCloudApi>(IQCloudApi);\\nconst packJobsUseCase = container.resolve<IPackJobs>(IPackJobs);\\nconst jobUtils = container.resolve<IJobUtils>(IJobUtils);\\nconst emit = defineEmits([\\\"close\\\"]);\\nconst items = ref<Array<ITableData>>([]);\\nconst validations = ref<boolean>(true);\\nconst selectedTarget = ref<string>(\\\"\\\");\\nconst disabledOptions = ref<Array<IDisabledOptions>>();\\nconst publishTargets = ref<Array<string>>();\\nconst modelHistories = ref<Map<string, Array<IModelHistoryInfo>>>();\\nconst startScreen = ref<IModel>();\\nconst dependencyMap = ref<Map<string, { dependedTo: Array<string>, dependedBy: Array<string>}>>();\\nconst dependencyErrorStr = ref<string>('');\\n\\nonMounted(async () => {\\n    await initVersions();\\n    initDependencies();\\n    handleItems();\\n    props.screenType == \\\"Deploy\\\" && syncPublishTargets();\\n    validations.value = validate();\\n})\\n\\nconst allChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == \\\"module\\\" && e.allChildChecked).length);\\nconst anyChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == \\\"module\\\" && !e.allChildChecked && e.anyChildChecked).length);\\nconst checkedRootLevelModelsCount = computed(() => items.value.filter(e => e.type != \\\"module\\\" && e.checked).length);\\nconst totalRootLevelCount = computed(() => items.value.length);\\nconst saveButtonDisable = computed(() => (props.screenType == \\\"Deploy\\\" && props.platformSelection.web && selectedTarget.value == \\\"\\\") || !validations.value || !items.value.some((item) => item.checked || item.anyChildChecked) || (props.screenType == \\\"Export\\\" && !validateStartScreen()) || !validateDependencies());\\nconst mainCheckboxState = computed(() => items.value.length == allChildCheckedModulesCount.value ? true \\n        : (anyChildCheckedModulesCount.value + checkedRootLevelModelsCount.value > 0  ? false : undefined));\\nconst isThereVersion = computed(() => checkMaxVersionOfAllItems());\\nconst isAllDependenciesOK = computed(validateDependencies)\\nconst isStartScreenOK = computed(validateStartScreen)\\n\\nfunction validate() {\\n    let result = true;\\n    const modules = items.value.filter(e => e.type == \\\"module\\\" && e.anyChildChecked);\\n    const appLayerItems = items.value.filter(e => e.type == \\\"qjson\\\" && e.checked);\\n\\n    startScreen.value = (viewModel.studio.items as Array<IModel>).find(item => item.isRootPage);\\n    if(!startScreen.value)\\n        return false;\\n\\n    if (props.screenType == \\\"Deploy\\\") {\\n        if (modules.length > 0)\\n            result = modules.map(e => e.children).filter(e => !e?.find(f => f.type == \\\"entityDesigner\\\" && f.checked)).length <= 0\\n\\n        let isApplicationWillDeploy = appLayerItems.length > 0;\\n        if (isApplicationWillDeploy) {\\n            result = appLayerItems\\n                .map(e => viewModel.studio.items.find(item => item.ID == e.id) as IModel)\\n                .findIndex(e => ((e.additionals as IQJsonAdditionals).isRootPage)) != -1;\\n        }\\n    }\\n\\n    return result;\\n}\\n\\nfunction validateDependencies() {\\n    \\n    const checkMap = new Map<string, boolean>();\\n    items.value.forEach(item => {\\n        if(item.type == 'module' && item.children && item.children.length > 0)\\n            item.children.forEach(child => checkMap.set(child.id, child.checked == true))\\n        else\\n            checkMap.set(item.id, item.checked == true)\\n    })\\n\\n    const mustBeCheckedMap = new Map<string, Array<string>>();\\n    dependencyMap.value?.forEach((deps, id) => {\\n        if(!checkMap.get(id)) \\n            return;\\n\\n        deps.dependedTo.forEach(dependedId => {\\n            if(checkMap.get(dependedId))\\n                return;\\n\\n            if(mustBeCheckedMap.has(id)){\\n                const vals = mustBeCheckedMap.get(id)!\\n                vals.push(dependedId)\\n                mustBeCheckedMap.set(id, vals)\\n            }else {\\n                mustBeCheckedMap.set(id, [dependedId])\\n            }\\n            \\n        });\\n    })\\n\\n    //set deps error text\\n    const [firstItemID] = mustBeCheckedMap.keys();\\n    if(firstItemID) {\\n        const firstItemDeps = mustBeCheckedMap.get(firstItemID);\\n        const firstItemDepStr = firstItemDeps ? firstItemDeps.map(findItem).map(e => e?.name).join(', ') : '';\\n        dependencyErrorStr.value =`Select ${firstItemDepStr} first. ${findItem(firstItemID)?.name} depends on ${firstItemDepStr}.`\\n    }\\n\\n    return mustBeCheckedMap.size == 0\\n}\\n\\nfunction validateStartScreen() {\\n    return (items.value.find((item) => item.id == startScreen.value?.ID))?.checked\\n}\\n\\nfunction mobileFilter(model: IModel) {\\n    return props.platformSelection.web || !props.platformSelection.mobile ||\\n        !(model.modelType == \\\"bpmn\\\" || model.modelType == \\\"entityDesigner\\\" || model.modelType == \\\"process\\\");\\n}\\n\\nfunction findItem (ID: string) {\\n    for(const item of items.value){\\n        if(item.type != 'module' && item.id == ID)\\n            return item;\\n        if(item.type == 'module' && item.children && item.children.length> 0 ){\\n            const f = item.children.find(e => e.id == ID)\\n            if(f) return f\\n        }\\n    }\\n}\\n\\nasync function initVersions() {\\n    const modelIDs = Array<string>();\\n    viewModelManager.flatMapItems(viewModel.studio.items, (item, path) => {\\n        if (item.objectType != \\\"model\\\") { return; }\\n        modelIDs.push(item.ID);\\n        return item;\\n    });\\n\\n    modelHistories.value = await executor.executeUseCase<IListMultiModelVersions>(IListMultiModelVersions, { modelIDs });\\n}\\n\\nfunction initDependencies() {\\n    const map = new Map<string, { dependedTo: Array<string>, dependedBy: Array<string>}>();\\n    \\n    const setDependencies = (item: IModel) => {\\n        if(item.objectType != \\\"model\\\") return;\\n        const depsBy = modelUseCase.getWhichDependsToThisModel(item.ID);\\n        map.set(item.ID, {\\n            dependedBy: depsBy ? depsBy.map(e => e.ID): Array<string>(), \\n            dependedTo: item.dependentModels ? item.dependentModels.map(e => e.modelId) : Array<string>()\\n        });\\n    }\\n    viewModel.studio.items.forEach(item => {\\n        if(item.objectType == 'module' && item.children && item.children.length > 0){\\n            item.children.forEach(e => setDependencies(e as IModel))\\n            return;\\n        }\\n        setDependencies(item as IModel)\\n    })\\n\\n    dependencyMap.value = map;\\n}\\n\\nfunction isModelDepended(item: ITableData) {\\n    const deps = dependencyMap.value?.get(item.id)?.dependedBy\\n    if(!deps) return false;\\n\\n    return deps.some(dep => items.value.some(item => {\\n        if(item.type == 'module' && item.anyChildChecked){\\n            return item.children?.some(child => child.checked && child.id == dep)\\n        }\\n        return item.id == dep && item.checked\\n    }));\\n}\\n\\nasync function handleItems() {\\n    items.value = viewModel.studio.items\\n        .filter((item) => item.objectType == \\\"module\\\" && item.children.length > 0)\\n        .map((item) => {\\n            const tableData: ITableData = {\\n                id: item.ID,\\n                collapsed: true,\\n                name: item.name,\\n                type: \\\"module\\\",\\n                children: (item as IModule).children\\n                    .filter((child) => child.objectType == \\\"model\\\")\\n                    .filter(e => !props || props.screenType == \\\"Export\\\" || mobileFilter(e as IModel))\\n                    .map(child => child as IModel)\\n                    .map(child => {\\n                        const maxVersion = getItemMaxVersion(child)\\n                        return {\\n                            id: child.ID,\\n                            parentId: item.ID,\\n                            checked: maxVersion ? true : child.isUnmodifiable,\\n                            disabled: maxVersion ? false : !child.isUnmodifiable,\\n                            name: child.name,\\n                            type: (child as IModel).modelType,\\n                            version: child.isUnmodifiable ? 'latest' : maxVersion,\\n                        } as ITableData\\n                    })\\n            }\\n            handleParentCheckedStatus(tableData);\\n            return tableData;\\n        });\\n\\n    viewModel.studio.items\\n        .filter((item) => item.objectType == \\\"model\\\" && item.usageType != \\\"appSettings\\\" && item.usageType != \\\"appAssetList\\\")\\n        .map(item => item as IModel)\\n        .forEach((item) => {\\n            const maxVersion = getItemMaxVersion(item as IModel)\\n            items.value.push({\\n                    id: item.ID,\\n                    name: item.name,\\n                    checked: maxVersion || item.modelType==\\\"appSettings\\\" ? true : item.isUnmodifiable,\\n                    disabled: maxVersion || item.modelType==\\\"appSettings\\\" ? false : !item.isUnmodifiable,\\n                    type: (item as IModel).modelType,\\n                    version: item.isUnmodifiable || item.modelType==\\\"appSettings\\\" ? 'latest' : maxVersion,\\n                });\\n        });\\n    const uiSettingsID = CryptoHelper.CreateGuid();\\n    const appSettings = viewModel.studio.items.filter((item) => item.objectType == \\\"model\\\" && item.usageType == \\\"appSettings\\\") as Array<IModel>;\\n    const uiSettings: ITableData = {\\n        id: uiSettingsID,\\n        collapsed: true,\\n        name: \\\"UI Settings\\\",\\n        type: \\\"module\\\",\\n        children: appSettings.map(settings => {\\n            const maxVersion = getItemMaxVersion(settings)\\n            return {\\n                id: settings.ID,\\n                parentId: uiSettingsID,\\n                name: settings.name,\\n                type: settings.modelType,\\n                checked: maxVersion != undefined,\\n                usageType: settings?.usageType,\\n                disabled: !maxVersion,\\n                version: maxVersion,\\n            }\\n        }) as Array<ITableData>,\\n    };\\n    handleParentCheckedStatus(uiSettings);\\n\\n    const uiAssetID = CryptoHelper.CreateGuid();\\n    const appAssetList = viewModel.studio.items.filter((item) => item.objectType == \\\"model\\\" && item.usageType == \\\"appAssetList\\\") as Array<IModel>;\\n    const uiAssetList: ITableData = {\\n        id: uiAssetID,\\n        collapsed: true,\\n        name: \\\"Styled Components\\\",\\n        type: \\\"module\\\",\\n        anyChildChecked: true,\\n        allChildChecked: true,\\n        children: appAssetList.map((asset) => ({\\n            id: asset.ID,\\n            parentId: uiSettingsID,\\n            name: asset.name,\\n            type: asset.modelType,\\n            checked: true,\\n            usageType: asset?.usageType,\\n        })) as Array<ITableData>,\\n    };\\n    handleParentCheckedStatus(uiAssetList);\\n\\n    items.value.unshift(uiAssetList);\\n    items.value.unshift(uiSettings);\\n    console.log(\\\"items => \\\", items.value);\\n}\\n\\nfunction getItemMaxVersion(item: IModel): string | undefined {\\n    if (!modelHistories.value?.has(item.ID))\\n        return undefined;\\n\\n    const versions = modelHistories.value.get(item.ID);\\n    if (!versions)\\n        return undefined;\\n\\n    const findMaxVersion = (versions: Array<string>) => {\\n        const versionNumbers = versions.map(v => {\\n            const parts: Array<string> = v.split(\\\".\\\");\\n            return parseInt(parts[0]) * 10 + parseInt(parts[1]) * 1;\\n        })\\n\\n        versionNumbers.sort((a, b) => b - a);\\n\\n        const maxVersion = versionNumbers[0];\\n        return `${Math.floor(maxVersion / 10)}.${maxVersion % 10}`;\\n    }\\n\\n    return findMaxVersion(versions.map(e => e.version!));\\n\\n}\\nfunction checkMaxVersionOfAllItems() {\\n    let isThereVersion: boolean = false;\\n    items.value.forEach(item => {\\n        if(item.type == \\\"module\\\") {\\n            item.children?.forEach(child => {\\n                if(child.version) {\\n                    isThereVersion = true;\\n                }\\n                \\n            })\\n        }\\n        else {\\n            if(item.version) {\\n                isThereVersion = true;\\n            }\\n        }\\n    })\\n    return isThereVersion;\\n}\\nfunction handleModuleCountCheckboxEvent(value: boolean) {\\n    items.value.filter(e => !e.disabled).forEach((item) => {\\n        item.checked = value;\\n        const allItemsCheckable = item.allChildChecked != undefined && item.children && item.children.length > 0 && !item.children.some(c => c.disabled);\\n        if (allItemsCheckable) item.allChildChecked = value;\\n        if (item.anyChildChecked != undefined) item.anyChildChecked = value;\\n        if (item.children) item.children.filter(c => !c.disabled).forEach((child) => (child.checked = value));\\n    });\\n\\n    validations.value = validate();\\n    props.screenType == \\\"Deploy\\\" && syncPublishTargets();\\n}\\n\\nfunction handleCollapse(item: ITableData) {\\n    item.collapsed = !item.collapsed;\\n}\\n\\nfunction checkAllDependents(item: ITableData) {\\n    if(item.disabled || item.checked) return;\\n\\n    item.checked = true\\n    item.parentId && handleParentCheckedStatus(items.value.find((i) => i.id == item.parentId)!);\\n\\n    const deps = dependencyMap.value?.get(item.id)?.dependedTo\\n    if(!deps) return;\\n\\n    deps.forEach(dep => {\\n        items.value.forEach(item => {\\n            if(item.type == 'module' && !item.allChildChecked){\\n                const willCheckItem = item.children?.find(child => !child.checked && child.id == dep)\\n                willCheckItem && checkAllDependents(willCheckItem)\\n                handleParentCheckedStatus(item)\\n                return;\\n            }\\n\\n            if(!item.checked && item.id == dep) {\\n                checkAllDependents(item)\\n                item.parentId && handleParentCheckedStatus(items.value.find((i) => i.id == item.parentId)!)\\n            }\\n        })\\n    });\\n}\\n\\nfunction handleItemCheckEvent(item: ITableData) {\\n    if(item.disabled || isModelDepended(item))\\n        return;\\n\\n    if(item.type != \\\"module\\\") {\\n        if(item.checked){\\n            item.checked = false;\\n            item.parentId && handleParentCheckedStatus(items.value.find((i) => i.id == item.parentId)!)\\n        } else {\\n            checkAllDependents(item)\\n        }\\n    } else {\\n        if (item.children && item.children.filter(c => !c.disabled).length > 0) {\\n            if (item.anyChildChecked) {\\n                item.children.filter(c => !c.disabled).forEach(child => child.checked = false);\\n                item.checked = false;\\n                handleParentCheckedStatus(item);\\n            } else {\\n                item.children.forEach(checkAllDependents);\\n                item.checked = true;\\n            }\\n        }\\n        else {\\n            item.checked = !item.checked;\\n            item.allChildChecked = false;\\n        }\\n    }\\n\\n    validations.value = validate();\\n    props.screenType == \\\"Deploy\\\" && syncPublishTargets();\\n}\\n\\nfunction handleParentCheckedStatus(item: ITableData) {\\n    item.disabled = item.children && (item.children.length == 0 || !item.children?.some(child => !child.disabled))\\n    item.allChildChecked = item.children && item.children.length > 0 && !item.children.some((child) => !child.checked || child.disabled);\\n    item.anyChildChecked = item.children?.some((child) => child.checked && !child.disabled);\\n}\\n\\nfunction syncPublishTargets() {\\n    publishTargets.value = []; disabledOptions.value = [];\\n\\n    const targets = viewModel.user?.selectedOrganization?.actions?.publish?.targets;\\n    if (!targets)\\n        return;\\n\\n    const isSelectAnyItem = items.value.find(e => e.anyChildChecked || e.checked);\\n    if (!isSelectAnyItem) {\\n        publishTargets.value = Object.entries(targets).map(e => cloudTargetMap(e[0])!);\\n        const disabledOptionList = Array<IDisabledOptions>();\\n        for (let i = 0; i < publishTargets.value.length; i++) {\\n            disabledOptionList.push({ index: i, cause: \\\"You need to include items to publish.\\\" })\\n        }\\n        disabledOptions.value = disabledOptionList;\\n        return;\\n    }\\n\\n    const checkedPublishTargets = checkAndSetDisabledCauses(targets);\\n    const sortedTargets = checkedPublishTargets.sort((e, f) => (!e.cause === !f.cause) ? 0 : e.cause ? 1 : -1);\\n\\n    const disabledOptionList = Array<IDisabledOptions>();\\n    for (let i = 0; i < sortedTargets.length; i++) {\\n        const cause = sortedTargets[i].cause;\\n        if (cause) disabledOptionList.push({ index: i, cause })\\n    }\\n    disabledOptions.value = disabledOptionList;\\n    publishTargets.value = sortedTargets.map(e => e.optionName);\\n\\n    selectedTarget.value = !sortedTargets[0].cause ? sortedTargets[0].optionName : \\\"\\\";\\n}\\n\\nfunction checkAndSetDisabledCauses(targets: Record<keyof IOrganizationCloud, boolean>) {\\n    const list = Array<{ optionName: string, cause?: string }>();\\n\\n    Object.keys(targets).forEach(e => {\\n        const key = e as keyof IOrganizationCloud;\\n        const value = targets[key];\\n        const optionName = cloudTargetMap(key)!;\\n        if (!value)\\n            return list.push({ optionName, cause: \\\"You are not authorized to publish to this target.\\\" });\\n\\n\\n        switch (key) {\\n            case \\\"azure\\\":\\n                const traverseSelectedItems = (status: boolean, items?: Array<ITableData>) => {\\n                    if (!items || items.length == 0) { return status; }\\n                    for (const item of items) {\\n                        if (item.checked || item.anyChildChecked) {\\n                            if (item.type == \\\"module\\\") {\\n                                status = traverseSelectedItems(status, item.children);\\n                            }\\n                            if (item.type == \\\"entityDesigner\\\" || item.type == \\\"bpmn\\\" || item.type == \\\"process\\\") {\\n                                status = false;\\n                                break;\\n                            }\\n                        }\\n\\n                    }\\n                    return status;\\n                }\\n\\n                const status = traverseSelectedItems(true, items.value);\\n                if (!status)\\n                    return list.push({ optionName, cause: \\\"Entity and process models cannot be published to this target.\\\" });\\n                break;\\n            case \\\"plateauGCP\\\":\\n                if (props.platformSelection.mobile)\\n                    return list.push({ optionName, cause: \\\"This target is not available for mobile publishing.\\\" });\\n\\n                const modulesHasNotAnEDModel =  items.value.filter(e => e.name != \\\"UI Settings\\\").find(e => e.type == \\\"module\\\" && e.anyChildChecked && e.children?.some(c => c.checked && (c.type == \\\"bpmn\\\" || c.type == \\\"process\\\")) && !e.children?.some(c => c.type == \\\"entityDesigner\\\" && c.checked))\\n                if (modulesHasNotAnEDModel)\\n                    return list.push({optionName, cause: `This target not available. Selected module '${modulesHasNotAnEDModel.name}' has not any Data Model.`})\\n                break;\\n        }\\n\\n        list.push({ optionName });\\n    })\\n\\n    return list;\\n}\\n\\nfunction versionDialog(item: ITableData) {\\n    const clickedNode = { id: item.id, state: { checked: item.checked }, text: item.name, type: item.type, version: item.version };\\n    const hasAnyVersion = modelHistories.value?.has(item.id);\\n    const options = { clickedNode, cb: (version: string) => { item.version = version } } as any;\\n    if (hasAnyVersion) {\\n        options.versions = modelHistories.value?.get(item.id)\\n    }\\n    dialog.showDialog(\\n        defineAsyncComponent(() => import(\\\"../../application/modelVersionDialog.vue\\\")),\\n        { closable: true, title: \\\"Change Version\\\", width: \\\"900px\\\", maxHeight: \\\"500px\\\", overflow: \\\"auto\\\" }, options\\n    );\\n}\\n\\nfunction close() {\\n    emit(\\\"close\\\");\\n}\\n\\nasync function save() {\\n    executor.execute(\\n        async () => {\\n            const initAsGroup = async () => {\\n                const groupID = CryptoHelper.CreateGuid();\\n                await initHistory(groupID);\\n                await packJob(groupID);\\n                return groupID;\\n            }\\n\\n            const isFlowBackend = viewModel.user?.selectedOrganization?.applications.flow;\\n\\n            switch (props.screenType) {\\n                case \\\"Export\\\":\\n                    //FIXME: Export backende tasinmali. layer, groupId backendde setlenmeli.\\n                    if(isFlowBackend) {\\n                        const deployItems = await createAzureDeployItems();\\n                        await packJobsUseCase.createPackJobs([{\\n                            appID: viewModel.studio.appId,\\n                            exportType: \\\"qui\\\",\\n                            selectionData: deployItems\\n                        }]);\\n                        break;\\n                    }\\n\\n                    const groupID = await initAsGroup();\\n                    await createExportJob(groupID);\\n                    break;\\n                case \\\"Deploy\\\":\\n                    if(props.platformSelection.mobile) {\\n                        const deployItems = await createAzureDeployItems();\\n                        await deployJobsUseCase.createAppDeployJob(deployItems, props.platformSelection);\\n                    }\\n                    switch (cloudTargetMap(selectedTarget.value!, true) as keyof IOrganizationCloud) {\\n                        case \\\"plateauGCP\\\":\\n                            const groupID = await initAsGroup();\\n                            await createDeployJob(groupID);\\n                            break;\\n                        case \\\"azure\\\":\\n                            const deployItems = await createAzureDeployItems();\\n                            await deployJobsUseCase.createAppDeployJob(deployItems, props.platformSelection);\\n                            break;\\n                    }\\n            }\\n            emit(\\\"close\\\");\\n        },\\n        { loading: true });\\n}\\n\\nasync function createAzureDeployItems() {\\n    const deployItems: Array<IExportItem> = [];\\n    const itemIdObj: Record<string, { item: IModel, path: string }> = {};\\n\\n    viewModelManager.flatMapItems(viewModel.studio.items, (item, path) => {\\n        if (item.objectType != \\\"model\\\") { return; }\\n        itemIdObj[item.ID] = { item, path };\\n        return item;\\n    });\\n\\n    const traverseSelectedItems = (items?: Array<ITableData>) => {\\n        if (!items || items.length == 0) { return; }\\n        items.filter(e => e.checked || e.anyChildChecked).forEach(item => {\\n            if (item.type == \\\"module\\\") {\\n                traverseSelectedItems(item.children);\\n                return;\\n            }\\n\\n            const itemMap = itemIdObj[item.id];\\n\\n            const deployItem: IExportItem = {\\n                id: item.id,\\n                name: jobUtils.getFileFullname(itemMap.item),\\n                path: itemMap.path,\\n                type: jobUtils.getItemType(itemMap.item),\\n                ver: item.version || \\\"latest\\\",\\n                isRootPage: itemMap.item.isRootPage,\\n                ownerType: 'application',\\n                ownerName: viewModel.studio.appName,\\n                size: itemMap.item.size,\\n            };\\n            deployItems.push(deployItem)\\n        });\\n    };\\n\\n    traverseSelectedItems(items.value);\\n\\n    return deployItems;\\n}\\n\\nasync function initHistory(groupID: string) {\\n    return qcloudApi.initPublishHistory({\\n        appID: viewModel.studio.appId,\\n        ID: groupID,\\n        isMultiStep: true,\\n        type: props.screenType == \\\"Deploy\\\" ? \\\"publish\\\" : \\\"download\\\",\\n        cloudProvider: props.screenType == \\\"Deploy\\\" ? cloudTargetMap(selectedTarget.value!, true) as keyof IOrganizationCloud : undefined,\\n        platform: props.platformSelection\\n    });\\n}\\n\\nasync function packJob(groupID: string) {\\n    let exportItemMap = new Map<string, Array<IExportItem>>();\\n    const appName = viewModel.studio.appName;\\n\\n    const itemIdObj: Record<string, { item: IModel, path: string }> = {};\\n    viewModelManager.flatMapItems(viewModel.studio.items, (item, path) => {\\n        if (item.objectType != \\\"model\\\") { return; }\\n        itemIdObj[item.ID] = { item, path };\\n        return item;\\n    });\\n\\n    const createExportObject = (tableItem: ITableData) => {\\n        const item = itemIdObj[tableItem.id].item;\\n        const isAppItem = item.modelType == 'qjson' ;\\n        return {\\n            id: tableItem.id,\\n            ver: tableItem.version,\\n            type: jobUtils.getItemType(item),\\n            path: itemIdObj[tableItem.id].path,\\n            name: jobUtils.getFileFullname(item),\\n            ownerType: isAppItem ? 'application' : item.parent.objectType,\\n            ownerName: isAppItem ? appName : item.parent.name,\\n        } as IExportItem;\\n    }\\n\\n    const addToExportItem = (key: string, obj: IExportItem) => {\\n        key = obj.ownerType == 'module' ? `mdl-${key}` : key; // for same named module and app\\n        let items = exportItemMap.get(key);\\n        if(items && items.length > 0){\\n            items.push(obj);\\n            exportItemMap.set(key, items);\\n        } else\\n            exportItemMap.set(key, [obj]);\\n    }\\n\\n    items.value.filter(e => e.checked ?? e.anyChildChecked).forEach((asset) => {\\n        if (asset.type == 'module') {\\n            asset.children!.filter(e => e.checked).forEach(child => {\\n                const obj = createExportObject(child);\\n                if (obj.type == \\\"entityDesigner\\\")\\n                    obj.entityGenerationDomain = viewModel.user!.selectedOrganization!.actions?.entityGenerationDomain;\\n\\n                const useSeperateModule = obj.type == 'bpmn' || obj.type == 'entityDesigner' || obj.type == 'process';\\n                addToExportItem(useSeperateModule ? asset.name : appName, obj);\\n            });\\n        } else {\\n            const obj = createExportObject(asset);\\n            if (asset.type == 'qjson'){\\n                const isRootPage = viewModel.studio.items.find(i => i.objectType == \\\"model\\\" && i.modelType == \\\"qjson\\\" && (i.additionals as IQJsonAdditionals).isRootPage && i.ID == asset.id);\\n                obj.isRootPage = isRootPage ? true : undefined;\\n            }\\n            addToExportItem(appName, obj);\\n        }\\n    })\\n\\n    let jobs = Array<ICreateExportJobParam>();\\n    exportItemMap.forEach((v, k) => {\\n        jobs.push({\\n            appID: viewModel.studio.appId,\\n            exportType: \\\"qui\\\",\\n            selectionData: v,\\n            cause: props.screenType == 'Export' ? 'download': \\\"publish\\\",\\n            layer: 0,\\n            groupID: groupID\\n        })\\n    })\\n\\n    await packJobsUseCase.createPackJobs(jobs);\\n}\\n\\nasync function createExportJob(groupID: string) {\\n    await executor.executeUseCase<ICreateExportJob>(ICreateExportJob, {\\n        appID: viewModel.studio.appId,\\n        exportType: \\\"qui\\\",\\n        selectionData: [],\\n        layer: 1,\\n        groupID: groupID\\n    });\\n}\\n\\nasync function createDeployJob(groupID: string) {\\n    //1-(n) L1- deployJob(build)\\n    let packages = await qcloudApi.getExportJobsByGroupId({ groupID })\\n        .then(jobs => jobs.jobs.map(e => {\\n            const jobData = e.jobData as IExportJobData;\\n            return {\\n                ownerName: jobData.items[0].ownerName,\\n                jobID: e.jobID,\\n                type: jobData.items[0].ownerType,\\n                mainDir: getDeployableArchiveRoot(jobData)\\n            }\\n        }));\\n\\n    if (!packages || packages.length <= 0)\\n        return;\\n\\n    let buildJobs = Array<ICreateDeployJobParam>();\\n    packages.forEach(pack => {\\n        buildJobs.push({\\n            appID: viewModel.studio.appId,\\n            type: \\\"build\\\",\\n            package: {\\n                type: pack.type as DeployType,\\n                name: pack.ownerName!,\\n                mainDir: pack.mainDir,\\n                zip: `${pack.jobID}.zip`,\\n            },\\n            layer: 1,\\n            groupID: groupID\\n        })\\n    })\\n\\n    await deployJobsUseCase.createBuildJobs(buildJobs);\\n\\n    //2-(1) L2- deployJob(deployment)\\n    let jobParam: ICreateDeployJobParam = {\\n        appID: viewModel.studio.appId,\\n        type: \\\"deployment\\\",\\n        deployConfig: {\\n            process: {\\n                configModelIDs: getProcessConfigList(),\\n                enabled: items.value.some(e => e.anyChildChecked && e.children?.some(e => e.checked && e.type == \\\"bpmn\\\"))\\n            }\\n        },\\n        layer: 2,\\n        groupID: groupID\\n    }\\n\\n    await deployJobsUseCase.startDeploymentJob(jobParam);\\n}\\n\\nfunction getProcessConfigList() {\\n    let processConfigList = Array<IProcessConfigModelItem>();\\n    items.value.forEach((asset) => {\\n        if (asset.type == \\\"module\\\" && asset.anyChildChecked && asset.children) {\\n            const usingService = asset.children.find(c => c.type == \\\"entityDesigner\\\");\\n            if (!usingService)\\n                return;\\n\\n            const serviceName = PlateauHelper.getServiceNameFromModel(usingService.name);\\n            asset.children.forEach(child => {\\n                if (child.checked && child.type == \\\"process\\\") {\\n                    processConfigList.push({\\n                        moduleName: serviceName,\\n                        model: {\\n                            id: child.id,\\n                            name: child.name,\\n                            version: child.version!\\n                        }\\n                    })\\n                }\\n            })\\n        }\\n    })\\n    return processConfigList;\\n}\\n\\nfunction getDeployableArchiveRoot(jobData: IExportJobData) {\\n    if (jobData.items[0].ownerType == \\\"module\\\") {\\n        let edModel = jobData.items.find(e => e.type == \\\"entityDesigner\\\");\\n        if (!edModel)\\n            throw new Error(\\\"!!! this module cannot deploy. Because its have not a service\\\");\\n        return PlateauHelper.getServiceNameFromModel(edModel.name);\\n    }\\n    return PlateauHelper.getQuiPackageNameFromAppName(jobData.app.name);\\n}\\n\\nfunction cloudTargetMap(name: string, pureVal: boolean = false) {\\n    const map: Record<keyof IOrganizationCloud, string> = { azure: \\\"Public Cloud\\\", plateauGCP: \\\"Plateau Platform Playground\\\" };\\n    if (pureVal) {\\n        return Object.keys(map).find(e => {\\n            if (map[e as keyof IOrganizationCloud] === name) {\\n                return true;\\n            }\\n        })\\n    } else {\\n        let key = Object.keys(map).includes(name);\\n        if (!key)\\n            return;\\n        return map[name as keyof IOrganizationCloud];\\n    }\\n}\\n\\nfunction onTargetSelect(value: string) {\\n    selectedTarget.value = value\\n}\\n\\n</script>\\n\\n\\n<style scoped>\\n.container {\\n    padding: 32px 20px 20px;\\n}\\n\\n.settings-container {\\n    position: relative;\\n    top: 0px;\\n    left: 0px;\\n}\\n\\n.custom-text {\\n    /* position: absolute; */\\n    font-family: 'Roboto';\\n    font-style: normal;\\n    font-weight: 500;\\n    font-size: 15px;\\n    line-height: 18px;\\n    /* left: 24px; */\\n    color: #212121;\\n}\\n\\n/* .custom-text.title{\\n    top: 92px;\\n}\\n\\n.custom-text.environment{\\n    top: 174px;\\n} */\\n\\n.radio-button {\\n    position: absolute;\\n    top: 60px;\\n    left: 20px;\\n    cursor: pointer;\\n}\\n\\n.radio-text {\\n    position: absolute;\\n    top: 59px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n    user-select: none;\\n    cursor: pointer;\\n}\\n\\n.existing-app-url {\\n    position: absolute;\\n    width: 760px;\\n    height: 40px;\\n    top: 114px;\\n    left: 20px;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #bcbcbc;\\n    border-radius: 4px;\\n    font: normal normal normal 14px/19px Roboto;\\n    letter-spacing: 0px;\\n    padding: 10px 0px 10px 10px;\\n}\\n\\n.url-error {\\n    border: 1px solid red;\\n}\\n\\n.url-disable {\\n    opacity: 0.5;\\n}\\n\\n.existing-app-url::placeholder {\\n    color: #bcbcbc;\\n    user-select: none;\\n}\\n\\n.modules-selected-checkbox {\\n    cursor: pointer;\\n}\\n\\n.modules-selected-text {\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #757575;\\n    margin: 0 0 13px 30px;\\n    ;\\n}\\n\\n/* .modules-selected-text.deploy {\\n    top: 257px;\\n} */\\n\\n.text-number {\\n    font: normal normal bold 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.modules-datatable {\\n    width: 760px;\\n    height: 288px;\\n    border: 1px solid #bcbcbc;\\n    overflow-x: hidden;\\n    overflow-y: auto;\\n    margin-bottom: 20px;\\n}\\n\\n/* .modules-datatable.deploy {\\n    top: 286px;\\n} */\\n\\n.modules-datatable::-webkit-scrollbar {\\n    width: 4px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar-thumb {\\n    background: #bcbcbc 0% 0% no-repeat padding-box;\\n    border-radius: 10px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar-thumb:hover {\\n    background: #555;\\n}\\n\\n.row-container {\\n    width: 100%;\\n    height: 36px;\\n    position: relative;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #e0e0e0;\\n}\\n\\n.chevron {\\n    position: absolute;\\n    left: 4px;\\n    color: #757575;\\n    font-size: 24px;\\n}\\n\\n.chevron.disabled {\\n    pointer-events: none;\\n    color: #D5D5D5;\\n}\\n\\n.module-checkbox {\\n    position: absolute;\\n    top: 10px;\\n    left: 43px;\\n    cursor: pointer;\\n}\\n\\n.module-name {\\n    position: absolute;\\n    top: 9px;\\n    left: 69px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.module-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.model-checkbox {\\n    position: absolute;\\n    top: 10px;\\n    left: 59px;\\n    cursor: pointer;\\n}\\n\\n.model-icon {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 85px;\\n}\\n\\n.app-tier-model-icon {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 69px;\\n}\\n\\n.app-tier-model-name {\\n    position: absolute;\\n    top: 10px;\\n    left: 87px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.app-tier-model-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.model-name {\\n    position: absolute;\\n    top: 9px;\\n    left: 103px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.model-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.version-text {\\n    margin: 10px 7px 10px auto;\\n    display: table;\\n    font: normal normal normal 12px/16px Roboto;\\n    color: #757575;\\n    cursor: pointer;\\n    user-select: none;\\n}\\n\\n.version-text.disabled {\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n\\n.version-icon {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #D5D5D5;\\n}\\n\\n.version-icon.disabled {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #EEEEEE;\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n\\n.footer {\\n    position: relative;\\n    width: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: end;\\n}\\n\\n.footer.deploy {\\n    position: relative;\\n    width: 100%;\\n}\\n\\n.footer.export {\\n    margin-top: 102px;\\n}\\n\\n.cancel-button {\\n    border-radius: 4px;\\n    user-select: none;\\n    font-style: normal;\\n    font-weight: 500;\\n    font-family: \\\"ROBOTO\\\";\\n    font-size: 15px;\\n    color: #757575;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n\\n\\n\\n.save-button {\\n    background: #151233 0% 0% no-repeat padding-box;\\n    border-radius: 4px;\\n    user-select: none;\\n    font-weight: 500;\\n    font-size: 15px;\\n    color: #ffffff;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n\\n.mobile-publish-text,\\n.web-publish-text {\\n    padding: 5px 12px;\\n    margin-bottom: 52px;\\n    width: 100%;\\n    color: #757575;\\n    font-size: 14px;\\n    background: #F5F5FA;\\n    border-radius: 4px;\\n    display: flex;\\n    align-items: center;\\n}\\n\\n.mobile-publish-text i,\\n.web-publish-text i {\\n    font-size: 24px;\\n    color: #151233;\\n    margin-right: 4px;\\n}\\n\\n.save-button.deploy {\\n    padding: 10px 16px;\\n}\\n\\n.button-disable .save-button {\\n    color: #757575;\\n    cursor: default;\\n}\\n\\n.button-disable .save-button:hover+.button-tooltip,\\n.start-screen:hover .button-tooltip,\\n.row-container:hover .button-tooltip,\\n.publish-info:hover .button-tooltip {\\n    visibility: visible;\\n    transition: opacity 0.3s ease-out 1s;\\n    opacity: 1;\\n}\\n\\n.button-tooltip {\\n    visibility: hidden;\\n    position: absolute;\\n    background: #757575;\\n    color: #FFFFFF;\\n    font-size: 11px;\\n    font-family: 'Roboto';\\n    text-align: center;\\n    border-radius: 4px;\\n    letter-spacing: 0.2px;\\n    padding: 6px 8px 6px 8px;\\n    top: 56px;\\n    left: 63px;\\n    opacity: 0;\\n}\\n\\n.publish-info {\\n    color: #757575;\\n    font-size: 20px;\\n    margin-left: 10px;\\n}\\n\\n.qjson-color {\\n    color: #449dd1;\\n}\\n\\n.yaml-color {\\n    color: #449dd1;\\n}\\n.namedcomp-color {\\n    color: #212121;\\n}\\n\\n.js-color {\\n    color: #449dd1;\\n}\\n\\n.css-color {\\n    color: #151233;\\n}\\n\\n.process-color {\\n    color: #007c77;\\n}\\n\\n.bpmn-color {\\n    color: #007c77;\\n}\\n\\n.entity-designer-color {\\n    color: #e9724c;\\n}\\n\\n.select-environment {\\n    width: 100%;\\n    font-size: 15px;\\n    height: 40px;\\n    line-height: 40px;\\n    margin-top: 4px\\n}\\n</style>\\n\\n<style>\\n.selected-environment {\\n    background-color: transparent;\\n    border-radius: 4px;\\n    border: 1px solid #BCBCBC;\\n    color: #212121;\\n    padding-left: 12px;\\n}\\n\\n.custom-placeholder:empty:before {\\n    color: #BCBCBC !important;\\n    font-weight: 400;\\n}\\n\\n.custom-select .items .option {\\n    font-size: 14px;\\n    padding-left: 12px;\\n    line-height: 32px;\\n}\\n\\n.custom-select .items .option:hover {\\n    background-color: #EEEEEE;\\n    color: #212121;\\n}\\n\\n.custom-select .items .option.disabled:hover {\\n    background-color: #FFFFFF;\\n    color: #212121;\\n}\\n\\n.custom-select.select-environment .items {\\n    margin-top: 4px;\\n    color: #212121;\\n    border-radius: 4px;\\n    border: 1px solid #E3E3E3;\\n    overflow: hidden;\\n    background-color: #FFFFFF;\\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\\n    position: static !important;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `\n.selected-environment {\n    background-color: transparent;\n    border-radius: 4px;\n    border: 1px solid #BCBCBC;\n    color: #212121;\n    padding-left: 12px;\n}\n.custom-placeholder:empty:before {\n    color: #BCBCBC !important;\n    font-weight: 400;\n}\n.custom-select .items .option {\n    font-size: 14px;\n    padding-left: 12px;\n    line-height: 32px;\n}\n.custom-select .items .option:hover {\n    background-color: #EEEEEE;\n    color: #212121;\n}\n.custom-select .items .option.disabled:hover {\n    background-color: #FFFFFF;\n    color: #212121;\n}\n.custom-select.select-environment .items {\n    margin-top: 4px;\n    color: #212121;\n    border-radius: 4px;\n    border: 1px solid #E3E3E3;\n    overflow: hidden;\n    background-color: #FFFFFF;\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\n    position: static !important;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/presentation/vue3/components/dialogs/publish/publishDialog.vue\"],\"names\":[],\"mappings\":\";AAsyCA;IACI,6BAA6B;IAC7B,kBAAkB;IAClB,yBAAyB;IACzB,cAAc;IACd,kBAAkB;AACtB;AAEA;IACI,yBAAyB;IACzB,gBAAgB;AACpB;AAEA;IACI,eAAe;IACf,kBAAkB;IAClB,iBAAiB;AACrB;AAEA;IACI,yBAAyB;IACzB,cAAc;AAClB;AAEA;IACI,yBAAyB;IACzB,cAAc;AAClB;AAEA;IACI,eAAe;IACf,cAAc;IACd,kBAAkB;IAClB,yBAAyB;IACzB,gBAAgB;IAChB,yBAAyB;IACzB,0CAA0C;IAC1C,2BAA2B;AAC/B\",\"sourcesContent\":[\"<template>\\n    <div class=\\\"container\\\">\\n        <div>\\n            <CheckboxComp :class=\\\"['modules-selected-checkbox', props.screenType == 'Deploy' ? 'deploy' : '']\\\"\\n                :minus=\\\"mainCheckboxState == false\\\" :check=\\\"mainCheckboxState == true\\\"\\n                @click=\\\"handleModuleCountCheckboxEvent(mainCheckboxState == undefined)\\\" />\\n            <div :class=\\\"['modules-selected-text', props.screenType == 'Deploy' ? 'deploy' : '']\\\">\\n                <span class=\\\"text-number\\\">{{  allChildCheckedModulesCount + anyChildCheckedModulesCount + checkedRootLevelModelsCount }}</span>\\n                of <span class=\\\"text-number\\\">{{ totalRootLevelCount }}</span> items selected\\n            </div>\\n        </div>\\n\\n        <div :class=\\\"['modules-datatable', props.screenType == 'Deploy' ? 'deploy' : '']\\\">\\n            <div v-for=\\\"item in items\\\">\\n                <div v-if=\\\"item?.type == 'module'\\\">\\n                    <div class=\\\"row-container\\\">\\n                        <i :class=\\\"'mdi mdi-menu' + (item.collapsed ? '-right' : '-down') + ' chevron' + (!item.children || item.children.length == 0 ? ' disabled': '')\\\"\\n                            @click=\\\"handleCollapse(item)\\\" />\\n                        <CheckboxComp class=\\\"module-checkbox\\\" :check=\\\"item.allChildChecked\\\"\\n                            :minus=\\\"!item.allChildChecked && item.anyChildChecked\\\" :disabled=\\\"item.disabled\\\"\\n                            @click=\\\"handleItemCheckEvent(item)\\\" />\\n                        <span :class=\\\"['module-name', item.disabled ? ' disabled': '']\\\">{{ item.name }}</span>\\n                    </div>\\n                    <div class=\\\"row-container\\\" v-show=\\\"!item.collapsed\\\" v-for=\\\"child in item?.children\\\">\\n                        <CheckboxComp class=\\\"model-checkbox\\\" :check=\\\"child.checked\\\" :disabled=\\\"child.disabled\\\"\\n                            @click=\\\"handleItemCheckEvent(child)\\\" />\\n                        <i v-if=\\\"child.type != 'module'\\\" :class=\\\"'model-icon ' + ModelContants.getModelVisualInfo(child.type, undefined).icon\\\" \\n                            :style=\\\"{ color: ModelContants.getModelVisualInfo(child.type, undefined).color }\\\" />\\n                        \\n                        <span :class=\\\"['model-name', child.disabled ? ' disabled' : '']\\\">{{ child.name }}</span>\\n                        <div v-if=\\\"!child.usageType || child.usageType == 'appSettings'\\\" :class=\\\"['version-text', child.disabled ? 'disabled' : '']\\\" @click=\\\"versionDialog(child)\\\">\\n                            {{ child.version ? child.version : 'No version' }} <i v-if=\\\"!child.usageType || child.usageType == 'appSettings'\\\" :class=\\\"['mdi mdi-pencil-outline version-icon', child.disabled ? 'disabled' : '']\\\"></i>\\n                        </div>\\n                        <span v-if=\\\"child.disabled && !child.version\\\" class=\\\"button-tooltip\\\" \\n                            style=\\\"z-index: 1; width: 300px;\\\">No version available for publishing. <b>Stop Working</b> on this item and choose the <b>Ready to Publish</b> option.\\n                        </span>\\n                    </div>\\n                </div>\\n                <div v-else>\\n                    <div class=\\\"row-container\\\">\\n                        <CheckboxComp class=\\\"module-checkbox\\\" :check=\\\"item?.checked\\\" :disabled=\\\"item.disabled\\\"\\n                            @click=\\\"handleItemCheckEvent(item)\\\" />\\n                        <i v-if=\\\"item?.type == 'qjson'\\\" class=\\\"mdi mdi-palette qjson-color app-tier-model-icon\\\" />\\n                        <i v-else-if=\\\"item?.type == 'yaml'\\\" class=\\\"mdi mdi-cog-outline yaml-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'js'\\\"\\n                            class=\\\"mdi mdi-cog-outline js-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'css'\\\"\\n                            class=\\\"mdi mdi-music-accidental-sharp css-color app-tier-model-icon\\\" />\\n                        <i v-else-if=\\\"item?.type == 'process'\\\" class=\\\"mdi mdi-auto-fix process-color app-tier-model-icon\\\" />\\n                        <i v-else-if=\\\"item?.type == 'bpmn'\\\" class=\\\"mdi mdi-vector-polyline bpmn-color app-tier-model-icon\\\" />\\n                        <i v-else-if=\\\"item?.type == 'entityDesigner'\\\"\\n                            class=\\\"mdi mdi-database entity-designer-color app-tier-model-icon\\\" />\\n                        <i v-else-if=\\\"item?.type == 'flow'\\\" class=\\\"mdi mdi-step-forward bpmn-color app-tier-model-icon\\\" />\\n                        <i v-else-if=\\\"item.type == 'namedComponent'\\\" class=\\\"mdi mdi-cube-outline namedcomp-color app-tier-model-icon\\\"></i>\\n                        <span class=\\\"app-tier-model-name\\\">{{ item?.name }}\\n                            <span class=\\\"start-screen\\\" v-if=\\\"startScreen?.ID == item.id\\\">\\n                                <i class=\\\"mdi mdi-home-outline\\\"></i>\\n                                <span class=\\\"button-tooltip\\\" style=\\\"top: -30px; left: 2px; z-index: 1; width: 80px;\\\">Start\\n                                    Screen</span>\\n                            </span>\\n                        </span>\\n\\n                        <span v-if=\\\"!item.usageType\\\" :class=\\\"['version-text', item.disabled ? 'disabled' : '']\\\" @click=\\\"versionDialog(item)\\\">\\n                            {{ item.version ? item.version : 'No version' }} <i v-if=\\\"!item.usageType\\\" :class=\\\"['mdi mdi-pencil-outline version-icon', item.disabled ? 'disabled' : '']\\\"></i>\\n                        </span>\\n                        <span v-if=\\\"item.disabled && !item.version\\\" class=\\\"button-tooltip\\\"\\n                            style=\\\"z-index: 1; width: 300px;\\\">No version available for publishing. <b>Stop Working</b> on this item and choose the <b>Ready to Publish</b> option.\\n                        </span>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div v-if=\\\"props.screenType == 'Deploy' && props.platformSelection.web\\\" style=\\\"margin-bottom: 102px\\\">\\n            <div style=\\\"display: flex; align-items: center;\\\">\\n                <span class=\\\"custom-text environment\\\"> Publish To </span>\\n                <span class=\\\"publish-info\\\">\\n                    <i class=\\\"mdi mdi-information\\\"></i>\\n                    <span class=\\\"button-tooltip\\\" style=\\\"top: 460px; left: 96px; z-index: 1; width: 231px;\\\">Publish To\\n                        options may change depending on the module type you choose.</span>\\n                </span>\\n            </div>\\n\\n            <CustomSelect :options=\\\"publishTargets\\\" @input=\\\"onTargetSelect\\\" :selectedOption=\\\"selectedTarget\\\"\\n                :default=\\\"selectedTarget\\\" :disabledOptions=\\\"disabledOptions\\\" selectedClass=\\\"selected-environment\\\"\\n                placeholder=\\\"Select the publish environment of your application\\\" class=\\\"select-environment\\\">\\n            </CustomSelect>\\n        </div>\\n        <div v-if=\\\"props.screenType == 'Deploy' && !props.platformSelection.web && props.platformSelection.mobile\\\"\\n            class=\\\"mobile-publish-text\\\">\\n            <i class=\\\"mdi mdi-information\\\"></i>\\n            <span>Models and static files of your mobile application will be served from Public Cloud.</span>\\n\\n        </div>\\n        <div :class=\\\"['footer', props.screenType == 'Deploy' ? 'deploy' : 'export']\\\">\\n            <div :class=\\\"['cancel-button', props.screenType == 'Deploy' ? 'deploy' : '']\\\" @click=\\\"close\\\">Cancel</div>\\n            <div v-if=\\\"props.screenType == 'Export'\\\" :class=\\\"(saveButtonDisable ? ' button-disable' : '')\\\" @click=\\\"!saveButtonDisable && save()\\\">\\n                <span class=\\\"save-button \\\">DOWNLOAD</span>\\n                <span v-if=\\\"!isThereVersion\\\" class=\\\"button-tooltip\\\" \\n                    style=\\\"top: -80px; left: 626px; z-index: 1; width: 145px;\\\">There are no items ready to publish. At least one of your items must be ready to publish.</span>\\n                <span v-else-if=\\\"!isStartScreenOK\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -46px; left: 640px; z-index: 1; width: 120px;\\\">You need to include your start screen.</span>\\n                <span v-else-if=\\\"!isAllDependenciesOK\\\" class=\\\"button-tooltip\\\" \\n                    style=\\\"top: -95px; left: 644px; z-index: 1; width: 135px;\\\">{{ dependencyErrorStr }}</span>\\n            </div>\\n            <div v-if=\\\"props.screenType == 'Deploy'\\\" :class=\\\"[(saveButtonDisable ? ' button-disable' : '')]\\\" @click=\\\"!saveButtonDisable && save()\\\">\\n                <span class=\\\"save-button deploy\\\">PUBLISH</span>\\n                <span v-if=\\\"!isStartScreenOK\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -46px; left: 652px; z-index: 1; width: 120px;\\\">You need to include your start screen.</span>\\n                <span v-else-if=\\\"!selectedTarget\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -46px; left: 644px; z-index: 1; width: 123px;\\\">You need to select a publish environment.</span>\\n                <span v-else-if=\\\"!isThereVersion\\\" class=\\\"button-tooltip\\\" \\n                    style=\\\"top: -95px; left: 644px; z-index: 1; width: 135px;\\\">There are no items ready to publish. At least one of your items must be ready to publish.</span>\\n                <span v-else-if=\\\"!isAllDependenciesOK\\\" class=\\\"button-tooltip\\\" \\n                    style=\\\"top: -95px; left: 644px; z-index: 1; width: 135px;\\\">{{ dependencyErrorStr }}</span>\\n            </div>\\n\\n        </div>\\n    </div>\\n</template>\\n\\n\\n<script setup lang=\\\"ts\\\">\\nimport { CryptoHelper } from \\\"@stechquick/algae/lib/helpers/cryptoHelper\\\";\\nimport { PlateauHelper } from \\\"@stechquick/algae/lib/helpers/plateau/plateauHelper\\\";\\nimport { computed, defineAsyncComponent, onMounted, ref } from \\\"vue\\\";\\nimport { IOrganizationCloud } from \\\"../../../../../../../common/clean/domain/useCases/ICloudProvider\\\";\\nimport { DeployType, ICreateDeployJobParam, ICreateExportJobParam, IExportItem, IExportJobData, IPlatformSelection, IProcessConfigModelItem } from \\\"../../../../../../../common/qCloudTemp/exporter\\\";\\nimport { ModelContants } from \\\"../../../../../../../common/qCloudTemp/modelContants\\\";\\nimport { IQJsonAdditionals, UsageType } from \\\"../../../../../../../common/qCloudTemp/quickCloud\\\";\\nimport { container } from \\\"../../../../../domain/core/diContainer\\\";\\nimport { IQCloudApi } from \\\"../../../../../domain/infrastructure/IQCloudApi\\\";\\nimport { IModel, IModelHistoryInfo, IModule } from \\\"../../../../../domain/model/models\\\";\\nimport { IDialog } from \\\"../../../../../domain/presentation/IDialog\\\";\\nimport { ICreateExportJob } from \\\"../../../../../domain/useCase/ICreateExportJob\\\";\\nimport { IDeployJobs } from \\\"../../../../../domain/useCase/IDeployJobs\\\";\\nimport { IJobUtils } from \\\"../../../../../domain/useCase/IJobUtils\\\";\\nimport { IListMultiModelVersions } from \\\"../../../../../domain/useCase/IListMultiModelVersions\\\";\\nimport { IModelUseCase } from \\\"../../../../../domain/useCase/IModelUseCase\\\";\\nimport { IPackJobs } from \\\"../../../../../domain/useCase/IPackJobs\\\";\\nimport { IUseCaseExecutor } from \\\"../../../../../domain/useCase/IUseCaseExecutor\\\";\\nimport { IViewModel } from \\\"../../../../../domain/viewModel/IViewModel\\\";\\nimport { IViewModelManager } from \\\"../../../../../domain/viewModel/IViewModelManager\\\";\\nimport CustomSelect from \\\"../../../components/customSelect.vue\\\";\\nimport CheckboxComp from \\\"../../checkboxComp.vue\\\";\\n\\ninterface ITableData {\\n    id: string;\\n    parentId?: string;\\n    collapsed?: boolean;\\n    anyChildChecked?: boolean;\\n    allChildChecked?: boolean;\\n    checked?: boolean;\\n    name: string;\\n    type: IModel[\\\"modelType\\\"] | IModule[\\\"objectType\\\"];\\n    version?: string;\\n    disabled?: boolean | true;\\n    children?: Array<ITableData>;\\n    usageType?: UsageType;\\n}\\n\\ninterface IDeployScreenAdditionalProps {\\n    screenType: \\\"Export\\\" | \\\"Deploy\\\";\\n    platformSelection: IPlatformSelection;\\n}\\n\\ninterface IDisabledOptions {\\n    index: number\\n    cause: string;\\n}\\n\\nconst props = defineProps<IDeployScreenAdditionalProps>();\\nconst viewModel = container.resolve<IViewModel>(IViewModel);\\nconst viewModelManager = container.resolve<IViewModelManager>(IViewModelManager);\\nconst dialog = container.resolve<IDialog>(IDialog);\\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\\nconst modelUseCase = container.resolve<IModelUseCase>(IModelUseCase);\\nconst deployJobsUseCase = container.resolve<IDeployJobs>(IDeployJobs);\\nconst qcloudApi = container.resolve<IQCloudApi>(IQCloudApi);\\nconst packJobsUseCase = container.resolve<IPackJobs>(IPackJobs);\\nconst jobUtils = container.resolve<IJobUtils>(IJobUtils);\\nconst emit = defineEmits([\\\"close\\\"]);\\nconst items = ref<Array<ITableData>>([]);\\nconst validations = ref<boolean>(true);\\nconst selectedTarget = ref<string>(\\\"\\\");\\nconst disabledOptions = ref<Array<IDisabledOptions>>();\\nconst publishTargets = ref<Array<string>>();\\nconst modelHistories = ref<Map<string, Array<IModelHistoryInfo>>>();\\nconst startScreen = ref<IModel>();\\nconst dependencyMap = ref<Map<string, { dependedTo: Array<string>, dependedBy: Array<string>}>>();\\nconst dependencyErrorStr = ref<string>('');\\n\\nonMounted(async () => {\\n    await initVersions();\\n    initDependencies();\\n    handleItems();\\n    props.screenType == \\\"Deploy\\\" && syncPublishTargets();\\n    validations.value = validate();\\n})\\n\\nconst allChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == \\\"module\\\" && e.allChildChecked).length);\\nconst anyChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == \\\"module\\\" && !e.allChildChecked && e.anyChildChecked).length);\\nconst checkedRootLevelModelsCount = computed(() => items.value.filter(e => e.type != \\\"module\\\" && e.checked).length);\\nconst totalRootLevelCount = computed(() => items.value.length);\\nconst saveButtonDisable = computed(() => (props.screenType == \\\"Deploy\\\" && props.platformSelection.web && selectedTarget.value == \\\"\\\") || !validations.value || !items.value.some((item) => item.checked || item.anyChildChecked) || (props.screenType == \\\"Export\\\" && !validateStartScreen()) || !validateDependencies());\\nconst mainCheckboxState = computed(() => items.value.length == allChildCheckedModulesCount.value ? true \\n        : (anyChildCheckedModulesCount.value + checkedRootLevelModelsCount.value > 0  ? false : undefined));\\nconst isThereVersion = computed(() => checkMaxVersionOfAllItems());\\nconst isAllDependenciesOK = computed(validateDependencies)\\nconst isStartScreenOK = computed(validateStartScreen)\\n\\nfunction validate() {\\n    let result = true;\\n    const modules = items.value.filter(e => e.type == \\\"module\\\" && e.anyChildChecked);\\n    const appLayerItems = items.value.filter(e => e.type == \\\"qjson\\\" && e.checked);\\n\\n    startScreen.value = (viewModel.studio.items as Array<IModel>).find(item => item.isRootPage);\\n    if(!startScreen.value)\\n        return false;\\n\\n    if (props.screenType == \\\"Deploy\\\") {\\n        if (modules.length > 0)\\n            result = modules.map(e => e.children).filter(e => !e?.find(f => f.type == \\\"entityDesigner\\\" && f.checked)).length <= 0\\n\\n        let isApplicationWillDeploy = appLayerItems.length > 0;\\n        if (isApplicationWillDeploy) {\\n            result = appLayerItems\\n                .map(e => viewModel.studio.items.find(item => item.ID == e.id) as IModel)\\n                .findIndex(e => ((e.additionals as IQJsonAdditionals).isRootPage)) != -1;\\n        }\\n    }\\n\\n    return result;\\n}\\n\\nfunction validateDependencies() {\\n    \\n    const checkMap = new Map<string, boolean>();\\n    items.value.forEach(item => {\\n        if(item.type == 'module' && item.children && item.children.length > 0)\\n            item.children.forEach(child => checkMap.set(child.id, child.checked == true))\\n        else\\n            checkMap.set(item.id, item.checked == true)\\n    })\\n\\n    const mustBeCheckedMap = new Map<string, Array<string>>();\\n    dependencyMap.value?.forEach((deps, id) => {\\n        if(!checkMap.get(id)) \\n            return;\\n\\n        deps.dependedTo.forEach(dependedId => {\\n            if(checkMap.get(dependedId))\\n                return;\\n\\n            if(mustBeCheckedMap.has(id)){\\n                const vals = mustBeCheckedMap.get(id)!\\n                vals.push(dependedId)\\n                mustBeCheckedMap.set(id, vals)\\n            }else {\\n                mustBeCheckedMap.set(id, [dependedId])\\n            }\\n            \\n        });\\n    })\\n\\n    //set deps error text\\n    const [firstItemID] = mustBeCheckedMap.keys();\\n    if(firstItemID) {\\n        const firstItemDeps = mustBeCheckedMap.get(firstItemID);\\n        const firstItemDepStr = firstItemDeps ? firstItemDeps.map(findItem).map(e => e?.name).join(', ') : '';\\n        dependencyErrorStr.value =`Select ${firstItemDepStr} first. ${findItem(firstItemID)?.name} depends on ${firstItemDepStr}.`\\n    }\\n\\n    return mustBeCheckedMap.size == 0\\n}\\n\\nfunction validateStartScreen() {\\n    return (items.value.find((item) => item.id == startScreen.value?.ID))?.checked\\n}\\n\\nfunction mobileFilter(model: IModel) {\\n    return props.platformSelection.web || !props.platformSelection.mobile ||\\n        !(model.modelType == \\\"bpmn\\\" || model.modelType == \\\"entityDesigner\\\" || model.modelType == \\\"process\\\");\\n}\\n\\nfunction findItem (ID: string) {\\n    for(const item of items.value){\\n        if(item.type != 'module' && item.id == ID)\\n            return item;\\n        if(item.type == 'module' && item.children && item.children.length> 0 ){\\n            const f = item.children.find(e => e.id == ID)\\n            if(f) return f\\n        }\\n    }\\n}\\n\\nasync function initVersions() {\\n    const modelIDs = Array<string>();\\n    viewModelManager.flatMapItems(viewModel.studio.items, (item, path) => {\\n        if (item.objectType != \\\"model\\\") { return; }\\n        modelIDs.push(item.ID);\\n        return item;\\n    });\\n\\n    modelHistories.value = await executor.executeUseCase<IListMultiModelVersions>(IListMultiModelVersions, { modelIDs });\\n}\\n\\nfunction initDependencies() {\\n    const map = new Map<string, { dependedTo: Array<string>, dependedBy: Array<string>}>();\\n    \\n    const setDependencies = (item: IModel) => {\\n        if(item.objectType != \\\"model\\\") return;\\n        const depsBy = modelUseCase.getWhichDependsToThisModel(item.ID);\\n        map.set(item.ID, {\\n            dependedBy: depsBy ? depsBy.map(e => e.ID): Array<string>(), \\n            dependedTo: item.dependentModels ? item.dependentModels.map(e => e.modelId) : Array<string>()\\n        });\\n    }\\n    viewModel.studio.items.forEach(item => {\\n        if(item.objectType == 'module' && item.children && item.children.length > 0){\\n            item.children.forEach(e => setDependencies(e as IModel))\\n            return;\\n        }\\n        setDependencies(item as IModel)\\n    })\\n\\n    dependencyMap.value = map;\\n}\\n\\nfunction isModelDepended(item: ITableData) {\\n    const deps = dependencyMap.value?.get(item.id)?.dependedBy\\n    if(!deps) return false;\\n\\n    return deps.some(dep => items.value.some(item => {\\n        if(item.type == 'module' && item.anyChildChecked){\\n            return item.children?.some(child => child.checked && child.id == dep)\\n        }\\n        return item.id == dep && item.checked\\n    }));\\n}\\n\\nasync function handleItems() {\\n    items.value = viewModel.studio.items\\n        .filter((item) => item.objectType == \\\"module\\\" && item.children.length > 0)\\n        .map((item) => {\\n            const tableData: ITableData = {\\n                id: item.ID,\\n                collapsed: true,\\n                name: item.name,\\n                type: \\\"module\\\",\\n                children: (item as IModule).children\\n                    .filter((child) => child.objectType == \\\"model\\\")\\n                    .filter(e => !props || props.screenType == \\\"Export\\\" || mobileFilter(e as IModel))\\n                    .map(child => child as IModel)\\n                    .map(child => {\\n                        const maxVersion = getItemMaxVersion(child)\\n                        return {\\n                            id: child.ID,\\n                            parentId: item.ID,\\n                            checked: maxVersion ? true : child.isUnmodifiable,\\n                            disabled: maxVersion ? false : !child.isUnmodifiable,\\n                            name: child.name,\\n                            type: (child as IModel).modelType,\\n                            version: child.isUnmodifiable ? 'latest' : maxVersion,\\n                        } as ITableData\\n                    })\\n            }\\n            handleParentCheckedStatus(tableData);\\n            return tableData;\\n        });\\n\\n    viewModel.studio.items\\n        .filter((item) => item.objectType == \\\"model\\\" && item.usageType != \\\"appSettings\\\" && item.usageType != \\\"appAssetList\\\")\\n        .map(item => item as IModel)\\n        .forEach((item) => {\\n            const maxVersion = getItemMaxVersion(item as IModel)\\n            items.value.push({\\n                    id: item.ID,\\n                    name: item.name,\\n                    checked: maxVersion || item.modelType==\\\"appSettings\\\" ? true : item.isUnmodifiable,\\n                    disabled: maxVersion || item.modelType==\\\"appSettings\\\" ? false : !item.isUnmodifiable,\\n                    type: (item as IModel).modelType,\\n                    version: item.isUnmodifiable || item.modelType==\\\"appSettings\\\" ? 'latest' : maxVersion,\\n                });\\n        });\\n    const uiSettingsID = CryptoHelper.CreateGuid();\\n    const appSettings = viewModel.studio.items.filter((item) => item.objectType == \\\"model\\\" && item.usageType == \\\"appSettings\\\") as Array<IModel>;\\n    const uiSettings: ITableData = {\\n        id: uiSettingsID,\\n        collapsed: true,\\n        name: \\\"UI Settings\\\",\\n        type: \\\"module\\\",\\n        children: appSettings.map(settings => {\\n            const maxVersion = getItemMaxVersion(settings)\\n            return {\\n                id: settings.ID,\\n                parentId: uiSettingsID,\\n                name: settings.name,\\n                type: settings.modelType,\\n                checked: maxVersion != undefined,\\n                usageType: settings?.usageType,\\n                disabled: !maxVersion,\\n                version: maxVersion,\\n            }\\n        }) as Array<ITableData>,\\n    };\\n    handleParentCheckedStatus(uiSettings);\\n\\n    const uiAssetID = CryptoHelper.CreateGuid();\\n    const appAssetList = viewModel.studio.items.filter((item) => item.objectType == \\\"model\\\" && item.usageType == \\\"appAssetList\\\") as Array<IModel>;\\n    const uiAssetList: ITableData = {\\n        id: uiAssetID,\\n        collapsed: true,\\n        name: \\\"Styled Components\\\",\\n        type: \\\"module\\\",\\n        anyChildChecked: true,\\n        allChildChecked: true,\\n        children: appAssetList.map((asset) => ({\\n            id: asset.ID,\\n            parentId: uiSettingsID,\\n            name: asset.name,\\n            type: asset.modelType,\\n            checked: true,\\n            usageType: asset?.usageType,\\n        })) as Array<ITableData>,\\n    };\\n    handleParentCheckedStatus(uiAssetList);\\n\\n    items.value.unshift(uiAssetList);\\n    items.value.unshift(uiSettings);\\n    console.log(\\\"items => \\\", items.value);\\n}\\n\\nfunction getItemMaxVersion(item: IModel): string | undefined {\\n    if (!modelHistories.value?.has(item.ID))\\n        return undefined;\\n\\n    const versions = modelHistories.value.get(item.ID);\\n    if (!versions)\\n        return undefined;\\n\\n    const findMaxVersion = (versions: Array<string>) => {\\n        const versionNumbers = versions.map(v => {\\n            const parts: Array<string> = v.split(\\\".\\\");\\n            return parseInt(parts[0]) * 10 + parseInt(parts[1]) * 1;\\n        })\\n\\n        versionNumbers.sort((a, b) => b - a);\\n\\n        const maxVersion = versionNumbers[0];\\n        return `${Math.floor(maxVersion / 10)}.${maxVersion % 10}`;\\n    }\\n\\n    return findMaxVersion(versions.map(e => e.version!));\\n\\n}\\nfunction checkMaxVersionOfAllItems() {\\n    let isThereVersion: boolean = false;\\n    items.value.forEach(item => {\\n        if(item.type == \\\"module\\\") {\\n            item.children?.forEach(child => {\\n                if(child.version) {\\n                    isThereVersion = true;\\n                }\\n                \\n            })\\n        }\\n        else {\\n            if(item.version) {\\n                isThereVersion = true;\\n            }\\n        }\\n    })\\n    return isThereVersion;\\n}\\nfunction handleModuleCountCheckboxEvent(value: boolean) {\\n    items.value.filter(e => !e.disabled).forEach((item) => {\\n        item.checked = value;\\n        const allItemsCheckable = item.allChildChecked != undefined && item.children && item.children.length > 0 && !item.children.some(c => c.disabled);\\n        if (allItemsCheckable) item.allChildChecked = value;\\n        if (item.anyChildChecked != undefined) item.anyChildChecked = value;\\n        if (item.children) item.children.filter(c => !c.disabled).forEach((child) => (child.checked = value));\\n    });\\n\\n    validations.value = validate();\\n    props.screenType == \\\"Deploy\\\" && syncPublishTargets();\\n}\\n\\nfunction handleCollapse(item: ITableData) {\\n    item.collapsed = !item.collapsed;\\n}\\n\\nfunction checkAllDependents(item: ITableData) {\\n    if(item.disabled || item.checked) return;\\n\\n    item.checked = true\\n    item.parentId && handleParentCheckedStatus(items.value.find((i) => i.id == item.parentId)!);\\n\\n    const deps = dependencyMap.value?.get(item.id)?.dependedTo\\n    if(!deps) return;\\n\\n    deps.forEach(dep => {\\n        items.value.forEach(item => {\\n            if(item.type == 'module' && !item.allChildChecked){\\n                const willCheckItem = item.children?.find(child => !child.checked && child.id == dep)\\n                willCheckItem && checkAllDependents(willCheckItem)\\n                handleParentCheckedStatus(item)\\n                return;\\n            }\\n\\n            if(!item.checked && item.id == dep) {\\n                checkAllDependents(item)\\n                item.parentId && handleParentCheckedStatus(items.value.find((i) => i.id == item.parentId)!)\\n            }\\n        })\\n    });\\n}\\n\\nfunction handleItemCheckEvent(item: ITableData) {\\n    if(item.disabled || isModelDepended(item))\\n        return;\\n\\n    if(item.type != \\\"module\\\") {\\n        if(item.checked){\\n            item.checked = false;\\n            item.parentId && handleParentCheckedStatus(items.value.find((i) => i.id == item.parentId)!)\\n        } else {\\n            checkAllDependents(item)\\n        }\\n    } else {\\n        if (item.children && item.children.filter(c => !c.disabled).length > 0) {\\n            if (item.anyChildChecked) {\\n                item.children.filter(c => !c.disabled).forEach(child => child.checked = false);\\n                item.checked = false;\\n                handleParentCheckedStatus(item);\\n            } else {\\n                item.children.forEach(checkAllDependents);\\n                item.checked = true;\\n            }\\n        }\\n        else {\\n            item.checked = !item.checked;\\n            item.allChildChecked = false;\\n        }\\n    }\\n\\n    validations.value = validate();\\n    props.screenType == \\\"Deploy\\\" && syncPublishTargets();\\n}\\n\\nfunction handleParentCheckedStatus(item: ITableData) {\\n    item.disabled = item.children && (item.children.length == 0 || !item.children?.some(child => !child.disabled))\\n    item.allChildChecked = item.children && item.children.length > 0 && !item.children.some((child) => !child.checked || child.disabled);\\n    item.anyChildChecked = item.children?.some((child) => child.checked && !child.disabled);\\n}\\n\\nfunction syncPublishTargets() {\\n    publishTargets.value = []; disabledOptions.value = [];\\n\\n    const targets = viewModel.user?.selectedOrganization?.actions?.publish?.targets;\\n    if (!targets)\\n        return;\\n\\n    const isSelectAnyItem = items.value.find(e => e.anyChildChecked || e.checked);\\n    if (!isSelectAnyItem) {\\n        publishTargets.value = Object.entries(targets).map(e => cloudTargetMap(e[0])!);\\n        const disabledOptionList = Array<IDisabledOptions>();\\n        for (let i = 0; i < publishTargets.value.length; i++) {\\n            disabledOptionList.push({ index: i, cause: \\\"You need to include items to publish.\\\" })\\n        }\\n        disabledOptions.value = disabledOptionList;\\n        return;\\n    }\\n\\n    const checkedPublishTargets = checkAndSetDisabledCauses(targets);\\n    const sortedTargets = checkedPublishTargets.sort((e, f) => (!e.cause === !f.cause) ? 0 : e.cause ? 1 : -1);\\n\\n    const disabledOptionList = Array<IDisabledOptions>();\\n    for (let i = 0; i < sortedTargets.length; i++) {\\n        const cause = sortedTargets[i].cause;\\n        if (cause) disabledOptionList.push({ index: i, cause })\\n    }\\n    disabledOptions.value = disabledOptionList;\\n    publishTargets.value = sortedTargets.map(e => e.optionName);\\n\\n    selectedTarget.value = !sortedTargets[0].cause ? sortedTargets[0].optionName : \\\"\\\";\\n}\\n\\nfunction checkAndSetDisabledCauses(targets: Record<keyof IOrganizationCloud, boolean>) {\\n    const list = Array<{ optionName: string, cause?: string }>();\\n\\n    Object.keys(targets).forEach(e => {\\n        const key = e as keyof IOrganizationCloud;\\n        const value = targets[key];\\n        const optionName = cloudTargetMap(key)!;\\n        if (!value)\\n            return list.push({ optionName, cause: \\\"You are not authorized to publish to this target.\\\" });\\n\\n\\n        switch (key) {\\n            case \\\"azure\\\":\\n                const traverseSelectedItems = (status: boolean, items?: Array<ITableData>) => {\\n                    if (!items || items.length == 0) { return status; }\\n                    for (const item of items) {\\n                        if (item.checked || item.anyChildChecked) {\\n                            if (item.type == \\\"module\\\") {\\n                                status = traverseSelectedItems(status, item.children);\\n                            }\\n                            if (item.type == \\\"entityDesigner\\\" || item.type == \\\"bpmn\\\" || item.type == \\\"process\\\") {\\n                                status = false;\\n                                break;\\n                            }\\n                        }\\n\\n                    }\\n                    return status;\\n                }\\n\\n                const status = traverseSelectedItems(true, items.value);\\n                if (!status)\\n                    return list.push({ optionName, cause: \\\"Entity and process models cannot be published to this target.\\\" });\\n                break;\\n            case \\\"plateauGCP\\\":\\n                if (props.platformSelection.mobile)\\n                    return list.push({ optionName, cause: \\\"This target is not available for mobile publishing.\\\" });\\n\\n                const modulesHasNotAnEDModel =  items.value.filter(e => e.name != \\\"UI Settings\\\").find(e => e.type == \\\"module\\\" && e.anyChildChecked && e.children?.some(c => c.checked && (c.type == \\\"bpmn\\\" || c.type == \\\"process\\\")) && !e.children?.some(c => c.type == \\\"entityDesigner\\\" && c.checked))\\n                if (modulesHasNotAnEDModel)\\n                    return list.push({optionName, cause: `This target not available. Selected module '${modulesHasNotAnEDModel.name}' has not any Data Model.`})\\n                break;\\n        }\\n\\n        list.push({ optionName });\\n    })\\n\\n    return list;\\n}\\n\\nfunction versionDialog(item: ITableData) {\\n    const clickedNode = { id: item.id, state: { checked: item.checked }, text: item.name, type: item.type, version: item.version };\\n    const hasAnyVersion = modelHistories.value?.has(item.id);\\n    const options = { clickedNode, cb: (version: string) => { item.version = version } } as any;\\n    if (hasAnyVersion) {\\n        options.versions = modelHistories.value?.get(item.id)\\n    }\\n    dialog.showDialog(\\n        defineAsyncComponent(() => import(\\\"../../application/modelVersionDialog.vue\\\")),\\n        { closable: true, title: \\\"Change Version\\\", width: \\\"900px\\\", maxHeight: \\\"500px\\\", overflow: \\\"auto\\\" }, options\\n    );\\n}\\n\\nfunction close() {\\n    emit(\\\"close\\\");\\n}\\n\\nasync function save() {\\n    executor.execute(\\n        async () => {\\n            const initAsGroup = async () => {\\n                const groupID = CryptoHelper.CreateGuid();\\n                await initHistory(groupID);\\n                await packJob(groupID);\\n                return groupID;\\n            }\\n\\n            const isFlowBackend = viewModel.user?.selectedOrganization?.applications.flow;\\n\\n            switch (props.screenType) {\\n                case \\\"Export\\\":\\n                    //FIXME: Export backende tasinmali. layer, groupId backendde setlenmeli.\\n                    if(isFlowBackend) {\\n                        const deployItems = await createAzureDeployItems();\\n                        await packJobsUseCase.createPackJobs([{\\n                            appID: viewModel.studio.appId,\\n                            exportType: \\\"qui\\\",\\n                            selectionData: deployItems\\n                        }]);\\n                        break;\\n                    }\\n\\n                    const groupID = await initAsGroup();\\n                    await createExportJob(groupID);\\n                    break;\\n                case \\\"Deploy\\\":\\n                    if(props.platformSelection.mobile) {\\n                        const deployItems = await createAzureDeployItems();\\n                        await deployJobsUseCase.createAppDeployJob(deployItems, props.platformSelection);\\n                    }\\n                    switch (cloudTargetMap(selectedTarget.value!, true) as keyof IOrganizationCloud) {\\n                        case \\\"plateauGCP\\\":\\n                            const groupID = await initAsGroup();\\n                            await createDeployJob(groupID);\\n                            break;\\n                        case \\\"azure\\\":\\n                            const deployItems = await createAzureDeployItems();\\n                            await deployJobsUseCase.createAppDeployJob(deployItems, props.platformSelection);\\n                            break;\\n                    }\\n            }\\n            emit(\\\"close\\\");\\n        },\\n        { loading: true });\\n}\\n\\nasync function createAzureDeployItems() {\\n    const deployItems: Array<IExportItem> = [];\\n    const itemIdObj: Record<string, { item: IModel, path: string }> = {};\\n\\n    viewModelManager.flatMapItems(viewModel.studio.items, (item, path) => {\\n        if (item.objectType != \\\"model\\\") { return; }\\n        itemIdObj[item.ID] = { item, path };\\n        return item;\\n    });\\n\\n    const traverseSelectedItems = (items?: Array<ITableData>) => {\\n        if (!items || items.length == 0) { return; }\\n        items.filter(e => e.checked || e.anyChildChecked).forEach(item => {\\n            if (item.type == \\\"module\\\") {\\n                traverseSelectedItems(item.children);\\n                return;\\n            }\\n\\n            const itemMap = itemIdObj[item.id];\\n\\n            const deployItem: IExportItem = {\\n                id: item.id,\\n                name: jobUtils.getFileFullname(itemMap.item),\\n                path: itemMap.path,\\n                type: jobUtils.getItemType(itemMap.item),\\n                ver: item.version || \\\"latest\\\",\\n                isRootPage: itemMap.item.isRootPage,\\n                ownerType: 'application',\\n                ownerName: viewModel.studio.appName,\\n                size: itemMap.item.size,\\n            };\\n            deployItems.push(deployItem)\\n        });\\n    };\\n\\n    traverseSelectedItems(items.value);\\n\\n    return deployItems;\\n}\\n\\nasync function initHistory(groupID: string) {\\n    return qcloudApi.initPublishHistory({\\n        appID: viewModel.studio.appId,\\n        ID: groupID,\\n        isMultiStep: true,\\n        type: props.screenType == \\\"Deploy\\\" ? \\\"publish\\\" : \\\"download\\\",\\n        cloudProvider: props.screenType == \\\"Deploy\\\" ? cloudTargetMap(selectedTarget.value!, true) as keyof IOrganizationCloud : undefined,\\n        platform: props.platformSelection\\n    });\\n}\\n\\nasync function packJob(groupID: string) {\\n    let exportItemMap = new Map<string, Array<IExportItem>>();\\n    const appName = viewModel.studio.appName;\\n\\n    const itemIdObj: Record<string, { item: IModel, path: string }> = {};\\n    viewModelManager.flatMapItems(viewModel.studio.items, (item, path) => {\\n        if (item.objectType != \\\"model\\\") { return; }\\n        itemIdObj[item.ID] = { item, path };\\n        return item;\\n    });\\n\\n    const createExportObject = (tableItem: ITableData) => {\\n        const item = itemIdObj[tableItem.id].item;\\n        const isAppItem = item.modelType == 'qjson' ;\\n        return {\\n            id: tableItem.id,\\n            ver: tableItem.version,\\n            type: jobUtils.getItemType(item),\\n            path: itemIdObj[tableItem.id].path,\\n            name: jobUtils.getFileFullname(item),\\n            ownerType: isAppItem ? 'application' : item.parent.objectType,\\n            ownerName: isAppItem ? appName : item.parent.name,\\n        } as IExportItem;\\n    }\\n\\n    const addToExportItem = (key: string, obj: IExportItem) => {\\n        key = obj.ownerType == 'module' ? `mdl-${key}` : key; // for same named module and app\\n        let items = exportItemMap.get(key);\\n        if(items && items.length > 0){\\n            items.push(obj);\\n            exportItemMap.set(key, items);\\n        } else\\n            exportItemMap.set(key, [obj]);\\n    }\\n\\n    items.value.filter(e => e.checked ?? e.anyChildChecked).forEach((asset) => {\\n        if (asset.type == 'module') {\\n            asset.children!.filter(e => e.checked).forEach(child => {\\n                const obj = createExportObject(child);\\n                if (obj.type == \\\"entityDesigner\\\")\\n                    obj.entityGenerationDomain = viewModel.user!.selectedOrganization!.actions?.entityGenerationDomain;\\n\\n                const useSeperateModule = obj.type == 'bpmn' || obj.type == 'entityDesigner' || obj.type == 'process';\\n                addToExportItem(useSeperateModule ? asset.name : appName, obj);\\n            });\\n        } else {\\n            const obj = createExportObject(asset);\\n            if (asset.type == 'qjson'){\\n                const isRootPage = viewModel.studio.items.find(i => i.objectType == \\\"model\\\" && i.modelType == \\\"qjson\\\" && (i.additionals as IQJsonAdditionals).isRootPage && i.ID == asset.id);\\n                obj.isRootPage = isRootPage ? true : undefined;\\n            }\\n            addToExportItem(appName, obj);\\n        }\\n    })\\n\\n    let jobs = Array<ICreateExportJobParam>();\\n    exportItemMap.forEach((v, k) => {\\n        jobs.push({\\n            appID: viewModel.studio.appId,\\n            exportType: \\\"qui\\\",\\n            selectionData: v,\\n            cause: props.screenType == 'Export' ? 'download': \\\"publish\\\",\\n            layer: 0,\\n            groupID: groupID\\n        })\\n    })\\n\\n    await packJobsUseCase.createPackJobs(jobs);\\n}\\n\\nasync function createExportJob(groupID: string) {\\n    await executor.executeUseCase<ICreateExportJob>(ICreateExportJob, {\\n        appID: viewModel.studio.appId,\\n        exportType: \\\"qui\\\",\\n        selectionData: [],\\n        layer: 1,\\n        groupID: groupID\\n    });\\n}\\n\\nasync function createDeployJob(groupID: string) {\\n    //1-(n) L1- deployJob(build)\\n    let packages = await qcloudApi.getExportJobsByGroupId({ groupID })\\n        .then(jobs => jobs.jobs.map(e => {\\n            const jobData = e.jobData as IExportJobData;\\n            return {\\n                ownerName: jobData.items[0].ownerName,\\n                jobID: e.jobID,\\n                type: jobData.items[0].ownerType,\\n                mainDir: getDeployableArchiveRoot(jobData)\\n            }\\n        }));\\n\\n    if (!packages || packages.length <= 0)\\n        return;\\n\\n    let buildJobs = Array<ICreateDeployJobParam>();\\n    packages.forEach(pack => {\\n        buildJobs.push({\\n            appID: viewModel.studio.appId,\\n            type: \\\"build\\\",\\n            package: {\\n                type: pack.type as DeployType,\\n                name: pack.ownerName!,\\n                mainDir: pack.mainDir,\\n                zip: `${pack.jobID}.zip`,\\n            },\\n            layer: 1,\\n            groupID: groupID\\n        })\\n    })\\n\\n    await deployJobsUseCase.createBuildJobs(buildJobs);\\n\\n    //2-(1) L2- deployJob(deployment)\\n    let jobParam: ICreateDeployJobParam = {\\n        appID: viewModel.studio.appId,\\n        type: \\\"deployment\\\",\\n        deployConfig: {\\n            process: {\\n                configModelIDs: getProcessConfigList(),\\n                enabled: items.value.some(e => e.anyChildChecked && e.children?.some(e => e.checked && e.type == \\\"bpmn\\\"))\\n            }\\n        },\\n        layer: 2,\\n        groupID: groupID\\n    }\\n\\n    await deployJobsUseCase.startDeploymentJob(jobParam);\\n}\\n\\nfunction getProcessConfigList() {\\n    let processConfigList = Array<IProcessConfigModelItem>();\\n    items.value.forEach((asset) => {\\n        if (asset.type == \\\"module\\\" && asset.anyChildChecked && asset.children) {\\n            const usingService = asset.children.find(c => c.type == \\\"entityDesigner\\\");\\n            if (!usingService)\\n                return;\\n\\n            const serviceName = PlateauHelper.getServiceNameFromModel(usingService.name);\\n            asset.children.forEach(child => {\\n                if (child.checked && child.type == \\\"process\\\") {\\n                    processConfigList.push({\\n                        moduleName: serviceName,\\n                        model: {\\n                            id: child.id,\\n                            name: child.name,\\n                            version: child.version!\\n                        }\\n                    })\\n                }\\n            })\\n        }\\n    })\\n    return processConfigList;\\n}\\n\\nfunction getDeployableArchiveRoot(jobData: IExportJobData) {\\n    if (jobData.items[0].ownerType == \\\"module\\\") {\\n        let edModel = jobData.items.find(e => e.type == \\\"entityDesigner\\\");\\n        if (!edModel)\\n            throw new Error(\\\"!!! this module cannot deploy. Because its have not a service\\\");\\n        return PlateauHelper.getServiceNameFromModel(edModel.name);\\n    }\\n    return PlateauHelper.getQuiPackageNameFromAppName(jobData.app.name);\\n}\\n\\nfunction cloudTargetMap(name: string, pureVal: boolean = false) {\\n    const map: Record<keyof IOrganizationCloud, string> = { azure: \\\"Public Cloud\\\", plateauGCP: \\\"Plateau Platform Playground\\\" };\\n    if (pureVal) {\\n        return Object.keys(map).find(e => {\\n            if (map[e as keyof IOrganizationCloud] === name) {\\n                return true;\\n            }\\n        })\\n    } else {\\n        let key = Object.keys(map).includes(name);\\n        if (!key)\\n            return;\\n        return map[name as keyof IOrganizationCloud];\\n    }\\n}\\n\\nfunction onTargetSelect(value: string) {\\n    selectedTarget.value = value\\n}\\n\\n</script>\\n\\n\\n<style scoped>\\n.container {\\n    padding: 32px 20px 20px;\\n}\\n\\n.settings-container {\\n    position: relative;\\n    top: 0px;\\n    left: 0px;\\n}\\n\\n.custom-text {\\n    /* position: absolute; */\\n    font-family: 'Roboto';\\n    font-style: normal;\\n    font-weight: 500;\\n    font-size: 15px;\\n    line-height: 18px;\\n    /* left: 24px; */\\n    color: #212121;\\n}\\n\\n/* .custom-text.title{\\n    top: 92px;\\n}\\n\\n.custom-text.environment{\\n    top: 174px;\\n} */\\n\\n.radio-button {\\n    position: absolute;\\n    top: 60px;\\n    left: 20px;\\n    cursor: pointer;\\n}\\n\\n.radio-text {\\n    position: absolute;\\n    top: 59px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n    user-select: none;\\n    cursor: pointer;\\n}\\n\\n.existing-app-url {\\n    position: absolute;\\n    width: 760px;\\n    height: 40px;\\n    top: 114px;\\n    left: 20px;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #bcbcbc;\\n    border-radius: 4px;\\n    font: normal normal normal 14px/19px Roboto;\\n    letter-spacing: 0px;\\n    padding: 10px 0px 10px 10px;\\n}\\n\\n.url-error {\\n    border: 1px solid red;\\n}\\n\\n.url-disable {\\n    opacity: 0.5;\\n}\\n\\n.existing-app-url::placeholder {\\n    color: #bcbcbc;\\n    user-select: none;\\n}\\n\\n.modules-selected-checkbox {\\n    cursor: pointer;\\n}\\n\\n.modules-selected-text {\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #757575;\\n    margin: 0 0 13px 30px;\\n    ;\\n}\\n\\n/* .modules-selected-text.deploy {\\n    top: 257px;\\n} */\\n\\n.text-number {\\n    font: normal normal bold 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.modules-datatable {\\n    width: 760px;\\n    height: 288px;\\n    border: 1px solid #bcbcbc;\\n    overflow-x: hidden;\\n    overflow-y: auto;\\n    margin-bottom: 20px;\\n}\\n\\n/* .modules-datatable.deploy {\\n    top: 286px;\\n} */\\n\\n.modules-datatable::-webkit-scrollbar {\\n    width: 4px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar-thumb {\\n    background: #bcbcbc 0% 0% no-repeat padding-box;\\n    border-radius: 10px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar-thumb:hover {\\n    background: #555;\\n}\\n\\n.row-container {\\n    width: 100%;\\n    height: 36px;\\n    position: relative;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #e0e0e0;\\n}\\n\\n.chevron {\\n    position: absolute;\\n    left: 4px;\\n    color: #757575;\\n    font-size: 24px;\\n}\\n\\n.chevron.disabled {\\n    pointer-events: none;\\n    color: #D5D5D5;\\n}\\n\\n.module-checkbox {\\n    position: absolute;\\n    top: 10px;\\n    left: 43px;\\n    cursor: pointer;\\n}\\n\\n.module-name {\\n    position: absolute;\\n    top: 9px;\\n    left: 69px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.module-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.model-checkbox {\\n    position: absolute;\\n    top: 10px;\\n    left: 59px;\\n    cursor: pointer;\\n}\\n\\n.model-icon {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 85px;\\n}\\n\\n.app-tier-model-icon {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 69px;\\n}\\n\\n.app-tier-model-name {\\n    position: absolute;\\n    top: 10px;\\n    left: 87px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.app-tier-model-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.model-name {\\n    position: absolute;\\n    top: 9px;\\n    left: 103px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.model-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.version-text {\\n    margin: 10px 7px 10px auto;\\n    display: table;\\n    font: normal normal normal 12px/16px Roboto;\\n    color: #757575;\\n    cursor: pointer;\\n    user-select: none;\\n}\\n\\n.version-text.disabled {\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n\\n.version-icon {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #D5D5D5;\\n}\\n\\n.version-icon.disabled {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #EEEEEE;\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n\\n.footer {\\n    position: relative;\\n    width: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: end;\\n}\\n\\n.footer.deploy {\\n    position: relative;\\n    width: 100%;\\n}\\n\\n.footer.export {\\n    margin-top: 102px;\\n}\\n\\n.cancel-button {\\n    border-radius: 4px;\\n    user-select: none;\\n    font-style: normal;\\n    font-weight: 500;\\n    font-family: \\\"ROBOTO\\\";\\n    font-size: 15px;\\n    color: #757575;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n\\n\\n\\n.save-button {\\n    background: #151233 0% 0% no-repeat padding-box;\\n    border-radius: 4px;\\n    user-select: none;\\n    font-weight: 500;\\n    font-size: 15px;\\n    color: #ffffff;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n\\n.mobile-publish-text,\\n.web-publish-text {\\n    padding: 5px 12px;\\n    margin-bottom: 52px;\\n    width: 100%;\\n    color: #757575;\\n    font-size: 14px;\\n    background: #F5F5FA;\\n    border-radius: 4px;\\n    display: flex;\\n    align-items: center;\\n}\\n\\n.mobile-publish-text i,\\n.web-publish-text i {\\n    font-size: 24px;\\n    color: #151233;\\n    margin-right: 4px;\\n}\\n\\n.save-button.deploy {\\n    padding: 10px 16px;\\n}\\n\\n.button-disable .save-button {\\n    color: #757575;\\n    cursor: default;\\n}\\n\\n.button-disable .save-button:hover+.button-tooltip,\\n.start-screen:hover .button-tooltip,\\n.row-container:hover .button-tooltip,\\n.publish-info:hover .button-tooltip {\\n    visibility: visible;\\n    transition: opacity 0.3s ease-out 1s;\\n    opacity: 1;\\n}\\n\\n.button-tooltip {\\n    visibility: hidden;\\n    position: absolute;\\n    background: #757575;\\n    color: #FFFFFF;\\n    font-size: 11px;\\n    font-family: 'Roboto';\\n    text-align: center;\\n    border-radius: 4px;\\n    letter-spacing: 0.2px;\\n    padding: 6px 8px 6px 8px;\\n    top: 56px;\\n    left: 63px;\\n    opacity: 0;\\n}\\n\\n.publish-info {\\n    color: #757575;\\n    font-size: 20px;\\n    margin-left: 10px;\\n}\\n\\n.qjson-color {\\n    color: #449dd1;\\n}\\n\\n.yaml-color {\\n    color: #449dd1;\\n}\\n.namedcomp-color {\\n    color: #212121;\\n}\\n\\n.js-color {\\n    color: #449dd1;\\n}\\n\\n.css-color {\\n    color: #151233;\\n}\\n\\n.process-color {\\n    color: #007c77;\\n}\\n\\n.bpmn-color {\\n    color: #007c77;\\n}\\n\\n.entity-designer-color {\\n    color: #e9724c;\\n}\\n\\n.select-environment {\\n    width: 100%;\\n    font-size: 15px;\\n    height: 40px;\\n    line-height: 40px;\\n    margin-top: 4px\\n}\\n</style>\\n\\n<style>\\n.selected-environment {\\n    background-color: transparent;\\n    border-radius: 4px;\\n    border: 1px solid #BCBCBC;\\n    color: #212121;\\n    padding-left: 12px;\\n}\\n\\n.custom-placeholder:empty:before {\\n    color: #BCBCBC !important;\\n    font-weight: 400;\\n}\\n\\n.custom-select .items .option {\\n    font-size: 14px;\\n    padding-left: 12px;\\n    line-height: 32px;\\n}\\n\\n.custom-select .items .option:hover {\\n    background-color: #EEEEEE;\\n    color: #212121;\\n}\\n\\n.custom-select .items .option.disabled:hover {\\n    background-color: #FFFFFF;\\n    color: #212121;\\n}\\n\\n.custom-select.select-environment .items {\\n    margin-top: 4px;\\n    color: #212121;\\n    border-radius: 4px;\\n    border: 1px solid #E3E3E3;\\n    overflow: hidden;\\n    background-color: #FFFFFF;\\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\\n    position: static !important;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","export class CryptoHelper {\n    private static guidCounter = 0;\n\n    /**\n     * \n     * @param base number layout (number of distinct digits) (10'luk sayı düzeni, 16'lık sayı düzeni)\n     * @param length length of word. Max value: 16\n     */\n    public static GetRandomWord(base: number, length: number) {\n        return Math.random().toString(base).substring(2, length + 2);\n    }\n\n    /**\n     * Ex: be945482-jf10-40d1-a50d-rzxa2c41fdcu\n     */\n    public static CreateGuid() {\n        return [8, 4, 4, 4, 6].map(length => this.GetRandomWord(36, length)).join(\"-\") + ((++CryptoHelper.guidCounter) % 2150000000).toString(36);\n    }\n}","\nexport class PlateauHelper {\n    public static purify = (str: string) => str.replace(/[^a-zA-Z0-9]/g, \"\").toLowerCase();\n\n    public static getPlateauEnvironmentName = (envPrefix: string, appName: string) => {\n        if(!envPrefix || !appName)\n            throw new Error(\"Environment name prefix or application name not found!!!\" );\n\n        envPrefix = (envPrefix.endsWith(\"-\") ? envPrefix : (envPrefix + \"-\")).toLowerCase();\n        appName = PlateauHelper.purify(appName);\n        return `${envPrefix}${appName}`;\n    }\n\n    public static getQuiPackageNameFromAppName = (appName: string) => `${PlateauHelper.purify(appName)}-qui`;\n\n    public static getApplicationUINameFromQuiPkg = (quiPackageName: string) => PlateauHelper.purify(quiPackageName.replace(\"-qui\", \"ui\"));\n    \n    public static getApplicationHostNamePrefix = (appName: string) => `${PlateauHelper.purify(appName)}ui`;\n\n    public static getServiceNameFromModel = (modelName: string) => PlateauHelper.purify(modelName.replace(\".dm\", \"\"));\n}\n","import { IQJsonAdditionals, ModelAdditionals, ModelType } from \"./quickCloud\";\n\ntype ValueOf<Type> = Type extends any ? Type[keyof Type] : never;\ntype FieldValueOf<Type extends typeof typeSafety, Field extends keyof Type[keyof Type]> = Type[keyof Type][Field]\nexport type EditorModelTypes = ValueOf<FieldValueOf<typeof EditorConsts, \"modelKeys\">>;\nlet typeSafety: Record<string, { modelKeys: Record<string, string> }>;\nexport const EditorConsts = typeSafety = {\n    quick: {\n        modelKeys: {\n            self: \"qjson\" as \"qjson\",\n        }\n    },\n    flow: {\n        modelKeys: {\n            design: \"flow-design\" as \"flow-design\",\n            runtime: \"flow-runtime\" as \"flow-runtime\",\n        }\n    },\n    flowEntity: {\n        modelKeys: {\n            single: \"flow-entity\" as \"flow-entity\",\n        }\n    },\n};\n\ninterface ModelVisualInfo {\n    icon: string;\n    color: string;\n}\nconst cssJsTsYaml: ModelVisualInfo = { color: \"#449DD1\", icon: \"mdi mdi-cog-outline\" };\nconst jpegJpgPngSvgGif: ModelVisualInfo = { color: \"#212121\", icon: \"mdi mdi-image-outline \" }\nconst modelVisuals: Record<ModelType, ModelVisualInfo | Error | ((additional: ModelAdditionals | undefined) => ModelVisualInfo)> = {\n    qjson: (additionals) => {\n        if (additionals && (additionals as IQJsonAdditionals).qjsonType == \"quickComponent\") {\n            return { color: \"#449DD1\", icon: \"mdi mdi-palette-outline\" };\n        }\n        return { color: \"#449DD1\", icon: \"mdi mdi-palette\" };\n    },\n    css: { color: \"#151233\", icon: \"mdi mdi-music-accidental-sharp\" },\n    js: cssJsTsYaml,\n    ts: cssJsTsYaml,\n    yaml: cssJsTsYaml,\n    entityDesigner: { color: \"#E9724C\", icon: \"mdi mdi-database\" },\n    bpmn: { color: \"#007C77\", icon: \"mdi mdi-vector-polyline\" },\n    process: { color: \"#007C77\", icon: \"mdi mdi-auto-fix\" },\n    flow: { color: \"#007C77\", icon: \"mdi mdi-step-forward\" },\n    flowEntity: { color: \"blue\", icon: \"mdi mdi-step-forward\" },\n    namedComponent: { color: \"#212121\", icon: \"mdi mdi-cube-outline\" },\n    step: new Error(\"unimplemented for namedComponent\"),\n    jpeg: jpegJpgPngSvgGif,\n    jpg: jpegJpgPngSvgGif,\n    png: jpegJpgPngSvgGif,\n    svg: jpegJpgPngSvgGif,\n    gif: jpegJpgPngSvgGif,\n    lottie: jpegJpgPngSvgGif,\n    appSettings: new Error(\"unimplemented for appSettings\"),\n}\n\nexport class ModelContants {\n    public static getModelVisualInfo(modelType: ModelType, modelAdditionals: ModelAdditionals | undefined): ModelVisualInfo {\n        const retVal = modelVisuals[modelType];\n        if (retVal instanceof Error) { throw retVal; }\n        return typeof retVal == \"function\" ? retVal(modelAdditionals) : retVal;\n    }\n}","import { ExportType, ICreateDeployJobParam, ICreateExportJobParam, IDeployJobItem, IExportItem, IExportJobDbItem, IExportJobHistoryDbItem, IExportJobHistoryRequest, IGetExportJobsByGroupIDRequest, IInitJobHistoryRequest, IListExportJobsResponse, JobType } from \"../../../../common/qCloudTemp/exporter\";\nimport { ICustomLivePreview, IDefaultLivePreview, ILivePreview, ILivePreviewSettingsRetval } from \"../../../../common/qCloudTemp/livePreview\";\nimport { IEditorTypes, IOrganization } from \"../../../../common/qCloudTemp/membership\";\nimport { AppSettingsModelKeys, ExtensionType, IAppDeployParameters, IModelBody, IModelBodyObject, IModelInfo, IOrganizationActions, IQCloudLogItem, ITenantDefinitions, ModelAdditionals, ModelType, UsageType } from \"../../../../common/qCloudTemp/quickCloud\";\nimport { IModuleProduct, IModuleProductVer } from \"../../../../common/qCloudTemp/store\";\nimport { IAddFeedbackRequest, IAddFeedbackResponse, IAddOrUpdatePreferencesResponse, IBoGetAzureCredentialsResponse, IBoListApplicationsResponse, IBoListOrganizationUsersResponse, IBoRemoveUserFromOrganizationRequest, IBoUpdateOrganizationResponse, ICreateOrganizationResponse, IDeleteInvitationRequest, IGetMainStatisticInfoResponse, IGetModelResponse, IGetOrganizationInfoResponse, IGetOrganizationUsersRequest, IGetOrganizationUsersResponse, IGetPreferencesResponse, IGetProfileResponse, IGetUserInfoResponse, IInvitationRequest, IListInvitationsResponse, IListOrganizationsResponse, IListUserOrganizationsResponse, IListUsersResponse, IRemoveUserFromOrganizationRequest, ISignInResponse, IUpdateApplicationRequest, IUpdateInvitationRequest, IUpdateModelResponse, IUpdateProfileResponse, IUpdateUserInfoResponse } from \"../../../../common/qCloudTemp/symDtoObjects\";\nimport { ITemplateInfo, TemplateType } from '../../../../common/qCloudTemp/template';\nimport { IApplication, IApplicationSettingsItem, IExportJobArtifactInfoItem, IExportJobItem, IExportJobStepItem, IExportViewItem, IFolder, ILoggedInUser, IModel, IModelHistoryInfo, IModule, IModuleSettingsItem, ITreeviewItem, ModelHistoryType } from \"../model/models\";\n\n\nexport interface IGetModelHistoryResponse extends IGetModelResponse {\n    modelID: string;\n    historyType: string;\n    ownerItem: string;\n    version: string\n}\nexport interface IlistExportJobStepLogsResponse {\n    logs: Array<string>;\n}\nexport interface IDublicateModelResponse {\n    modelInfo: IModelInfo;\n    modelBody: Array<IModelBody>;\n}\n\nexport interface IUpdateLivePreviewRequest {\n    links?: ICustomLivePreview[\"links\"];\n    deepLinkParam?: ICustomLivePreview[\"deepLinkParam\"];\n    models?: ICustomLivePreview[\"models\"];\n    expiryDate?: ICustomLivePreview[\"expiryDate\"];\n    password?: ICustomLivePreview[\"password\"];\n    selected?: ICustomLivePreview[\"selected\"];\n}\n\nexport interface ICreateLivePreviewRequest {\n    appID: string;\n    type: ILivePreview[\"type\"];\n    links?: ICustomLivePreview[\"links\"];\n    deepLinkParam?: ICustomLivePreview[\"deepLinkParam\"];\n    models?: ICustomLivePreview[\"models\"];\n    expiryDate?: ICustomLivePreview[\"expiryDate\"];\n    password?: ICustomLivePreview[\"password\"];\n    selected: ICustomLivePreview[\"selected\"];\n}\n\nexport interface ICreateModelFromTemplateParam {\n    name: string;\n    parentObjectId: string;\n    modelInfoID: string;\n    modelType: ModelType;\n    modelAdditionals: ModelAdditionals;\n}\n\nexport interface IListModelsRequest {\n    applicationID: string;\n    getModelBodies?: boolean;\n    usageType?: UsageType;\n}\n\nexport interface ICreateUserRequest { \n    name: string;\n    mailAddress: string;\n    password: string;\n}\n\nexport interface IUpdateModelParams { \n    name?: string,\n    model?: Array<IModelBodyObject>,\n    checkin?: boolean,\n    release?: boolean,\n    publish?: boolean,\n    shortComment?: string,\n    comment?: string,\n    parentObject?: IApplication | IModule | IFolder,\n    modelType?: ModelType,\n    modelAdditionals?: ModelAdditionals,\n    ownerUser?: ILoggedInUser\n}\n\nexport interface IUpdateUserInfo {\n    createOrgLimit: number; \n}\nexport interface IUpdateOrganization {\n    accountType?: \"premium\" | \"beta\";\n    createAppLimit: number;\n    actions: IOrganizationActions;\n    applications: IEditorTypes;\n    environmentPrefix: string;\n}\n// export interface IUpdateApplicationRequestParams {\n//     name?: string;\n//     description?: string;\n//     logo?: string;\n//     color?: string;\n//     ownerUser?: ILoggedInUser;\n//     deployParameters?: IAppDeployParameters;\n//     shortID24?: string;\n//     exportSettings?: IApplicationExportSettings;\n// }\n\nexport interface IQCloudApi {\n    signIn(invitationId?: string): Promise<ISignInResponse>;\n    signOut(): Promise<void>;\n    getProfile(): Promise<IGetProfileResponse>;\n    updateProfile(properties: { name: string, lastName: string, role: string, }): Promise<IUpdateProfileResponse>;\n    getPreferences(): Promise<IGetPreferencesResponse>;\n    updatePreferences(preferences: { emailConsent: boolean; }): Promise<IAddOrUpdatePreferencesResponse>\n    listUserOrganizations(): Promise<Array<IListUserOrganizationsResponse>>;\n    getOrganization(organizationId: IOrganization[\"id\"]): Promise<IOrganization>;\n    listUserInvitations(): Promise<IListInvitationsResponse>;\n    createOrganization(name: IOrganization[\"name\"]): Promise<ICreateOrganizationResponse>;\n\n\n\n    createModel(params: { name: string, parentObject: IApplication | IModule | IFolder, modelBody: Array<IModelBodyObject> | undefined, modelType: ModelType, extension?: ExtensionType, modelAdditionals?: ModelAdditionals, usageType?: UsageType, key?: AppSettingsModelKeys }): PromiseLike<IModel>;\n    createModule(name: string, options: { description?: string; applicationID?: string }): Promise<IModule>;\n    createApplication(params: { name: string, description?: string, logo?: string, color?: string, deployParameters?: IAppDeployParameters }): PromiseLike<{ application: IApplication, organization: IOrganization }>;\n    createLog(logItem: IQCloudLogItem): Promise<{ ID: string; }>;\n    getModelInfo(ID: string, params?: { checkoutControl?: boolean; createCheckout?: boolean; isGetCheckoutUserInfo?: boolean }): Promise<IGetModelResponse>;\n    getModel(ID: string, params?: { checkoutControl?: boolean, createCheckout?: boolean, retrieveBody?: boolean, isGetCheckoutUserInfo?:boolean }): Promise<IGetModelResponse>;\n    getModelBody(ID: string): Promise<{ ID: string, model: IGetModelResponse[\"model\"] }>;\n    updateModel(ID: string, params: IUpdateModelParams): Promise<IUpdateModelResponse>; // don't use directly -> modelUseCase.updatemodel()\n    updateModule(ID: string, params: { name?: string, description?: string, ownerUser?: ILoggedInUser, }): PromiseLike<{ module: IModule }>;\n    updateFolder(ID: string, params: { name: string }): Promise<void>;\n    updateApplication(ID: string, params: IUpdateApplicationRequest): PromiseLike<{ app: IApplication }>;\n    deleteModel(ID: string, addHistory?: boolean): PromiseLike<void>;\n    deleteModule(ID: string, addHistory?: boolean): PromiseLike<void>;\n    deleteFolder(ID: string, addHistory?: boolean): PromiseLike<void>;\n    addDeleteApplicationJob(ID: string, addHistory?: boolean): PromiseLike<void>;\n    duplicateModel(sourceModel: IModel, name: string): Promise<IModel>;\n    listApplications(getDetails?: boolean): PromiseLike<Array<IApplication>>;\n    listModules(applicationID?: string): Promise<Array<IModule>>;\n    listModels(options: IListModelsRequest): Promise<Array<IGetModelResponse>>;\n    getLPSettings(appID: string): Promise<Record<AppSettingsModelKeys, ILivePreviewSettingsRetval>>;\n    listModuleChildItems(module: IModule): Promise<Array<IModel>>;\n    listModelBodies(modelIDs: Array<string>): Promise<Array<IModelBody>>;\n    getApplicationDetails(appID: string): PromiseLike<IApplication[\"details\"]>;\n    getApplication(appID: string): Promise<IApplication>;\n    getExportTypes(): Promise<Array<{ name: ExportType; text: string; }>>;\n    getExportSelectionData(applicationID: string, exportType: ExportType): Promise<Array<IExportViewItem>>;\n    listModelHistories(modelID: string, historyType?: ModelHistoryType | undefined): Promise<IModelHistoryInfo[]>;\n    listMultiModelHistories(modelIDs: Array<string>, historyType?: ModelHistoryType | undefined): Promise<IModelHistoryInfo[]>;\n    getModelHistory(historyID: string): Promise<IGetModelHistoryResponse>;\n    createExportJob(appID: string, exportType: ExportType, exportItems: Array<IExportItem>, groupID?: string, layer?: number): Promise<IExportJobItem>;\n    createDeployJobs(deployJobs: Array<IDeployJobItem>, isGroup: boolean): Promise<void>;\n    createBuildJobs(jobs: Array<ICreateDeployJobParam>): Promise<Array<IExportJobDbItem>>;\n    addDeletePlateauEnvJob(appID: string): Promise<void>;\n    startDeploymentJob(param: ICreateDeployJobParam): Promise<IExportJobDbItem>;\n    createPackJobs(jobs: Array<ICreateExportJobParam>): Promise<Array<IExportJobDbItem>>;\n    getExportJobsByGroupId(req: IGetExportJobsByGroupIDRequest): Promise<IListExportJobsResponse>;\n    listExportJobs(jobType: JobType, options?: { appID?: string }): Promise<Array<IExportJobItem>>;\n    initPublishHistory(request: IInitJobHistoryRequest): Promise<IExportJobHistoryDbItem>;\n    listApplicationJobHistory(request: IExportJobHistoryRequest): Promise<Array<IExportJobHistoryDbItem>>;\n    listExportJobSteps(ID: string, isMultiStep?: boolean): Promise<Array<IExportJobStepItem>>;\n    listExportJobStepLogs(stepID: string): Promise<IlistExportJobStepLogsResponse>;\n    listExportJobArtifacts(ID: string): Promise<Array<IExportJobArtifactInfoItem>>;\n    listTreeviewItems(applicationID: string): Promise<Array<ITreeviewItem>>;\n    updateApplicationSettings(settings: { modulesSettings?: Array<IModuleSettingsItem>, applicationSettings?: IApplicationSettingsItem }): Promise<void>;\n    attachModuletoApplication(appID: string, moduleID: string): Promise<void>;\n    detachModuleFromApplication(appID: string, moduleID: string): Promise<void>;\n    getairesponsivesuggestions({ layoutModel: { } }): Promise<object>; // TODO:MEGA object types are temporary for demo.\n    getApplicationUISettings(applicationID?: string): Promise<Array<ITenantDefinitions>>;\n    getApplicationDeploySettings(applicationID: string): Promise<ITenantDefinitions[]>;\n    getTenantDefinition(ID: string): Promise<ITenantDefinitions>;\n    setRootScreen(ID: string): Promise<void>;\n    putModuleInStore(objectID: string): Promise<{ product: IModuleProduct; productVer: IModuleProductVer }>;\n    createLivePreview(options?: ICreateLivePreviewRequest): Promise<ILivePreview>;\n    updateLivePreview(ID: string, options?: IUpdateLivePreviewRequest): PromiseLike<void>;\n    updateSelectedLivePreview(appID: string): PromiseLike<void>;\n    getLivePreviewInfo(appID: string, options?: { selected?: boolean; type?: ILivePreview[\"type\"]; }): Promise<ICustomLivePreview | IDefaultLivePreview>;\n    listLivePreviewInfo(appID: string): Promise<Array<ICustomLivePreview | IDefaultLivePreview>>;\n    listTemplateInfos(type?: TemplateType): Promise<Array<ITemplateInfo>>;\n    createModelFromTemplate(params: {modelInfoID: ITemplateInfo[\"ID\"], modelType: ModelType, name: string, parentObject: IApplication | IModule | IFolder, modelAdditionals?: ModelAdditionals }): Promise<IModel>;\n\n    createInvitation(request: IInvitationRequest): Promise<void>;\n    listOrganizationUsers(request: IGetOrganizationUsersRequest): Promise<IGetOrganizationUsersResponse>;\n    listOrganizationInvitations(): Promise<IListInvitationsResponse>;\n    deleteInvitation(request: IDeleteInvitationRequest): Promise<void>;\n    removeUserFromOrganization(request: IRemoveUserFromOrganizationRequest): Promise<void>;\n    updateInvitation(request: IUpdateInvitationRequest): Promise<void>;\n\n    createFeedback(request: IAddFeedbackRequest): Promise<IAddFeedbackResponse>;\n\n    // BACK OFFICE\n    getMainStatisticInfo(): Promise<IGetMainStatisticInfoResponse>;\n    getUserInfo(userId: string): Promise<IGetUserInfoResponse>;\n    getOrganizationInfo(organizationId: string): Promise<IGetOrganizationInfoResponse>;\n    listUsers(): Promise<IListUsersResponse>;\n    listOrganizations(): Promise<IListOrganizationsResponse>;\n    updateUserInfo(userId: string, properties: IUpdateUserInfo): Promise<IUpdateUserInfoResponse>;\n    bo_removeUserFromOrganization(properties: IBoRemoveUserFromOrganizationRequest): Promise<void>;\n    bo_listOrganizationUsers(organizationId: string): Promise<IBoListOrganizationUsersResponse>;\n    bo_listOrganizationApps(organizationId: string): Promise<IBoListApplicationsResponse>;\n    bo_addDeleteOrganizationJob(organizationId: string, organizationName: string): Promise<void>;\n    bo_updateOrganization(organizationId: string, properties: IUpdateOrganization): Promise<IBoUpdateOrganizationResponse>;\n    bo_getAzureCredentials(): Promise<IBoGetAzureCredentialsResponse>;\n}\n\nexport const IQCloudApi = Symbol.for(\"IQCloudApi\");","import { ICreateExportJobParam } from \"../../../../common/qCloudTemp/exporter\";\nimport { IUseCase } from \"./IUseCase\";\n\nexport interface ICreateExportJob extends IUseCase<void, ICreateExportJobParam> {}\n\nexport const ICreateExportJob = Symbol.for(\"ICreateExportJob\");","import { ICreateDeployJobParam, IDeployJobItem, IExportItem, IPlatformSelection } from \"../../../../common/qCloudTemp/exporter\";\nimport { IProviderGetLastBuildStatusResponse } from \"../infrastructure/IProviderApi\";\n\nexport interface IDeployJobs {\n    createAppDeployJob(deployItems: Array<IExportItem>, platformSelection?: IPlatformSelection ): Promise<void>;\n    startDeploymentJob(deployJobs: ICreateDeployJobParam): Promise<void>;\n    createBuildJobs(deployJobs: Array<ICreateDeployJobParam>): Promise<void>;\n    checkRepoHasService(repoIds: Array<number>): Promise<Array<{ repoId: number; exist: boolean }>>;\n    getRepoNameById(repoId: number): Promise<string>;\n    getProductConfigInfo(productRepoId: number, quiRepoId?: number): Promise<{ domain: string; quiName?: string }>;\n    getLastBuildStatus(jobName: string): Promise<IProviderGetLastBuildStatusResponse>;\n}\n\nexport const IDeployJobs = Symbol.for(\"IDeployJobs\");","import { IExportItem } from \"../../../../common/qCloudTemp/exporter\";\nimport { IExportViewItem, IModel } from \"../model/models\";\n\nexport interface IJobUtils {\n    //settingTypeMapper(fileName: string): IExportItem[\"type\"];\n    getItemType(item: IExportViewItem | IModel): IExportItem[\"type\"];\n    getFileFullname(item: IExportViewItem | IModel): string;\n}\n\nexport const IJobUtils = Symbol.for(\"IJobUtils\");","import { IModelHistoryInfo } from \"../model/models\";\nimport { IUseCase } from \"./IUseCase\";\n\nexport interface IListMultiModelVersionsParam {\n    modelIDs: Array<string>;\n}\nexport interface IListMultiModelVersions extends IUseCase<Map<string, Array<IModelHistoryInfo>>, IListMultiModelVersionsParam> {\n\n}\nexport const IListMultiModelVersions = Symbol.for(\"IListMultiModelVersions\");","import { ICreateExportJobParam, IExportJobDbItem } from \"../../../../common/qCloudTemp/exporter\";\nexport interface IPackJobs {\n    createPackJobs(jobs: Array<ICreateExportJobParam>): Promise<Array<IExportJobDbItem>>;\n}\n\nexport const IPackJobs = Symbol.for(\"IPackJobs\");","<template>\n  <div class=\"custom-select\" :tabindex=\"tabindex\" @blur=\"open = false\">\n    <div :class=\"open ? 'open selected ' + selectedClass : 'selected ' + selectedClass\" @click=\"open = !open\">\n      <div v-if = \"selected\">{{ typeof selected === 'object' ? selected.name : selected }}\n        <i class=\"mdi mdi-chevron-down\"></i>\n        <i v-if=\"iconInSelect\" class=\"mdi mdi-close cleanIcon\" style=\"right: 30px\" @click=\"cleanSelected($event)\"></i>\n      </div>\n      <div v-else>\n        <span contenteditable=\"true\" :data-placeholder=\"placeholder\" class=\"custom-placeholder\"></span>\n        <i class=\"mdi mdi-chevron-down\"></i>\n      </div>\n    </div>\n    <div class=\"items\" :class=\"{ selectHide: !open }\" :style=\"{padding: extraButton ? '10px 0 0' : '10px 0'}\">\n      <div v-for=\"(option, i) of options\" :key=\"i\" @click=\"handleClick(option)\" :class=\"['option' , (props.disabledOptions && getDisabledOptionsText(i)) ? 'disabled' : '' ]\">\n        <span v-if=\"props.disabledOptions && getDisabledOptionsText(i)\" class=\"button-tooltip\" :style=\"{top: (i*32) + 85 + 'px'}\">{{getDisabledOptionsText(i)}}</span>\n        <div>{{typeof option === 'object' ? option.name : option }}</div>\n      </div>\n      <div v-if=\"extraButton\" class=\"button-div\" :style=\"{borderTop: extraButton ? '1px solid #EEEEEE' :  'none'}\" >\n        <div v-for=\"(button, index) in buttons\" :key=\"index\">\n            <div :id=\"button.buttonID\" :class=\"button.buttonClass + ' button'\" @click=\"open=false\">{{ button.buttonText }}</div>\n        </div>\n      </div>\n    </div>  \n  </div>\n</template>\n\n<script setup>\nimport { ref, watchEffect } from 'vue'\nconst emit = defineEmits([\"input\"]);\nconst props = defineProps({\n  options: {\n    type: Array,\n    required: true,\n  },\n  disabledOptions: {\n    type: Array,\n    required: false\n  },\n  default: {\n    type: String,\n    required: false,\n    default: '',\n  },\n  selectedOption: {\n    type: String,\n    required: false\n  },\n  tabindex: {\n    type: Number,\n    required: false,\n    default: 0,\n  },\n  placeholder: {\n    type: String,\n    required: false,\n    default: \"\",\n  },\n  selectedClass: {\n    type: String,\n    required: false,\n    default: \"\",\n  },\n  extraButton: {\n    type: Boolean,\n    required: false,\n    default: false,\n  },\n  iconInSelect: {\n    type: Boolean,\n    required: false,\n    default: false,\n    // validator: () => {\n    //   return (icon) => typeof icon.iconName === \"string\" && typeof icon.iconClass === \"string\" && typeof icon.iconFunc === \"function\"\n    // }\n  },\n  buttons: {\n    type: Array,\n    required: false,\n    default: () => [],\n    validator: (value) => {\n      return value.every(\n        (button) =>\n          typeof button === \"object\" &&\n          typeof button.buttonText === \"string\" &&\n          typeof button.buttonClass === \"string\" &&\n          typeof button.buttonID === \"string\"\n      );\n    },\n  },\n})\n\nconst open = ref(false);\nconst selected = ref(props.default ? props.default : null);\n\nwatchEffect(() => {\n  if(props && props.selectedOption){\n    selected.value = props.selectedOption;\n    open.value = false;\n  }\n});\n\nconst handleClick = (option) => {\n    if(typeof option === 'object'){\n      emit('input', option.id);\n      selected.value = option;\n      open.value = false;\n      emit('input', selected.value.id);\n    }\n    else if(typeof option === 'string') {\n      emit('input', option);\n      selected.value = option;\n      open.value = false;\n      emit('input', selected.value);\n    }\n}\n\nconst getDisabledOptionsText = (index) => {\n  const opt = props.disabledOptions.find(e => e.index == index);\n  if(opt)\n    return opt.cause;\n  return undefined;\n}\nconst cleanSelected = (event) => {\n  event.stopPropagation();\n  selected.value = null;\n  emit('input', selected.value);\n}\n</script>\n\n  \n  <style scoped>\n  /*You should put other CSS properties with same class names in the parent component's style tag that is not scoped.*/\n  * {\n    font-family: \"Roboto\"\n  }\n  .custom-select {\n    position: relative;\n    width: 100%;\n    text-align: left;\n    outline: none;\n  }\n  \n  .custom-select .selected {\n\n    cursor: pointer;\n    user-select: none;\n  }\n  \n  .custom-select .selected i {\n    position: absolute;\n    right: 10px;\n    float: right;\n  }\n  \n  .custom-select .items {\n    position: absolute;\n    left: 0;\n    right: 0;\n    z-index: 1;\n  }\n  \n  .custom-select .items .option {\n    cursor: pointer;\n    user-select: none;\n  }  \n  \n  .custom-select .items .option.disabled div {\n    cursor: default;\n    user-select: none;\n    opacity: 0.4;\n  } \n  .custom-select .items .option.disabled:active {\n    pointer-events: none;\n  }\n  \n  .selectHide {\n    display: none;\n  }\n  .button-div {\n    justify-content: center;\n    display: grid;\n    padding: 13px 0 19px;\n    margin-top: 10px\n  }\n  .button {\n    cursor: pointer;\n  }\n  .custom-placeholder:empty:before {\n    content:attr(data-placeholder);\n    color:#BCBCBC\n  }\n  .custom-placeholder:focus-visible {\n    outline: none;\n  }\n  .button-tooltip {\n    visibility: hidden;\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n    padding: 8px;\n    top: 39px;\n    left: 65px;\n    height: 30px;\n    position: absolute;\n    background: #757575;\n    color: #FFFFFF;\n    font-size: 12px;\n    line-height: 14px;\n    text-align: center;\n    border-radius: 4px;\n    letter-spacing: 0.2px;\n    opacity: 0;\n    z-index: 1;\n  }\n  .custom-select .items .option:hover .button-tooltip {\n    visibility: visible;\n    transition: opacity 0.3s ease-out 0.5s;\n    opacity: 1;\n  }\n  .cleanIcon {\n    display: none;\n  }\n  .selected:hover .cleanIcon{\n    display: inline-block;\n  }\n  </style>","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./customSelect.vue?vue&type=style&index=0&id=d120e788&scoped=true&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./customSelect.vue?vue&type=style&index=0&id=d120e788&scoped=true&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","import script from \"./customSelect.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./customSelect.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./customSelect.vue?vue&type=style&index=0&id=d120e788&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-d120e788\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { normalizeClass as _normalizeClass, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, unref as _unref, normalizeStyle as _normalizeStyle, createCommentVNode as _createCommentVNode, vShow as _vShow, withDirectives as _withDirectives, createStaticVNode as _createStaticVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-03b14658\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"container\" }\nconst _hoisted_2 = { class: \"text-number\" }\nconst _hoisted_3 = { class: \"text-number\" }\nconst _hoisted_4 = { key: 0 }\nconst _hoisted_5 = { class: \"row-container\" }\nconst _hoisted_6 = [\"onClick\"]\nconst _hoisted_7 = { class: \"row-container\" }\nconst _hoisted_8 = [\"onClick\"]\nconst _hoisted_9 = {\n  key: 2,\n  class: \"button-tooltip\",\n  style: {\"z-index\":\"1\",\"width\":\"300px\"}\n}\nconst _hoisted_10 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"b\", null, \"Stop Working\", -1 /* HOISTED */))\nconst _hoisted_11 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"b\", null, \"Ready to Publish\", -1 /* HOISTED */))\nconst _hoisted_12 = { key: 1 }\nconst _hoisted_13 = { class: \"row-container\" }\nconst _hoisted_14 = {\n  key: 0,\n  class: \"mdi mdi-palette qjson-color app-tier-model-icon\"\n}\nconst _hoisted_15 = {\n  key: 1,\n  class: \"mdi mdi-cog-outline yaml-color app-tier-model-icon\"\n}\nconst _hoisted_16 = {\n  key: 2,\n  class: \"mdi mdi-cog-outline js-color app-tier-model-icon\"\n}\nconst _hoisted_17 = {\n  key: 3,\n  class: \"mdi mdi-music-accidental-sharp css-color app-tier-model-icon\"\n}\nconst _hoisted_18 = {\n  key: 4,\n  class: \"mdi mdi-auto-fix process-color app-tier-model-icon\"\n}\nconst _hoisted_19 = {\n  key: 5,\n  class: \"mdi mdi-vector-polyline bpmn-color app-tier-model-icon\"\n}\nconst _hoisted_20 = {\n  key: 6,\n  class: \"mdi mdi-database entity-designer-color app-tier-model-icon\"\n}\nconst _hoisted_21 = {\n  key: 7,\n  class: \"mdi mdi-step-forward bpmn-color app-tier-model-icon\"\n}\nconst _hoisted_22 = {\n  key: 8,\n  class: \"mdi mdi-cube-outline namedcomp-color app-tier-model-icon\"\n}\nconst _hoisted_23 = { class: \"app-tier-model-name\" }\nconst _hoisted_24 = {\n  key: 0,\n  class: \"start-screen\"\n}\nconst _hoisted_25 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"mdi mdi-home-outline\" }, null, -1 /* HOISTED */))\nconst _hoisted_26 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"button-tooltip\",\n  style: {\"top\":\"-30px\",\"left\":\"2px\",\"z-index\":\"1\",\"width\":\"80px\"}\n}, \"Start Screen\", -1 /* HOISTED */))\nconst _hoisted_27 = [\n  _hoisted_25,\n  _hoisted_26\n]\nconst _hoisted_28 = [\"onClick\"]\nconst _hoisted_29 = {\n  key: 10,\n  class: \"button-tooltip\",\n  style: {\"z-index\":\"1\",\"width\":\"300px\"}\n}\nconst _hoisted_30 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"b\", null, \"Stop Working\", -1 /* HOISTED */))\nconst _hoisted_31 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"b\", null, \"Ready to Publish\", -1 /* HOISTED */))\nconst _hoisted_32 = {\n  key: 0,\n  style: {\"margin-bottom\":\"102px\"}\n}\nconst _hoisted_33 = /*#__PURE__*/_createStaticVNode(\"<div style=\\\"display:flex;align-items:center;\\\" data-v-03b14658><span class=\\\"custom-text environment\\\" data-v-03b14658> Publish To </span><span class=\\\"publish-info\\\" data-v-03b14658><i class=\\\"mdi mdi-information\\\" data-v-03b14658></i><span class=\\\"button-tooltip\\\" style=\\\"top:460px;left:96px;z-index:1;width:231px;\\\" data-v-03b14658>Publish To options may change depending on the module type you choose.</span></span></div>\", 1)\nconst _hoisted_34 = {\n  key: 1,\n  class: \"mobile-publish-text\"\n}\nconst _hoisted_35 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"mdi mdi-information\" }, null, -1 /* HOISTED */))\nconst _hoisted_36 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Models and static files of your mobile application will be served from Public Cloud.\", -1 /* HOISTED */))\nconst _hoisted_37 = [\n  _hoisted_35,\n  _hoisted_36\n]\nconst _hoisted_38 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"save-button\" }, \"DOWNLOAD\", -1 /* HOISTED */))\nconst _hoisted_39 = {\n  key: 0,\n  class: \"button-tooltip\",\n  style: {\"top\":\"-80px\",\"left\":\"626px\",\"z-index\":\"1\",\"width\":\"145px\"}\n}\nconst _hoisted_40 = {\n  key: 1,\n  class: \"button-tooltip\",\n  style: {\"top\":\"-46px\",\"left\":\"640px\",\"z-index\":\"1\",\"width\":\"120px\"}\n}\nconst _hoisted_41 = {\n  key: 2,\n  class: \"button-tooltip\",\n  style: {\"top\":\"-95px\",\"left\":\"644px\",\"z-index\":\"1\",\"width\":\"135px\"}\n}\nconst _hoisted_42 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"save-button deploy\" }, \"PUBLISH\", -1 /* HOISTED */))\nconst _hoisted_43 = {\n  key: 0,\n  class: \"button-tooltip\",\n  style: {\"top\":\"-46px\",\"left\":\"652px\",\"z-index\":\"1\",\"width\":\"120px\"}\n}\nconst _hoisted_44 = {\n  key: 1,\n  class: \"button-tooltip\",\n  style: {\"top\":\"-46px\",\"left\":\"644px\",\"z-index\":\"1\",\"width\":\"123px\"}\n}\nconst _hoisted_45 = {\n  key: 2,\n  class: \"button-tooltip\",\n  style: {\"top\":\"-95px\",\"left\":\"644px\",\"z-index\":\"1\",\"width\":\"135px\"}\n}\nconst _hoisted_46 = {\n  key: 3,\n  class: \"button-tooltip\",\n  style: {\"top\":\"-95px\",\"left\":\"644px\",\"z-index\":\"1\",\"width\":\"135px\"}\n}\n\nimport { CryptoHelper } from \"@stechquick/algae/lib/helpers/cryptoHelper\";\nimport { PlateauHelper } from \"@stechquick/algae/lib/helpers/plateau/plateauHelper\";\nimport { computed, defineAsyncComponent, onMounted, ref } from \"vue\";\nimport { IOrganizationCloud } from \"../../../../../../../common/clean/domain/useCases/ICloudProvider\";\nimport { DeployType, ICreateDeployJobParam, ICreateExportJobParam, IExportItem, IExportJobData, IPlatformSelection, IProcessConfigModelItem } from \"../../../../../../../common/qCloudTemp/exporter\";\nimport { ModelContants } from \"../../../../../../../common/qCloudTemp/modelContants\";\nimport { IQJsonAdditionals, UsageType } from \"../../../../../../../common/qCloudTemp/quickCloud\";\nimport { container } from \"../../../../../domain/core/diContainer\";\nimport { IQCloudApi } from \"../../../../../domain/infrastructure/IQCloudApi\";\nimport { IModel, IModelHistoryInfo, IModule } from \"../../../../../domain/model/models\";\nimport { IDialog } from \"../../../../../domain/presentation/IDialog\";\nimport { ICreateExportJob } from \"../../../../../domain/useCase/ICreateExportJob\";\nimport { IDeployJobs } from \"../../../../../domain/useCase/IDeployJobs\";\nimport { IJobUtils } from \"../../../../../domain/useCase/IJobUtils\";\nimport { IListMultiModelVersions } from \"../../../../../domain/useCase/IListMultiModelVersions\";\nimport { IModelUseCase } from \"../../../../../domain/useCase/IModelUseCase\";\nimport { IPackJobs } from \"../../../../../domain/useCase/IPackJobs\";\nimport { IUseCaseExecutor } from \"../../../../../domain/useCase/IUseCaseExecutor\";\nimport { IViewModel } from \"../../../../../domain/viewModel/IViewModel\";\nimport { IViewModelManager } from \"../../../../../domain/viewModel/IViewModelManager\";\nimport CustomSelect from \"../../../components/customSelect.vue\";\nimport CheckboxComp from \"../../checkboxComp.vue\";\n\ninterface ITableData {\n    id: string;\n    parentId?: string;\n    collapsed?: boolean;\n    anyChildChecked?: boolean;\n    allChildChecked?: boolean;\n    checked?: boolean;\n    name: string;\n    type: IModel[\"modelType\"] | IModule[\"objectType\"];\n    version?: string;\n    disabled?: boolean | true;\n    children?: Array<ITableData>;\n    usageType?: UsageType;\n}\n\ninterface IDeployScreenAdditionalProps {\n    screenType: \"Export\" | \"Deploy\";\n    platformSelection: IPlatformSelection;\n}\n\ninterface IDisabledOptions {\n    index: number\n    cause: string;\n}\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'publishDialog',\n  props: {\n    screenType: {},\n    platformSelection: {}\n  },\n  emits: [\"close\"],\n  setup(__props: any, { emit }) {\n\nconst props = __props;\n\n\nconst viewModel = container.resolve<IViewModel>(IViewModel);\nconst viewModelManager = container.resolve<IViewModelManager>(IViewModelManager);\nconst dialog = container.resolve<IDialog>(IDialog);\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\nconst modelUseCase = container.resolve<IModelUseCase>(IModelUseCase);\nconst deployJobsUseCase = container.resolve<IDeployJobs>(IDeployJobs);\nconst qcloudApi = container.resolve<IQCloudApi>(IQCloudApi);\nconst packJobsUseCase = container.resolve<IPackJobs>(IPackJobs);\nconst jobUtils = container.resolve<IJobUtils>(IJobUtils);\n\nconst items = ref<Array<ITableData>>([]);\nconst validations = ref<boolean>(true);\nconst selectedTarget = ref<string>(\"\");\nconst disabledOptions = ref<Array<IDisabledOptions>>();\nconst publishTargets = ref<Array<string>>();\nconst modelHistories = ref<Map<string, Array<IModelHistoryInfo>>>();\nconst startScreen = ref<IModel>();\nconst dependencyMap = ref<Map<string, { dependedTo: Array<string>, dependedBy: Array<string>}>>();\nconst dependencyErrorStr = ref<string>('');\n\nonMounted(async () => {\n    await initVersions();\n    initDependencies();\n    handleItems();\n    props.screenType == \"Deploy\" && syncPublishTargets();\n    validations.value = validate();\n})\n\nconst allChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == \"module\" && e.allChildChecked).length);\nconst anyChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == \"module\" && !e.allChildChecked && e.anyChildChecked).length);\nconst checkedRootLevelModelsCount = computed(() => items.value.filter(e => e.type != \"module\" && e.checked).length);\nconst totalRootLevelCount = computed(() => items.value.length);\nconst saveButtonDisable = computed(() => (props.screenType == \"Deploy\" && props.platformSelection.web && selectedTarget.value == \"\") || !validations.value || !items.value.some((item) => item.checked || item.anyChildChecked) || (props.screenType == \"Export\" && !validateStartScreen()) || !validateDependencies());\nconst mainCheckboxState = computed(() => items.value.length == allChildCheckedModulesCount.value ? true \n        : (anyChildCheckedModulesCount.value + checkedRootLevelModelsCount.value > 0  ? false : undefined));\nconst isThereVersion = computed(() => checkMaxVersionOfAllItems());\nconst isAllDependenciesOK = computed(validateDependencies)\nconst isStartScreenOK = computed(validateStartScreen)\n\nfunction validate() {\n    let result = true;\n    const modules = items.value.filter(e => e.type == \"module\" && e.anyChildChecked);\n    const appLayerItems = items.value.filter(e => e.type == \"qjson\" && e.checked);\n\n    startScreen.value = (viewModel.studio.items as Array<IModel>).find(item => item.isRootPage);\n    if(!startScreen.value)\n        return false;\n\n    if (props.screenType == \"Deploy\") {\n        if (modules.length > 0)\n            result = modules.map(e => e.children).filter(e => !e?.find(f => f.type == \"entityDesigner\" && f.checked)).length <= 0\n\n        let isApplicationWillDeploy = appLayerItems.length > 0;\n        if (isApplicationWillDeploy) {\n            result = appLayerItems\n                .map(e => viewModel.studio.items.find(item => item.ID == e.id) as IModel)\n                .findIndex(e => ((e.additionals as IQJsonAdditionals).isRootPage)) != -1;\n        }\n    }\n\n    return result;\n}\n\nfunction validateDependencies() {\n    \n    const checkMap = new Map<string, boolean>();\n    items.value.forEach(item => {\n        if(item.type == 'module' && item.children && item.children.length > 0)\n            item.children.forEach(child => checkMap.set(child.id, child.checked == true))\n        else\n            checkMap.set(item.id, item.checked == true)\n    })\n\n    const mustBeCheckedMap = new Map<string, Array<string>>();\n    dependencyMap.value?.forEach((deps, id) => {\n        if(!checkMap.get(id)) \n            return;\n\n        deps.dependedTo.forEach(dependedId => {\n            if(checkMap.get(dependedId))\n                return;\n\n            if(mustBeCheckedMap.has(id)){\n                const vals = mustBeCheckedMap.get(id)!\n                vals.push(dependedId)\n                mustBeCheckedMap.set(id, vals)\n            }else {\n                mustBeCheckedMap.set(id, [dependedId])\n            }\n            \n        });\n    })\n\n    //set deps error text\n    const [firstItemID] = mustBeCheckedMap.keys();\n    if(firstItemID) {\n        const firstItemDeps = mustBeCheckedMap.get(firstItemID);\n        const firstItemDepStr = firstItemDeps ? firstItemDeps.map(findItem).map(e => e?.name).join(', ') : '';\n        dependencyErrorStr.value =`Select ${firstItemDepStr} first. ${findItem(firstItemID)?.name} depends on ${firstItemDepStr}.`\n    }\n\n    return mustBeCheckedMap.size == 0\n}\n\nfunction validateStartScreen() {\n    return (items.value.find((item) => item.id == startScreen.value?.ID))?.checked\n}\n\nfunction mobileFilter(model: IModel) {\n    return props.platformSelection.web || !props.platformSelection.mobile ||\n        !(model.modelType == \"bpmn\" || model.modelType == \"entityDesigner\" || model.modelType == \"process\");\n}\n\nfunction findItem (ID: string) {\n    for(const item of items.value){\n        if(item.type != 'module' && item.id == ID)\n            return item;\n        if(item.type == 'module' && item.children && item.children.length> 0 ){\n            const f = item.children.find(e => e.id == ID)\n            if(f) return f\n        }\n    }\n}\n\nasync function initVersions() {\n    const modelIDs = Array<string>();\n    viewModelManager.flatMapItems(viewModel.studio.items, (item, path) => {\n        if (item.objectType != \"model\") { return; }\n        modelIDs.push(item.ID);\n        return item;\n    });\n\n    modelHistories.value = await executor.executeUseCase<IListMultiModelVersions>(IListMultiModelVersions, { modelIDs });\n}\n\nfunction initDependencies() {\n    const map = new Map<string, { dependedTo: Array<string>, dependedBy: Array<string>}>();\n    \n    const setDependencies = (item: IModel) => {\n        if(item.objectType != \"model\") return;\n        const depsBy = modelUseCase.getWhichDependsToThisModel(item.ID);\n        map.set(item.ID, {\n            dependedBy: depsBy ? depsBy.map(e => e.ID): Array<string>(), \n            dependedTo: item.dependentModels ? item.dependentModels.map(e => e.modelId) : Array<string>()\n        });\n    }\n    viewModel.studio.items.forEach(item => {\n        if(item.objectType == 'module' && item.children && item.children.length > 0){\n            item.children.forEach(e => setDependencies(e as IModel))\n            return;\n        }\n        setDependencies(item as IModel)\n    })\n\n    dependencyMap.value = map;\n}\n\nfunction isModelDepended(item: ITableData) {\n    const deps = dependencyMap.value?.get(item.id)?.dependedBy\n    if(!deps) return false;\n\n    return deps.some(dep => items.value.some(item => {\n        if(item.type == 'module' && item.anyChildChecked){\n            return item.children?.some(child => child.checked && child.id == dep)\n        }\n        return item.id == dep && item.checked\n    }));\n}\n\nasync function handleItems() {\n    items.value = viewModel.studio.items\n        .filter((item) => item.objectType == \"module\" && item.children.length > 0)\n        .map((item) => {\n            const tableData: ITableData = {\n                id: item.ID,\n                collapsed: true,\n                name: item.name,\n                type: \"module\",\n                children: (item as IModule).children\n                    .filter((child) => child.objectType == \"model\")\n                    .filter(e => !props || props.screenType == \"Export\" || mobileFilter(e as IModel))\n                    .map(child => child as IModel)\n                    .map(child => {\n                        const maxVersion = getItemMaxVersion(child)\n                        return {\n                            id: child.ID,\n                            parentId: item.ID,\n                            checked: maxVersion ? true : child.isUnmodifiable,\n                            disabled: maxVersion ? false : !child.isUnmodifiable,\n                            name: child.name,\n                            type: (child as IModel).modelType,\n                            version: child.isUnmodifiable ? 'latest' : maxVersion,\n                        } as ITableData\n                    })\n            }\n            handleParentCheckedStatus(tableData);\n            return tableData;\n        });\n\n    viewModel.studio.items\n        .filter((item) => item.objectType == \"model\" && item.usageType != \"appSettings\" && item.usageType != \"appAssetList\")\n        .map(item => item as IModel)\n        .forEach((item) => {\n            const maxVersion = getItemMaxVersion(item as IModel)\n            items.value.push({\n                    id: item.ID,\n                    name: item.name,\n                    checked: maxVersion || item.modelType==\"appSettings\" ? true : item.isUnmodifiable,\n                    disabled: maxVersion || item.modelType==\"appSettings\" ? false : !item.isUnmodifiable,\n                    type: (item as IModel).modelType,\n                    version: item.isUnmodifiable || item.modelType==\"appSettings\" ? 'latest' : maxVersion,\n                });\n        });\n    const uiSettingsID = CryptoHelper.CreateGuid();\n    const appSettings = viewModel.studio.items.filter((item) => item.objectType == \"model\" && item.usageType == \"appSettings\") as Array<IModel>;\n    const uiSettings: ITableData = {\n        id: uiSettingsID,\n        collapsed: true,\n        name: \"UI Settings\",\n        type: \"module\",\n        children: appSettings.map(settings => {\n            const maxVersion = getItemMaxVersion(settings)\n            return {\n                id: settings.ID,\n                parentId: uiSettingsID,\n                name: settings.name,\n                type: settings.modelType,\n                checked: maxVersion != undefined,\n                usageType: settings?.usageType,\n                disabled: !maxVersion,\n                version: maxVersion,\n            }\n        }) as Array<ITableData>,\n    };\n    handleParentCheckedStatus(uiSettings);\n\n    const uiAssetID = CryptoHelper.CreateGuid();\n    const appAssetList = viewModel.studio.items.filter((item) => item.objectType == \"model\" && item.usageType == \"appAssetList\") as Array<IModel>;\n    const uiAssetList: ITableData = {\n        id: uiAssetID,\n        collapsed: true,\n        name: \"Styled Components\",\n        type: \"module\",\n        anyChildChecked: true,\n        allChildChecked: true,\n        children: appAssetList.map((asset) => ({\n            id: asset.ID,\n            parentId: uiSettingsID,\n            name: asset.name,\n            type: asset.modelType,\n            checked: true,\n            usageType: asset?.usageType,\n        })) as Array<ITableData>,\n    };\n    handleParentCheckedStatus(uiAssetList);\n\n    items.value.unshift(uiAssetList);\n    items.value.unshift(uiSettings);\n    console.log(\"items => \", items.value);\n}\n\nfunction getItemMaxVersion(item: IModel): string | undefined {\n    if (!modelHistories.value?.has(item.ID))\n        return undefined;\n\n    const versions = modelHistories.value.get(item.ID);\n    if (!versions)\n        return undefined;\n\n    const findMaxVersion = (versions: Array<string>) => {\n        const versionNumbers = versions.map(v => {\n            const parts: Array<string> = v.split(\".\");\n            return parseInt(parts[0]) * 10 + parseInt(parts[1]) * 1;\n        })\n\n        versionNumbers.sort((a, b) => b - a);\n\n        const maxVersion = versionNumbers[0];\n        return `${Math.floor(maxVersion / 10)}.${maxVersion % 10}`;\n    }\n\n    return findMaxVersion(versions.map(e => e.version!));\n\n}\nfunction checkMaxVersionOfAllItems() {\n    let isThereVersion: boolean = false;\n    items.value.forEach(item => {\n        if(item.type == \"module\") {\n            item.children?.forEach(child => {\n                if(child.version) {\n                    isThereVersion = true;\n                }\n                \n            })\n        }\n        else {\n            if(item.version) {\n                isThereVersion = true;\n            }\n        }\n    })\n    return isThereVersion;\n}\nfunction handleModuleCountCheckboxEvent(value: boolean) {\n    items.value.filter(e => !e.disabled).forEach((item) => {\n        item.checked = value;\n        const allItemsCheckable = item.allChildChecked != undefined && item.children && item.children.length > 0 && !item.children.some(c => c.disabled);\n        if (allItemsCheckable) item.allChildChecked = value;\n        if (item.anyChildChecked != undefined) item.anyChildChecked = value;\n        if (item.children) item.children.filter(c => !c.disabled).forEach((child) => (child.checked = value));\n    });\n\n    validations.value = validate();\n    props.screenType == \"Deploy\" && syncPublishTargets();\n}\n\nfunction handleCollapse(item: ITableData) {\n    item.collapsed = !item.collapsed;\n}\n\nfunction checkAllDependents(item: ITableData) {\n    if(item.disabled || item.checked) return;\n\n    item.checked = true\n    item.parentId && handleParentCheckedStatus(items.value.find((i) => i.id == item.parentId)!);\n\n    const deps = dependencyMap.value?.get(item.id)?.dependedTo\n    if(!deps) return;\n\n    deps.forEach(dep => {\n        items.value.forEach(item => {\n            if(item.type == 'module' && !item.allChildChecked){\n                const willCheckItem = item.children?.find(child => !child.checked && child.id == dep)\n                willCheckItem && checkAllDependents(willCheckItem)\n                handleParentCheckedStatus(item)\n                return;\n            }\n\n            if(!item.checked && item.id == dep) {\n                checkAllDependents(item)\n                item.parentId && handleParentCheckedStatus(items.value.find((i) => i.id == item.parentId)!)\n            }\n        })\n    });\n}\n\nfunction handleItemCheckEvent(item: ITableData) {\n    if(item.disabled || isModelDepended(item))\n        return;\n\n    if(item.type != \"module\") {\n        if(item.checked){\n            item.checked = false;\n            item.parentId && handleParentCheckedStatus(items.value.find((i) => i.id == item.parentId)!)\n        } else {\n            checkAllDependents(item)\n        }\n    } else {\n        if (item.children && item.children.filter(c => !c.disabled).length > 0) {\n            if (item.anyChildChecked) {\n                item.children.filter(c => !c.disabled).forEach(child => child.checked = false);\n                item.checked = false;\n                handleParentCheckedStatus(item);\n            } else {\n                item.children.forEach(checkAllDependents);\n                item.checked = true;\n            }\n        }\n        else {\n            item.checked = !item.checked;\n            item.allChildChecked = false;\n        }\n    }\n\n    validations.value = validate();\n    props.screenType == \"Deploy\" && syncPublishTargets();\n}\n\nfunction handleParentCheckedStatus(item: ITableData) {\n    item.disabled = item.children && (item.children.length == 0 || !item.children?.some(child => !child.disabled))\n    item.allChildChecked = item.children && item.children.length > 0 && !item.children.some((child) => !child.checked || child.disabled);\n    item.anyChildChecked = item.children?.some((child) => child.checked && !child.disabled);\n}\n\nfunction syncPublishTargets() {\n    publishTargets.value = []; disabledOptions.value = [];\n\n    const targets = viewModel.user?.selectedOrganization?.actions?.publish?.targets;\n    if (!targets)\n        return;\n\n    const isSelectAnyItem = items.value.find(e => e.anyChildChecked || e.checked);\n    if (!isSelectAnyItem) {\n        publishTargets.value = Object.entries(targets).map(e => cloudTargetMap(e[0])!);\n        const disabledOptionList = Array<IDisabledOptions>();\n        for (let i = 0; i < publishTargets.value.length; i++) {\n            disabledOptionList.push({ index: i, cause: \"You need to include items to publish.\" })\n        }\n        disabledOptions.value = disabledOptionList;\n        return;\n    }\n\n    const checkedPublishTargets = checkAndSetDisabledCauses(targets);\n    const sortedTargets = checkedPublishTargets.sort((e, f) => (!e.cause === !f.cause) ? 0 : e.cause ? 1 : -1);\n\n    const disabledOptionList = Array<IDisabledOptions>();\n    for (let i = 0; i < sortedTargets.length; i++) {\n        const cause = sortedTargets[i].cause;\n        if (cause) disabledOptionList.push({ index: i, cause })\n    }\n    disabledOptions.value = disabledOptionList;\n    publishTargets.value = sortedTargets.map(e => e.optionName);\n\n    selectedTarget.value = !sortedTargets[0].cause ? sortedTargets[0].optionName : \"\";\n}\n\nfunction checkAndSetDisabledCauses(targets: Record<keyof IOrganizationCloud, boolean>) {\n    const list = Array<{ optionName: string, cause?: string }>();\n\n    Object.keys(targets).forEach(e => {\n        const key = e as keyof IOrganizationCloud;\n        const value = targets[key];\n        const optionName = cloudTargetMap(key)!;\n        if (!value)\n            return list.push({ optionName, cause: \"You are not authorized to publish to this target.\" });\n\n\n        switch (key) {\n            case \"azure\":\n                const traverseSelectedItems = (status: boolean, items?: Array<ITableData>) => {\n                    if (!items || items.length == 0) { return status; }\n                    for (const item of items) {\n                        if (item.checked || item.anyChildChecked) {\n                            if (item.type == \"module\") {\n                                status = traverseSelectedItems(status, item.children);\n                            }\n                            if (item.type == \"entityDesigner\" || item.type == \"bpmn\" || item.type == \"process\") {\n                                status = false;\n                                break;\n                            }\n                        }\n\n                    }\n                    return status;\n                }\n\n                const status = traverseSelectedItems(true, items.value);\n                if (!status)\n                    return list.push({ optionName, cause: \"Entity and process models cannot be published to this target.\" });\n                break;\n            case \"plateauGCP\":\n                if (props.platformSelection.mobile)\n                    return list.push({ optionName, cause: \"This target is not available for mobile publishing.\" });\n\n                const modulesHasNotAnEDModel =  items.value.filter(e => e.name != \"UI Settings\").find(e => e.type == \"module\" && e.anyChildChecked && e.children?.some(c => c.checked && (c.type == \"bpmn\" || c.type == \"process\")) && !e.children?.some(c => c.type == \"entityDesigner\" && c.checked))\n                if (modulesHasNotAnEDModel)\n                    return list.push({optionName, cause: `This target not available. Selected module '${modulesHasNotAnEDModel.name}' has not any Data Model.`})\n                break;\n        }\n\n        list.push({ optionName });\n    })\n\n    return list;\n}\n\nfunction versionDialog(item: ITableData) {\n    const clickedNode = { id: item.id, state: { checked: item.checked }, text: item.name, type: item.type, version: item.version };\n    const hasAnyVersion = modelHistories.value?.has(item.id);\n    const options = { clickedNode, cb: (version: string) => { item.version = version } } as any;\n    if (hasAnyVersion) {\n        options.versions = modelHistories.value?.get(item.id)\n    }\n    dialog.showDialog(\n        defineAsyncComponent(() => import(\"../../application/modelVersionDialog.vue\")),\n        { closable: true, title: \"Change Version\", width: \"900px\", maxHeight: \"500px\", overflow: \"auto\" }, options\n    );\n}\n\nfunction close() {\n    emit(\"close\");\n}\n\nasync function save() {\n    executor.execute(\n        async () => {\n            const initAsGroup = async () => {\n                const groupID = CryptoHelper.CreateGuid();\n                await initHistory(groupID);\n                await packJob(groupID);\n                return groupID;\n            }\n\n            const isFlowBackend = viewModel.user?.selectedOrganization?.applications.flow;\n\n            switch (props.screenType) {\n                case \"Export\":\n                    //FIXME: Export backende tasinmali. layer, groupId backendde setlenmeli.\n                    if(isFlowBackend) {\n                        const deployItems = await createAzureDeployItems();\n                        await packJobsUseCase.createPackJobs([{\n                            appID: viewModel.studio.appId,\n                            exportType: \"qui\",\n                            selectionData: deployItems\n                        }]);\n                        break;\n                    }\n\n                    const groupID = await initAsGroup();\n                    await createExportJob(groupID);\n                    break;\n                case \"Deploy\":\n                    if(props.platformSelection.mobile) {\n                        const deployItems = await createAzureDeployItems();\n                        await deployJobsUseCase.createAppDeployJob(deployItems, props.platformSelection);\n                    }\n                    switch (cloudTargetMap(selectedTarget.value!, true) as keyof IOrganizationCloud) {\n                        case \"plateauGCP\":\n                            const groupID = await initAsGroup();\n                            await createDeployJob(groupID);\n                            break;\n                        case \"azure\":\n                            const deployItems = await createAzureDeployItems();\n                            await deployJobsUseCase.createAppDeployJob(deployItems, props.platformSelection);\n                            break;\n                    }\n            }\n            emit(\"close\");\n        },\n        { loading: true });\n}\n\nasync function createAzureDeployItems() {\n    const deployItems: Array<IExportItem> = [];\n    const itemIdObj: Record<string, { item: IModel, path: string }> = {};\n\n    viewModelManager.flatMapItems(viewModel.studio.items, (item, path) => {\n        if (item.objectType != \"model\") { return; }\n        itemIdObj[item.ID] = { item, path };\n        return item;\n    });\n\n    const traverseSelectedItems = (items?: Array<ITableData>) => {\n        if (!items || items.length == 0) { return; }\n        items.filter(e => e.checked || e.anyChildChecked).forEach(item => {\n            if (item.type == \"module\") {\n                traverseSelectedItems(item.children);\n                return;\n            }\n\n            const itemMap = itemIdObj[item.id];\n\n            const deployItem: IExportItem = {\n                id: item.id,\n                name: jobUtils.getFileFullname(itemMap.item),\n                path: itemMap.path,\n                type: jobUtils.getItemType(itemMap.item),\n                ver: item.version || \"latest\",\n                isRootPage: itemMap.item.isRootPage,\n                ownerType: 'application',\n                ownerName: viewModel.studio.appName,\n                size: itemMap.item.size,\n            };\n            deployItems.push(deployItem)\n        });\n    };\n\n    traverseSelectedItems(items.value);\n\n    return deployItems;\n}\n\nasync function initHistory(groupID: string) {\n    return qcloudApi.initPublishHistory({\n        appID: viewModel.studio.appId,\n        ID: groupID,\n        isMultiStep: true,\n        type: props.screenType == \"Deploy\" ? \"publish\" : \"download\",\n        cloudProvider: props.screenType == \"Deploy\" ? cloudTargetMap(selectedTarget.value!, true) as keyof IOrganizationCloud : undefined,\n        platform: props.platformSelection\n    });\n}\n\nasync function packJob(groupID: string) {\n    let exportItemMap = new Map<string, Array<IExportItem>>();\n    const appName = viewModel.studio.appName;\n\n    const itemIdObj: Record<string, { item: IModel, path: string }> = {};\n    viewModelManager.flatMapItems(viewModel.studio.items, (item, path) => {\n        if (item.objectType != \"model\") { return; }\n        itemIdObj[item.ID] = { item, path };\n        return item;\n    });\n\n    const createExportObject = (tableItem: ITableData) => {\n        const item = itemIdObj[tableItem.id].item;\n        const isAppItem = item.modelType == 'qjson' ;\n        return {\n            id: tableItem.id,\n            ver: tableItem.version,\n            type: jobUtils.getItemType(item),\n            path: itemIdObj[tableItem.id].path,\n            name: jobUtils.getFileFullname(item),\n            ownerType: isAppItem ? 'application' : item.parent.objectType,\n            ownerName: isAppItem ? appName : item.parent.name,\n        } as IExportItem;\n    }\n\n    const addToExportItem = (key: string, obj: IExportItem) => {\n        key = obj.ownerType == 'module' ? `mdl-${key}` : key; // for same named module and app\n        let items = exportItemMap.get(key);\n        if(items && items.length > 0){\n            items.push(obj);\n            exportItemMap.set(key, items);\n        } else\n            exportItemMap.set(key, [obj]);\n    }\n\n    items.value.filter(e => e.checked ?? e.anyChildChecked).forEach((asset) => {\n        if (asset.type == 'module') {\n            asset.children!.filter(e => e.checked).forEach(child => {\n                const obj = createExportObject(child);\n                if (obj.type == \"entityDesigner\")\n                    obj.entityGenerationDomain = viewModel.user!.selectedOrganization!.actions?.entityGenerationDomain;\n\n                const useSeperateModule = obj.type == 'bpmn' || obj.type == 'entityDesigner' || obj.type == 'process';\n                addToExportItem(useSeperateModule ? asset.name : appName, obj);\n            });\n        } else {\n            const obj = createExportObject(asset);\n            if (asset.type == 'qjson'){\n                const isRootPage = viewModel.studio.items.find(i => i.objectType == \"model\" && i.modelType == \"qjson\" && (i.additionals as IQJsonAdditionals).isRootPage && i.ID == asset.id);\n                obj.isRootPage = isRootPage ? true : undefined;\n            }\n            addToExportItem(appName, obj);\n        }\n    })\n\n    let jobs = Array<ICreateExportJobParam>();\n    exportItemMap.forEach((v, k) => {\n        jobs.push({\n            appID: viewModel.studio.appId,\n            exportType: \"qui\",\n            selectionData: v,\n            cause: props.screenType == 'Export' ? 'download': \"publish\",\n            layer: 0,\n            groupID: groupID\n        })\n    })\n\n    await packJobsUseCase.createPackJobs(jobs);\n}\n\nasync function createExportJob(groupID: string) {\n    await executor.executeUseCase<ICreateExportJob>(ICreateExportJob, {\n        appID: viewModel.studio.appId,\n        exportType: \"qui\",\n        selectionData: [],\n        layer: 1,\n        groupID: groupID\n    });\n}\n\nasync function createDeployJob(groupID: string) {\n    //1-(n) L1- deployJob(build)\n    let packages = await qcloudApi.getExportJobsByGroupId({ groupID })\n        .then(jobs => jobs.jobs.map(e => {\n            const jobData = e.jobData as IExportJobData;\n            return {\n                ownerName: jobData.items[0].ownerName,\n                jobID: e.jobID,\n                type: jobData.items[0].ownerType,\n                mainDir: getDeployableArchiveRoot(jobData)\n            }\n        }));\n\n    if (!packages || packages.length <= 0)\n        return;\n\n    let buildJobs = Array<ICreateDeployJobParam>();\n    packages.forEach(pack => {\n        buildJobs.push({\n            appID: viewModel.studio.appId,\n            type: \"build\",\n            package: {\n                type: pack.type as DeployType,\n                name: pack.ownerName!,\n                mainDir: pack.mainDir,\n                zip: `${pack.jobID}.zip`,\n            },\n            layer: 1,\n            groupID: groupID\n        })\n    })\n\n    await deployJobsUseCase.createBuildJobs(buildJobs);\n\n    //2-(1) L2- deployJob(deployment)\n    let jobParam: ICreateDeployJobParam = {\n        appID: viewModel.studio.appId,\n        type: \"deployment\",\n        deployConfig: {\n            process: {\n                configModelIDs: getProcessConfigList(),\n                enabled: items.value.some(e => e.anyChildChecked && e.children?.some(e => e.checked && e.type == \"bpmn\"))\n            }\n        },\n        layer: 2,\n        groupID: groupID\n    }\n\n    await deployJobsUseCase.startDeploymentJob(jobParam);\n}\n\nfunction getProcessConfigList() {\n    let processConfigList = Array<IProcessConfigModelItem>();\n    items.value.forEach((asset) => {\n        if (asset.type == \"module\" && asset.anyChildChecked && asset.children) {\n            const usingService = asset.children.find(c => c.type == \"entityDesigner\");\n            if (!usingService)\n                return;\n\n            const serviceName = PlateauHelper.getServiceNameFromModel(usingService.name);\n            asset.children.forEach(child => {\n                if (child.checked && child.type == \"process\") {\n                    processConfigList.push({\n                        moduleName: serviceName,\n                        model: {\n                            id: child.id,\n                            name: child.name,\n                            version: child.version!\n                        }\n                    })\n                }\n            })\n        }\n    })\n    return processConfigList;\n}\n\nfunction getDeployableArchiveRoot(jobData: IExportJobData) {\n    if (jobData.items[0].ownerType == \"module\") {\n        let edModel = jobData.items.find(e => e.type == \"entityDesigner\");\n        if (!edModel)\n            throw new Error(\"!!! this module cannot deploy. Because its have not a service\");\n        return PlateauHelper.getServiceNameFromModel(edModel.name);\n    }\n    return PlateauHelper.getQuiPackageNameFromAppName(jobData.app.name);\n}\n\nfunction cloudTargetMap(name: string, pureVal: boolean = false) {\n    const map: Record<keyof IOrganizationCloud, string> = { azure: \"Public Cloud\", plateauGCP: \"Plateau Platform Playground\" };\n    if (pureVal) {\n        return Object.keys(map).find(e => {\n            if (map[e as keyof IOrganizationCloud] === name) {\n                return true;\n            }\n        })\n    } else {\n        let key = Object.keys(map).includes(name);\n        if (!key)\n            return;\n        return map[name as keyof IOrganizationCloud];\n    }\n}\n\nfunction onTargetSelect(value: string) {\n    selectedTarget.value = value\n}\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", null, [\n      _createVNode(CheckboxComp, {\n        class: _normalizeClass(['modules-selected-checkbox', props.screenType == 'Deploy' ? 'deploy' : '']),\n        minus: mainCheckboxState.value == false,\n        check: mainCheckboxState.value == true,\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (handleModuleCountCheckboxEvent(mainCheckboxState.value == undefined)))\n      }, null, 8 /* PROPS */, [\"class\", \"minus\", \"check\"]),\n      _createElementVNode(\"div\", {\n        class: _normalizeClass(['modules-selected-text', props.screenType == 'Deploy' ? 'deploy' : ''])\n      }, [\n        _createElementVNode(\"span\", _hoisted_2, _toDisplayString(allChildCheckedModulesCount.value + anyChildCheckedModulesCount.value + checkedRootLevelModelsCount.value), 1 /* TEXT */),\n        _createTextVNode(\" of \"),\n        _createElementVNode(\"span\", _hoisted_3, _toDisplayString(totalRootLevelCount.value), 1 /* TEXT */),\n        _createTextVNode(\" items selected \")\n      ], 2 /* CLASS */)\n    ]),\n    _createElementVNode(\"div\", {\n      class: _normalizeClass(['modules-datatable', props.screenType == 'Deploy' ? 'deploy' : ''])\n    }, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(items.value, (item) => {\n        return (_openBlock(), _createElementBlock(\"div\", null, [\n          (item?.type == 'module')\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n                _createElementVNode(\"div\", _hoisted_5, [\n                  _createElementVNode(\"i\", {\n                    class: _normalizeClass('mdi mdi-menu' + (item.collapsed ? '-right' : '-down') + ' chevron' + (!item.children || item.children.length == 0 ? ' disabled': '')),\n                    onClick: ($event: any) => (handleCollapse(item))\n                  }, null, 10 /* CLASS, PROPS */, _hoisted_6),\n                  _createVNode(CheckboxComp, {\n                    class: \"module-checkbox\",\n                    check: item.allChildChecked,\n                    minus: !item.allChildChecked && item.anyChildChecked,\n                    disabled: item.disabled,\n                    onClick: ($event: any) => (handleItemCheckEvent(item))\n                  }, null, 8 /* PROPS */, [\"check\", \"minus\", \"disabled\", \"onClick\"]),\n                  _createElementVNode(\"span\", {\n                    class: _normalizeClass(['module-name', item.disabled ? ' disabled': ''])\n                  }, _toDisplayString(item.name), 3 /* TEXT, CLASS */)\n                ]),\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item?.children, (child) => {\n                  return _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_7, [\n                    _createVNode(CheckboxComp, {\n                      class: \"model-checkbox\",\n                      check: child.checked,\n                      disabled: child.disabled,\n                      onClick: ($event: any) => (handleItemCheckEvent(child))\n                    }, null, 8 /* PROPS */, [\"check\", \"disabled\", \"onClick\"]),\n                    (child.type != 'module')\n                      ? (_openBlock(), _createElementBlock(\"i\", {\n                          key: 0,\n                          class: _normalizeClass('model-icon ' + _unref(ModelContants).getModelVisualInfo(child.type, undefined).icon),\n                          style: _normalizeStyle({ color: _unref(ModelContants).getModelVisualInfo(child.type, undefined).color })\n                        }, null, 6 /* CLASS, STYLE */))\n                      : _createCommentVNode(\"v-if\", true),\n                    _createElementVNode(\"span\", {\n                      class: _normalizeClass(['model-name', child.disabled ? ' disabled' : ''])\n                    }, _toDisplayString(child.name), 3 /* TEXT, CLASS */),\n                    (!child.usageType || child.usageType == 'appSettings')\n                      ? (_openBlock(), _createElementBlock(\"div\", {\n                          key: 1,\n                          class: _normalizeClass(['version-text', child.disabled ? 'disabled' : '']),\n                          onClick: ($event: any) => (versionDialog(child))\n                        }, [\n                          _createTextVNode(_toDisplayString(child.version ? child.version : 'No version') + \" \", 1 /* TEXT */),\n                          (!child.usageType || child.usageType == 'appSettings')\n                            ? (_openBlock(), _createElementBlock(\"i\", {\n                                key: 0,\n                                class: _normalizeClass(['mdi mdi-pencil-outline version-icon', child.disabled ? 'disabled' : ''])\n                              }, null, 2 /* CLASS */))\n                            : _createCommentVNode(\"v-if\", true)\n                        ], 10 /* CLASS, PROPS */, _hoisted_8))\n                      : _createCommentVNode(\"v-if\", true),\n                    (child.disabled && !child.version)\n                      ? (_openBlock(), _createElementBlock(\"span\", _hoisted_9, [\n                          _createTextVNode(\"No version available for publishing. \"),\n                          _hoisted_10,\n                          _createTextVNode(\" on this item and choose the \"),\n                          _hoisted_11,\n                          _createTextVNode(\" option. \")\n                        ]))\n                      : _createCommentVNode(\"v-if\", true)\n                  ], 512 /* NEED_PATCH */)), [\n                    [_vShow, !item.collapsed]\n                  ])\n                }), 256 /* UNKEYED_FRAGMENT */))\n              ]))\n            : (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [\n                _createElementVNode(\"div\", _hoisted_13, [\n                  _createVNode(CheckboxComp, {\n                    class: \"module-checkbox\",\n                    check: item?.checked,\n                    disabled: item.disabled,\n                    onClick: ($event: any) => (handleItemCheckEvent(item))\n                  }, null, 8 /* PROPS */, [\"check\", \"disabled\", \"onClick\"]),\n                  (item?.type == 'qjson')\n                    ? (_openBlock(), _createElementBlock(\"i\", _hoisted_14))\n                    : (item?.type == 'yaml')\n                      ? (_openBlock(), _createElementBlock(\"i\", _hoisted_15))\n                      : _createCommentVNode(\"v-if\", true),\n                  (item?.type == 'js')\n                    ? (_openBlock(), _createElementBlock(\"i\", _hoisted_16))\n                    : _createCommentVNode(\"v-if\", true),\n                  (item?.type == 'css')\n                    ? (_openBlock(), _createElementBlock(\"i\", _hoisted_17))\n                    : (item?.type == 'process')\n                      ? (_openBlock(), _createElementBlock(\"i\", _hoisted_18))\n                      : (item?.type == 'bpmn')\n                        ? (_openBlock(), _createElementBlock(\"i\", _hoisted_19))\n                        : (item?.type == 'entityDesigner')\n                          ? (_openBlock(), _createElementBlock(\"i\", _hoisted_20))\n                          : (item?.type == 'flow')\n                            ? (_openBlock(), _createElementBlock(\"i\", _hoisted_21))\n                            : (item.type == 'namedComponent')\n                              ? (_openBlock(), _createElementBlock(\"i\", _hoisted_22))\n                              : _createCommentVNode(\"v-if\", true),\n                  _createElementVNode(\"span\", _hoisted_23, [\n                    _createTextVNode(_toDisplayString(item?.name) + \" \", 1 /* TEXT */),\n                    (startScreen.value?.ID == item.id)\n                      ? (_openBlock(), _createElementBlock(\"span\", _hoisted_24, _hoisted_27))\n                      : _createCommentVNode(\"v-if\", true)\n                  ]),\n                  (!item.usageType)\n                    ? (_openBlock(), _createElementBlock(\"span\", {\n                        key: 9,\n                        class: _normalizeClass(['version-text', item.disabled ? 'disabled' : '']),\n                        onClick: ($event: any) => (versionDialog(item))\n                      }, [\n                        _createTextVNode(_toDisplayString(item.version ? item.version : 'No version') + \" \", 1 /* TEXT */),\n                        (!item.usageType)\n                          ? (_openBlock(), _createElementBlock(\"i\", {\n                              key: 0,\n                              class: _normalizeClass(['mdi mdi-pencil-outline version-icon', item.disabled ? 'disabled' : ''])\n                            }, null, 2 /* CLASS */))\n                          : _createCommentVNode(\"v-if\", true)\n                      ], 10 /* CLASS, PROPS */, _hoisted_28))\n                    : _createCommentVNode(\"v-if\", true),\n                  (item.disabled && !item.version)\n                    ? (_openBlock(), _createElementBlock(\"span\", _hoisted_29, [\n                        _createTextVNode(\"No version available for publishing. \"),\n                        _hoisted_30,\n                        _createTextVNode(\" on this item and choose the \"),\n                        _hoisted_31,\n                        _createTextVNode(\" option. \")\n                      ]))\n                    : _createCommentVNode(\"v-if\", true)\n                ])\n              ]))\n        ]))\n      }), 256 /* UNKEYED_FRAGMENT */))\n    ], 2 /* CLASS */),\n    (props.screenType == 'Deploy' && props.platformSelection.web)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_32, [\n          _hoisted_33,\n          _createVNode(CustomSelect, {\n            options: publishTargets.value,\n            onInput: onTargetSelect,\n            selectedOption: selectedTarget.value,\n            default: selectedTarget.value,\n            disabledOptions: disabledOptions.value,\n            selectedClass: \"selected-environment\",\n            placeholder: \"Select the publish environment of your application\",\n            class: \"select-environment\"\n          }, null, 8 /* PROPS */, [\"options\", \"selectedOption\", \"default\", \"disabledOptions\"])\n        ]))\n      : _createCommentVNode(\"v-if\", true),\n    (props.screenType == 'Deploy' && !props.platformSelection.web && props.platformSelection.mobile)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_34, _hoisted_37))\n      : _createCommentVNode(\"v-if\", true),\n    _createElementVNode(\"div\", {\n      class: _normalizeClass(['footer', props.screenType == 'Deploy' ? 'deploy' : 'export'])\n    }, [\n      _createElementVNode(\"div\", {\n        class: _normalizeClass(['cancel-button', props.screenType == 'Deploy' ? 'deploy' : '']),\n        onClick: close\n      }, \"Cancel\", 2 /* CLASS */),\n      (props.screenType == 'Export')\n        ? (_openBlock(), _createElementBlock(\"div\", {\n            key: 0,\n            class: _normalizeClass((saveButtonDisable.value ? ' button-disable' : '')),\n            onClick: _cache[1] || (_cache[1] = ($event: any) => (!saveButtonDisable.value && save()))\n          }, [\n            _hoisted_38,\n            (!isThereVersion.value)\n              ? (_openBlock(), _createElementBlock(\"span\", _hoisted_39, \"There are no items ready to publish. At least one of your items must be ready to publish.\"))\n              : (!isStartScreenOK.value)\n                ? (_openBlock(), _createElementBlock(\"span\", _hoisted_40, \"You need to include your start screen.\"))\n                : (!isAllDependenciesOK.value)\n                  ? (_openBlock(), _createElementBlock(\"span\", _hoisted_41, _toDisplayString(dependencyErrorStr.value), 1 /* TEXT */))\n                  : _createCommentVNode(\"v-if\", true)\n          ], 2 /* CLASS */))\n        : _createCommentVNode(\"v-if\", true),\n      (props.screenType == 'Deploy')\n        ? (_openBlock(), _createElementBlock(\"div\", {\n            key: 1,\n            class: _normalizeClass([(saveButtonDisable.value ? ' button-disable' : '')]),\n            onClick: _cache[2] || (_cache[2] = ($event: any) => (!saveButtonDisable.value && save()))\n          }, [\n            _hoisted_42,\n            (!isStartScreenOK.value)\n              ? (_openBlock(), _createElementBlock(\"span\", _hoisted_43, \"You need to include your start screen.\"))\n              : (!selectedTarget.value)\n                ? (_openBlock(), _createElementBlock(\"span\", _hoisted_44, \"You need to select a publish environment.\"))\n                : (!isThereVersion.value)\n                  ? (_openBlock(), _createElementBlock(\"span\", _hoisted_45, \"There are no items ready to publish. At least one of your items must be ready to publish.\"))\n                  : (!isAllDependenciesOK.value)\n                    ? (_openBlock(), _createElementBlock(\"span\", _hoisted_46, _toDisplayString(dependencyErrorStr.value), 1 /* TEXT */))\n                    : _createCommentVNode(\"v-if\", true)\n          ], 2 /* CLASS */))\n        : _createCommentVNode(\"v-if\", true)\n    ], 2 /* CLASS */)\n  ]))\n}\n}\n\n})","\n      import API from \"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./publishDialog.vue?vue&type=style&index=0&id=03b14658&scoped=true&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./publishDialog.vue?vue&type=style&index=0&id=03b14658&scoped=true&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./publishDialog.vue?vue&type=style&index=1&id=03b14658&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./publishDialog.vue?vue&type=style&index=1&id=03b14658&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","import script from \"./publishDialog.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./publishDialog.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./publishDialog.vue?vue&type=style&index=0&id=03b14658&scoped=true&lang=css\"\nimport \"./publishDialog.vue?vue&type=style&index=1&id=03b14658&lang=css\"\n\nimport exportComponent from \"../../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-03b14658\"]])\n\nexport default __exports__"],"names":["___CSS_LOADER_EXPORT___","push","module","id","GetRandomWord","base","length","Math","random","toString","substring","CreateGuid","map","join","CryptoHelper","guidCounter","purify","str","replace","toLowerCase","getPlateauEnvironmentName","envPrefix","appName","Error","endsWith","PlateauHelper","getQuiPackageNameFromAppName","getApplicationUINameFromQuiPkg","quiPackageName","getApplicationHostNamePrefix","getServiceNameFromModel","modelName","typeSafety","EditorConsts","quick","modelKeys","self","flow","design","runtime","flowEntity","single","cssJsTsYaml","color","icon","jpegJpgPngSvgGif","modelVisuals","qjson","additionals","qjsonType","css","js","ts","yaml","entityDesigner","bpmn","process","namedComponent","step","jpeg","jpg","png","svg","gif","lottie","appSettings","ModelContants","getModelVisualInfo","modelType","modelAdditionals","retVal","IQCloudApi","Symbol","for","ICreateExportJob","IDeployJobs","IJobUtils","IListMultiModelVersions","IPackJobs","open","selected","props","default","selectedOption","value","getDisabledOptionsText","index","opt","disabledOptions","find","e","cause","stopPropagation","emit","option","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","_withScopeId","n","_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","key","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","style","_hoisted_10","_","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","__name","screenType","platformSelection","emits","setup","__props","viewModel","resolve","IViewModel","viewModelManager","IViewModelManager","dialog","IDialog","executor","IUseCaseExecutor","modelUseCase","IModelUseCase","deployJobsUseCase","qcloudApi","packJobsUseCase","jobUtils","items","validations","selectedTarget","publishTargets","modelHistories","startScreen","dependencyMap","dependencyErrorStr","async","modelIDs","Array","flatMapItems","studio","item","path","objectType","ID","executeUseCase","initVersions","Map","setDependencies","depsBy","getWhichDependsToThisModel","set","dependedBy","dependedTo","dependentModels","modelId","forEach","children","initDependencies","filter","tableData","collapsed","name","type","child","model","web","mobile","maxVersion","getItemMaxVersion","parentId","checked","isUnmodifiable","disabled","version","handleParentCheckedStatus","usageType","uiSettingsID","uiSettings","settings","undefined","uiAssetList","anyChildChecked","allChildChecked","asset","unshift","console","log","handleItems","syncPublishTargets","validate","allChildCheckedModulesCount","anyChildCheckedModulesCount","checkedRootLevelModelsCount","totalRootLevelCount","saveButtonDisable","some","validateStartScreen","validateDependencies","mainCheckboxState","isThereVersion","checkMaxVersionOfAllItems","isAllDependenciesOK","isStartScreenOK","result","modules","appLayerItems","isRootPage","f","findIndex","checkMap","mustBeCheckedMap","deps","get","dependedId","has","vals","firstItemID","keys","firstItemDeps","firstItemDepStr","findItem","size","versions","versionNumbers","v","parts","split","parseInt","sort","a","b","floor","findMaxVersion","checkAllDependents","i","dep","willCheckItem","handleItemCheckEvent","isModelDepended","c","targets","user","selectedOrganization","actions","publish","Object","entries","cloudTargetMap","disabledOptionList","checkedPublishTargets","list","optionName","traverseSelectedItems","status","modulesHasNotAnEDModel","checkAndSetDisabledCauses","sortedTargets","versionDialog","clickedNode","state","text","cb","showDialog","closable","title","width","maxHeight","overflow","close","save","execute","initAsGroup","groupID","initPublishHistory","appID","appId","isMultiStep","cloudProvider","platform","initHistory","exportItemMap","itemIdObj","createExportObject","tableItem","isAppItem","ver","getItemType","getFileFullname","ownerType","parent","ownerName","addToExportItem","obj","entityGenerationDomain","useSeperateModule","jobs","k","exportType","selectionData","layer","createPackJobs","packJob","isFlowBackend","applications","deployItems","createAzureDeployItems","createExportJob","createAppDeployJob","packages","getExportJobsByGroupId","then","jobData","jobID","mainDir","getDeployableArchiveRoot","buildJobs","pack","package","zip","createBuildJobs","jobParam","deployConfig","configModelIDs","getProcessConfigList","enabled","startDeploymentJob","createDeployJob","loading","itemMap","deployItem","processConfigList","usingService","serviceName","moduleName","edModel","app","pureVal","azure","plateauGCP","includes","onTargetSelect","_ctx","_cache","minus","check","onClick","$event","onInput","selectedClass","placeholder"],"sourceRoot":""}