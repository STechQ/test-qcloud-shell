"use strict";(this.webpackChunkqcloud_shell=this.webpackChunkqcloud_shell||[]).push([[1491],{35061:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(34663),o=n.n(a),s=n(7638),l=n.n(s)()(o());l.push([e.id,"\ntextarea[data-v-ad5bf14e]{\n    resize: both;\n}\n","",{version:3,sources:["webpack://./src/presentation/vue3/editors/fileEditor.vue"],names:[],mappings:";AA8EA;IACI,YAAY;AAChB",sourcesContent:['<script setup lang="ts">\nimport { text } from \'stream/consumers\';\nimport { onBeforeUnmount, onMounted, onUnmounted, Ref, ref } from \'vue\';\nimport { IFileEditorProps } from \'../../../domain/objects/editors/IFileEditor\';\n\ninterface IProps {\n    functions: IFileEditorProps["functions"];\n    callbacks: IFileEditorProps["callbacks"];\n}\nconst props = defineProps<IProps>();\nconst textarea = ref<HTMLTextAreaElement>() as Ref<HTMLTextAreaElement>;\n\nprops.functions.getModel = async () => {\n    const scrollTop = textarea.value.scrollTop;\n    const selectionStart = textarea.value.selectionStart;\n    const selectionEnd = textarea.value.selectionEnd;\n    const width = textarea.value.style.width;\n    const height = textarea.value.style.height;\n\n    return { model: textarea.value.value, state: { scrollTop, selectionStart, selectionEnd, width, height, checkout: !textarea.value.disabled } };\n};\nprops.functions.setModel = async (model, state) => {\n    //model\n    textarea.value.value = model;\n\n    //state\n    textarea.value.focus();\n    textarea.value.style.width = state.width || "98%";\n    textarea.value.style.height = state.height || "90%";\n    textarea.value.scrollTop = state.scrollTop;\n    textarea.value.selectionStart = state.selectionStart;\n    textarea.value.selectionEnd = state.selectionEnd;\n    textarea.value.disabled = textarea.value.readOnly = !state.checkout || false;\n    textarea.value.style.resize = "none";\n    \n}\nprops.functions.insertText = async (text, position) => {\n    const startPosition = textarea.value.selectionStart;\n    const endPosition = textarea.value.selectionEnd;\n    const cursorPosition = startPosition;\n    const currentValue = textarea.value.value;\n\n    textarea.value.value = currentValue.substring(0, startPosition) + text + currentValue.substring(endPosition, currentValue.length);\n    const newCursorPosition = cursorPosition + text.length;\n    textarea.value.selectionStart = textarea.value.selectionEnd = newCursorPosition;\n\n    props.callbacks.modified({ model: true });\n}\nconst modified: Record<string, EventListenerOrEventListenerObject> = {\n    select: () => { console.log("select"); props.callbacks.modified({ state: true }) },\n    scroll: () => { console.log("scroll"); props.callbacks.modified({ state: true }) },\n    change: () => { console.log("change"); props.callbacks.modified({ model: true }) },\n    keydown: (e: Event) => {\n        const event = e as KeyboardEvent;\n        const code = event.code.toLowerCase();\n        if (event.shiftKey || event.ctrlKey || code.startsWith("arrow")){return;}\n        console.log("keydown"); props.callbacks.modified({ model: true });\n    },\n    resize: () => { console.log("resize"); props.callbacks.modified({ state: true }) },\n    input:() =>{console.log(\'model change\'); props.callbacks.modified({model:true})}\n};\n\nconst watchTextArea = (attach: boolean) => {\n    const target = attach ? textarea.value.addEventListener : textarea.value.removeEventListener;\n    Object.keys(modified).forEach(key => target.call(textarea.value, key, modified[key]));\n}\n\nonMounted(() => {\n    watchTextArea(true);\n});\nonBeforeUnmount(() => {\n    watchTextArea(false);\n});\n<\/script>\n<template>\n<textarea ref="textarea"></textarea>\n</template>\n<style scoped>\ntextarea{\n    resize: both;\n}\n</style>'],sourceRoot:""}]);const r=l},51491:(e,t,n)=>{n.r(t),n.d(t,{default:()=>y});var a=n(71093),o=n(73843);const s=(0,a.aZ)({__name:"fileEditor",props:{functions:null,callbacks:null},setup(e){const t=e,n=(0,o.iH)();t.functions.getModel=async()=>{const e=n.value.scrollTop,t=n.value.selectionStart,a=n.value.selectionEnd,o=n.value.style.width,s=n.value.style.height;return{model:n.value.value,state:{scrollTop:e,selectionStart:t,selectionEnd:a,width:o,height:s,checkout:!n.value.disabled}}},t.functions.setModel=async(e,t)=>{n.value.value=e,n.value.focus(),n.value.style.width=t.width||"98%",n.value.style.height=t.height||"90%",n.value.scrollTop=t.scrollTop,n.value.selectionStart=t.selectionStart,n.value.selectionEnd=t.selectionEnd,n.value.disabled=n.value.readOnly=!t.checkout||!1,n.value.style.resize="none"},t.functions.insertText=async(e,a)=>{const o=n.value.selectionStart,s=n.value.selectionEnd,l=o,r=n.value.value;n.value.value=r.substring(0,o)+e+r.substring(s,r.length);const c=l+e.length;n.value.selectionStart=n.value.selectionEnd=c,t.callbacks.modified({model:!0})};const s={select:()=>{console.log("select"),t.callbacks.modified({state:!0})},scroll:()=>{console.log("scroll"),t.callbacks.modified({state:!0})},change:()=>{console.log("change"),t.callbacks.modified({model:!0})},keydown:e=>{const n=e,a=n.code.toLowerCase();n.shiftKey||n.ctrlKey||a.startsWith("arrow")||(console.log("keydown"),t.callbacks.modified({model:!0}))},resize:()=>{console.log("resize"),t.callbacks.modified({state:!0})},input:()=>{console.log("model change"),t.callbacks.modified({model:!0})}},l=e=>{const t=e?n.value.addEventListener:n.value.removeEventListener;Object.keys(s).forEach((e=>t.call(n.value,e,s[e])))};return(0,a.bv)((()=>{l(!0)})),(0,a.Jd)((()=>{l(!1)})),(e,t)=>((0,a.wg)(),(0,a.iD)("textarea",{ref_key:"textarea",ref:n},null,512))}});var l=n(17450),r=n.n(l),c=n(29530),i=n.n(c),u=n(16199),d=n.n(u),v=n(40458),h=n.n(v),p=n(62916),m=n.n(p),f=n(92165),x=n.n(f),g=n(35061),b={};b.styleTagTransform=x(),b.setAttributes=h(),b.insert=d().bind(null,"head"),b.domAPI=i(),b.insertStyleElement=m(),r()(g.Z,b),g.Z&&g.Z.locals&&g.Z.locals;const y=(0,n(32525).Z)(s,[["__scopeId","data-v-ad5bf14e"]])}}]);
//# sourceMappingURL=1491.js.map