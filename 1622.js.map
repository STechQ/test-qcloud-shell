{"version":3,"file":"1622.js","mappings":"8HAoEO,MAAMA,EAAaC,OAAOC,IAAI,a,gICjErC,MAAMC,EAAa,CAAEC,IAAK,GAU1B,GAA4B,QAAiB,CAC3CC,OAAQ,QACRC,MAAMC,GAER,MAAMC,EAAW,aAAoCC,EAAA,GAC/CC,EAAoB,aAAsCC,EAAA,GAC1DC,EAAY,aAA8BZ,EAAA,GAEhDU,EAAkBG,cAAc,CAAC,UACjC,MAAMC,GAAmB,SAAI,GAE7BN,EAASO,SAAQC,gBACPN,EAAkBO,YACxBH,EAAiBI,OAAQ,CAAI,GAC9B,CAAEC,SAAS,IAEd,MAAMC,GAAQ,SAAS,KAAK,MAAC,OAAoB,QAApB,EAAAR,EAAUS,kBAAU,eAAED,KAAK,IAGxD,MAAO,CAACE,EAAUC,MACR,WAAc,QAAoB,UAAW,KAAM,CACxDT,EAAsB,QAClB,WAAc,QAAoB,MAAOX,EAAY,EACpD,QAAa,IAAU,CACrBiB,OAAO,QAAOA,IACb,KAAM,EAAe,CAAC,cAE3B,QAAoB,QAAQ,KAGpC,ICtCA,EAFoB,C","sources":["webpack://qcloud_shell/./src/domain/viewModel/IViewModel.ts","webpack://qcloud_shell/./src/presentation/vue3/pages/backoffice/users.vue?8be3","webpack://qcloud_shell/./src/presentation/vue3/pages/backoffice/users.vue"],"sourcesContent":["import { IApplication, IExportJobItem, IFolder, IModel, IModule, ILoggedInUser } from \"../model/models\";\nimport { ITopMenuButton } from \"../model/ui/ITopMenuButton\";\nimport { INavItem } from \"../model/ui/INavItem\";\nimport { IMainStatisticInfo } from \"../../../../common/qCloudTemp/backoffice\";\nimport { IUser_SUSI } from \"../../../../common/qCloudTemp/authentication\";\nimport { IOrganization } from \"../../../../common/qCloudTemp/membership\";\nimport { IOrganizationGroup, ITags } from \"../../../../common/qCloudTemp/quickCloud\";\nimport { IUserRequest } from \"../../../../common/qCloudTemp/userRequest\";\nimport { IOrganizationUIExtended } from \"../useCase/IBackofficeUseCase\";\n\nexport interface IViewModel {\n    user?: ILoggedInUser;\n    apps: Array<IApplication>;\n    studio: {\n        appId: string;\n        appName: string;\n        items: Array<IModel | IModule | IFolder>;\n        openItems?: Array<IModel>;\n        currentItem?: IModel;\n        tabOrder?: Array<string>;\n        dnsEndpoint?: string;\n        webPublishDate?: string;\n        mobilePublishDate?: string;\n        webPublishedBy?: string;\n        mobilePublishedBy?: string;\n        publishId?: string;\n        livePreview?: {\n            relayClients: { clients: Array<{ clientID: string, name: string }> }\n        }\n        filters: {\n            text?: string;\n            ui: boolean;\n            process: boolean;\n            entity: boolean;\n            image: boolean;\n            setting: boolean;\n        },\n        ui?: {\n            navItems?: Array<INavItem>;\n            sidebar: {\n                component?: object;\n                componentPath?: string;\n                left: number;\n            };\n        };\n        topMenu?: {\n            additionalButtons?: Array<ITopMenuButton>;\n            dynamicButtons?: Array<ITopMenuButton>;\n        };\n        export?: {\n            lastUncompiledDate?: Date;\n        }\n    };\n    exportJobs?: Array<IExportJobItem>;\n    backoffice?: {\n        ui?: {\n            breadcrumb?: Array<string>;\n        }\n        dashboard?: {\n            mainStatistics: IMainStatisticInfo;\n        };\n        users?: Array<IUser_SUSI>;\n        organizations?: Array<IOrganizationUIExtended>;\n        tags?: Array<ITags>;\n        userRequests?: Array<IUserRequest>;\n        organizationGroups?: Array<IOrganizationGroup>;\n    };\n}\nexport const IViewModel = Symbol.for(\"IViewModel\");\n","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { key: 0 }\n\nimport { computed, ref } from \"vue\";\nimport { container } from \"../../../../domain/core/diContainer\";\nimport { IBackofficeUseCase } from \"../../../../domain/useCase/IBackofficeUseCase\";\nimport { IUseCaseExecutor } from \"../../../../domain/useCase/IUseCaseExecutor\";\nimport UserList from \"../../components/backoffice/user/userList.vue\";\nimport { IViewModel } from \"../../../../domain/viewModel/IViewModel\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'users',\n  setup(__props) {\n\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\nconst backofficeUseCase = container.resolve<IBackofficeUseCase>(IBackofficeUseCase);\nconst viewModel = container.resolve<IViewModel>(IViewModel);\n\nbackofficeUseCase.setBreadcrumb([\"Users\"]);\nconst usersDataIsReady = ref(false);\n\nexecutor.execute(async () => {\n    await backofficeUseCase.listUsers();\n    usersDataIsReady.value = true;\n}, { loading: true });\n\nconst users = computed(() => viewModel.backoffice?.users);\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"section\", null, [\n    (usersDataIsReady.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n          _createVNode(UserList, {\n            users: _unref(users)!\n          }, null, 8 /* PROPS */, [\"users\"])\n        ]))\n      : _createCommentVNode(\"v-if\", true)\n  ]))\n}\n}\n\n})","import script from \"./users.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./users.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["IViewModel","Symbol","for","_hoisted_1","key","__name","setup","__props","executor","IUseCaseExecutor","backofficeUseCase","IBackofficeUseCase","viewModel","setBreadcrumb","usersDataIsReady","execute","async","listUsers","value","loading","users","backoffice","_ctx","_cache"],"sourceRoot":""}