"use strict";(this.webpackChunkqcloud_shell=this.webpackChunkqcloud_shell||[]).push([[2055,2525,1,5934],{88798:(e,t,n)=>{n.d(t,{Z:()=>d});var o=n(34663),i=n.n(o),s=n(7638),l=n.n(s)()(i());l.push([e.id,"\n.list[data-v-7598fb9c] {\n  list-style-type: none;\n  padding: 0;\n}\n.list-dialog[data-v-7598fb9c] {\n  max-height: 424px;\n  overflow: auto;\n}\n.list-item[data-v-7598fb9c] {\n  cursor: pointer;\n  padding: 8px;\n  border-bottom: 1px solid #ccc;\n}\n.container[data-v-7598fb9c] {\n            padding: 32px 20px 20px;\n}\n.list-item[data-v-7598fb9c]:last-child {\n  border-bottom: none;\n}\n","",{version:3,sources:["webpack://./src/presentation/vue3/components/dialogs/studio/addFont.vue"],names:[],mappings:";AA8EA;EACE,qBAAqB;EACrB,UAAU;AACZ;AAEA;EACE,iBAAiB;EACjB,cAAc;AAChB;AAEA;EACE,eAAe;EACf,YAAY;EACZ,6BAA6B;AAC/B;AAEA;YACY,uBAAuB;AAC/B;AAEJ;EACE,mBAAmB;AACrB",sourcesContent:['<template>\n  <div class="container">\n    <div class="list-dialog">\n      <ul class="list">\n        <li v-for="item in items" :key="item.ID" @click="selectItem(item)" class="list-item">\n          {{ item.name }}\n        </li>\n      </ul>\n    </div>\n    <div v-if="fontModel">\n      <h2>Font Model</h2>\n      <p>{{ fontModel }}</p>\n    </div>\n  </div>\n</template>\n\n<script setup lang="ts"> \nimport { ref, onMounted } from "vue";\nimport { IViewModel } from "../../../../../domain/viewModel/IViewModel";\nimport { container } from "../../../../../domain/core/diContainer";\nimport { IModel } from "../../../../../domain/model/models";\nimport { IViewModelManager } from "../../../../../domain/viewModel/IViewModelManager";\nimport { IStudio } from "../../../../../domain/useCase/IStudio";\nimport { StudioModelBasicsImpl } from "../../../../../../../common/clean/infrastructure/studioModelBasicsImpl";\n\nconst viewModel = container.resolve<IViewModel>(IViewModel);\nconst items = ref<Array<IModel>>([]);\nconst selectedItem = ref<IModel>();\nconst fontModel = ref<string>();\nconst viewModelManager = container.resolve<IViewModelManager>(IViewModelManager);\nconst studio = container.resolve<IStudio>(IStudio);\n\n// async function selectItem(item: IModel) { //Orbay: Bu kısmı (metodu olduğu gibi) tam anlamadım. Üzerine konuşalım.\n//   selectedItem.value = item;\n//   const studioModelBasics = new StudioModelBasicsImpl();\n//   let targetItem = viewModel.studio.items.find(i => i.name === item.name);\n//   const text = studioModelBasics.createPathStructureByModelId(targetItem.ID, "woff");\n//   studio.insertTextToEditor(text, { position: "cursor" });\n// }\n\nasync function selectItem(item: IModel) {\n  selectedItem.value = item;\n  const studioModelBasics = new StudioModelBasicsImpl();\n  \n  let targetItem = viewModel.studio.items.find(i => i.name === item.name);\n  let text = "";\n  \n  if (targetItem) {\n    if (item.modelType === "woff") {\n      text = studioModelBasics.createPathStructureByModelId(targetItem.ID, "woff"); \n    } else if (item.modelType === "woff2") {\n      text = studioModelBasics.createPathStructureByModelId(targetItem.ID, "woff2");\n    } else if (item.modelType === "ttf") {\n      text = studioModelBasics.createPathStructureByModelId(targetItem.ID, "ttf");\n    }\n    \n    \n    \n    studio.insertTextToEditor(text, { position: "cursor" });\n  }\n}\n\nfunction setFontItems() {\n  viewModelManager.traverseChildren(viewModel.studio.items, (item, index) => {\n    if (item.objectType == "model" && item.modelType == "woff") { items.value.push(item); }\n    if (item.objectType == "model" && item.modelType == "woff2") { items.value.push(item); }\n    if (item.objectType == "model" && item.modelType == "ttf") { items.value.push(item); }\n    return false;\n  });\n}\n\nonMounted(() => {\n  setFontItems();\n});\n\n<\/script>\n\n<style scoped>\n.list {\n  list-style-type: none;\n  padding: 0;\n}\n\n.list-dialog {\n  max-height: 424px;\n  overflow: auto;\n}\n\n.list-item {\n  cursor: pointer;\n  padding: 8px;\n  border-bottom: 1px solid #ccc;\n}\n\n.container {\n            padding: 32px 20px 20px;\n    }\n\n.list-item:last-child {\n  border-bottom: none;\n}\n</style>\n'],sourceRoot:""}]);const d=l},32525:(e,t)=>{t.Z=(e,t)=>{const n=e.__vccOpts||e;for(const[e,o]of t)n[e]=o;return n}},2055:(e,t,n)=>{n.r(t),n.d(t,{default:()=>_});var o=n(71093),i=n(66190),s=n(73843),l=n(88613),d=n(5627),a=n(54848),r=n(6488),m=n(85520);const c={class:"container"},u={class:"list-dialog"},p={class:"list"},f=["onClick"],v={key:0},A=(e=>((0,o.dD)("data-v-7598fb9c"),e=e(),(0,o.Cn)(),e))((()=>(0,o._)("h2",null,"Font Model",-1))),I=(0,o.aZ)({__name:"addFont",setup(e){const t=d.nC.resolve(l.J),n=(0,s.iH)([]),I=(0,s.iH)(),M=(0,s.iH)(),y=d.nC.resolve(a.B),w=d.nC.resolve(r.c);return(0,o.bv)((()=>{y.traverseChildren(t.studio.items,((e,t)=>("model"==e.objectType&&"woff"==e.modelType&&n.value.push(e),"model"==e.objectType&&"woff2"==e.modelType&&n.value.push(e),"model"==e.objectType&&"ttf"==e.modelType&&n.value.push(e),!1)))})),(e,s)=>((0,o.wg)(),(0,o.iD)("div",c,[(0,o._)("div",u,[(0,o._)("ul",p,[((0,o.wg)(!0),(0,o.iD)(o.HY,null,(0,o.Ko)(n.value,(e=>((0,o.wg)(),(0,o.iD)("li",{key:e.ID,onClick:n=>async function(e){I.value=e;const n=new m.E;let o=t.studio.items.find((t=>t.name===e.name)),i="";o&&("woff"===e.modelType?i=n.createPathStructureByModelId(o.ID,"woff"):"woff2"===e.modelType?i=n.createPathStructureByModelId(o.ID,"woff2"):"ttf"===e.modelType&&(i=n.createPathStructureByModelId(o.ID,"ttf")),w.insertTextToEditor(i,{position:"cursor"}))}(e),class:"list-item"},(0,i.toDisplayString)(e.name),9,f)))),128))])]),M.value?((0,o.wg)(),(0,o.iD)("div",v,[A,(0,o._)("p",null,(0,i.toDisplayString)(M.value),1)])):(0,o.kq)("v-if",!0)]))}});var M=n(17450),y=n.n(M),w=n(29530),g=n.n(w),B=n(16199),h=n.n(B),b=n(40458),C=n.n(b),T=n(62916),x=n.n(T),E=n(92165),S=n.n(E),D=n(88798),k={};k.styleTagTransform=S(),k.setAttributes=C(),k.insert=h().bind(null,"head"),k.domAPI=g(),k.insertStyleElement=x(),y()(D.Z,k),D.Z&&D.Z.locals&&D.Z.locals;const _=(0,n(32525).Z)(I,[["__scopeId","data-v-7598fb9c"]])}}]);
//# sourceMappingURL=2055.js.map