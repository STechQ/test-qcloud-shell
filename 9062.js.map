{"version":3,"file":"9062.js","mappings":"gKAGIA,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOC,GAAI,08EAA48E,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,iEAAiE,MAAQ,GAAG,SAAW,g4BAAg4B,eAAiB,CAAC,+0RAAq6R,WAAa,MAE36Y,S,s8CC+HMC,GAAO,SAAI,GACXC,GAAW,QAAIC,EAAMC,QAAUD,EAAMC,QAAU,MAC/CC,GAAgB,QAAIF,EAAMG,gBAAkBH,EAAMG,gBAAkB,KAE1E,SAAY,KACPH,GAASA,EAAMI,iBAChBL,EAASM,MAAQL,EAAMI,eACvBN,EAAKO,OAAQ,EACf,IAGF,MAAMC,EAAeC,IACfP,EAAMQ,UAgBNN,EAAcG,MAAMV,KAAKY,GACzBE,EAAK,QAASP,EAAcG,OAC5BI,EAAK,eAjBc,iBAAXF,GACRE,EAAK,QAASF,EAAOV,IACrBE,EAASM,MAAQE,EACjBT,EAAKO,OAAQ,EACbI,EAAK,QAASV,EAASM,MAAMR,KAEL,iBAAXU,IACbE,EAAK,QAASF,GACdR,EAASM,MAAQE,EACjBT,EAAKO,OAAQ,EACbI,EAAK,QAASV,EAASM,OAQ3B,EAGIK,EAA0BC,IAC9B,MAAMC,EAAMZ,EAAMa,gBAAgBC,MAAKC,GAAKA,EAAEJ,OAASA,IACvD,GAAGC,EACD,OAAOA,EAAII,KACG,EAEZC,EAAiBC,IACrBA,EAAMC,kBACNpB,EAASM,MAAQ,KACjBI,EAAK,QAASV,EAASM,MAAM,E,knBAEJe,E,IACnBD,kBACNjB,EAAcG,MAAQH,EAAcG,MAAMgB,QAAOC,GAAQA,EAAKC,IAAMH,EAASG,KAC7Ed,EAAK,QAASP,EAAcG,YAC5BI,EAAK,cAAc,EAAMW,GAJR,IAAQA,C,qoGCxKvBI,EAAU,CAAC,EAEfA,EAAQC,kBAAoB,IAC5BD,EAAQE,cAAgB,IAElBF,EAAQG,OAAS,SAAc,KAAM,QAE3CH,EAAQI,OAAS,IACjBJ,EAAQK,mBAAqB,IAEhB,IAAI,IAASL,GAKJ,KAAW,YAAiB,WCpBlD,MAEA,GAFiC,E,SAAA,GAAgB,EAAQ,CAAC,CAAC,YAAY,oB","sources":["webpack://qcloud_shell/./src/presentation/vue3/components/customSelect.vue?5825","webpack://qcloud_shell/./src/presentation/vue3/components/customSelect.vue","webpack://qcloud_shell/./src/presentation/vue3/components/customSelect.vue?57d6","webpack://qcloud_shell/./src/presentation/vue3/components/customSelect.vue?043d"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n  /*You should put other CSS properties with same class names in the parent component's style tag that is not scoped.*/\\n*[data-v-1f9671f0] {\\n    font-family: \\\"Roboto\\\"\\n}\\n.custom-select[data-v-1f9671f0] {\\n    position: relative;\\n    width: 100%;\\n    text-align: left;\\n    outline: none;\\n}\\n.custom-select .selected[data-v-1f9671f0] {\\n\\n    cursor: pointer;\\n    user-select: none;\\n}\\n.custom-select .selected .select-down[data-v-1f9671f0], \\n  .custom-select .selected .cleanIcon[data-v-1f9671f0] {\\n    position: absolute;\\n    right: 10px;\\n    float: right;\\n}\\n.custom-select .items[data-v-1f9671f0] {\\n    position: absolute;\\n    left: 0;\\n    right: 0;\\n    z-index: 1;\\n}\\n.custom-select .items .option[data-v-1f9671f0] {\\n    cursor: pointer;\\n    user-select: none;\\n}\\n.custom-select .items .option.disabled div[data-v-1f9671f0] {\\n    cursor: default;\\n    user-select: none;\\n    opacity: 0.4;\\n}\\n.custom-select .items .option.disabled[data-v-1f9671f0]:active {\\n    pointer-events: none;\\n}\\n.selectHide[data-v-1f9671f0] {\\n    display: none;\\n}\\n.button-div[data-v-1f9671f0] {\\n    justify-content: center;\\n    display: grid;\\n    padding: 13px 0 19px;\\n    margin-top: 10px\\n}\\n.button[data-v-1f9671f0] {\\n    cursor: pointer;\\n}\\n.custom-placeholder[data-v-1f9671f0]:empty:before {\\n    content:attr(data-placeholder);\\n    color:#BCBCBC\\n}\\n.custom-placeholder[data-v-1f9671f0]:focus-visible {\\n    outline: none;\\n}\\n.button-tooltip[data-v-1f9671f0] {\\n    visibility: hidden;\\n    display: flex;\\n    flex-direction: row;\\n    align-items: flex-start;\\n    padding: 8px;\\n    top: 39px;\\n    left: 65px;\\n    height: 30px;\\n    position: absolute;\\n    background: #757575;\\n    color: #FFFFFF;\\n    font-size: 12px;\\n    line-height: 14px;\\n    text-align: center;\\n    border-radius: 4px;\\n    letter-spacing: 0.2px;\\n    opacity: 0;\\n    z-index: 1;\\n}\\n.custom-select .items .option:hover .button-tooltip[data-v-1f9671f0] {\\n    visibility: visible;\\n    transition: opacity 0.3s ease-out 0.5s;\\n    opacity: 1;\\n}\\n.cleanIcon[data-v-1f9671f0] {\\n    display: none;\\n}\\n.selected:hover .cleanIcon[data-v-1f9671f0]{\\n    display: inline-block;\\n}\\n.multipleSelected[data-v-1f9671f0] {\\n    display: flex;\\n    align-items: center;\\n    height: 40px;\\n    flex-wrap: wrap;\\n    line-height: 18px;\\n    max-width: 100%;\\n    min-width: 0;\\n}\\n.multipleSelected .remove-item[data-v-1f9671f0] {\\n    position: relative;\\n    color: #000000;\\n    margin-left: 4px;\\n}\\n  \", \"\",{\"version\":3,\"sources\":[\"webpack://./src/presentation/vue3/components/customSelect.vue\"],\"names\":[],\"mappings\":\";EA8LE,oHAAoH;AACpH;IACE;AACF;AACA;IACE,kBAAkB;IAClB,WAAW;IACX,gBAAgB;IAChB,aAAa;AACf;AAEA;;IAEE,eAAe;IACf,iBAAiB;AACnB;AAEA;;IAEE,kBAAkB;IAClB,WAAW;IACX,YAAY;AACd;AAEA;IACE,kBAAkB;IAClB,OAAO;IACP,QAAQ;IACR,UAAU;AACZ;AAEA;IACE,eAAe;IACf,iBAAiB;AACnB;AAEA;IACE,eAAe;IACf,iBAAiB;IACjB,YAAY;AACd;AACA;IACE,oBAAoB;AACtB;AAEA;IACE,aAAa;AACf;AACA;IACE,uBAAuB;IACvB,aAAa;IACb,oBAAoB;IACpB;AACF;AACA;IACE,eAAe;AACjB;AACA;IACE,8BAA8B;IAC9B;AACF;AACA;IACE,aAAa;AACf;AACA;IACE,kBAAkB;IAClB,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,YAAY;IACZ,SAAS;IACT,UAAU;IACV,YAAY;IACZ,kBAAkB;IAClB,mBAAmB;IACnB,cAAc;IACd,eAAe;IACf,iBAAiB;IACjB,kBAAkB;IAClB,kBAAkB;IAClB,qBAAqB;IACrB,UAAU;IACV,UAAU;AACZ;AACA;IACE,mBAAmB;IACnB,sCAAsC;IACtC,UAAU;AACZ;AACA;IACE,aAAa;AACf;AACA;IACE,qBAAqB;AACvB;AACA;IACE,aAAa;IACb,mBAAmB;IACnB,YAAY;IACZ,eAAe;IACf,iBAAiB;IACjB,eAAe;IACf,YAAY;AACd;AACA;IACE,kBAAkB;IAClB,cAAc;IACd,gBAAgB;AAClB\",\"sourcesContent\":[\"<template>\\n  <div class=\\\"custom-select\\\" :tabindex=\\\"tabindex\\\" @blur=\\\"open = false\\\">\\n    <div v-if=\\\"!multiple\\\">\\n        <div :class=\\\"open ? 'open selected ' + selectedClass : 'selected ' + selectedClass\\\" @click=\\\"open = !open\\\">\\n          <div v-if = \\\"selected\\\">{{ typeof selected === 'object' ? selected.name : selected }}\\n            <i class=\\\"mdi mdi-chevron-down select-down\\\"></i>\\n            <i v-if=\\\"iconInSelect\\\" class=\\\"mdi mdi-close cleanIcon\\\" style=\\\"right: 30px\\\" @click=\\\"cleanSelected($event)\\\"></i>\\n          </div>\\n          <div v-else>\\n            <span contenteditable=\\\"true\\\" :data-placeholder=\\\"placeholder\\\" class=\\\"custom-placeholder\\\"></span>\\n            <i class=\\\"mdi mdi-chevron-down select-down\\\"></i>\\n          </div>\\n        </div>\\n        <div class=\\\"items\\\" :class=\\\"{ selectHide: !open }\\\" :style=\\\"{padding: extraButton ? '10px 0 0' : '10px 0'}\\\">\\n          <div v-for=\\\"(option, i) of options\\\" :key=\\\"i\\\" @click=\\\"handleClick(option)\\\" :class=\\\"['option' , (props.disabledOptions && getDisabledOptionsText(i)) ? 'disabled' : '' ]\\\">\\n            <span v-if=\\\"props.disabledOptions && getDisabledOptionsText(i)\\\" class=\\\"button-tooltip\\\" :style=\\\"{top: (i*32) + 85 + 'px'}\\\">{{getDisabledOptionsText(i)}}</span>\\n            <div>{{typeof option === 'object' ? option.name : option }}</div>\\n          </div>\\n          <div v-if=\\\"extraButton\\\" class=\\\"button-div\\\" :style=\\\"{borderTop: extraButton ? '1px solid #EEEEEE' :  'none'}\\\" >\\n            <div v-for=\\\"(button, index) in buttons\\\" :key=\\\"index\\\">\\n                <div :id=\\\"button.buttonID\\\" :class=\\\"button.buttonClass + ' button'\\\" @click=\\\"open=false\\\">{{ button.buttonText }}</div>\\n            </div>\\n          </div>\\n        </div>  \\n    </div>\\n    <div v-else>\\n      <div :class=\\\"open ? 'open selected ' + selectedClass : 'selected ' + selectedClass\\\" @click=\\\"open = !open\\\">\\n          <div v-if = \\\"selectedItems && selectedItems.length > 0\\\" class=\\\"multipleSelected\\\">\\n            <span v-for=\\\"item in selectedItems\\\" :key=\\\"item\\\" :class=\\\"multipleSelectedClass\\\">{{ item.name }}\\n              <i class=\\\"mdi mdi-close remove-item\\\" @click=\\\"removeItem($event, item)\\\"></i>\\n            </span>\\n            <i class=\\\"mdi mdi-chevron-down select-down\\\"></i>\\n            <i v-if=\\\"iconInSelect\\\" class=\\\"mdi mdi-close cleanIcon\\\" style=\\\"right: 30px\\\" @click=\\\"cleanSelected($event)\\\"></i>\\n          </div>\\n          <div v-else>\\n            <span contenteditable=\\\"true\\\" :data-placeholder=\\\"placeholder\\\" class=\\\"custom-placeholder\\\"></span>\\n            <i class=\\\"mdi mdi-chevron-down select-down\\\"></i>\\n          </div>\\n        </div>\\n        <div class=\\\"items\\\" :class=\\\"{ selectHide: !open }\\\" :style=\\\"{padding: extraButton ? '10px 0 0' : '10px 0'}\\\">\\n          <div v-for=\\\"(option, i) of options\\\" :key=\\\"i\\\" @click=\\\"handleClick(option)\\\" :class=\\\"['option' , (props.disabledOptions && getDisabledOptionsText(i)) ? 'disabled' : '' ]\\\">\\n            <span v-if=\\\"props.disabledOptions && getDisabledOptionsText(i)\\\" class=\\\"button-tooltip\\\" :style=\\\"{top: (i*32) + 85 + 'px'}\\\">{{getDisabledOptionsText(i)}}</span>\\n            <div>{{typeof option === 'object' ? option.name : option }}</div>\\n          </div>\\n          <div v-if=\\\"extraButton\\\" class=\\\"button-div\\\" :style=\\\"{borderTop: extraButton ? '1px solid #EEEEEE' :  'none'}\\\" >\\n            <div v-for=\\\"(button, index) in buttons\\\" :key=\\\"index\\\">\\n                <div :id=\\\"button.buttonID\\\" :class=\\\"button.buttonClass + ' button'\\\" @click=\\\"open=false\\\">{{ button.buttonText }}</div>\\n            </div>\\n          </div>\\n        </div>  \\n    </div>\\n  </div>\\n</template>\\n\\n<script setup>\\nimport { ref, watchEffect } from 'vue'\\nconst emit = defineEmits([\\\"input\\\", \\\"afterClick\\\"]);\\nconst props = defineProps({\\n  options: {\\n    type: Array,\\n    required: true,\\n  },\\n  disabledOptions: {\\n    type: Array,\\n    required: false\\n  },\\n  default: {\\n    type: String,\\n    required: false,\\n    default: '',\\n  },\\n  defaultMultiple: {\\n    type: Array,\\n    required: false,\\n    default: [],\\n  },\\n  selectedOption: {\\n    type: String,\\n    required: false\\n  },\\n  multiple: {\\n    type: Boolean,\\n    required: false,\\n    default: false\\n  },\\n  tabindex: {\\n    type: Number,\\n    required: false,\\n    default: 0,\\n  },\\n  placeholder: {\\n    type: String,\\n    required: false,\\n    default: \\\"\\\",\\n  },\\n  selectedClass: {\\n    type: String,\\n    required: false,\\n    default: \\\"\\\",\\n  },\\n  multipleSelectedClass: {\\n    type: String,\\n    required: false,\\n    default: \\\"\\\",\\n  },\\n  extraButton: {\\n    type: Boolean,\\n    required: false,\\n    default: false,\\n  },\\n  iconInSelect: {\\n    type: Boolean,\\n    required: false,\\n    default: false,\\n    // validator: () => {\\n    //   return (icon) => typeof icon.iconName === \\\"string\\\" && typeof icon.iconClass === \\\"string\\\" && typeof icon.iconFunc === \\\"function\\\"\\n    // }\\n  },\\n  buttons: {\\n    type: Array,\\n    required: false,\\n    default: () => [],\\n    validator: (value) => {\\n      return value.every(\\n        (button) =>\\n          typeof button === \\\"object\\\" &&\\n          typeof button.buttonText === \\\"string\\\" &&\\n          typeof button.buttonClass === \\\"string\\\" &&\\n          typeof button.buttonID === \\\"string\\\"\\n      );\\n    },\\n  },\\n})\\n\\nconst open = ref(false);\\nconst selected = ref(props.default ? props.default : null);\\nconst selectedItems = ref(props.defaultMultiple ? props.defaultMultiple : []);\\n\\nwatchEffect(() => {\\n  if(props && props.selectedOption){\\n    selected.value = props.selectedOption;\\n    open.value = false;\\n  }\\n});\\n\\nconst handleClick = (option) => {\\n  if(!props.multiple) {\\n    if(typeof option === 'object'){\\n      emit('input', option.id);\\n      selected.value = option;\\n      open.value = false;\\n      emit('input', selected.value.id);\\n    }\\n    else if(typeof option === 'string') {\\n      emit('input', option);\\n      selected.value = option;\\n      open.value = false;\\n      emit('input', selected.value);\\n    }\\n  }\\n  else {\\n      // emit('input', option.id);\\n      selectedItems.value.push(option);\\n      emit('input', selectedItems.value);\\n      emit('afterClick');\\n  }\\n}\\n\\nconst getDisabledOptionsText = (index) => {\\n  const opt = props.disabledOptions.find(e => e.index == index);\\n  if(opt)\\n    return opt.cause;\\n  return undefined;\\n}\\nconst cleanSelected = (event) => {\\n  event.stopPropagation();\\n  selected.value = null;\\n  emit('input', selected.value);\\n}\\nconst removeItem = (event, toRemove) => {\\n  event.stopPropagation();\\n  selectedItems.value = selectedItems.value.filter(item => item.ID != toRemove.ID);\\n  emit('input', selectedItems.value);\\n  emit('afterClick', true, toRemove);\\n\\n}\\n</script>\\n\\n  \\n  <style scoped>\\n  /*You should put other CSS properties with same class names in the parent component's style tag that is not scoped.*/\\n  * {\\n    font-family: \\\"Roboto\\\"\\n  }\\n  .custom-select {\\n    position: relative;\\n    width: 100%;\\n    text-align: left;\\n    outline: none;\\n  }\\n  \\n  .custom-select .selected {\\n\\n    cursor: pointer;\\n    user-select: none;\\n  }\\n  \\n  .custom-select .selected .select-down, \\n  .custom-select .selected .cleanIcon {\\n    position: absolute;\\n    right: 10px;\\n    float: right;\\n  }\\n  \\n  .custom-select .items {\\n    position: absolute;\\n    left: 0;\\n    right: 0;\\n    z-index: 1;\\n  }\\n  \\n  .custom-select .items .option {\\n    cursor: pointer;\\n    user-select: none;\\n  }  \\n  \\n  .custom-select .items .option.disabled div {\\n    cursor: default;\\n    user-select: none;\\n    opacity: 0.4;\\n  } \\n  .custom-select .items .option.disabled:active {\\n    pointer-events: none;\\n  }\\n  \\n  .selectHide {\\n    display: none;\\n  }\\n  .button-div {\\n    justify-content: center;\\n    display: grid;\\n    padding: 13px 0 19px;\\n    margin-top: 10px\\n  }\\n  .button {\\n    cursor: pointer;\\n  }\\n  .custom-placeholder:empty:before {\\n    content:attr(data-placeholder);\\n    color:#BCBCBC\\n  }\\n  .custom-placeholder:focus-visible {\\n    outline: none;\\n  }\\n  .button-tooltip {\\n    visibility: hidden;\\n    display: flex;\\n    flex-direction: row;\\n    align-items: flex-start;\\n    padding: 8px;\\n    top: 39px;\\n    left: 65px;\\n    height: 30px;\\n    position: absolute;\\n    background: #757575;\\n    color: #FFFFFF;\\n    font-size: 12px;\\n    line-height: 14px;\\n    text-align: center;\\n    border-radius: 4px;\\n    letter-spacing: 0.2px;\\n    opacity: 0;\\n    z-index: 1;\\n  }\\n  .custom-select .items .option:hover .button-tooltip {\\n    visibility: visible;\\n    transition: opacity 0.3s ease-out 0.5s;\\n    opacity: 1;\\n  }\\n  .cleanIcon {\\n    display: none;\\n  }\\n  .selected:hover .cleanIcon{\\n    display: inline-block;\\n  }\\n  .multipleSelected {\\n    display: flex;\\n    align-items: center;\\n    height: 40px;\\n    flex-wrap: wrap;\\n    line-height: 18px;\\n    max-width: 100%;\\n    min-width: 0;\\n  }\\n  .multipleSelected .remove-item {\\n    position: relative;\\n    color: #000000;\\n    margin-left: 4px;\\n  }\\n  </style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","<template>\n  <div class=\"custom-select\" :tabindex=\"tabindex\" @blur=\"open = false\">\n    <div v-if=\"!multiple\">\n        <div :class=\"open ? 'open selected ' + selectedClass : 'selected ' + selectedClass\" @click=\"open = !open\">\n          <div v-if = \"selected\">{{ typeof selected === 'object' ? selected.name : selected }}\n            <i class=\"mdi mdi-chevron-down select-down\"></i>\n            <i v-if=\"iconInSelect\" class=\"mdi mdi-close cleanIcon\" style=\"right: 30px\" @click=\"cleanSelected($event)\"></i>\n          </div>\n          <div v-else>\n            <span contenteditable=\"true\" :data-placeholder=\"placeholder\" class=\"custom-placeholder\"></span>\n            <i class=\"mdi mdi-chevron-down select-down\"></i>\n          </div>\n        </div>\n        <div class=\"items\" :class=\"{ selectHide: !open }\" :style=\"{padding: extraButton ? '10px 0 0' : '10px 0'}\">\n          <div v-for=\"(option, i) of options\" :key=\"i\" @click=\"handleClick(option)\" :class=\"['option' , (props.disabledOptions && getDisabledOptionsText(i)) ? 'disabled' : '' ]\">\n            <span v-if=\"props.disabledOptions && getDisabledOptionsText(i)\" class=\"button-tooltip\" :style=\"{top: (i*32) + 85 + 'px'}\">{{getDisabledOptionsText(i)}}</span>\n            <div>{{typeof option === 'object' ? option.name : option }}</div>\n          </div>\n          <div v-if=\"extraButton\" class=\"button-div\" :style=\"{borderTop: extraButton ? '1px solid #EEEEEE' :  'none'}\" >\n            <div v-for=\"(button, index) in buttons\" :key=\"index\">\n                <div :id=\"button.buttonID\" :class=\"button.buttonClass + ' button'\" @click=\"open=false\">{{ button.buttonText }}</div>\n            </div>\n          </div>\n        </div>  \n    </div>\n    <div v-else>\n      <div :class=\"open ? 'open selected ' + selectedClass : 'selected ' + selectedClass\" @click=\"open = !open\">\n          <div v-if = \"selectedItems && selectedItems.length > 0\" class=\"multipleSelected\">\n            <span v-for=\"item in selectedItems\" :key=\"item\" :class=\"multipleSelectedClass\">{{ item.name }}\n              <i class=\"mdi mdi-close remove-item\" @click=\"removeItem($event, item)\"></i>\n            </span>\n            <i class=\"mdi mdi-chevron-down select-down\"></i>\n            <i v-if=\"iconInSelect\" class=\"mdi mdi-close cleanIcon\" style=\"right: 30px\" @click=\"cleanSelected($event)\"></i>\n          </div>\n          <div v-else>\n            <span contenteditable=\"true\" :data-placeholder=\"placeholder\" class=\"custom-placeholder\"></span>\n            <i class=\"mdi mdi-chevron-down select-down\"></i>\n          </div>\n        </div>\n        <div class=\"items\" :class=\"{ selectHide: !open }\" :style=\"{padding: extraButton ? '10px 0 0' : '10px 0'}\">\n          <div v-for=\"(option, i) of options\" :key=\"i\" @click=\"handleClick(option)\" :class=\"['option' , (props.disabledOptions && getDisabledOptionsText(i)) ? 'disabled' : '' ]\">\n            <span v-if=\"props.disabledOptions && getDisabledOptionsText(i)\" class=\"button-tooltip\" :style=\"{top: (i*32) + 85 + 'px'}\">{{getDisabledOptionsText(i)}}</span>\n            <div>{{typeof option === 'object' ? option.name : option }}</div>\n          </div>\n          <div v-if=\"extraButton\" class=\"button-div\" :style=\"{borderTop: extraButton ? '1px solid #EEEEEE' :  'none'}\" >\n            <div v-for=\"(button, index) in buttons\" :key=\"index\">\n                <div :id=\"button.buttonID\" :class=\"button.buttonClass + ' button'\" @click=\"open=false\">{{ button.buttonText }}</div>\n            </div>\n          </div>\n        </div>  \n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, watchEffect } from 'vue'\nconst emit = defineEmits([\"input\", \"afterClick\"]);\nconst props = defineProps({\n  options: {\n    type: Array,\n    required: true,\n  },\n  disabledOptions: {\n    type: Array,\n    required: false\n  },\n  default: {\n    type: String,\n    required: false,\n    default: '',\n  },\n  defaultMultiple: {\n    type: Array,\n    required: false,\n    default: [],\n  },\n  selectedOption: {\n    type: String,\n    required: false\n  },\n  multiple: {\n    type: Boolean,\n    required: false,\n    default: false\n  },\n  tabindex: {\n    type: Number,\n    required: false,\n    default: 0,\n  },\n  placeholder: {\n    type: String,\n    required: false,\n    default: \"\",\n  },\n  selectedClass: {\n    type: String,\n    required: false,\n    default: \"\",\n  },\n  multipleSelectedClass: {\n    type: String,\n    required: false,\n    default: \"\",\n  },\n  extraButton: {\n    type: Boolean,\n    required: false,\n    default: false,\n  },\n  iconInSelect: {\n    type: Boolean,\n    required: false,\n    default: false,\n    // validator: () => {\n    //   return (icon) => typeof icon.iconName === \"string\" && typeof icon.iconClass === \"string\" && typeof icon.iconFunc === \"function\"\n    // }\n  },\n  buttons: {\n    type: Array,\n    required: false,\n    default: () => [],\n    validator: (value) => {\n      return value.every(\n        (button) =>\n          typeof button === \"object\" &&\n          typeof button.buttonText === \"string\" &&\n          typeof button.buttonClass === \"string\" &&\n          typeof button.buttonID === \"string\"\n      );\n    },\n  },\n})\n\nconst open = ref(false);\nconst selected = ref(props.default ? props.default : null);\nconst selectedItems = ref(props.defaultMultiple ? props.defaultMultiple : []);\n\nwatchEffect(() => {\n  if(props && props.selectedOption){\n    selected.value = props.selectedOption;\n    open.value = false;\n  }\n});\n\nconst handleClick = (option) => {\n  if(!props.multiple) {\n    if(typeof option === 'object'){\n      emit('input', option.id);\n      selected.value = option;\n      open.value = false;\n      emit('input', selected.value.id);\n    }\n    else if(typeof option === 'string') {\n      emit('input', option);\n      selected.value = option;\n      open.value = false;\n      emit('input', selected.value);\n    }\n  }\n  else {\n      // emit('input', option.id);\n      selectedItems.value.push(option);\n      emit('input', selectedItems.value);\n      emit('afterClick');\n  }\n}\n\nconst getDisabledOptionsText = (index) => {\n  const opt = props.disabledOptions.find(e => e.index == index);\n  if(opt)\n    return opt.cause;\n  return undefined;\n}\nconst cleanSelected = (event) => {\n  event.stopPropagation();\n  selected.value = null;\n  emit('input', selected.value);\n}\nconst removeItem = (event, toRemove) => {\n  event.stopPropagation();\n  selectedItems.value = selectedItems.value.filter(item => item.ID != toRemove.ID);\n  emit('input', selectedItems.value);\n  emit('afterClick', true, toRemove);\n\n}\n</script>\n\n  \n  <style scoped>\n  /*You should put other CSS properties with same class names in the parent component's style tag that is not scoped.*/\n  * {\n    font-family: \"Roboto\"\n  }\n  .custom-select {\n    position: relative;\n    width: 100%;\n    text-align: left;\n    outline: none;\n  }\n  \n  .custom-select .selected {\n\n    cursor: pointer;\n    user-select: none;\n  }\n  \n  .custom-select .selected .select-down, \n  .custom-select .selected .cleanIcon {\n    position: absolute;\n    right: 10px;\n    float: right;\n  }\n  \n  .custom-select .items {\n    position: absolute;\n    left: 0;\n    right: 0;\n    z-index: 1;\n  }\n  \n  .custom-select .items .option {\n    cursor: pointer;\n    user-select: none;\n  }  \n  \n  .custom-select .items .option.disabled div {\n    cursor: default;\n    user-select: none;\n    opacity: 0.4;\n  } \n  .custom-select .items .option.disabled:active {\n    pointer-events: none;\n  }\n  \n  .selectHide {\n    display: none;\n  }\n  .button-div {\n    justify-content: center;\n    display: grid;\n    padding: 13px 0 19px;\n    margin-top: 10px\n  }\n  .button {\n    cursor: pointer;\n  }\n  .custom-placeholder:empty:before {\n    content:attr(data-placeholder);\n    color:#BCBCBC\n  }\n  .custom-placeholder:focus-visible {\n    outline: none;\n  }\n  .button-tooltip {\n    visibility: hidden;\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n    padding: 8px;\n    top: 39px;\n    left: 65px;\n    height: 30px;\n    position: absolute;\n    background: #757575;\n    color: #FFFFFF;\n    font-size: 12px;\n    line-height: 14px;\n    text-align: center;\n    border-radius: 4px;\n    letter-spacing: 0.2px;\n    opacity: 0;\n    z-index: 1;\n  }\n  .custom-select .items .option:hover .button-tooltip {\n    visibility: visible;\n    transition: opacity 0.3s ease-out 0.5s;\n    opacity: 1;\n  }\n  .cleanIcon {\n    display: none;\n  }\n  .selected:hover .cleanIcon{\n    display: inline-block;\n  }\n  .multipleSelected {\n    display: flex;\n    align-items: center;\n    height: 40px;\n    flex-wrap: wrap;\n    line-height: 18px;\n    max-width: 100%;\n    min-width: 0;\n  }\n  .multipleSelected .remove-item {\n    position: relative;\n    color: #000000;\n    margin-left: 4px;\n  }\n  </style>","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./customSelect.vue?vue&type=style&index=0&id=1f9671f0&scoped=true&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./customSelect.vue?vue&type=style&index=0&id=1f9671f0&scoped=true&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","import script from \"./customSelect.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./customSelect.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./customSelect.vue?vue&type=style&index=0&id=1f9671f0&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/studio/studio/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1f9671f0\"]])\n\nexport default __exports__"],"names":["___CSS_LOADER_EXPORT___","push","module","id","open","selected","props","default","selectedItems","defaultMultiple","selectedOption","value","handleClick","option","multiple","emit","getDisabledOptionsText","index","opt","disabledOptions","find","e","cause","cleanSelected","event","stopPropagation","toRemove","filter","item","ID","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement"],"sourceRoot":""}