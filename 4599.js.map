{"version":3,"file":"4599.js","mappings":"qKAGIA,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOC,GAAI,6/CAA8/C,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,gGAAgG,MAAQ,GAAG,SAAW,4jBAA4jB,eAAiB,CAAC,qkMAAsmM,WAAa,MAEz3Q,S,oECJIH,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOC,GAAI,8yOAA+yO,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,kFAAkF,MAAQ,GAAG,SAAW,iuFAAiuF,eAAiB,CAAC,08rDAA2usD,WAAa,MAEt8gE,S,qECJIH,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOC,GAAI,y1BAA01B,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,kFAAkF,MAAQ,GAAG,SAAW,+UAA+U,eAAiB,CAAC,08rDAA2usD,WAAa,MAE/lvD,S,uFCPA,8BAkBA,QAVkB,EAAAC,cAAd,SAA4BC,EAAcC,GACtC,OAAOC,KAAKC,SAASC,SAASJ,GAAMK,UAAU,EAAGJ,EAAS,EAC9D,EAKc,EAAAK,WAAd,sBACI,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGC,KAAI,SAAAN,GAAU,SAAKF,cAAc,GAAIE,EAAvB,IAAgCO,KAAK,QAAWC,EAAaC,YAAe,OAAYN,SAAS,GAC1I,EAhBe,EAAAM,YAAc,EAiBjC,C,CAlBA,GAAa,EAAAD,aAAAA,C,2BCCb,8BAmBA,QAlBkB,EAAAE,OAAS,SAACC,GAAgB,OAAAA,EAAIC,QAAQ,gBAAiB,IAAIC,aAAjC,EAE1B,EAAAC,0BAA4B,SAACC,EAAmBC,GAC1D,IAAID,IAAcC,EACd,MAAM,IAAIC,MAAM,4DAIpB,MAAO,IAFPF,GAAaA,EAAUG,SAAS,KAAOH,EAAaA,EAAY,KAAMF,eAC5DM,EAAcT,OAAOM,EAEnC,EAEc,EAAAI,6BAA+B,SAACJ,GAAoB,OAAGG,EAAcT,OAAOM,GAAQ,MAAhC,EAEpD,EAAAK,+BAAiC,SAACC,GAA2B,OAAAH,EAAcT,OAAOY,EAAeV,QAAQ,OAAQ,MAApD,EAE7D,EAAAW,6BAA+B,SAACP,GAAoB,OAAGG,EAAcT,OAAOM,GAAQ,IAAhC,EAEpD,EAAAQ,wBAA0B,SAACC,GAAsB,OAAAN,EAAcT,OAAOe,EAAUb,QAAQ,MAAO,IAA9C,EACnE,C,CAnBA,GAAa,IAAAO,C,kBCIb,IAAIO,E,yBACG,MAAMC,EAAeD,EAAa,CACrCE,MAAO,CACHC,UAAW,CACPC,KAAM,UAGdC,KAAM,CACFF,UAAW,CACPG,OAAQ,cACRC,QAAS,iBAGjBC,WAAY,CACRL,UAAW,CACPM,OAAQ,iBASdC,EAA+B,CAAEC,MAAO,UAAWC,KAAM,uBACzDC,EAAoC,CAAEF,MAAO,UAAWC,KAAM,0BAC9DE,EAA6H,CAC/HC,MAAQC,GACAA,GAA+D,kBAA/CA,EAAkCC,UAC3C,CAAEN,MAAO,UAAWC,KAAM,yBAE9B,CAAED,MAAO,UAAWC,KAAM,mBAErCM,IAAK,CAAEP,MAAO,UAAWC,KAAM,kCAC/BO,GAAIT,EACJU,GAAIV,EACJW,KAAMX,EACNY,eAAgB,CAAEX,MAAO,UAAWC,KAAM,oBAC1CW,KAAM,CAAEZ,MAAO,UAAWC,KAAM,2BAChCY,QAAS,CAAEb,MAAO,UAAWC,KAAM,oBACnCP,KAAM,CAAEM,MAAO,UAAWC,KAAM,wBAChCJ,WAAY,CAAEG,MAAO,OAAQC,KAAM,wBACnCa,eAAgB,CAAEd,MAAO,UAAWC,KAAM,wBAC1Cc,KAAM,IAAInC,MAAM,oCAChBoC,KAAMd,EACNe,IAAKf,EACLgB,IAAKhB,EACLiB,IAAKjB,EACLkB,IAAKlB,EACLmB,KAAM,CAAErB,MAAO,UAAWC,KAAM,oBAChCqB,MAAO,CAAEtB,MAAO,UAAWC,KAAM,oBACjCsB,IAAK,CAAEvB,MAAO,UAAWC,KAAM,oBAC/BuB,OAAQtB,EACRuB,YAAa,IAAI7C,MAAM,iCACvB8C,YAAa,CAAE1B,MAAO,UAAWC,KAAM,uBACvC0B,KAAM,IAAI/C,MAAM,2BAGb,MAAMgD,EACF,yBAAOC,CAAmBC,EAAsBC,GACnD,MAAMC,EAAS7B,EAAa2B,GAC5B,GAAIE,aAAkBpD,MAAS,MAAMoD,EACrC,MAAwB,mBAAVA,EAAuBA,EAAOD,GAAoBC,CACpE,E,sDCjEG,MACMC,EAAsB,CAAE,MAAO,MAAO,OAAQ,MAAO,OACrDC,EAAyB,CAAC,QAAS,MAAQ,MAAQ,MAAQ,OAAS,MAAQ,MAAQ,SAAW,OAAQ,OAAQ,QAAS,OAwBxHC,EAAiB,CAC1BC,MAAO,kBACPC,SAAU,WACVC,QAAS,oBACTC,SAAU,gBACVC,WAAY,mBACZC,QAAS,0BACTlC,IAAK,aACLmC,SAAU,iBACVC,mBAAoB,sBACpBC,UAAW,a,mCCfR,MAAMC,EAAsBC,OAAOC,IAAI,sB,mCCwDvC,MAAMC,EAAqBF,OAAOC,IAAI,qB,mCC3EtC,MAAME,EAAmBH,OAAOC,IAAI,mB,mCCQpC,MAAMG,EAAcJ,OAAOC,IAAI,c,mCCJ/B,MAAMI,EAAYL,OAAOC,IAAI,Y,mCCF7B,MAAMK,EAA0BN,OAAOC,IAAI,0B,mCCA3C,MAAMM,EAA2BP,OAAOC,IAAI,2B,mCCF5C,MAAMO,EAAYR,OAAOC,IAAI,Y,iTCFpC,MAAMQ,EAAeC,KAAM,QAAa,mBAAmBA,EAAEA,KAAI,UAAcA,GACzEC,EAAa,CAAC,MACdC,EAAa,CACjBC,IAAK,EACLC,MAAO,gBAOHC,EAAa,CALcN,GAAa,KAAmB,IAAAO,GAAoB,IAAK,CAAEF,MAAO,wBAA0B,MAAO,KACnGL,GAAa,KAAmB,IAAAO,GAAoB,OAAQ,CAC3FF,MAAO,iBACPG,MAAO,CAAC,IAAM,QAAQ,KAAO,MAAM,UAAU,IAAI,MAAQ,SACxD,gBAAiB,MAKdC,EAAa,CACjBL,IAAK,EACLC,MAAO,iBACPG,MAAO,CAAC,UAAU,IAAI,MAAQ,UAE1BE,EAA2BV,GAAa,KAAmB,IAAAO,GAAoB,IAAK,KAAM,gBAAiB,KAC3GI,EAA2BX,GAAa,KAAmB,IAAAO,GAAoB,IAAK,KAAM,oBAAqB,KAQrH,GAA4B,QAAiB,CAC3CK,OAAQ,mBACRC,MAAO,CACLC,qBAAsB,CAAEC,KAAMC,UAC9BC,YAAa,KACbC,cAAe,CAAEH,KAAMC,UACvBG,eAAgB,CAAEJ,KAAMC,UACxBI,KAAM,MAER,KAAAC,CAAMC,GAER,MAAMT,EAAQS,EAWRC,GAAe,QAAI,6BACnBC,GAAU,QAAIX,EAAMO,KAAKI,SAE/B,SAASC,IACRZ,EAAMM,eAAeN,EAAMO,MAAM,GACjCG,EAAaG,MAAQ,eAAeb,EAAMO,KAAKO,UAAY,SAAW,iBACvE,CAEA,SAASC,IAGR,OAFAf,EAAMC,qBAAqBD,EAAMO,MACjCI,EAAQE,MAAQb,EAAMO,KAAKI,QACpBA,EAAQE,KAChB,CAEA,MAAMG,GAAW,SAAS,IAEV,IADkB,eAAnBhB,EAAMO,KAAKL,MAAyBF,EAAMO,KAAKU,UAAYjB,EAAMO,KAAKW,OAAS,GAAK,EAAIlB,EAAMO,KAAKW,OAAS,KAK3H,MAAO,CAACC,EAAUC,K,0BAChB,OAAQ,WAAc,QAAoB,MAAO,CAC/C5B,MAAO,gBACPpG,GAAIqH,EAAQF,KAAKnH,IAChB,CACAqH,EAAQF,KAAKc,WAAiC,QAArB,EAAAZ,EAAQF,KAAKc,gBAAQ,eAAE9H,QAAS,IACrD,WAAc,QAAoB,IAAK,CACtCgG,IAAK,EACLC,OAAO,oBAAgBkB,EAAaG,OACpCS,QAASV,EACTjB,OAAO,oBAAgB,CAAE4B,OAAQ,UAAWC,KAA4B,GAAtBf,EAAQF,KAAKW,OAAa,QAAOF,GAAY,EAAI,MAAO,QAAOA,GAAY,QAC5H,KAAM,KACT,QAAoB,QAAQ,GACV,eAArBP,EAAQF,KAAKL,OACT,WAAc,QAAoB,IAAK,CACtCX,IAAK,EACLI,OAAO,oBAAgB,CAAE8B,IAAK,MAAOC,SAAU,SAAUH,OAAQ,UAAWC,MAAM,QAAOR,GAAY,GAAK,KAAMW,SAAU,aAC1HL,QAASV,EACTpB,MAAO,yDACN,KAAM,MACR,WAAc,QAAa,IAAc,CACxCD,IAAK,EACLI,OAAO,oBAAgB,CAAE8B,IAAK,MAAOF,OAAQ,UAAWC,MAAM,QAAOR,IAAcP,EAAQF,KAAKW,MAAa,GAAL,IAAW,KAAMS,SAAU,aACnIZ,MAAOJ,EAAQE,MACfe,SAAUnB,EAAQF,KAAKqB,SACvBN,QAASP,GACR,KAAM,EAAe,CAAC,QAAS,QAAS,cACxB,UAAV,QAAZ,EAAAN,EAAQF,YAAI,eAAEL,QACV,WAAc,QAAoB,IAAK,CACtCX,IAAK,EACLI,OAAO,oBAAgB,CAAE6B,MAAM,QAAOR,IAAcP,EAAQF,KAAKW,MAAa,GAAL,IAAW,OACpF1B,MAAO,mDACN,KAAM,IACc,SAAV,QAAZ,EAAAiB,EAAQF,YAAI,eAAEL,QACZ,WAAc,QAAoB,IAAK,CACtCX,IAAK,EACLI,OAAO,oBAAgB,CAAE6B,MAAM,QAAOR,IAAcP,EAAQF,KAAKW,MAAa,GAAL,IAAW,OACpF1B,MAAO,sDACN,KAAM,KACT,QAAoB,QAAQ,GACX,OAAV,QAAZ,EAAAiB,EAAQF,YAAI,eAAEL,QACV,WAAc,QAAoB,IAAK,CACtCX,IAAK,EACLI,OAAO,oBAAgB,CAAE6B,MAAM,QAAOR,IAAcP,EAAQF,KAAKW,MAAa,GAAL,IAAW,OACpF1B,MAAO,oDACN,KAAM,KACT,QAAoB,QAAQ,GACT,QAAV,QAAZ,EAAAiB,EAAQF,YAAI,eAAEL,QACV,WAAc,QAAoB,IAAK,CACtCX,IAAK,EACLI,OAAO,oBAAgB,CAAE6B,MAAM,QAAOR,IAAcP,EAAQF,KAAKW,MAAa,GAAL,IAAW,OACpF1B,MAAO,gEACN,KAAM,IACc,YAAV,QAAZ,EAAAiB,EAAQF,YAAI,eAAEL,QACZ,WAAc,QAAoB,IAAK,CACtCX,IAAK,EACLI,OAAO,oBAAgB,CAAE6B,MAAM,QAAOR,IAAcP,EAAQF,KAAKW,MAAa,GAAL,IAAW,OACpF1B,MAAO,sDACN,KAAM,IACc,SAAV,QAAZ,EAAAiB,EAAQF,YAAI,eAAEL,QACZ,WAAc,QAAoB,IAAK,CACtCX,IAAK,EACLI,OAAO,oBAAgB,CAAE6B,MAAM,QAAOR,IAAcP,EAAQF,KAAKW,MAAa,GAAL,IAAW,OACpF1B,MAAO,0DACN,KAAM,IACc,mBAAV,QAAZ,EAAAiB,EAAQF,YAAI,eAAEL,QACZ,WAAc,QAAoB,IAAK,CACtCX,IAAK,EACLI,OAAO,oBAAgB,CAAE6B,MAAM,QAAOR,IAAcP,EAAQF,KAAKW,MAAa,GAAL,IAAW,OACpF1B,MAAO,8DACN,KAAM,IACc,SAAV,QAAZ,EAAAiB,EAAQF,YAAI,eAAEL,QACZ,WAAc,QAAoB,IAAK,CACtCX,IAAK,GACLI,OAAO,oBAAgB,CAAE6B,MAAM,QAAOR,IAAcP,EAAQF,KAAKW,MAAa,GAAL,IAAW,OACpF1B,MAAO,uDACN,KAAM,IACa,kBAArBiB,EAAQF,KAAKL,OACX,WAAc,QAAoB,IAAK,CACtCX,IAAK,GACLI,OAAO,oBAAgB,CAAE6B,MAAM,QAAOR,IAAcP,EAAQF,KAAKW,MAAa,GAAL,IAAW,OACpF1B,MAAO,4DACN,KAAM,IACa,eAArBiB,EAAQF,KAAKL,OACX,WAAc,QAAoB,IAAK,CACtCX,IAAK,GACLI,OAAO,oBAAgB,CAAE6B,MAAM,QAAOR,IAAcP,EAAQF,KAAKW,MAAa,GAAL,IAAW,OACpF1B,MAAO,sDACN,KAAM,KACT,QAAoB,QAAQ,IAC5C,IAAAE,GAAoB,OAAQ,CAC1BC,OAAO,oBAAgB,CAAE6B,MAAM,QAAOR,IAAcP,EAAQF,KAAKW,OAA8B,eAArBT,EAAQF,KAAKL,KAA6B,GAAL,IAAW,OAC1HV,MAAO,uBACN,EACD,SAAiB,qBAA6B,QAAZ,EAAAiB,EAAQF,YAAI,eAAEsB,MAAQ,IAAK,IACzC,QAAnB,EAAApB,EAAQL,mBAAW,eAAE0B,KAAMrB,EAAQF,KAAKnH,KACpC,WAAc,QAAoB,OAAQkG,EAAYG,KACvD,QAAoB,QAAQ,IAC/B,GACmB,eAArBgB,EAAQF,KAAKL,OACT,WAAc,QAAoB,KAAW,CAAEX,IAAK,IAAM,CACvDkB,EAAQF,KAAKwB,WAcX,QAAoB,QAAQ,KAb3B,WAAc,QAAoB,OAAQ,CACzCxC,IAAK,EACLC,OAAO,oBAAgB,CAAC,eAAgBiB,EAAQF,KAAKqB,SAAW,WAAa,KAC7EN,QAASF,EAAO,KAAOA,EAAO,GAAMY,GAAiBvB,EAAQJ,cAAcI,EAAQF,QAClF,EACD,SAAiB,qBAAiBE,EAAQF,KAAK0B,QAAUxB,EAAQF,KAAK0B,QAAU,cAAgB,IAAK,GACnGxB,EAAQF,KAAKwB,WAKX,QAAoB,QAAQ,KAJ3B,WAAc,QAAoB,IAAK,CACtCxC,IAAK,EACLC,OAAO,oBAAgB,CAAC,sCAAuCiB,EAAQF,KAAKqB,SAAW,WAAa,MACnG,KAAM,KAEZ,IAENnB,EAAQF,KAAKqB,WAAanB,EAAQF,KAAK0B,UACnC,WAAc,QAAoB,OAAQrC,EAAY,EACrD,QAAiB,yCACjBC,GACA,QAAiB,iCACjBC,GACA,QAAiB,iBAEnB,QAAoB,QAAQ,IAC/B,MACH,QAAoB,QAAQ,IAC/B,EAAeT,EAAY,CAEhC,I,uIChMI6C,EAAU,CAAC,EAEfA,EAAQC,kBAAoB,IAC5BD,EAAQE,cAAgB,IAElBF,EAAQG,OAAS,SAAc,KAAM,QAE3CH,EAAQI,OAAS,IACjBJ,EAAQK,mBAAqB,IAEhB,IAAI,IAASL,GAKJ,KAAW,IAAQM,QAAS,IAAQA,O,eCpB1D,MAEA,GAFiC,OAAgB,EAAQ,CAAC,CAAC,YAAY,qB,eCHvE,MAAM,EAAepD,KAAM,QAAa,mBAAmBA,EAAEA,KAAI,UAAcA,GACzE,EAAa,CAAEI,MAAO,aACtB,EAAa,CAAEA,MAAO,eACtB,GAAa,CAAEA,MAAO,eACtB,GAAa,CAAED,IAAK,GACpB,GAAa,CAAEC,MAAO,iBACtB,GAAa,CAAC,WACd,GAAa,CACjBD,IAAK,EACLC,MAAO,sCAEH,GAAa,CAAC,WACdiD,GAA2B,GAAa,KAAmB,IAAA/C,GAAoB,IAAK,CACxFF,OAAoB,oBAAgB,CAAC,yCACpC,MAAO,KACJkD,GAAc,CAAC,WACfC,GAAc,CAClBpD,IAAK,EACLC,MAAO,iBACPG,MAAO,CAAC,UAAU,IAAI,MAAQ,UAE1BiD,GAA4B,GAAa,KAAmB,IAAAlD,GAAoB,IAAK,KAAM,gBAAiB,KAC5GmD,GAA4B,GAAa,KAAmB,IAAAnD,GAAoB,IAAK,KAAM,oBAAqB,KAChHoD,GAAc,CAClBvD,IAAK,EACLI,MAAO,CAAC,gBAAgB,UAEpBoD,IAA2B,QAAmB,kaAA+a,GAC7dC,GAA4B,GAAa,KAAmB,IAAAtD,GAAoB,OAAQ,CAAEF,MAAO,eAAiB,YAAa,KAC/HyD,GAAc,CAClB1D,IAAK,EACLC,MAAO,iBACPG,MAAO,CAAC,IAAM,QAAQ,KAAO,QAAQ,UAAU,IAAI,MAAQ,UAEvDuD,GAAc,CAClB3D,IAAK,EACLC,MAAO,iBACPG,MAAO,CAAC,IAAM,QAAQ,KAAO,QAAQ,UAAU,IAAI,MAAQ,UAEvDwD,GAAc,CAClB5D,IAAK,EACLC,MAAO,iBACPG,MAAO,CAAC,IAAM,QAAQ,KAAO,QAAQ,UAAU,IAAI,MAAQ,UAEvDyD,GAA4B,GAAa,KAAmB,IAAA1D,GAAoB,OAAQ,CAAEF,MAAO,sBAAwB,WAAY,KACrI6D,GAAc,CAClB9D,IAAK,EACLC,MAAO,iBACPG,MAAO,CAAC,IAAM,QAAQ,KAAO,QAAQ,UAAU,IAAI,MAAQ,UAEvD2D,GAAc,CAClB/D,IAAK,EACLC,MAAO,iBACPG,MAAO,CAAC,IAAM,QAAQ,KAAO,QAAQ,UAAU,IAAI,MAAQ,UAEvD4D,GAAc,CAClBhE,IAAK,EACLC,MAAO,iBACPG,MAAO,CAAC,IAAM,QAAQ,KAAO,QAAQ,UAAU,IAAI,MAAQ,UAEvD6D,GAAc,CAClBjE,IAAK,EACLC,MAAO,iBACPG,MAAO,CAAC,IAAM,QAAQ,KAAO,QAAQ,UAAU,IAAI,MAAQ,UAwC7D,IAA4B,QAAiB,CAC3CI,OAAQ,gBACRC,MAAO,CACLyD,WAAY,KACZC,kBAAmB,MAErBC,MAAO,CAAC,SACR,KAAAnD,CAAMC,GAAc,KAAEmD,IAExB,MAAM5D,EAAQS,EAMRoD,EAAY,KAAUC,QAAoBC,EAAA,GAC1CC,EAAmB,KAAUF,QAA2BG,EAAA,GACxDC,EAAS,KAAUJ,QAAiBK,EAAA,GACpCC,EAAW,KAAUN,QAA0BO,EAAA,GAC/CC,EAAoB,KAAUR,QAAqBhF,EAAA,GACnDyF,EAAY,KAAUT,QAAoBU,EAAA,GAC1CC,EAAkB,KAAUX,QAAmB5E,EAAA,GAC/CwF,EAAW,KAAUZ,QAAmB/E,EAAA,GACxC4F,EAAoB,KAAUb,QAA4BlF,EAAA,GAC1DgG,EAAqB,KAAUd,QAA6BrF,EAAA,GAI5DoG,GAAQ,QAAuB,IAC/BC,GAAc,SAAa,GAC3BC,GAAiB,QAAY,IAC7BC,GAAkB,UAClBC,GAAiB,UACjBC,GAAiB,UACjBC,GAAyB,UACzB/E,GAAc,UACdgF,GAAgB,UAChBC,GAAqB,QAAY,IACjCC,GAAa,SAAS,IAAMzB,EAAU0B,KAAKC,MAAMC,GAAQA,EAAI3D,IAAM+B,EAAU6B,OAAOC,WAG1F,SAAUC,gBACAC,QAAQC,IAAI,CACd1B,EAAS2B,eAAwC/G,EAAA,EAAyB,CAAC,GAAGgH,MAAKC,GAAOf,EAAerE,MAAQoF,IACjH7B,EAAS2B,eAAyC9G,EAAA,EAA0B,CAAC,GAAG+G,MAAKC,GAAOd,EAAuBtE,MAAQoF,MAkGnI,WACI,MAAMpM,EAAM,IAAIqM,IACVC,EAAS,IAAID,IAEnBlC,EAAiBoC,aAAavC,EAAU6B,OAAOb,OAAO,CAACtE,EAAM8F,K,YACzD,GAAuB,SAAnB9F,EAAK+F,WAAyB,OAIlC,IAAIrE,EACJ,GAHmD,UAA1B1B,EAAKgG,OAAOD,YAA0BE,GAAiBjG,EAAKgG,QAShF,CACD,MAAME,EAA6C,QAA5B,EAAAtB,EAAuBtE,aAAK,eAAE6F,IAAInG,EAAKgG,OAAOzE,IAC/D6E,EAAqH,QAApG,EAAApG,EAAKgG,OAAmBK,oBAAoBpB,MAAKC,GAAOA,EAAIoB,eAAiBhD,EAAU6B,OAAOC,eAAM,eAAEmB,gBAEvHC,EAAsBN,aAAc,EAAdA,EAAgBO,QAAOC,GAAKA,EAAEhF,SAAW0E,IAAeO,SAAQD,GAAKA,EAAEE,wBAAuB3B,MAAKyB,GAAKA,EAAEG,SAAW7G,EAAKuB,KACtJG,EAAU8E,aAAmB,EAAnBA,EAAqB9E,O,KAXZ,CACnB,MAAMoF,EAAaC,GAAkB/G,GACrC,IAAK8G,EACD,OAAOlB,EAAOoB,IAAIhH,EAAKuB,GAAIvB,EAAKiH,gBAAkBjH,EAAKiH,gBAAgB3N,KAAIoN,GAAKA,EAAEQ,UAAWC,SACjGzF,EAAUoF,C,CAUd,MAAMM,EAAgD,QAAlC,EAAoB,QAApB,EAAAzC,EAAerE,aAAK,eAAE6F,IAAInG,EAAKuB,WAAG,eAAE0D,MAAKyB,GAAKA,EAAEhF,SAAWA,IAE/EkE,EAAOoB,IAAIhH,EAAKuB,IAAI6F,aAAW,EAAXA,EAAaH,iBAAkBG,aAAW,EAAXA,EAAaH,gBAAgB3N,KAAIoN,GAAKA,EAAEQ,UAAWC,QAAgB,IAI1HvB,EAAOyB,SAAQ,CAACC,EAAYJ,KACxB,MAAMK,EAAaJ,QACnBvB,EAAOyB,SAAQ,CAACG,EAAcC,KACtBD,EAAaE,MAAKC,GAASA,GAAST,KACpCK,EAAW5O,KAAK8O,EAAW,IAEnCnO,EAAI0N,IAAIE,EAAS,CAAEK,aAAYD,cAAa,IAEhDzC,EAAcvE,MAAQhH,CAC1B,CAvIIsO,GAqJJvC,iBAEIf,EAAMhE,MAAQgD,EAAU6B,OAAOb,MAC1BmC,QAAQzG,GAA4B,UAAnBA,EAAK+F,YAA0B/F,EAAKc,SAAS9H,OAAS,IACvEM,KAAK0G,I,YACF,MAAM6H,EAAmB5B,GAAiBjG,GACpCoG,EAA8G,QAA7F,EAAApG,EAAiBqG,oBAAoBpB,MAAKC,GAAOA,EAAIoB,eAAiBhD,EAAU6B,OAAOC,eAAM,eAAEmB,gBAChHK,EAAwBiB,EAA8G,QAA3F,EAA0C,QAA1C,EAA4B,QAA5B,EAAAjD,EAAuBtE,aAAK,eAAE6F,IAAInG,EAAKuB,WAAG,eAAE0D,MAAKrM,GAAUA,EAAO8I,SAAW0E,WAAc,eAAEQ,2BAAwBkB,EAChKC,EAAwB,CAC1BlP,GAAImH,EAAKuB,GACThB,WAAW,EACXe,KAAMtB,EAAKsB,KACX3B,KAAM,SACNqI,SAAUH,EACVnG,QAAS0E,EACTtF,SAAWd,EAAiBc,SACvB2F,QAAQwB,GAA8B,SAApBA,EAAMlC,aACxBzM,KAAI2O,GAASA,IACb3O,KAAI2O,IACD,MAAMC,EAAyB,CAAErP,GAAIoP,EAAM1G,GAAIb,SAAUV,EAAKuB,GAAID,KAAM2G,EAAM3G,KAAM3B,KAAOsI,EAAiB9K,WAC5G,IAAK0K,GAAoBI,EAAME,eAAgB,CAC3C,MAAMrB,EAAaC,GAAkBkB,GACrC,MAAO,IACAC,EACH9H,UAAS0G,GAAoBmB,EAAME,eACnC9G,UAAUyF,IAAsBmB,EAAME,eACtCzG,QAASuG,EAAME,eAAiB,SAAWrB,E,CAInD,MAAMsB,EAAuBxB,aAAqB,EAArBA,EAAuB3B,MAAKyB,GAAKA,EAAEG,SAAWoB,EAAM1G,KACjF,MAAO,IAAK2G,EAAY9H,SAAS,EAAMiB,UAAU,EAAOK,QAAS0G,aAAoB,EAApBA,EAAsB1G,QAAuB,KAI1H,OADA2G,GAA0BN,GACnBA,CAAS,IAIxB,MAAMjL,EAAcwG,EAAU6B,OAAOb,MAAMW,MAAKyB,GAAe,gBAAVA,EAAEpF,OACjDwF,EAAaC,GAAkBjK,GAUrC,SAASwL,EAAoBC,EAAsBvC,G,UAC/C,MAAMc,EAAaC,GAAkBwB,GAC/BC,EAA0C,eAA1BD,EAAapL,UAC7BkE,GAAWmH,IAAwB1B,IAAsByB,EAAaJ,eACtEM,EAAsB,CACxB5P,GAAI0P,EAAahH,GACjBD,KAAMiH,EAAajH,KACnBlB,UAASoI,KAAuB1B,GAAoByB,EAAaJ,eACjE9G,WACA1B,KAAM4I,EAAapL,UACnBuE,QAAS8G,OAAgBV,EAAYS,EAAaJ,eAAiB,SAAWrB,EAC9EnG,OAAwB,QAAjB,EAAA4H,EAAazC,YAAI,eAAGyC,EAAazC,KAAK9M,OAAS,KAAMsK,EAAU6B,OAAOC,MAAyB,QAAjB,EAAAmD,EAAazC,YAAI,eAAE9M,YAAS8O,EACjHvH,WAAW,EACXO,SAAUyH,EAAazH,SACvBJ,SAAUsF,aAAM,EAANA,EAAQnN,IAEhB6P,GAAW,IAAAC,WAAU,EAAkB,CACzCjJ,wBACAG,cACAC,iBACAC,kBACAC,KAAMyI,IAEJG,EAAUC,SAASC,cAAc,OACvCJ,EAASK,MAAMH,GACf,MAAMI,EAAWH,SAASI,eAAe,wBACzCD,SAAAA,EAAUE,YAAYN,GACD,QAArB,EAAAL,EAAazH,gBAAQ,SAAEuG,SAAQ8B,IAC3Bb,EAAoBa,EAASV,EAAQ,IAErB,eAAhBA,EAAQ9I,MACR2E,EAAMhE,MAAM3H,KAAK8P,EAEzB,CA1CA3L,GAAewH,EAAMhE,MAAM3H,KAAK,CAC5BE,GAAIiE,EAAYyE,GAChBD,KAAMxE,EAAYwE,KAClBlB,SAAS,EACTiB,UAAU,EACV1B,KAAO7C,EAAuBK,UAC9BuE,QAAUoF,GAAa,WAsC3BxD,EAAU6B,OAAOb,MACZmC,QAAQzG,I,QAAS,MAAmB,SAAnBA,EAAK+F,YAA2C,eAAlB/F,EAAK7C,WAAgD,eAAlB6C,EAAKwB,WAAgD,gBAAlBxB,EAAKwB,YACjG,IAAZ,QAAT,EAAAxB,EAAK8F,YAAI,eAAE9M,UAAwB,QAAT,EAAAgH,EAAK8F,YAAI,eAAG,GAAG3M,aAAcmK,EAAU6B,OAAOC,MAAM,IAClFiC,SAAQrH,KACL,SAAS,IAAMsI,EAAoBtI,IAAgB,IAG3D,MAAMoJ,EAAe,EAAA5P,aAAaH,aAC5BgQ,EAAmB/F,EAAU6B,OAAOb,MAAMmC,QAAQzG,GAA4B,SAAnBA,EAAK+F,YAA2C,eAAlB/F,EAAKwB,YAC9F8H,EAAyB,CAC3BzQ,GAAIuQ,EACJ7I,WAAW,EACXe,KAAM,cACN3B,KAAM,SACNqI,UAAU,EACVlH,SAAUuI,EAAiB/P,KAAIsE,IAC3B,MAAMkJ,EAAaC,GAAkBnJ,GACrC,MAAO,CACH/E,GAAI+E,EAAS2D,GACbb,SAAU0I,EACV9H,KAAM1D,EAAS0D,KACf3B,KAAM/B,EAAST,UACfiD,QAAuB0H,MAAdhB,EACTtF,UAAW5D,aAAQ,EAARA,EAAU4D,UACrBH,UAAWyF,EACXpF,QAASoF,EACZ,KAGTuB,GAA0BiB,GAG1B,MAAMC,EAAY,EAAA/P,aAAaH,aACzBmQ,EAAelG,EAAU6B,OAAOb,MAAMmC,QAAQzG,GAA4B,SAAnBA,EAAK+F,YAA2C,gBAAlB/F,EAAKwB,YAC1FiI,EAA0B,CAC5B5Q,GAAI0Q,EACJhJ,WAAW,EACXe,KAAM,oBACN3B,KAAM,SACNqI,UAAU,EACV0B,iBAAiB,EACjBC,iBAAiB,EACjB7I,SAAU0I,EAAalQ,KAAKsQ,IAAU,CAClC/Q,GAAI+Q,EAAMrI,GACVb,SAAU6I,EACVjI,KAAMsI,EAAMtI,KACZ3B,KAAMiK,EAAMzM,UACZiD,SAAS,EACToB,UAAWoI,aAAK,EAALA,EAAOpI,eAG1B6G,GAA0BoB,GAE1BnF,EAAMhE,MAAMuJ,QAAQJ,GACpBnF,EAAMhE,MAAMuJ,QAAQP,EACxB,CAhSIQ,GACoB,UAApBrK,EAAMyD,YAA0B6G,KAChCxF,EAAYjE,MAAQ0J,IAAU,IAGlC,MAAMC,GAA8B,SAAS,IAAM3F,EAAMhE,MAAMmG,QAAOC,GAAe,UAAVA,EAAE/G,MAAoB+G,EAAEiD,kBAAiB3Q,SAC9GkR,GAA8B,SAAS,IAAM5F,EAAMhE,MAAMmG,QAAOC,GAAe,UAAVA,EAAE/G,OAAqB+G,EAAEiD,iBAAmBjD,EAAEgD,kBAAiB1Q,SACpImR,IAA8B,SAAS,IAAM7F,EAAMhE,MAAMmG,QAAOC,GAAe,UAAVA,EAAE/G,MAAoB+G,EAAEtG,UAASpH,SACtGoR,IAAsB,SAAS,IAAM9F,EAAMhE,MAAMtH,SACjDqR,IAAoB,SAAS,IAA2B,UAApB5K,EAAMyD,YAA0BzD,EAAM0D,kBAAkBmH,KAA+B,IAAxB9F,EAAelE,QAAiBiE,EAAYjE,QAAUgE,EAAMhE,MAAMoH,MAAM1H,GAASA,EAAKI,SAAWJ,EAAK0J,mBAAyC,UAApBjK,EAAMyD,aAA2BqH,OAA2BC,OAC1RC,IAAoB,SAAS,IAAMnG,EAAMhE,MAAMtH,QAAUiR,EAA4B3J,SACpF4J,EAA4B5J,MAAQ6J,GAA4B7J,MAAQ,SAAYwH,IACrF4C,IAAiB,SAAS,IA6ShC,WACI,IAAIA,GAA0B,EAgB9B,OAfApG,EAAMhE,MAAM+G,SAAQrH,I,MACC,UAAbA,EAAKL,KACQ,QAAb,EAAAK,EAAKc,gBAAQ,SAAEuG,SAAQY,IACfA,EAAMvG,UACNgJ,GAAiB,E,IAMrB1K,EAAK0B,UACLgJ,GAAiB,E,IAItBA,CACX,CA/TsCC,KAChCC,IAAsB,QAASJ,IAC/BK,IAAkB,QAASN,IAEjC,SAASP,KACL,IAAIc,GAAS,EACb,MAAMC,EAAUzG,EAAMhE,MAAMmG,QAAOC,GAAe,UAAVA,EAAE/G,MAAoB+G,EAAEgD,kBAC1DsB,EAAgB1G,EAAMhE,MAAMmG,QAAOC,GAAe,SAAVA,EAAE/G,MAAmB+G,EAAEtG,UAGrE,OADAP,EAAYS,MAASgD,EAAU6B,OAAOb,MAAwBW,MAAKjF,GAAQA,EAAKiL,eAC3EpL,EAAYS,QAGO,UAApBb,EAAMyD,aACF6H,EAAQ/R,OAAS,IACjB8R,EAASC,EAAQzR,KAAIoN,GAAKA,EAAE5F,WAAU2F,QAAOC,KAAMA,aAAC,EAADA,EAAGzB,MAAKiG,GAAe,kBAAVA,EAAEvL,MAA4BuL,EAAE9K,aAAUpH,QAAU,GAE1FgS,EAAchS,OAAS,IAEjD8R,GAE2E,GAFlEE,EACJ1R,KAAIoN,GAAKpD,EAAU6B,OAAOb,MAAMW,MAAKjF,GAAQA,EAAKuB,IAAMmF,EAAE7N,OAC1DsS,WAAUzE,GAAOA,EAAEhL,YAA4C,eAIrEoP,EACX,CAEA,SAASN,K,QACL,MAAMY,EAAW,IAAIzF,IACrBrB,EAAMhE,MAAM+G,SAAQrH,IACC,UAAbA,EAAKL,MAAoBK,EAAKc,UAAYd,EAAKc,SAAS9H,OAAS,EACjEgH,EAAKc,SAASuG,SAAQY,GAASmD,EAASpE,IAAIiB,EAAMpP,GAAqB,GAAjBoP,EAAM7H,WAE5DgL,EAASpE,IAAIhH,EAAKnH,GAAoB,GAAhBmH,EAAKI,QAAgB,IAGnD,MAAMiL,EAAmB,IAAI1F,IACV,QAAnB,EAAAd,EAAcvE,aAAK,SAAE+G,SAAQ,CAACiE,EAAMzS,KAC3BuS,EAASjF,IAAItN,IAGlByS,EAAKhE,WAAWD,SAAQkE,IACpB,IAAIH,EAASjF,IAAIoF,GAGjB,GAAIF,EAAiBG,IAAI3S,GAAK,CAC1B,MAAM4S,EAAOJ,EAAiBlF,IAAItN,GAClC4S,EAAK9S,KAAK4S,GACVF,EAAiBrE,IAAInO,EAAI4S,E,MAEzBJ,EAAiBrE,IAAInO,EAAI,CAAC0S,G,GAGhC,IAIN,MAAOG,GAAeL,EAAiBM,OACvC,GAAID,EAAa,CACb,MAAME,EAAgBP,EAAiBlF,IAAIuF,GACrCG,EAAkBD,EAAgBA,EAActS,IAAIwS,IAAUxS,KAAIoN,GAAKA,aAAC,EAADA,EAAGpF,OAAM/H,KAAK,MAAQ,GACnGuL,EAAmBxE,MAAQ,UAAUuL,YAA+C,QAArB,EAAAC,GAASJ,UAAY,eAAEpK,mBAAmBuK,I,CAG7G,OAAgC,GAAzBR,EAAiBU,IAC5B,CAEA,SAASxB,K,MACL,OAAqE,QAA7D,EAAAjG,EAAMhE,MAAM2E,MAAMjF,IAAQ,MAAC,OAAAA,EAAKnH,KAAuB,QAAjB,EAAAgH,EAAYS,aAAK,eAAEiB,GAAG,WAAC,eAAEnB,OAC3E,CAEA,SAAS0L,GAASvK,GACd,IAAK,MAAMvB,KAAQsE,EAAMhE,MAAO,CAC5B,GAAiB,UAAbN,EAAKL,MAAoBK,EAAKnH,IAAM0I,EACpC,OAAOvB,EACX,GAAiB,UAAbA,EAAKL,MAAoBK,EAAKc,UAAYd,EAAKc,SAAS9H,OAAS,EAAG,CACpE,MAAMkS,EAAIlL,EAAKc,SAASmE,MAAKyB,GAAKA,EAAE7N,IAAM0I,IAC1C,GAAI2J,EAAG,OAAOA,C,EAG1B,CAqMA,SAASnE,GAAkB/G,G,MACvB,KAAyB,QAApB,EAAA2E,EAAerE,aAAK,eAAEkL,IAAIxL,EAAKuB,KAChC,OAEJ,MAAMyK,EAAWrH,EAAerE,MAAM6F,IAAInG,EAAKuB,IAC/C,OAAKyK,EAGkB,CAACA,IACpB,MAAMC,EAAiBD,EAAS1S,KAAI4S,IAChC,MAAMC,EAAuBD,EAAEE,MAAM,KACrC,OAA4B,GAArBC,SAASF,EAAM,IAAgC,EAArBE,SAASF,EAAM,GAAO,IAG3DF,EAAeK,MAAK,CAACC,EAAGC,IAAMA,EAAID,IAElC,MAAMzF,EAAamF,EAAe,GAClC,MAAO,GAAGhT,KAAKwT,MAAM3F,EAAa,OAAOA,EAAa,IAAI,EAGvD4F,CAAeV,EAAS1S,KAAIoN,GAAKA,EAAEhF,gBAf1C,CAiBJ,CAiCA,SAAS3B,GAAeC,EAAkB2M,EAAwBpM,G,MAC9DP,EAAKO,eAA0BuH,IAAdvH,EAA0BA,GAAaP,EAAKO,UACzDoM,IACa,QAAb,EAAA3M,EAAKc,gBAAQ,SAAEuG,SAAQY,IACHY,SAASI,eAAgBhB,EAA6B1G,IAC7DnC,MAAMwN,QAAU5M,EAAKO,UAAY,OAAS,QACnDR,GAAekI,EAAO0E,EAAc3M,EAAKO,UAAU,IAG/D,CAEA,SAASsM,GAAmB7M,G,QACxB,GAAIA,EAAKqB,UAAYrB,EAAKI,QAAS,OAEnCJ,EAAKI,SAAU,EACf,MAAM4F,EAAS1B,EAAMhE,MAAM2E,MAAM6H,GAAMA,EAAEjU,IAAMmH,EAAKU,WACpDsF,GAAUqC,GAA0BrC,GAEpC,MAAMsF,EAAwC,QAAjC,EAAmB,QAAnB,EAAAzG,EAAcvE,aAAK,eAAE6F,IAAInG,EAAKnH,WAAG,eAAEyO,WAC3CgE,GAELA,EAAKjE,SAAQ0F,IACTzI,EAAMhE,MAAM+G,SAAQrH,I,MAChB,GAAiB,UAAbA,EAAKL,OAAqBK,EAAK2J,gBAAiB,CAChD,MAAMqD,EAA6B,QAAb,EAAAhN,EAAKc,gBAAQ,eAAEmE,MAAKgD,IAAUA,EAAM7H,SAAW6H,EAAMpP,IAAMkU,IAGjF,OAFAC,GAAiBH,GAAmBG,QACpC3E,GAA0BrI,E,CAIzBA,EAAKI,SAAWJ,EAAKnH,IAAMkU,IAC5BF,GAAmB7M,GACnBA,EAAKU,UAAY2H,GAA0B/D,EAAMhE,MAAM2E,MAAM6H,GAAMA,EAAEjU,IAAMmH,EAAKU,Y,GAEtF,GAEV,CAEA,SAAShB,GAAqBM,GAC1B,IAAIA,EAAKqB,WAxPb,SAAyBrB,G,QACrB,MAAMsL,EAAwC,QAAjC,EAAmB,QAAnB,EAAAzG,EAAcvE,aAAK,eAAE6F,IAAInG,EAAKnH,WAAG,eAAE0O,WAChD,QAAK+D,GAEEA,EAAK5D,MAAKqF,GAAOzI,EAAMhE,MAAMoH,MAAK1H,I,MACrC,MAAiB,UAAbA,EAAKL,MAAoBK,EAAK0J,gBACV,QAAb,EAAA1J,EAAKc,gBAAQ,eAAE4G,MAAKO,GAASA,EAAM7H,SAAW6H,EAAMpP,IAAMkU,IAE9D/M,EAAKnH,IAAMkU,GAAO/M,EAAKI,OAAO,KAE7C,CA8OyB6M,CAAgBjN,IAAsB,gBAAbA,EAAKsB,KAAnD,CAGA,GAAiB,UAAbtB,EAAKL,KACL,GAAIK,EAAKI,QAAS,CACdJ,EAAKI,SAAU,EACf,MAAM4F,EAAS1B,EAAMhE,MAAM2E,MAAM6H,GAAMA,EAAEjU,IAAMmH,EAAKU,WACpDsF,GAAUqC,GAA0BrC,E,MAEpC6G,GAAmB7M,QAGnBA,EAAKc,UAAYd,EAAKc,SAAS2F,QAAOyG,IAAMA,EAAE7L,WAAUrI,OAAS,EAC7DgH,EAAK0J,iBACL1J,EAAKc,SAAS2F,QAAOyG,IAAMA,EAAE7L,WAAUgG,SAAQY,GAASA,EAAM7H,SAAU,IACxEJ,EAAKI,SAAU,EACfiI,GAA0BrI,KAE1BA,EAAKc,SAASuG,QAAQwF,IACtB7M,EAAKI,SAAU,IAInBJ,EAAKI,SAAWJ,EAAKI,QACrBJ,EAAK2J,iBAAkB,GAI/BpF,EAAYjE,MAAQ0J,KACA,UAApBvK,EAAMyD,YAA0B6G,IA5BtB,CA6Bd,CAEA,SAAS1B,GAA0BrI,G,QAC/BA,EAAKqB,SAAWrB,EAAKc,WAAqC,GAAxBd,EAAKc,SAAS9H,UAA6B,QAAb,EAAAgH,EAAKc,gBAAQ,eAAE4G,MAAKO,IAAUA,EAAM5G,aACpGrB,EAAK2J,gBAAkB3J,EAAKc,UAAYd,EAAKc,SAAS9H,OAAS,IAAMgH,EAAKc,SAAS4G,MAAMO,IAAWA,EAAM7H,SAAW6H,EAAM5G,WAC3HrB,EAAK0J,gBAA+B,QAAb,EAAA1J,EAAKc,gBAAQ,eAAE4G,MAAMO,GAAUA,EAAM7H,UAAY6H,EAAM5G,UAClF,CAEA,SAAS0I,K,YACLrF,EAAepE,MAAQ,GAAImE,EAAgBnE,MAAQ,GAEnD,MAAM6M,EAAgE,QAAtD,EAA6C,QAA7C,EAAoC,QAApC,EAAc,QAAd,EAAA7J,EAAU8J,YAAI,eAAEC,4BAAoB,eAAEC,eAAO,eAAEC,eAAO,eAAEJ,QACxE,IAAKA,EACD,OAGJ,IADwB7I,EAAMhE,MAAM2E,MAAKyB,GAAKA,EAAEgD,iBAAmBhD,EAAEtG,UAC/C,CAClBsE,EAAepE,MAAQkN,OAAOC,QAAQN,GAAS7T,KAAIoN,GAAKgH,GAAehH,EAAE,MACzE,MAAMiH,EAAqBxG,QAC3B,IAAK,IAAI2F,EAAI,EAAGA,EAAIpI,EAAepE,MAAMtH,OAAQ8T,IAC7Ca,EAAmBhV,KAAK,CAAEiV,MAAOd,EAAGe,MAAO,0CAG/C,YADApJ,EAAgBnE,MAAQqN,E,CAI5B,MAAMG,EAcV,SAAmCX,GAC/B,MAAMY,EAAO5G,QA2Cb,OAzCAqG,OAAO7B,KAAKwB,GAAS9F,SAAQX,IACzB,MAAM1H,EAAM0H,EACNpG,EAAQ6M,EAAQnO,GAChBgP,EAAaN,GAAe1O,GAClC,IAAKsB,EACD,OAAOyN,EAAKpV,KAAK,CAAEqV,aAAYH,MAAO,sDAG1C,OAAQ7O,GACJ,IAAK,QACD,MAAMiP,EAAwB,CAACC,EAAiB5J,KAC5C,IAAKA,GAAyB,GAAhBA,EAAMtL,OAAe,OAAOkV,EAC1C,IAAK,MAAMlO,KAAQsE,EACf,IAAItE,EAAKI,SAAWJ,EAAK0J,mBACJ,UAAb1J,EAAKL,OACLuO,EAASD,EAAsBC,EAAQlO,EAAKc,WAE/B,kBAAbd,EAAKL,MAAyC,QAAbK,EAAKL,MAA+B,WAAbK,EAAKL,MAAmB,CAChFuO,GAAS,EACT,K,CAKZ,OAAOA,CAAM,EAIjB,IADeD,GAAsB,EAAM3J,EAAMhE,OAE7C,OAAOyN,EAAKpV,KAAK,CAAEqV,aAAYH,MAAO,kEAC1C,MACJ,IAAK,aACD,MAAMM,EAAyB7J,EAAMhE,MAAMmG,QAAOC,GAAe,eAAVA,EAAEpF,OAAuB2D,MAAKyB,IAAI,QAAC,MAAU,UAAVA,EAAE/G,MAAoB+G,EAAEgD,kBAA6B,QAAV,EAAAhD,EAAE5F,gBAAQ,eAAE4G,MAAKwF,GAAKA,EAAE9M,UAAsB,QAAV8M,EAAEvN,MAA4B,WAAVuN,EAAEvN,YAAkC,QAAV,EAAA+G,EAAE5F,gBAAQ,eAAE4G,MAAKwF,GAAe,kBAAVA,EAAEvN,MAA4BuN,EAAE9M,UAAS,IACtR,GAAI+N,EACA,OAAOJ,EAAKpV,KAAK,CAAEqV,aAAYH,MAAO,+CAA+CM,EAAuB7M,kCAIxHyM,EAAKpV,KAAK,CAAEqV,cAAa,IAGtBD,CACX,CA3DkCK,CAA0BjB,GAClDkB,EAAgBP,EAAsBxB,MAAK,CAAC5F,EAAGwE,KAAQxE,EAAEmH,QAAW3C,EAAE2C,MAAS,EAAInH,EAAEmH,MAAQ,GAAK,IAElGF,EAAqBxG,QAC3B,IAAK,IAAI2F,EAAI,EAAGA,EAAIuB,EAAcrV,OAAQ8T,IAAK,CAC3C,MAAMe,EAAQQ,EAAcvB,GAAGe,MAC3BA,GAAOF,EAAmBhV,KAAK,CAAEiV,MAAOd,EAAGe,S,CAEnDpJ,EAAgBnE,MAAQqN,EACxBjJ,EAAepE,MAAQ+N,EAAc/U,KAAIoN,GAAKA,EAAEsH,aAEhDxJ,EAAelE,MAAS+N,EAAc,GAAGR,MAAsC,GAA9BQ,EAAc,GAAGL,UACtE,CAiDA,SAASM,GAAoBC,EAAoBvO,G,gBAC7C,MAAMsL,EAA0B,QAAnB,EAAAzG,EAAcvE,aAAK,eAAE6F,IAAInG,EAAKnH,IACxB,QAAnB,EAAAgM,EAAcvE,aAAK,SAAE0G,IAAIhH,EAAKnH,GAAI,CAC9B0O,YAAY+D,aAAI,EAAJA,EAAM/D,aAAcJ,QAChCG,YAAmG,QAAvF,EAAsE,QAAtE,EAAkC,QAAlC,EAAoB,QAApB,EAAA3C,EAAerE,aAAK,eAAE6F,IAAInG,EAAKnH,WAAG,eAAEoM,MAAKyB,GAAKA,EAAEhF,SAAW6M,WAAW,eAAEtH,uBAAe,eAAE3N,KAAIoN,GAAKA,EAAEQ,YAAYC,SAEpI,CAEA,SAASrH,GAAcE,G,QACnB,MAEM2B,EAAU,CACZ6M,YAHgB,CAAE3V,GAAImH,EAAKnH,GAAI4V,MAAO,CAAErO,QAASJ,EAAKI,SAAWsO,KAAM1O,EAAKsB,KAAM3B,KAAMK,EAAKL,KAAM+B,QAAS1B,EAAK0B,SAGpGiN,GAAKjN,IACd1B,EAAK0B,QAAUA,EACf4M,GAAoB5M,EAAS1B,EAAK,IAJA,QAApB,EAAA2E,EAAerE,aAAK,eAAEkL,IAAIxL,EAAKnH,OASjD8I,EAAQqK,SAA+B,QAApB,EAAArH,EAAerE,aAAK,eAAE6F,IAAInG,EAAKnH,KAEtD8K,EAAOiL,YACH,SAAqB,IAAM,iCAC3B,CAAEC,UAAU,EAAMC,MAAO,iBAAkBC,MAAO,SAAUC,UAAW,QAASC,SAAU,QAAUtN,EAE5G,CAoBA,SAASuN,KACL7L,EAAK,QACT,CAEAgC,eAAe8J,KACXtL,EAASuL,SACL/J,U,cACI,MAAMgK,EAAchK,UAChB,MAAMiK,EAAU,EAAA9V,aAAaH,aAG7B,aAsFhBgM,eAA2BiK,GACvB,OAAOtL,EAAUuL,mBAAmB,CAChCC,MAAOlM,EAAU6B,OAAOC,MACxB7D,GAAI+N,EACJG,aAAa,EACb9P,KAA0B,UAApBF,EAAMyD,WAAyB,UAAY,WACjDwM,cAAmC,UAApBjQ,EAAMyD,WAAyBwK,GAAelJ,EAAelE,OAAQ,QAAoCwH,EACxH6H,SAAUlQ,EAAM0D,mBAExB,CAjGsByM,CAAYN,SAmGlCjK,eAAuBiK,GACnB,IAAIO,EAAgB,IAAIlK,IACxB,MAAM3L,EAAUsJ,EAAU6B,OAAOnL,QAE3B8V,EAA6E,CAAC,EACpFrM,EAAiBoC,aAAavC,EAAU6B,OAAOb,OAAO,CAACtE,EAAM8F,EAAMiK,KAC/D,GAAuB,SAAnB/P,EAAK+F,WAET,OADA+J,EAAU9P,EAAKuB,IAAM,CAAEvB,OAAM8F,OAAMiK,UAC5B/P,CAAI,IAGf,MAAMgQ,EAAsBC,I,MACxB,MAAMjQ,EAAO8P,EAAUG,EAAUpX,IAAImH,KAC/BkQ,EAAY,KAAuBxI,MAAK/H,GAAQA,GAAQK,EAAK7C,YAU7D2I,GAAwB,QAAT,EAAA9F,EAAK8F,YAAI,eAAE9M,SAAUgH,EAAK8F,KAAK9M,OAAS,EATnC,M,MACtB,IAAImX,EAAa,GACjB,OAAKnQ,EAAK8F,MAASgK,EAAU9P,EAAK8F,KAAK,GAAG3M,aAGjC,QAAT,EAAA6G,EAAK8F,YAAI,SAAEuB,SAAQ+I,GAAYD,GAAc,IAAML,EAAUM,EAASjX,YAAY6G,KAAKsB,OAChF6O,GAHIA,CAGM,EAG4CE,GAAsBP,EAAUG,EAAUpX,IAAIiN,KAW/G,MAV4B,CACxBjN,GAAIoX,EAAUpX,GACdyX,IAAKL,EAAUvO,QACf/B,KAAMwE,EAASoM,YAAYvQ,GAC3B8F,OACA0K,aAAcV,EAAUG,EAAUpX,IAAIkX,OACtCzO,KAAM6C,EAASsM,gBAAgBzQ,GAC/B0Q,UAAWR,EAAY,cAAiBlQ,EAAKgG,OAAOD,WACpD4K,UAAWT,EAAYlW,EAAUgG,EAAKgG,OAAO1E,KAEpC,EAGXsP,EAAkB,CAAC5R,EAAa6R,KAClC7R,EAAuB,UAAjB6R,EAAIH,UAAwB,OAAO1R,IAAQA,EACjD,IAAIsF,EAAQuL,EAAc1J,IAAInH,GAC1BsF,GAASA,EAAMtL,OAAS,GACxBsL,EAAM3L,KAAKkY,GACXhB,EAAc7I,IAAIhI,EAAKsF,IAEvBuL,EAAc7I,IAAIhI,EAAK,CAAC6R,GAAK,EAGrCvM,EAAMhE,MAAMmG,QAAOC,IAAI,MAAC,OAAS,QAAT,EAAAA,EAAEtG,eAAO,QAAIsG,EAAEgD,eAAe,IAAErC,SAASuC,IAC7D,GAAkB,UAAdA,EAAMjK,KACNiK,EAAM9I,SAAU2F,QAAOC,GAAKA,EAAEtG,UAASiH,SAAQY,I,MAC3C,MAAM4I,EAAMb,EAAmB/H,GACf,kBAAZ4I,EAAIlR,OACJkR,EAAIC,uBAAsE,QAA7C,EAAAxN,EAAU8J,KAAMC,qBAAsBC,eAAO,eAAEwD,wBAEhF,MAAMC,EAAgC,QAAZF,EAAIlR,MAA8B,kBAAZkR,EAAIlR,MAAwC,WAAZkR,EAAIlR,KACpFiR,EAAgBG,EAAoBnH,EAAMtI,KAAOtH,EAAS6W,EAAI,QAE/D,CACH,MAAMA,EAAMb,EAAmBpG,GAC/B,GAAkB,SAAdA,EAAMjK,KAAiB,CACvB,MAAMsL,EAAa3H,EAAU6B,OAAOb,MAAMW,MAAK6H,GAAqB,SAAhBA,EAAE/G,YAAwC,SAAf+G,EAAE3P,WAAyB2P,EAAEpR,YAAkCuP,YAAc6B,EAAEvL,IAAMqI,EAAM/Q,KAC1KgY,EAAI5F,aAAaA,QAAoBnD,C,CAEzC8I,EAAgB5W,EAAS6W,E,KAIjC,IAAIG,EAAO7J,QACX0I,EAAcxI,SAAQ,CAAC6E,EAAG+E,KACtBD,EAAKrY,KAAK,CACN6W,MAAOlM,EAAU6B,OAAOC,MACxB8L,WAAY,MACZC,cAAejF,EACf2B,MAA2B,UAApBpO,EAAMyD,WAAyB,WAAa,UACnDkO,MAAO,EACP9B,QAASA,EACTnM,kBAAmB1D,EAAM0D,mBAC3B,UAGAe,EAAgBmN,eAAeL,EACzC,CAnLsBM,CAAQhC,GACPA,CAAO,EAGZiC,EAAoD,QAApC,EAAc,QAAd,EAAAjO,EAAU8J,YAAI,eAAEC,4BAAoB,eAAEmE,aAAazW,KAEzE,OAAQ0E,EAAMyD,YACV,IAAK,SACD,GAAIqO,EAAe,CACf,MAAME,QAAoBC,WACpBxN,EAAgBmN,eAAe,CAAC,CAClC7B,MAAOlM,EAAU6B,OAAOC,MACxB8L,WAAY,MACZC,cAAeM,KAEnB,K,CAGJ,MAAMnC,QAAgBD,UAmK1ChK,eAA+BiK,SACrBzL,EAAS2B,eAAiClH,EAAA,EAAkB,CAC9DkR,MAAOlM,EAAU6B,OAAOC,MACxB8L,WAAY,MACZC,cAAe,GACfC,MAAO,EACP9B,QAASA,GAEjB,CA1K0BqC,CAAgBrC,GACtB,MACJ,IAAK,SACD,OAAQ5B,GAAelJ,EAAelE,OAAQ,IAC1C,IAAK,aACD,MAAMgP,QAAgBD,UAuKlDhK,eAA+BiK,GAE3B,IAAIsC,QAAiB5N,EAAU6N,uBAAuB,CAAEvC,YACnD7J,MAAKuL,GAAQA,EAAKA,KAAK1X,KAAIoN,IACxB,MAAMoL,EAAUpL,EAAEoL,QAClB,MAAO,CACHnB,UAAWmB,EAAQxN,MAAM,GAAGqM,UAC5BoB,MAAOrL,EAAEqL,MACTpS,KAAMmS,EAAQxN,MAAM,GAAGoM,UACvBsB,QAASC,GAAyBH,GACrC,MAGT,IAAKF,GAAYA,EAAS5Y,QAAU,EAChC,OAEJ,IAAIkZ,EAAY/K,QAChByK,EAASvK,SAAQ8K,IACbD,EAAUvZ,KAAK,CACX6W,MAAOlM,EAAU6B,OAAOC,MACxBzF,KAAM,QACNyS,QAAS,CACLzS,KAAMwS,EAAKxS,KACX2B,KAAM6Q,EAAKxB,UACXqB,QAASG,EAAKH,QACdK,IAAK,GAAGF,EAAKJ,aAEjBX,MAAO,EACP9B,QAASA,GACX,UAGAvL,EAAkBuO,gBAAgBJ,GAGxC,IAAIK,EAAkC,CAClC/C,MAAOlM,EAAU6B,OAAOC,MACxBzF,KAAM,aACN6S,aAAc,CACVtW,QAAS,CACLuW,eAAgBC,KAChBC,QAASrO,EAAMhE,MAAMoH,MAAKhB,IAAI,MAAC,OAAAA,EAAEgD,kBAA6B,QAAV,EAAAhD,EAAE5F,gBAAQ,eAAE4G,MAAKhB,GAAKA,EAAEtG,SAAqB,QAAVsG,EAAE/G,OAAgB,MAGjHyR,MAAO,EACP9B,QAASA,EACTnM,kBAAmB1D,EAAM0D,yBAGvBY,EAAkB6O,mBAAmBL,EAC/C,CAxNkCM,CAAgBvD,GACtB,MACJ,IAAK,QACD,MAAMmC,QAAoBC,WACpB3N,EAAkB+O,mBAAmBrB,EAAahS,EAAM0D,oBAI9E,MAAM4P,EAAgC,QAAd,EAAAzP,EAAU8J,YAAI,eAAE4F,YAClCC,EAAiC,QAAhB,EAAAlO,EAAWzE,aAAK,eAAE0S,aACrCvT,EAAM0D,kBAAkB+P,SAAYH,aAAe,EAAfA,EAAiBI,qBAAsBF,aAAc,EAAdA,EAAgBE,qBAC3F/O,EAAkBgP,sBAAsB,IAAKL,EAAiBI,mBAAmB,IACjF9O,EAAmBgP,kBAAkB,CAAE9R,GAAoB,QAAhB,EAAAwD,EAAWzE,aAAK,eAAEiB,GAAIyR,YAAa,IAAKC,EAAgBE,mBAAmB,GAAQG,aAAc,sBAGhJjQ,EAAK,QAAQ,GAEjB,CAAE1F,SAAS,GACnB,CAEA0H,eAAeqM,KACX,MAAMD,EAAkC,GAClC3B,EAA6E,CAAC,EAEpFrM,EAAiBoC,aAAavC,EAAU6B,OAAOb,OAAO,CAACtE,EAAM8F,EAAMiK,KAC/D,GAAuB,SAAnB/P,EAAK+F,WAET,OADA+J,EAAU9P,EAAKuB,IAAM,CAAEvB,OAAM8F,OAAMiK,UAC5B/P,CAAI,IAGf,MAAMiO,EAAyB3J,IACtBA,GAAyB,GAAhBA,EAAMtL,QACpBsL,EAAMmC,QAAOC,GAAKA,EAAEtG,SAAWsG,EAAEgD,kBAAiBrC,SAAQrH,IACtD,GAAiB,UAAbA,EAAKL,KAEL,YADAsO,EAAsBjO,EAAKc,UAI/B,MAAMyS,EAAUzD,EAAU9P,EAAKnH,IAEzB2a,EAA0B,CAC5B3a,GAAImH,EAAKnH,GACTyI,KAAM6C,EAASsM,gBAAgB8C,EAAQvT,MACvC8F,KAAMyN,EAAQzN,KACdnG,KAAMwE,EAASoM,YAAYgD,EAAQvT,MACnCsQ,IAAKtQ,EAAK0B,SAAW,SACrBuJ,WAAYsI,EAAQvT,KAAKiL,WACzBuF,aAAc+C,EAAQxD,OACtBW,UAAW,cACXC,UAAWrN,EAAU6B,OAAOnL,QAC5B+R,KAAMwH,EAAQvT,KAAK+L,KACnB0H,WAAYF,EAAQvT,KAAKyT,YAE7BhC,EAAY9Y,KAAK6a,EAAW,GAC9B,EAKN,OAFAvF,EAAsB3J,EAAMhE,OAErBmR,CACX,CA8JA,SAASiB,KACL,IAAIgB,EAAoBvM,QAsBxB,OArBA7C,EAAMhE,MAAM+G,SAASuC,IACjB,GAAkB,UAAdA,EAAMjK,MAAoBiK,EAAMF,iBAAmBE,EAAM9I,SAAU,CACnE,MAAM6S,EAAe/J,EAAM9I,SAASmE,MAAKiI,GAAe,kBAAVA,EAAEvN,OAChD,IAAKgU,EACD,OAEJ,MAAMC,EAAc,IAAcpZ,wBAAwBmZ,EAAarS,MACvEsI,EAAM9I,SAASuG,SAAQY,IACfA,EAAM7H,SAAyB,WAAd6H,EAAMtI,MACvB+T,EAAkB/a,KAAK,CACnBkb,WAAYD,EACZE,MAAO,CACHjb,GAAIoP,EAAMpP,GACVyI,KAAM2G,EAAM3G,KACZI,QAASuG,EAAMvG,U,QAOhCgS,CACX,CAEA,SAASzB,GAAyBH,GAC9B,GAAkC,UAA9BA,EAAQxN,MAAM,GAAGoM,UAAuB,CACxC,IAAIqD,EAAUjC,EAAQxN,MAAMW,MAAKyB,GAAe,kBAAVA,EAAE/G,OACxC,IAAKoU,EACD,MAAM,IAAI9Z,MAAM,iEACpB,OAAO,IAAcO,wBAAwBuZ,EAAQzS,K,CAEzD,OAAO,IAAclH,6BAA6B0X,EAAQ5M,IAAI5D,KAClE,CAEA,SAASoM,GAAepM,EAAc0S,GAAmB,GACrD,MAAM1a,EAAgD,CAAE2a,MAAO,eAAgBC,WAAY,+BAC3F,OAAIF,EACOxG,OAAO7B,KAAKrS,GAAK2L,MAAKyB,IACzB,GAAIpN,EAAIoN,KAAmCpF,EACvC,OAAO,C,IAILkM,OAAO7B,KAAKrS,GAAK6a,SAAS7S,GAG7BhI,EAAIgI,QAFX,CAIR,CAEA,SAAS8S,GAAe9T,GACpBkE,EAAelE,MAAQA,CAC3B,CAEA,MAAM2F,GAAoBjG,I,QACtB,MAAMqU,EAA2F,QAA7E,EAAArU,EAAKqG,oBAAoBpB,MAAKyB,GAAKA,EAAEJ,eAAiBhD,EAAU6B,OAAOC,eAAM,eAAEmB,gBACnG,QAAIvG,EAAKsU,WAAahR,EAAU6B,OAAOC,QAAuC,QAA9B,EAAApF,EAAKqG,oBAAoBkO,GAAG,UAAE,eAAEjO,gBAAiBhD,EAAU6B,OAAOC,QAASiP,EAE/G,EAIhB,MAAO,CAACzT,EAAUC,MACR,WAAc,QAAoB,MAAO,EAAY,EAC3D,IAAA1B,GAAoB,MAAO,KAAM,EAC/B,QAAa,IAAc,CACzBF,OAAO,oBAAgB,CAAC,4BAAiD,UAApBQ,EAAMyD,WAAyB,SAAW,KAC/FsR,MAAoC,IAA7B,QAAO/J,IACdjK,MAAoC,IAA7B,QAAOiK,IACd1J,QAASF,EAAO,KAAOA,EAAO,GAAMY,IAAgB,OA1hBpBnB,EA0hBiFwH,OAA7B,QAAO2C,IAzhB/FnG,EAAMhE,MAAMmG,QAAOC,IAAMA,EAAErF,WAAUgG,SAASrH,IAC1CA,EAAKI,QAAUE,EACmCwH,MAAxB9H,EAAK2J,iBAAgC3J,EAAKc,UAAYd,EAAKc,SAAS9H,OAAS,IAAMgH,EAAKc,SAAS4G,MAAKwF,GAAKA,EAAE7L,aAChHrB,EAAK2J,gBAAkBrJ,GAClBwH,MAAxB9H,EAAK0J,kBAA8B1J,EAAK0J,gBAAkBpJ,GAC1DN,EAAKc,UAAUd,EAAKc,SAAS2F,QAAOyG,IAAMA,EAAE7L,WAAUgG,SAASY,GAAWA,EAAM7H,QAAUE,GAAO,IAGzGiE,EAAYjE,MAAQ0J,UACA,UAApBvK,EAAMyD,YAA0B6G,MAVpC,IAAwCzJ,CA0hB4F,IAC3H,KAAM,EAAe,CAAC,QAAS,QAAS,WAC3C,IAAAnB,GAAoB,MAAO,CACzBF,OAAO,oBAAgB,CAAC,wBAA6C,UAApBQ,EAAMyD,WAAyB,SAAW,MAC1F,EACD,IAAA/D,GAAoB,OAAQ,GAAY,sBAAiB,QAAO8K,IAA+B,QAAOC,IAC1F,QAAOC,KAA+B,IAClD,QAAiB,SACjB,IAAAhL,GAAoB,OAAQ,IAAY,sBAAiB,QAAOiL,KAAuB,IACvF,QAAiB,qBAChB,MAEL,IAAAjL,GAAoB,MAAO,CACzBF,OAAO,oBAAgB,CAAC,oBAAyC,UAApBQ,EAAMyD,WAAyB,SAAW,KACvFrK,GAAI,wBACH,GACA,SAAW,IAAO,QAAoB,KAAW,MAAM,QAAYyL,EAAMhE,OAAQN,KACxE,WAAc,QAAoB,MAAO,CAC/ChB,IAAKgB,EAAKnH,IACT,CACc,WAAdmH,aAAI,EAAJA,EAAML,QACF,WAAc,QAAoB,MAAO,GAAY,EACpD,IAAAR,GAAoB,MAAO,GAAY,CACnCa,EAAKgI,UAMH,QAAoB,QAAQ,KAL3B,WAAc,QAAoB,IAAK,CACtChJ,IAAK,EACLC,OAAO,oBAAgB,gBAAkBe,EAAKO,UAAY,SAAW,SAAW,YAAeP,EAAKc,UAAoC,GAAxBd,EAAKc,SAAS9H,OAA4B,GAAd,cAC5I+H,QAAUU,GAAiB1B,GAAeC,IACzC,KAAM,GAAuB,MAEpC,QAAa,IAAc,CACzBf,MAAO,kBACPuB,MAAOR,EAAK2J,gBACZ6K,OAAQxU,EAAK2J,iBAAmB3J,EAAK0J,gBACrCrI,SAAUrB,EAAKqB,SACfN,QAAUU,GAAiB/B,GAAqBM,IAC/C,KAAM,EAAe,CAAC,QAAS,QAAS,WAAY,YACtDA,EAAa,WACT,WAAc,QAAoB,IAAK,MACxC,QAAoB,QAAQ,IAChC,IAAAb,GAAoB,OAAQ,CAC1BF,OAAO,oBAAgB,CAAC,cAAee,EAAKgI,SAAW,YAAehI,EAAKqB,SAAW,YAAc,OACnG,qBAAiBrB,EAAKsB,MAAO,GAC/BtB,EAAa,WACT,WAAc,QAAoB,MAAO,CACxChB,IAAK,EACLC,MAAO,eACP8B,QAAUU,GApYlC,SAA6BzB,G,MACzB2D,EAAOiL,YACH,SAAqB,IAAM,kCAC3B,CAAEC,UAAU,EAAMC,MAAO,iBAAkBC,MAAO,SAAUC,UAAW,QAASC,SAAU,QAC1F,CACIrW,OAAQ,CAAE2I,GAAIvB,EAAKnH,IAAMmT,SAAsC,QAA5B,EAAApH,EAAuBtE,aAAK,eAAE6F,IAAInG,EAAKnH,IAAK8V,GAAKvI,I,MAChFpG,EAAK0B,QAAU0E,EAAc1E,QAChB,QAAb,EAAA1B,EAAKc,gBAAQ,SAAEuG,SAAQY,IACnB,MAAMwM,EAAerO,EAAcQ,sBAAsB3B,MAAKyB,GAAKA,EAAEG,SAAWoB,EAAMpP,KACtFoP,EAAMvG,QAAU+S,aAAY,EAAZA,EAAc/S,QAC9B4M,GAAoBmG,aAAY,EAAZA,EAAc/S,QAAUuG,EAAM,GACpD,GAIlB,CAqXkD,CAAqBjI,IAC9C,EACD,SAAiB,qBAAiBA,EAAK0B,QAAU1B,EAAK0B,QAAU,cAAgB,IAAK,GACrFQ,IACC,EAAe,MAClB,QAAoB,QAAQ,OAEjC,SAAW,IAAO,QAAoB,KAAW,MAAM,QAAYlC,aAAI,EAAJA,EAAMc,UAAWmH,IAC5E,UAAiB,WAAc,QAAoB,MAAO,CAC/DhJ,MAAO,gBACPD,IAAKiJ,EAAMpP,IACV,EACD,QAAa,IAAc,CACzBoG,MAAO,iBACPuB,MAAOyH,EAAM7H,QACbiB,SAAU4G,EAAM5G,SAChBN,QAAUU,GAAiB/B,GAAqBuI,IAC/C,KAAM,EAAe,CAAC,QAAS,WAAY,YAC/B,UAAdA,EAAMtI,OACF,WAAc,QAAoB,IAAK,CACtCX,IAAK,EACLC,OAAO,oBAAgB,eAAgB,QAAO,KAAe/B,mBAAmB+K,EAAMtI,UAAMmI,GAAWxM,MACvG8D,OAAO,oBAAgB,CAAE/D,OAAO,QAAO,KAAe6B,mBAAmB+K,EAAMtI,UAAMmI,GAAWzM,SAC/F,KAAM,KACT,QAAoB,QAAQ,IAChC,IAAA8D,GAAoB,OAAQ,CAC1BF,OAAO,oBAAgB,CAAC,aAAcgJ,EAAM5G,SAAW,YAAc,OACpE,qBAAiB4G,EAAM3G,MAAO,GAC/B2G,EAAMzG,WAAgC,eAAnByG,EAAMzG,WAcvB,QAAoB,QAAQ,KAb3B,WAAc,QAAoB,MAAO,CACxCxC,IAAK,EACLC,OAAO,oBAAgB,CAAC,eAAgBgJ,EAAM5G,SAAW,WAAa,KACtEN,QAAUU,GAAiB3B,GAAcmI,IACxC,EACD,SAAiB,qBAAiBA,EAAMvG,QAAUuG,EAAMvG,QAAU,cAAgB,IAAK,GACrFuG,EAAMzG,WAAgC,eAAnByG,EAAMzG,WAKvB,QAAoB,QAAQ,KAJ3B,WAAc,QAAoB,IAAK,CACtCxC,IAAK,EACLC,OAAO,oBAAgB,CAAC,sCAAuCgJ,EAAM5G,SAAW,WAAa,MAC5F,KAAM,KAEZ,GAAuBc,KAE7B8F,EAAM5G,WAAa4G,EAAMvG,UACrB,WAAc,QAAoB,OAAQU,GAAa,EACtD,QAAiB,yCACjBC,IACA,QAAiB,iCACjBC,IACA,QAAiB,iBAEnB,QAAoB,QAAQ,MAC7B,CACH,CAAC,SAAStC,EAAKgI,WAAahI,EAAKO,eAEjC,UAEN,QAAoB,QAAQ,QAEhC,OACH,GACkB,UAApBd,EAAMyD,aACF,WAAc,QAAoB,MAAOX,GAAa,CACrDC,IACA,QAAa,IAAc,CACzBb,QAAS+C,EAAepE,MACxBoU,QAASN,GACTO,eAAgBnQ,EAAelE,MAC/BsU,QAASpQ,EAAelE,MACxBmE,gBAAiBA,EAAgBnE,MACjCuU,cAAe,uBACf9X,YAAa,qDACbkC,MAAO,sBACN,KAAM,EAAe,CAAC,UAAW,iBAAkB,UAAW,wBAEnE,QAAoB,QAAQ,IAChC,QAAoB,qVACpB,IAAAE,GAAoB,MAAO,CACzBF,OAAO,oBAAgB,CAAC,SAA8B,UAApBQ,EAAMyD,WAAyB,SAAW,YAC3E,EACD,IAAA/D,GAAoB,MAAO,CACzBF,OAAO,oBAAgB,CAAC,gBAAqC,UAApBQ,EAAMyD,WAAyB,SAAW,KACnFnC,QAASmO,IACR,SAAU,GACQ,UAApBzP,EAAMyD,aACF,WAAc,QAAoB,MAAO,CACxClE,IAAK,EACLC,OAAO,qBAAiB,QAAOoL,IAAqB,kBAAoB,IACxEtJ,QAASF,EAAO,KAAOA,EAAO,GAAMY,KAAkB,QAAO4I,KAAsB8E,OAClF,CACD1M,IACE,QAAOiI,KAEH,QAAOG,KAEL,QAAOD,KAEP,QAAoB,QAAQ,KAD3B,WAAc,QAAoB,OAAQhI,IAAa,qBAAiBkC,EAAmBxE,OAAQ,MAFrG,WAAc,QAAoB,OAAQqC,GAAa,6CAFzD,WAAc,QAAoB,OAAQD,GAAa,+FAM3D,KACH,QAAoB,QAAQ,GACX,UAApBjD,EAAMyD,aACF,WAAc,QAAoB,MAAO,CACxClE,IAAK,EACLC,OAAO,oBAAgB,EAAE,QAAOoL,IAAqB,kBAAoB,KACzEtJ,QAASF,EAAO,KAAOA,EAAO,GAAMY,KAAkB,QAAO4I,KAAsB8E,OAClF,CACDtM,IACE,QAAOgI,IAEHrG,EAAelE,OAEb,QAAOoK,KAEL,QAAOE,KAEP,QAAoB,QAAQ,KAD3B,WAAc,QAAoB,OAAQ3H,IAAa,qBAAiB6B,EAAmBxE,OAAQ,MAFrG,WAAc,QAAoB,OAAQ0C,GAAa,gGAFzD,WAAc,QAAoB,OAAQD,GAAa,gDAFzD,WAAc,QAAoB,OAAQD,GAAa,4CAQ3D,KACH,QAAoB,QAAQ,IAC/B,KAGP,I,eC5pCI,GAAU,CAAC,EAEf,GAAQlB,kBAAoB,IAC5B,GAAQC,cAAgB,IAElB,GAAQC,OAAS,SAAc,KAAM,QAE3C,GAAQC,OAAS,IACjB,GAAQC,mBAAqB,IAEhB,IAAI,KAAS,IAKJ,MAAW,KAAQC,QAAS,KAAQA,O,gBCftD,GAAU,CAAC,EAEf,GAAQL,kBAAoB,IAC5B,GAAQC,cAAgB,IAElB,GAAQC,OAAS,SAAc,KAAM,QAE3C,GAAQC,OAAS,IACjB,GAAQC,mBAAqB,IAEhB,IAAI,KAAS,IAKJ,MAAW,KAAQC,QAAS,KAAQA,OAAnD,MCjBP,IAFiC,OAAgB,GAAQ,CAAC,CAAC,YAAY,oB","sources":["webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/components/exportDialogItem.vue?f2ff","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/publishDialog.vue?18db","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/publishDialog.vue?97ed","webpack://qcloud_shell/../node_modules/@stechquick/algae/src/helpers/cryptoHelper.ts","webpack://qcloud_shell/../node_modules/@stechquick/algae/src/helpers/plateau/plateauHelper.ts","webpack://qcloud_shell/../common/qCloudTemp/modelContants.ts","webpack://qcloud_shell/../common/qCloudTemp/quickCloud.ts","webpack://qcloud_shell/./src/domain/useCase/IApplicationUseCase.ts","webpack://qcloud_shell/./src/domain/useCase/IBackofficeUseCase.ts","webpack://qcloud_shell/./src/domain/useCase/ICreateExportJob.ts","webpack://qcloud_shell/./src/domain/useCase/IDeployJobs.ts","webpack://qcloud_shell/./src/domain/useCase/IJobUtils.ts","webpack://qcloud_shell/./src/domain/useCase/IListMultiModelVersions.ts","webpack://qcloud_shell/./src/domain/useCase/IListMultiModuleVersions.ts","webpack://qcloud_shell/./src/domain/useCase/IPackJobs.ts","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/components/exportDialogItem.vue?8d56","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/components/exportDialogItem.vue?ecde","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/components/exportDialogItem.vue","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/publishDialog.vue?3bef","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/publishDialog.vue?ffd5","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/publishDialog.vue?c124","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/publishDialog.vue"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.row-container[data-v-f30ae8a0] {\\n\\twidth: 100%;\\n\\theight: 36px;\\n\\tposition: relative;\\n\\tbackground: #ffffff 0% 0% no-repeat padding-box;\\n\\tborder: 1px solid #e0e0e0;\\n}\\n.app-tier-model-icon[data-v-f30ae8a0] {\\n\\tposition: absolute;\\n\\twidth: 16px;\\n\\theight: 16px;\\n\\ttop: 6px;\\n}\\n.app-tier-model-name[data-v-f30ae8a0] {\\n\\tposition: absolute;\\n\\ttop: 9px;\\n\\tfont: normal normal normal 14px/19px Roboto;\\n\\tcolor: #212121;\\n}\\n.app-tier-model-name.disabled[data-v-f30ae8a0] {\\n\\tcolor: #D5D5D5;\\n}\\n.version-text[data-v-f30ae8a0] {\\n\\tmargin: 10px 7px 10px auto;\\n\\tdisplay: table;\\n\\tfont: normal normal normal 12px/16px Roboto;\\n\\tcolor: #757575;\\n\\tcursor: pointer;\\n\\tuser-select: none;\\n}\\n.version-text.disabled[data-v-f30ae8a0] {\\n\\tpointer-events: none;\\n\\tcursor: pointer;\\n}\\n.chevron[data-v-f30ae8a0] {\\n\\tposition: absolute;\\n\\tcolor: #757575;\\n\\tfont-size: 24px;\\n}\\n.button-tooltip[data-v-f30ae8a0] {\\n\\tvisibility: hidden;\\n\\tposition: absolute;\\n\\tbackground: #757575;\\n\\tcolor: #FFFFFF;\\n\\tfont-size: 11px;\\n\\tfont-family: 'Roboto';\\n\\ttext-align: center;\\n\\tborder-radius: 4px;\\n\\tletter-spacing: 0.2px;\\n\\tpadding: 6px 8px 6px 8px;\\n\\ttop: 56px;\\n\\tleft: 63px;\\n\\topacity: 0;\\n}\\n.button-disable .save-button:hover+.button-tooltip[data-v-f30ae8a0],\\n.start-screen:hover .button-tooltip[data-v-f30ae8a0],\\n.row-container:hover .button-tooltip[data-v-f30ae8a0],\\n.publish-info:hover .button-tooltip[data-v-f30ae8a0] {\\n\\tvisibility: visible;\\n\\ttransition: opacity 0.3s ease-out 1s;\\n\\topacity: 1;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/presentation/vue3/components/dialogs/publish/components/exportDialogItem.vue\"],\"names\":[],\"mappings\":\";AA0FA;CACC,WAAW;CACX,YAAY;CACZ,kBAAkB;CAClB,+CAA+C;CAC/C,yBAAyB;AAC1B;AAEA;CACC,kBAAkB;CAClB,WAAW;CACX,YAAY;CACZ,QAAQ;AACT;AAEA;CACC,kBAAkB;CAClB,QAAQ;CACR,2CAA2C;CAC3C,cAAc;AACf;AAEA;CACC,cAAc;AACf;AAEA;CACC,0BAA0B;CAC1B,cAAc;CACd,2CAA2C;CAC3C,cAAc;CACd,eAAe;CACf,iBAAiB;AAClB;AAEA;CACC,oBAAoB;CACpB,eAAe;AAChB;AAEA;CACC,kBAAkB;CAClB,cAAc;CACd,eAAe;AAChB;AAEA;CACC,kBAAkB;CAClB,kBAAkB;CAClB,mBAAmB;CACnB,cAAc;CACd,eAAe;CACf,qBAAqB;CACrB,kBAAkB;CAClB,kBAAkB;CAClB,qBAAqB;CACrB,wBAAwB;CACxB,SAAS;CACT,UAAU;CACV,UAAU;AACX;AAEA;;;;CAIC,mBAAmB;CACnB,oCAAoC;CACpC,UAAU;AACX\",\"sourcesContent\":[\"<template>\\n\\t<div class=\\\"row-container\\\" :id=\\\"item.id\\\">\\n\\t\\t<i v-if=\\\"item.children && item.children?.length > 0\\\" :class=\\\"chevronClass\\\" @click=\\\"calculateClass\\\"\\n\\t\\t\\t:style=\\\"{ cursor: 'pointer', left: item.level == 0 ? iconLeft + 4 + 'px' : iconLeft + 'px' }\\\" />\\n\\t\\t<i v-if=\\\"item.type == 'placeholder'\\\"\\n\\t\\t\\t:style=\\\"{ top: '4px', fontSize: 'larger', cursor: 'pointer', left: iconLeft + 43 + 'px', position: 'absolute' }\\\"\\n\\t\\t\\t@click=\\\"calculateClass\\\" class=\\\"mdi mdi-folder app-settings-color app-tier-model-icon\\\"></i>\\n\\t\\t<CheckboxComp v-else\\n\\t\\t\\t:style=\\\"{ top: '8px', cursor: 'pointer', left: iconLeft + (!item.level ? 43 : 20) + 'px', position: 'absolute' }\\\"\\n\\t\\t\\t:check=\\\"checked\\\" :disabled=\\\"item.disabled\\\" @click=\\\"check\\\" />\\n\\t\\t<i v-if=\\\"item?.type == 'qjson'\\\" :style=\\\"{ left: iconLeft + (!item.level ? 69 : 45) + 'px' }\\\"\\n\\t\\t\\tclass=\\\"mdi mdi-palette qjson-color app-tier-model-icon\\\" />\\n\\t\\t<i v-else-if=\\\"item?.type == 'yaml'\\\" :style=\\\"{ left: iconLeft + (!item.level ? 69 : 45) + 'px' }\\\"\\n\\t\\t\\tclass=\\\"mdi mdi-cog-outline yaml-color app-tier-model-icon\\\" />\\n\\t\\t<i v-if=\\\"item?.type == 'js'\\\" :style=\\\"{ left: iconLeft + (!item.level ? 69 : 45) + 'px' }\\\"\\n\\t\\t\\tclass=\\\"mdi mdi-cog-outline js-color app-tier-model-icon\\\" />\\n\\t\\t<i v-if=\\\"item?.type == 'css'\\\" :style=\\\"{ left: iconLeft + (!item.level ? 69 : 45) + 'px' }\\\"\\n\\t\\t\\tclass=\\\"mdi mdi-music-accidental-sharp css-color app-tier-model-icon\\\" />\\n\\t\\t<i v-else-if=\\\"item?.type == 'process'\\\" :style=\\\"{ left: iconLeft + (!item.level ? 69 : 45) + 'px' }\\\"\\n\\t\\t\\tclass=\\\"mdi mdi-auto-fix process-color app-tier-model-icon\\\" />\\n\\t\\t<i v-else-if=\\\"item?.type == 'bpmn'\\\" :style=\\\"{ left: iconLeft + (!item.level ? 69 : 45) + 'px' }\\\"\\n\\t\\t\\tclass=\\\"mdi mdi-vector-polyline bpmn-color app-tier-model-icon\\\" />\\n\\t\\t<i v-else-if=\\\"item?.type == 'entityDesigner'\\\" :style=\\\"{ left: iconLeft + (!item.level ? 69 : 45) + 'px' }\\\"\\n\\t\\t\\tclass=\\\"mdi mdi-database entity-designer-color app-tier-model-icon\\\" />\\n\\t\\t<i v-else-if=\\\"item?.type == 'flow'\\\" :style=\\\"{ left: iconLeft + (!item.level ? 69 : 45) + 'px' }\\\"\\n\\t\\t\\tclass=\\\"mdi mdi-step-forward bpmn-color app-tier-model-icon\\\" />\\n\\t\\t<i v-else-if=\\\"item.type == 'namedComponent'\\\" :style=\\\"{ left: iconLeft + (!item.level ? 69 : 45) + 'px' }\\\"\\n\\t\\t\\tclass=\\\"mdi mdi-cube-outline namedcomp-color app-tier-model-icon\\\"></i>\\n\\t\\t<i v-else-if=\\\"item.type == 'appSettings'\\\" :style=\\\"{ left: iconLeft + (!item.level ? 69 : 45) + 'px' }\\\"\\n\\t\\t\\tclass=\\\"mdi mdi-cog app-settings-color app-tier-model-icon\\\"></i>\\n\\n\\n\\t\\t<span :style=\\\"{ left: iconLeft + (!item.level && item.type != 'placeholder' ? 91 : 71) + 'px' }\\\" class=\\\"app-tier-model-name\\\">{{ item?.name }}\\n\\t\\t\\t<span class=\\\"start-screen\\\" v-if=\\\"startScreen?.ID == item.id\\\">\\n\\t\\t\\t\\t<i class=\\\"mdi mdi-home-outline\\\"></i>\\n\\t\\t\\t\\t<span class=\\\"button-tooltip\\\" style=\\\"top: -30px; left: 2px; z-index: 1; width: 80px;\\\">Start\\n\\t\\t\\t\\t\\tScreen</span>\\n\\t\\t\\t</span>\\n\\t\\t</span>\\n\\n\\t\\t<template v-if=\\\"item.type != 'placeholder'\\\">\\n\\t\\t\\t<span v-if=\\\"!item.usageType\\\" :class=\\\"['version-text', item.disabled ? 'disabled' : '']\\\"\\n\\t\\t\\t\\t@click=\\\"versionDialog(item)\\\">\\n\\t\\t\\t\\t{{ item.version ? item.version : 'No version' }} <i v-if=\\\"!item.usageType\\\"\\n\\t\\t\\t\\t\\t:class=\\\"['mdi mdi-pencil-outline version-icon', item.disabled ? 'disabled' : '']\\\"></i>\\n\\t\\t\\t</span>\\n\\t\\t\\t<span v-if=\\\"item.disabled && !item.version\\\" class=\\\"button-tooltip\\\" style=\\\"z-index: 1; width: 300px;\\\">No version\\n\\t\\t\\t\\tavailable for publishing. <b>Stop Working</b> on this item and choose the <b>Ready to Publish</b> option.\\n\\t\\t\\t</span>\\n\\t\\t</template>\\n\\t</div>\\n</template>\\n\\n<script setup lang=\\\"ts\\\">\\nimport CheckboxComp from \\\"../../../checkboxComp.vue\\\";\\nimport { ITableData } from '../../../../../../../../common/qCloudTemp/exporter';\\nimport { IModel } from '../../../../../../domain/model/models';\\nimport { computed, ref } from \\\"vue\\\";\\n\\nconst props = defineProps<{\\n\\thandleItemCheckEvent: (item: ITableData) => void;\\n\\tstartScreen: IModel | undefined;\\n\\tversionDialog: (item: ITableData) => void;\\n\\thandleCollapse: (item: ITableData, childIterate?: boolean) => void;\\n\\titem: ITableData,\\n\\t// parentItem: ITableData\\n}>()\\n\\nconst chevronClass = ref(\\\"mdi mdi-menu-down chevron\\\");\\nconst checked = ref(props.item.checked);\\n\\nfunction calculateClass() {\\n\\tprops.handleCollapse(props.item, true);\\n\\tchevronClass.value = `mdi mdi-menu${props.item.collapsed ? '-right' : '-down'} chevron`\\n};\\n\\nfunction check() {\\n\\tprops.handleItemCheckEvent(props.item);\\n\\tchecked.value = props.item.checked;\\n\\treturn checked.value\\n}\\n\\nconst iconLeft = computed(() => {\\n\\tconst level = props.item.type != \\\"placeholder\\\" && props.item.parentId ? (props.item.level || 0) + 1 : props.item.level || 0;\\n\\treturn level * 25;\\n});\\n\\n</script>\\n\\n<style scoped>\\n.row-container {\\n\\twidth: 100%;\\n\\theight: 36px;\\n\\tposition: relative;\\n\\tbackground: #ffffff 0% 0% no-repeat padding-box;\\n\\tborder: 1px solid #e0e0e0;\\n}\\n\\n.app-tier-model-icon {\\n\\tposition: absolute;\\n\\twidth: 16px;\\n\\theight: 16px;\\n\\ttop: 6px;\\n}\\n\\n.app-tier-model-name {\\n\\tposition: absolute;\\n\\ttop: 9px;\\n\\tfont: normal normal normal 14px/19px Roboto;\\n\\tcolor: #212121;\\n}\\n\\n.app-tier-model-name.disabled {\\n\\tcolor: #D5D5D5;\\n}\\n\\n.version-text {\\n\\tmargin: 10px 7px 10px auto;\\n\\tdisplay: table;\\n\\tfont: normal normal normal 12px/16px Roboto;\\n\\tcolor: #757575;\\n\\tcursor: pointer;\\n\\tuser-select: none;\\n}\\n\\n.version-text.disabled {\\n\\tpointer-events: none;\\n\\tcursor: pointer;\\n}\\n\\n.chevron {\\n\\tposition: absolute;\\n\\tcolor: #757575;\\n\\tfont-size: 24px;\\n}\\n\\n.button-tooltip {\\n\\tvisibility: hidden;\\n\\tposition: absolute;\\n\\tbackground: #757575;\\n\\tcolor: #FFFFFF;\\n\\tfont-size: 11px;\\n\\tfont-family: 'Roboto';\\n\\ttext-align: center;\\n\\tborder-radius: 4px;\\n\\tletter-spacing: 0.2px;\\n\\tpadding: 6px 8px 6px 8px;\\n\\ttop: 56px;\\n\\tleft: 63px;\\n\\topacity: 0;\\n}\\n\\n.button-disable .save-button:hover+.button-tooltip,\\n.start-screen:hover .button-tooltip,\\n.row-container:hover .button-tooltip,\\n.publish-info:hover .button-tooltip {\\n\\tvisibility: visible;\\n\\ttransition: opacity 0.3s ease-out 1s;\\n\\topacity: 1;\\n}\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.container[data-v-15858c1c] {\\n    padding: 32px 20px 20px;\\n}\\n.settings-container[data-v-15858c1c] {\\n    position: relative;\\n    top: 0px;\\n    left: 0px;\\n}\\n.custom-text[data-v-15858c1c] {\\n    /* position: absolute; */\\n    font-family: 'Roboto';\\n    font-style: normal;\\n    font-weight: 500;\\n    font-size: 15px;\\n    line-height: 18px;\\n    /* left: 24px; */\\n    color: #212121;\\n}\\n\\n/* .custom-text.title{\\n    top: 92px;\\n}\\n\\n.custom-text.environment{\\n    top: 174px;\\n} */\\n.radio-button[data-v-15858c1c] {\\n    position: absolute;\\n    top: 60px;\\n    left: 20px;\\n    cursor: pointer;\\n}\\n.radio-text[data-v-15858c1c] {\\n    position: absolute;\\n    top: 59px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n    user-select: none;\\n    cursor: pointer;\\n}\\n.existing-app-url[data-v-15858c1c] {\\n    position: absolute;\\n    width: 760px;\\n    height: 40px;\\n    top: 114px;\\n    left: 20px;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #bcbcbc;\\n    border-radius: 4px;\\n    font: normal normal normal 14px/19px Roboto;\\n    letter-spacing: 0px;\\n    padding: 10px 0px 10px 10px;\\n}\\n.url-error[data-v-15858c1c] {\\n    border: 1px solid red;\\n}\\n.url-disable[data-v-15858c1c] {\\n    opacity: 0.5;\\n}\\n.existing-app-url[data-v-15858c1c]::placeholder {\\n    color: #bcbcbc;\\n    user-select: none;\\n}\\n.modules-selected-checkbox[data-v-15858c1c] {\\n    cursor: pointer;\\n}\\n.modules-selected-text[data-v-15858c1c] {\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #757575;\\n    margin: 0 0 13px 30px;\\n}\\n\\n/* .modules-selected-text.deploy {\\n    top: 257px;\\n} */\\n.text-number[data-v-15858c1c] {\\n    font: normal normal bold 14px/19px Roboto;\\n    color: #212121;\\n}\\n.modules-datatable[data-v-15858c1c] {\\n    width: 760px;\\n    height: 288px;\\n    border: 1px solid #bcbcbc;\\n    overflow-x: hidden;\\n    overflow-y: auto;\\n    margin-bottom: 20px;\\n}\\n\\n/* .modules-datatable.deploy {\\n    top: 286px;\\n} */\\n.modules-datatable[data-v-15858c1c]::-webkit-scrollbar {\\n    width: 4px;\\n}\\n.modules-datatable[data-v-15858c1c]::-webkit-scrollbar-thumb {\\n    background: #bcbcbc 0% 0% no-repeat padding-box;\\n    border-radius: 10px;\\n}\\n.modules-datatable[data-v-15858c1c]::-webkit-scrollbar-thumb:hover {\\n    background: #555;\\n}\\n.row-container[data-v-15858c1c] {\\n    width: 100%;\\n    height: 36px;\\n    position: relative;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #e0e0e0;\\n}\\n.chevron[data-v-15858c1c] {\\n    position: absolute;\\n    left: 4px;\\n    color: #757575;\\n    font-size: 24px;\\n}\\n.chevron.disabled[data-v-15858c1c] {\\n    pointer-events: none;\\n    color: #D5D5D5;\\n}\\n.module-checkbox[data-v-15858c1c] {\\n    position: absolute;\\n    top: 10px;\\n    left: 43px;\\n    cursor: pointer;\\n}\\n.module-name[data-v-15858c1c] {\\n    position: absolute;\\n    top: 9px;\\n    left: 69px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n.module-name.imported[data-v-15858c1c] {\\n    top: 10px;\\n    left: 87px;\\n}\\n.module-name.disabled[data-v-15858c1c] {\\n    color: #D5D5D5;\\n}\\n.model-checkbox[data-v-15858c1c] {\\n    position: absolute;\\n    top: 10px;\\n    left: 59px;\\n    cursor: pointer;\\n}\\n.model-icon[data-v-15858c1c] {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 85px;\\n}\\n.app-tier-model-icon[data-v-15858c1c] {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 69px\\n}\\n.app-tier-model-name[data-v-15858c1c] {\\n    position: absolute;\\n    top: 10px;\\n    left: 87px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n.app-tier-model-name.disabled[data-v-15858c1c] {\\n    color: #D5D5D5;\\n}\\n.model-name[data-v-15858c1c] {\\n    position: absolute;\\n    top: 9px;\\n    left: 103px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n.model-name.disabled[data-v-15858c1c] {\\n    color: #D5D5D5;\\n}\\n.version-text[data-v-15858c1c] {\\n    margin: 10px 7px 10px auto;\\n    display: table;\\n    font: normal normal normal 12px/16px Roboto;\\n    color: #757575;\\n    cursor: pointer;\\n    user-select: none;\\n}\\n.version-text.disabled[data-v-15858c1c] {\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n.version-icon[data-v-15858c1c] {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #D5D5D5;\\n}\\n.version-icon.disabled[data-v-15858c1c] {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #EEEEEE;\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n.footer[data-v-15858c1c] {\\n    position: relative;\\n    width: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: end;\\n}\\n.footer.deploy[data-v-15858c1c] {\\n    position: relative;\\n    width: 100%;\\n}\\n.footer.export[data-v-15858c1c] {\\n    margin-top: 102px;\\n}\\n.cancel-button[data-v-15858c1c] {\\n    border-radius: 4px;\\n    user-select: none;\\n    font-style: normal;\\n    font-weight: 500;\\n    font-family: \\\"ROBOTO\\\";\\n    font-size: 15px;\\n    color: #757575;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n.save-button[data-v-15858c1c] {\\n    background: #151233 0% 0% no-repeat padding-box;\\n    border-radius: 4px;\\n    user-select: none;\\n    font-weight: 500;\\n    font-size: 15px;\\n    color: #ffffff;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n.mobile-publish-text[data-v-15858c1c],\\n.web-publish-text[data-v-15858c1c] {\\n    padding: 5px 12px;\\n    margin-bottom: 52px;\\n    width: 100%;\\n    color: #757575;\\n    font-size: 14px;\\n    background: #F5F5FA;\\n    border-radius: 4px;\\n    display: flex;\\n    align-items: center;\\n}\\n.mobile-publish-text i[data-v-15858c1c],\\n.web-publish-text i[data-v-15858c1c] {\\n    font-size: 24px;\\n    color: #151233;\\n    margin-right: 4px;\\n}\\n.save-button.deploy[data-v-15858c1c] {\\n    padding: 10px 16px;\\n}\\n.button-disable .save-button[data-v-15858c1c] {\\n    color: #757575;\\n    cursor: default;\\n}\\n.button-disable .save-button:hover+.button-tooltip[data-v-15858c1c],\\n.start-screen:hover .button-tooltip[data-v-15858c1c],\\n.row-container:hover .button-tooltip[data-v-15858c1c],\\n.publish-info:hover .button-tooltip[data-v-15858c1c] {\\n    visibility: visible;\\n    transition: opacity 0.3s ease-out 1s;\\n    opacity: 1;\\n}\\n.button-tooltip[data-v-15858c1c] {\\n    visibility: hidden;\\n    position: absolute;\\n    background: #757575;\\n    color: #FFFFFF;\\n    font-size: 11px;\\n    font-family: 'Roboto';\\n    text-align: center;\\n    border-radius: 4px;\\n    letter-spacing: 0.2px;\\n    padding: 6px 8px 6px 8px;\\n    top: 56px;\\n    left: 63px;\\n    opacity: 0;\\n}\\n.publish-info[data-v-15858c1c] {\\n    color: #757575;\\n    font-size: 20px;\\n    margin-left: 10px;\\n}\\n.qjson-color[data-v-15858c1c] {\\n    color: #449dd1;\\n}\\n.yaml-color[data-v-15858c1c] {\\n    color: #449dd1;\\n}\\n.namedcomp-color[data-v-15858c1c] {\\n    color: #212121;\\n}\\n.app-settings-color[data-v-15858c1c] {\\n    color: #151233;\\n}\\n.js-color[data-v-15858c1c] {\\n    color: #449dd1;\\n}\\n.css-color[data-v-15858c1c] {\\n    color: #151233;\\n}\\n.process-color[data-v-15858c1c] {\\n    color: #007c77;\\n}\\n.bpmn-color[data-v-15858c1c] {\\n    color: #007c77;\\n}\\n.entity-designer-color[data-v-15858c1c] {\\n    color: #e9724c;\\n}\\n.select-environment[data-v-15858c1c] {\\n    width: 100%;\\n    font-size: 15px;\\n    height: 40px;\\n    line-height: 40px;\\n    margin-top: 4px\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/presentation/vue3/components/dialogs/publish/publishDialog.vue\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"<template>\\n    <div class=\\\"container\\\">\\n        <div>\\n            <CheckboxComp :class=\\\"['modules-selected-checkbox', props.screenType == 'Deploy' ? 'deploy' : '']\\\"\\n                :minus=\\\"mainCheckboxState == false\\\" :check=\\\"mainCheckboxState == true\\\"\\n                @click=\\\"handleModuleCountCheckboxEvent(mainCheckboxState == undefined)\\\" />\\n            <div :class=\\\"['modules-selected-text', props.screenType == 'Deploy' ? 'deploy' : '']\\\">\\n                <span class=\\\"text-number\\\">{{ allChildCheckedModulesCount + anyChildCheckedModulesCount +\\n                    checkedRootLevelModelsCount }}</span>\\n                of <span class=\\\"text-number\\\">{{ totalRootLevelCount }}</span> items selected\\n            </div>\\n        </div>\\n        <div :class=\\\"['modules-datatable', props.screenType == 'Deploy' ? 'deploy' : '']\\\" id=\\\"module-container-div\\\">\\n            <div v-for=\\\"item in items\\\" :key=\\\"item.id\\\">\\n                <div v-if=\\\"item?.type == 'module'\\\">\\n                    <div class=\\\"row-container\\\">\\n                        <i v-if=\\\"!item.imported\\\"\\n                            :class=\\\"'mdi mdi-menu' + (item.collapsed ? '-right' : '-down') + ' chevron' + (!item.children || item.children.length == 0 ? ' disabled' : '')\\\"\\n                            @click=\\\"handleCollapse(item)\\\" />\\n                        <CheckboxComp class=\\\"module-checkbox\\\" :check=\\\"item.allChildChecked\\\"\\n                            :minus=\\\"!item.allChildChecked && item.anyChildChecked\\\" :disabled=\\\"item.disabled\\\"\\n                            @click=\\\"handleItemCheckEvent(item)\\\" />\\n                        <i v-if=\\\"item.imported\\\" class=\\\"app-tier-model-icon mdi mdi-puzzle\\\" />\\n                        <span :class=\\\"['module-name', item.imported ? ` imported` : (item.disabled ? ' disabled' : '')]\\\">{{\\n                            item.name }}</span>\\n                        <div v-if=\\\"item.imported\\\" class='version-text' @click=\\\"moduleVersionDialog(item)\\\">\\n                            {{ item.version ? item.version : 'No version' }}\\n                            <i :class=\\\"['mdi mdi-pencil-outline version-icon']\\\"></i>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row-container\\\" v-show=\\\"!item.imported && !item.collapsed\\\" v-for=\\\"child in item?.children\\\"\\n                        :key=\\\"child.id\\\">\\n                        <CheckboxComp class=\\\"model-checkbox\\\" :check=\\\"child.checked\\\" :disabled=\\\"child.disabled\\\"\\n                            @click=\\\"handleItemCheckEvent(child)\\\" />\\n                        <i v-if=\\\"child.type != 'module'\\\"\\n                            :class=\\\"'model-icon ' + ModelContants.getModelVisualInfo(child.type, undefined).icon\\\"\\n                            :style=\\\"{ color: ModelContants.getModelVisualInfo(child.type, undefined).color }\\\" />\\n\\n                        <span :class=\\\"['model-name', child.disabled ? ' disabled' : '']\\\">{{ child.name }}</span>\\n                        <div v-if=\\\"!child.usageType || child.usageType == 'appSettings'\\\"\\n                            :class=\\\"['version-text', child.disabled ? 'disabled' : '']\\\" @click=\\\"versionDialog(child)\\\">\\n                            {{ child.version ? child.version : 'No version' }} <i\\n                                v-if=\\\"!child.usageType || child.usageType == 'appSettings'\\\"\\n                                :class=\\\"['mdi mdi-pencil-outline version-icon', child.disabled ? 'disabled' : '']\\\"></i>\\n                        </div>\\n                        <span v-if=\\\"child.disabled && !child.version\\\" class=\\\"button-tooltip\\\"\\n                            style=\\\"z-index: 1; width: 300px;\\\">No version available for publishing. <b>Stop Working</b> on\\n                            this item and choose the <b>Ready to Publish</b> option.\\n                        </span>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div v-if=\\\"props.screenType == 'Deploy'\\\" style=\\\"margin-bottom: 102px\\\">\\n            <div style=\\\"display: flex; align-items: center;\\\">\\n                <span class=\\\"custom-text environment\\\"> Publish To </span>\\n                <span class=\\\"publish-info\\\">\\n                    <i class=\\\"mdi mdi-information\\\"></i>\\n                    <span class=\\\"button-tooltip\\\" style=\\\"top: 460px; left: 96px; z-index: 1; width: 231px;\\\">Publish To\\n                        options may change depending on the module type you choose.</span>\\n                </span>\\n            </div>\\n\\n            <CustomSelect :options=\\\"publishTargets\\\" @input=\\\"onTargetSelect\\\" :selectedOption=\\\"selectedTarget\\\"\\n                :default=\\\"selectedTarget\\\" :disabledOptions=\\\"disabledOptions\\\" selectedClass=\\\"selected-environment\\\"\\n                placeholder=\\\"Select the publish environment of your application\\\" class=\\\"select-environment\\\">\\n            </CustomSelect>\\n        </div>\\n        <!--         <div v-if=\\\"props.screenType == 'Deploy' && !props.platformSelection.web && props.platformSelection.mobile\\\"\\n            class=\\\"mobile-publish-text\\\">\\n            <i class=\\\"mdi mdi-information\\\"></i>\\n            <span>Models and static files of your mobile application will be served from Public Cloud.</span>\\n        </div> -->\\n        <div :class=\\\"['footer', props.screenType == 'Deploy' ? 'deploy' : 'export']\\\">\\n            <div :class=\\\"['cancel-button', props.screenType == 'Deploy' ? 'deploy' : '']\\\" @click=\\\"close\\\">Cancel</div>\\n            <div v-if=\\\"props.screenType == 'Export'\\\" :class=\\\"(saveButtonDisable ? ' button-disable' : '')\\\"\\n                @click=\\\"!saveButtonDisable && save()\\\">\\n                <span class=\\\"save-button \\\">DOWNLOAD</span>\\n                <span v-if=\\\"!isThereVersion\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -80px; left: 626px; z-index: 1; width: 145px;\\\">There are no items ready to publish. At least\\n                    one of your items must be ready to publish.</span>\\n                <span v-else-if=\\\"!isStartScreenOK\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -46px; left: 640px; z-index: 1; width: 120px;\\\">You need to include your start screen.</span>\\n                <span v-else-if=\\\"!isAllDependenciesOK\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -95px; left: 644px; z-index: 1; width: 135px;\\\">{{ dependencyErrorStr }}</span>\\n            </div>\\n            <div v-if=\\\"props.screenType == 'Deploy'\\\" :class=\\\"[(saveButtonDisable ? ' button-disable' : '')]\\\"\\n                @click=\\\"!saveButtonDisable && save()\\\">\\n                <span class=\\\"save-button deploy\\\">PUBLISH</span>\\n                <span v-if=\\\"!isStartScreenOK\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -46px; left: 652px; z-index: 1; width: 120px;\\\">You need to include your start screen.</span>\\n                <span v-else-if=\\\"!selectedTarget\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -46px; left: 644px; z-index: 1; width: 123px;\\\">You need to select a publish\\n                    environment.</span>\\n                <span v-else-if=\\\"!isThereVersion\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -95px; left: 644px; z-index: 1; width: 135px;\\\">There are no items ready to publish. At least\\n                    one of your items must be ready to publish.</span>\\n                <span v-else-if=\\\"!isAllDependenciesOK\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -95px; left: 644px; z-index: 1; width: 135px;\\\">{{ dependencyErrorStr }}</span>\\n            </div>\\n\\n        </div>\\n    </div>\\n</template>\\n\\n\\n<script setup lang=\\\"ts\\\">\\nimport { CryptoHelper } from \\\"@stechquick/algae/lib/helpers/cryptoHelper\\\";\\nimport { PlateauHelper } from \\\"@stechquick/algae/lib/helpers/plateau/plateauHelper\\\";\\nimport { computed, createApp, defineAsyncComponent, onMounted, ref, nextTick } from \\\"vue\\\";\\nimport { IOrganizationCloud } from \\\"../../../../../../../common/clean/domain/useCases/ICloudProvider\\\";\\nimport { DeployType, ICreateDeployJobParam, ICreateExportJobParam, IExportItem, IExportJobData, IPlatformSelection, IProcessConfigModelItem, ITableData } from \\\"../../../../../../../common/qCloudTemp/exporter\\\";\\nimport { APP_ITEM_CONTENT_TYPES, IQJsonAdditionals } from \\\"../../../../../../../common/qCloudTemp/quickCloud\\\";\\nimport { ModelContants } from \\\"../../../../../../../common/qCloudTemp/modelContants\\\";\\nimport { container } from \\\"../../../../../domain/core/diContainer\\\";\\nimport { IQCloudApi } from \\\"../../../../../domain/infrastructure/IQCloudApi\\\";\\nimport { IModel, IModelHistoryInfo, IModule, IModuleVersion } from \\\"../../../../../domain/model/models\\\";\\nimport { IDialog } from \\\"../../../../../domain/presentation/IDialog\\\";\\nimport { ICreateExportJob } from \\\"../../../../../domain/useCase/ICreateExportJob\\\";\\nimport { IDeployJobs } from \\\"../../../../../domain/useCase/IDeployJobs\\\";\\nimport { IJobUtils } from \\\"../../../../../domain/useCase/IJobUtils\\\";\\nimport { IListMultiModelVersions } from \\\"../../../../../domain/useCase/IListMultiModelVersions\\\";\\nimport { IListMultiModuleVersions } from \\\"../../../../../domain/useCase/IListMultiModuleVersions\\\";\\nimport { IPackJobs } from \\\"../../../../../domain/useCase/IPackJobs\\\";\\nimport { IUseCaseExecutor } from \\\"../../../../../domain/useCase/IUseCaseExecutor\\\";\\nimport { IViewModel } from \\\"../../../../../domain/viewModel/IViewModel\\\";\\nimport { IViewModelManager } from \\\"../../../../../domain/viewModel/IViewModelManager\\\";\\nimport { IBackofficeUseCase } from \\\"../../../../../domain/useCase/IBackofficeUseCase\\\";\\nimport { IApplicationUseCase } from \\\"../../../../../domain/useCase/IApplicationUseCase\\\";\\nimport ExportDialogItem from \\\"./components/exportDialogItem.vue\\\";\\nimport CustomSelect from \\\"../../../components/customSelect.vue\\\";\\nimport CheckboxComp from \\\"../../checkboxComp.vue\\\";\\n\\ninterface IDeployScreenAdditionalProps {\\n    screenType: \\\"Export\\\" | \\\"Deploy\\\";\\n    platformSelection: IPlatformSelection;\\n}\\n\\ninterface IDisabledOptions {\\n    index: number\\n    cause: string;\\n}\\n\\nconst props = defineProps<IDeployScreenAdditionalProps>();\\nconst viewModel = container.resolve<IViewModel>(IViewModel);\\nconst viewModelManager = container.resolve<IViewModelManager>(IViewModelManager);\\nconst dialog = container.resolve<IDialog>(IDialog);\\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\\nconst deployJobsUseCase = container.resolve<IDeployJobs>(IDeployJobs);\\nconst qcloudApi = container.resolve<IQCloudApi>(IQCloudApi);\\nconst packJobsUseCase = container.resolve<IPackJobs>(IPackJobs);\\nconst jobUtils = container.resolve<IJobUtils>(IJobUtils);\\nconst backofficeUseCase = container.resolve<IBackofficeUseCase>(IBackofficeUseCase);\\nconst applicationUseCase = container.resolve<IApplicationUseCase>(IApplicationUseCase);\\n\\n\\nconst emit = defineEmits([\\\"close\\\"]);\\nconst items = ref<Array<ITableData>>([]);\\nconst validations = ref<boolean>(true);\\nconst selectedTarget = ref<string>(\\\"\\\");\\nconst disabledOptions = ref<Array<IDisabledOptions>>();\\nconst publishTargets = ref<Array<string>>();\\nconst modelHistories = ref<Map<string, Array<IModelHistoryInfo>>>();\\nconst importedModuleVersions = ref<Map<string, Array<IModuleVersion>>>();\\nconst startScreen = ref<IModel>();\\nconst dependencyMap = ref<Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>>();\\nconst dependencyErrorStr = ref<string>('');\\nconst currentApp = computed(() => viewModel.apps.find((app) => app.ID == viewModel.studio.appId));\\n\\n\\nonMounted(async () => {\\n    await Promise.all([\\n        executor.executeUseCase<IListMultiModelVersions>(IListMultiModelVersions, {}).then(res => modelHistories.value = res),\\n        executor.executeUseCase<IListMultiModuleVersions>(IListMultiModuleVersions, {}).then(res => importedModuleVersions.value = res)\\n    ])\\n    initDependencies();\\n    handleItems();\\n    props.screenType == \\\"Deploy\\\" && syncPublishTargets();\\n    validations.value = validate();\\n})\\n\\nconst allChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == \\\"module\\\" && e.allChildChecked).length);\\nconst anyChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == \\\"module\\\" && !e.allChildChecked && e.anyChildChecked).length);\\nconst checkedRootLevelModelsCount = computed(() => items.value.filter(e => e.type != \\\"module\\\" && e.checked).length);\\nconst totalRootLevelCount = computed(() => items.value.length);\\nconst saveButtonDisable = computed(() => (props.screenType == \\\"Deploy\\\" && props.platformSelection.web && selectedTarget.value == \\\"\\\") || !validations.value || !items.value.some((item) => item.checked || item.anyChildChecked) || (props.screenType == \\\"Export\\\" && !validateStartScreen()) || !validateDependencies());\\nconst mainCheckboxState = computed(() => items.value.length == allChildCheckedModulesCount.value ? true\\n    : (anyChildCheckedModulesCount.value + checkedRootLevelModelsCount.value > 0 ? false : undefined));\\nconst isThereVersion = computed(() => checkMaxVersionOfAllItems());\\nconst isAllDependenciesOK = computed(validateDependencies)\\nconst isStartScreenOK = computed(validateStartScreen)\\n\\nfunction validate() {\\n    let result = true;\\n    const modules = items.value.filter(e => e.type == \\\"module\\\" && e.anyChildChecked);\\n    const appLayerItems = items.value.filter(e => e.type == \\\"qjson\\\" && e.checked);\\n\\n    startScreen.value = (viewModel.studio.items as Array<IModel>).find(item => item.isRootPage);\\n    if (!startScreen.value)\\n        return false;\\n\\n    if (props.screenType == \\\"Deploy\\\") {\\n        if (modules.length > 0)\\n            result = modules.map(e => e.children).filter(e => !e?.find(f => f.type == \\\"entityDesigner\\\" && f.checked)).length <= 0\\n\\n        let isApplicationWillDeploy = appLayerItems.length > 0;\\n        if (isApplicationWillDeploy) {\\n            result = appLayerItems\\n                .map(e => viewModel.studio.items.find(item => item.ID == e.id) as IModel)\\n                .findIndex(e => ((e.additionals as IQJsonAdditionals).isRootPage)) != -1;\\n        }\\n    }\\n\\n    return result;\\n}\\n\\nfunction validateDependencies() {\\n    const checkMap = new Map<string, boolean>();\\n    items.value.forEach(item => {\\n        if (item.type == 'module' && item.children && item.children.length > 0)\\n            item.children.forEach(child => checkMap.set(child.id, child.checked == true))\\n        else\\n            checkMap.set(item.id, item.checked == true)\\n    })\\n\\n    const mustBeCheckedMap = new Map<string, Array<string>>();\\n    dependencyMap.value?.forEach((deps, id) => {\\n        if (!checkMap.get(id))\\n            return;\\n\\n        deps.dependedTo.forEach(dependedId => {\\n            if (checkMap.get(dependedId))\\n                return;\\n\\n            if (mustBeCheckedMap.has(id)) {\\n                const vals = mustBeCheckedMap.get(id)!\\n                vals.push(dependedId)\\n                mustBeCheckedMap.set(id, vals)\\n            } else {\\n                mustBeCheckedMap.set(id, [dependedId])\\n            }\\n\\n        });\\n    })\\n\\n    //set deps error text\\n    const [firstItemID] = mustBeCheckedMap.keys();\\n    if (firstItemID) {\\n        const firstItemDeps = mustBeCheckedMap.get(firstItemID);\\n        const firstItemDepStr = firstItemDeps ? firstItemDeps.map(findItem).map(e => e?.name).join(', ') : '';\\n        dependencyErrorStr.value = `Select ${firstItemDepStr} first. ${findItem(firstItemID)?.name} depends on ${firstItemDepStr}.`\\n    }\\n\\n    return mustBeCheckedMap.size == 0\\n}\\n\\nfunction validateStartScreen() {\\n    return (items.value.find((item) => item.id == startScreen.value?.ID))?.checked\\n}\\n\\nfunction findItem(ID: string) {\\n    for (const item of items.value) {\\n        if (item.type != 'module' && item.id == ID)\\n            return item;\\n        if (item.type == 'module' && item.children && item.children.length > 0) {\\n            const f = item.children.find(e => e.id == ID)\\n            if (f) return f\\n        }\\n    }\\n}\\n\\nfunction initDependencies() {\\n    const map = new Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>();\\n    const depMap = new Map<string, Array<string>>();\\n\\n    viewModelManager.flatMapItems(viewModel.studio.items, (item, path) => {\\n        if (item.objectType != \\\"model\\\") { return; }\\n\\n        const isImportedModule = item.parent.objectType == \\\"module\\\" && isModuleImported(item.parent);\\n\\n        let version: string | undefined;\\n        if (!isImportedModule) {\\n            const maxVersion = getItemMaxVersion(item)\\n            if (!maxVersion)\\n                return depMap.set(item.ID, item.dependentModels ? item.dependentModels.map(e => e.modelId) : Array<string>());\\n            version = maxVersion;\\n        }\\n        else {\\n            const moduleVersions = importedModuleVersions.value?.get(item.parent.ID)\\n            const moduleVersion = (item.parent as IModule).relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion\\n\\n            const importedModuleModel = moduleVersions?.filter(e => e.version == moduleVersion).flatMap(e => e.relatedModelHistories).find(e => e.modelID == item.ID)\\n            version = importedModuleModel?.version\\n        }\\n\\n        const historyItem = modelHistories.value?.get(item.ID)?.find(e => e.version == version);\\n\\n        depMap.set(item.ID, historyItem?.dependentModels ? historyItem?.dependentModels.map(e => e.modelId) : Array<string>())\\n    });\\n\\n\\n    depMap.forEach((dependedTo, modelId) => {\\n        const dependedBy = Array<string>();\\n        depMap.forEach((dependencies, depModelId) => {\\n            if (dependencies.some(depId => depId == modelId))\\n                dependedBy.push(depModelId)\\n        })\\n        map.set(modelId, { dependedBy, dependedTo });\\n    })\\n    dependencyMap.value = map;\\n}\\n\\nfunction isModelDepended(item: ITableData) {\\n    const deps = dependencyMap.value?.get(item.id)?.dependedBy\\n    if (!deps) return false;\\n\\n    return deps.some(dep => items.value.some(item => {\\n        if (item.type == 'module' && item.anyChildChecked) {\\n            return item.children?.some(child => child.checked && child.id == dep)\\n        }\\n        return item.id == dep && item.checked\\n    }));\\n}\\n\\nasync function handleItems() {\\n    // - modules and module items\\n    items.value = viewModel.studio.items\\n        .filter((item) => item.objectType == \\\"module\\\" && item.children.length > 0)\\n        .map((item) => {\\n            const isImportedModule = isModuleImported(item as IModule);\\n            const moduleVersion = (item as IModule).relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion\\n            const relatedModelHistories = isImportedModule ? importedModuleVersions.value?.get(item.ID)?.find(module => module.version == moduleVersion)?.relatedModelHistories : undefined\\n            const tableData: ITableData = {\\n                id: item.ID,\\n                collapsed: true,\\n                name: item.name,\\n                type: \\\"module\\\",\\n                imported: isImportedModule,\\n                version: moduleVersion,\\n                children: (item as IModule).children\\n                    .filter((child) => child.objectType == \\\"model\\\")\\n                    .map(child => child as IModel)\\n                    .map(child => {\\n                        const childModel: ITableData = { id: child.ID, parentId: item.ID, name: child.name, type: (child as IModel).modelType }\\n                        if (!isImportedModule || child.isUnmodifiable) {\\n                            const maxVersion = getItemMaxVersion(child)\\n                            return {\\n                                ...childModel,\\n                                checked: maxVersion ? true : child.isUnmodifiable,\\n                                disabled: maxVersion ? false : !child.isUnmodifiable,\\n                                version: child.isUnmodifiable ? 'latest' : maxVersion,\\n                            } as ITableData\\n                        }\\n\\n                        const importedModulesModel = relatedModelHistories?.find(e => e.modelID == child.ID)\\n                        return { ...childModel, checked: true, disabled: false, version: importedModulesModel?.version } as ITableData\\n                    })\\n            }\\n            handleParentCheckedStatus(tableData);\\n            return tableData;\\n        });\\n\\n    // - App Settings\\n    const appSettings = viewModel.studio.items.find(e => e.name == 'App Settings')!\\n    const maxVersion = getItemMaxVersion(appSettings as IModel)\\n    appSettings && items.value.push({\\n        id: appSettings.ID,\\n        name: appSettings.name,\\n        checked: true,\\n        disabled: false,\\n        type: (appSettings as IModel).modelType,\\n        version: !maxVersion ? 'latest' : maxVersion\\n    });\\n\\n    function createAndAppendItem(newTableItem: IModel, parent?: ITableData) {\\n        const maxVersion = getItemMaxVersion(newTableItem as IModel)\\n        const isPlaceHolder = newTableItem.modelType == \\\"placeholder\\\"\\n        const disabled = isPlaceHolder ? false : maxVersion ? false : !newTableItem.isUnmodifiable;\\n        const newItem: ITableData = {\\n            id: newTableItem.ID,\\n            name: newTableItem.name,\\n            checked: isPlaceHolder ? true : maxVersion ? true : newTableItem.isUnmodifiable,\\n            disabled,\\n            type: newTableItem.modelType,\\n            version: isPlaceHolder ? undefined : newTableItem.isUnmodifiable ? 'latest' : maxVersion,\\n            level: newTableItem.path?.[newTableItem.path.length - 1] != viewModel.studio.appId ? newTableItem.path?.length : undefined,\\n            collapsed: false,\\n            children: newTableItem.children as unknown as ITableData[],\\n            parentId: parent?.id\\n        }\\n        const newChild = createApp(ExportDialogItem, {\\n            handleItemCheckEvent,\\n            startScreen,\\n            versionDialog,\\n            handleCollapse,\\n            item: newItem\\n        });\\n        const mountEl = document.createElement('div');\\n        newChild.mount(mountEl);\\n        const parentEl = document.getElementById('module-container-div');\\n        parentEl?.appendChild(mountEl);\\n        newTableItem.children?.forEach(iterate => {\\n            createAndAppendItem(iterate, newItem);\\n        })\\n        if (newItem.type != \\\"placeholder\\\") {\\n            items.value.push(newItem);\\n        }\\n    }\\n    // - application items\\n    viewModel.studio.items\\n        .filter((item) => item.objectType == \\\"model\\\" && item.modelType != \\\"appSettings\\\" && item.usageType != \\\"appSettings\\\" && item.usageType != \\\"appAssetList\\\" &&\\n            (item.path?.length == 0 || item.path?.[0].toString() == viewModel.studio.appId))\\n        .forEach(item => {\\n            nextTick(() => createAndAppendItem(item as IModel));\\n        });\\n    // - UI Settings\\n    const uiSettingsID = CryptoHelper.CreateGuid();\\n    const uiSettingsModels = viewModel.studio.items.filter((item) => item.objectType == \\\"model\\\" && item.usageType == \\\"appSettings\\\") as Array<IModel>;\\n    const uiSettings: ITableData = {\\n        id: uiSettingsID,\\n        collapsed: true,\\n        name: \\\"UI Settings\\\",\\n        type: \\\"module\\\",\\n        imported: false,\\n        children: uiSettingsModels.map(settings => {\\n            const maxVersion = getItemMaxVersion(settings)\\n            return {\\n                id: settings.ID,\\n                parentId: uiSettingsID,\\n                name: settings.name,\\n                type: settings.modelType,\\n                checked: maxVersion != undefined,\\n                usageType: settings?.usageType,\\n                disabled: !maxVersion,\\n                version: maxVersion,\\n            }\\n        }) as Array<ITableData>,\\n    };\\n    handleParentCheckedStatus(uiSettings);\\n\\n    // - Styled Components\\n    const uiAssetID = CryptoHelper.CreateGuid();\\n    const appAssetList = viewModel.studio.items.filter((item) => item.objectType == \\\"model\\\" && item.usageType == \\\"appAssetList\\\") as Array<IModel>;\\n    const uiAssetList: ITableData = {\\n        id: uiAssetID,\\n        collapsed: true,\\n        name: \\\"Styled Components\\\",\\n        type: \\\"module\\\",\\n        imported: false,\\n        anyChildChecked: true,\\n        allChildChecked: true,\\n        children: appAssetList.map((asset) => ({\\n            id: asset.ID,\\n            parentId: uiAssetID,\\n            name: asset.name,\\n            type: asset.modelType,\\n            checked: true,\\n            usageType: asset?.usageType,\\n        })) as Array<ITableData>,\\n    };\\n    handleParentCheckedStatus(uiAssetList);\\n\\n    items.value.unshift(uiAssetList);\\n    items.value.unshift(uiSettings);\\n}\\n\\nfunction getItemMaxVersion(item: IModel): string | undefined {\\n    if (!modelHistories.value?.has(item.ID))\\n        return undefined;\\n\\n    const versions = modelHistories.value.get(item.ID);\\n    if (!versions)\\n        return undefined;\\n\\n    const findMaxVersion = (versions: Array<string>) => {\\n        const versionNumbers = versions.map(v => {\\n            const parts: Array<string> = v.split(\\\".\\\");\\n            return parseInt(parts[0]) * 10 + parseInt(parts[1]) * 1;\\n        })\\n\\n        versionNumbers.sort((a, b) => b - a);\\n\\n        const maxVersion = versionNumbers[0];\\n        return `${Math.floor(maxVersion / 10)}.${maxVersion % 10}`;\\n    }\\n\\n    return findMaxVersion(versions.map(e => e.version!));\\n\\n}\\nfunction checkMaxVersionOfAllItems() {\\n    let isThereVersion: boolean = false;\\n    items.value.forEach(item => {\\n        if (item.type == \\\"module\\\") {\\n            item.children?.forEach(child => {\\n                if (child.version) {\\n                    isThereVersion = true;\\n                }\\n\\n            })\\n        }\\n        else {\\n            if (item.version) {\\n                isThereVersion = true;\\n            }\\n        }\\n    })\\n    return isThereVersion;\\n}\\nfunction handleModuleCountCheckboxEvent(value: boolean) {\\n    items.value.filter(e => !e.disabled).forEach((item) => {\\n        item.checked = value;\\n        const allItemsCheckable = item.allChildChecked != undefined && item.children && item.children.length > 0 && !item.children.some(c => c.disabled);\\n        if (allItemsCheckable) item.allChildChecked = value;\\n        if (item.anyChildChecked != undefined) item.anyChildChecked = value;\\n        if (item.children) item.children.filter(c => !c.disabled).forEach((child) => (child.checked = value));\\n    });\\n\\n    validations.value = validate();\\n    props.screenType == \\\"Deploy\\\" && syncPublishTargets();\\n}\\n\\nfunction handleCollapse(item: ITableData, childIterate?: boolean, collapsed?: boolean) {\\n    item.collapsed = collapsed !== undefined ? collapsed : !item.collapsed;\\n    if (childIterate) {\\n        item.children?.forEach(child => {\\n            const childEl = document.getElementById((child as unknown as IModule).ID);\\n            childEl!.style.display = item.collapsed ? \\\"none\\\" : \\\"block\\\";\\n            handleCollapse(child, childIterate, item.collapsed);\\n        })\\n    }\\n}\\n\\nfunction checkAllDependents(item: ITableData) {\\n    if (item.disabled || item.checked) return;\\n\\n    item.checked = true\\n    const parent = items.value.find((i) => i.id == item.parentId)\\n    parent && handleParentCheckedStatus(parent);\\n\\n    const deps = dependencyMap.value?.get(item.id)?.dependedTo\\n    if (!deps) return;\\n\\n    deps.forEach(dep => {\\n        items.value.forEach(item => {\\n            if (item.type == 'module' && !item.allChildChecked) {\\n                const willCheckItem = item.children?.find(child => !child.checked && child.id == dep)\\n                willCheckItem && checkAllDependents(willCheckItem)\\n                handleParentCheckedStatus(item)\\n                return;\\n            }\\n\\n            if (!item.checked && item.id == dep) {\\n                checkAllDependents(item)\\n                item.parentId && handleParentCheckedStatus(items.value.find((i) => i.id == item.parentId)!)\\n            }\\n        })\\n    });\\n}\\n\\nfunction handleItemCheckEvent(item: ITableData) {\\n    if (item.disabled || isModelDepended(item) || item.name == 'App Settings')\\n        return;\\n\\n    if (item.type != \\\"module\\\") {\\n        if (item.checked) {\\n            item.checked = false;\\n            const parent = items.value.find((i) => i.id == item.parentId);\\n            parent && handleParentCheckedStatus(parent);\\n        } else {\\n            checkAllDependents(item)\\n        }\\n    } else {\\n        if (item.children && item.children.filter(c => !c.disabled).length > 0) {\\n            if (item.anyChildChecked) {\\n                item.children.filter(c => !c.disabled).forEach(child => child.checked = false);\\n                item.checked = false;\\n                handleParentCheckedStatus(item);\\n            } else {\\n                item.children.forEach(checkAllDependents);\\n                item.checked = true;\\n            }\\n        }\\n        else {\\n            item.checked = !item.checked;\\n            item.allChildChecked = false;\\n        }\\n    }\\n\\n    validations.value = validate();\\n    props.screenType == \\\"Deploy\\\" && syncPublishTargets();\\n}\\n\\nfunction handleParentCheckedStatus(item: ITableData) {\\n    item.disabled = item.children && (item.children.length == 0 || !item.children?.some(child => !child.disabled))\\n    item.allChildChecked = item.children && item.children.length > 0 && !item.children.some((child) => !child.checked || child.disabled);\\n    item.anyChildChecked = item.children?.some((child) => child.checked && !child.disabled);\\n}\\n\\nfunction syncPublishTargets() {\\n    publishTargets.value = []; disabledOptions.value = [];\\n\\n    const targets = viewModel.user?.selectedOrganization?.actions?.publish?.targets;\\n    if (!targets)\\n        return;\\n\\n    const isSelectAnyItem = items.value.find(e => e.anyChildChecked || e.checked);\\n    if (!isSelectAnyItem) {\\n        publishTargets.value = Object.entries(targets).map(e => cloudTargetMap(e[0])!);\\n        const disabledOptionList = Array<IDisabledOptions>();\\n        for (let i = 0; i < publishTargets.value.length; i++) {\\n            disabledOptionList.push({ index: i, cause: \\\"You need to include items to publish.\\\" })\\n        }\\n        disabledOptions.value = disabledOptionList;\\n        return;\\n    }\\n\\n    const checkedPublishTargets = checkAndSetDisabledCauses(targets);\\n    const sortedTargets = checkedPublishTargets.sort((e, f) => (!e.cause === !f.cause) ? 0 : e.cause ? 1 : -1);\\n\\n    const disabledOptionList = Array<IDisabledOptions>();\\n    for (let i = 0; i < sortedTargets.length; i++) {\\n        const cause = sortedTargets[i].cause;\\n        if (cause) disabledOptionList.push({ index: i, cause })\\n    }\\n    disabledOptions.value = disabledOptionList;\\n    publishTargets.value = sortedTargets.map(e => e.optionName);\\n\\n    selectedTarget.value = !sortedTargets[0].cause ? sortedTargets[0].optionName : \\\"\\\";\\n}\\n\\nfunction checkAndSetDisabledCauses(targets: Record<keyof IOrganizationCloud, boolean>) {\\n    const list = Array<{ optionName: string, cause?: string }>();\\n\\n    Object.keys(targets).forEach(e => {\\n        const key = e as keyof IOrganizationCloud;\\n        const value = targets[key];\\n        const optionName = cloudTargetMap(key)!;\\n        if (!value)\\n            return list.push({ optionName, cause: \\\"You are not authorized to publish to this target.\\\" });\\n\\n\\n        switch (key) {\\n            case \\\"azure\\\":\\n                const traverseSelectedItems = (status: boolean, items?: Array<ITableData>) => {\\n                    if (!items || items.length == 0) { return status; }\\n                    for (const item of items) {\\n                        if (item.checked || item.anyChildChecked) {\\n                            if (item.type == \\\"module\\\") {\\n                                status = traverseSelectedItems(status, item.children);\\n                            }\\n                            if (item.type == \\\"entityDesigner\\\" || item.type == \\\"bpmn\\\" || item.type == \\\"process\\\") {\\n                                status = false;\\n                                break;\\n                            }\\n                        }\\n\\n                    }\\n                    return status;\\n                }\\n\\n                const status = traverseSelectedItems(true, items.value);\\n                if (!status)\\n                    return list.push({ optionName, cause: \\\"Entity and process models cannot be published to this target.\\\" });\\n                break;\\n            case \\\"plateauGCP\\\":\\n                const modulesHasNotAnEDModel = items.value.filter(e => e.name != \\\"UI Settings\\\").find(e => e.type == \\\"module\\\" && e.anyChildChecked && e.children?.some(c => c.checked && (c.type == \\\"bpmn\\\" || c.type == \\\"process\\\")) && !e.children?.some(c => c.type == \\\"entityDesigner\\\" && c.checked))\\n                if (modulesHasNotAnEDModel)\\n                    return list.push({ optionName, cause: `This target not available. Selected module '${modulesHasNotAnEDModel.name}' has not any Data Model.` })\\n                break;\\n        }\\n\\n        list.push({ optionName });\\n    })\\n\\n    return list;\\n}\\n\\nfunction updateDependencyMap(newVersion: string, item: ITableData) {\\n    const deps = dependencyMap.value?.get(item.id);\\n    dependencyMap.value?.set(item.id, {\\n        dependedBy: deps?.dependedBy || Array<string>(),\\n        dependedTo: modelHistories.value?.get(item.id)?.find(e => e.version == newVersion)?.dependentModels?.map(e => e.modelId) || Array<string>()\\n    })\\n}\\n\\nfunction versionDialog(item: ITableData) {\\n    const clickedNode = { id: item.id, state: { checked: item.checked }, text: item.name, type: item.type, version: item.version };\\n    const hasAnyVersion = modelHistories.value?.has(item.id);\\n    const options = {\\n        clickedNode, cb: (version: string) => {\\n            item.version = version;\\n            updateDependencyMap(version, item);\\n        }\\n    } as any;\\n\\n    if (hasAnyVersion) {\\n        options.versions = modelHistories.value?.get(item.id)\\n    }\\n    dialog.showDialog(\\n        defineAsyncComponent(() => import(\\\"../../application/modelVersionDialog.vue\\\")),\\n        { closable: true, title: \\\"Change Version\\\", width: \\\"1080px\\\", maxHeight: \\\"500px\\\", overflow: \\\"auto\\\" }, options\\n    );\\n}\\n\\n\\nfunction moduleVersionDialog(item: ITableData) {\\n    dialog.showDialog(\\n        defineAsyncComponent(() => import(\\\"../../application/moduleVersionDialog.vue\\\")),\\n        { closable: true, title: \\\"Change Version\\\", width: \\\"1080px\\\", maxHeight: \\\"500px\\\", overflow: \\\"auto\\\" },\\n        {\\n            module: { ID: item.id }, versions: importedModuleVersions.value?.get(item.id), cb: (moduleVersion: IModuleVersion) => {\\n                item.version = moduleVersion.version;\\n                item.children?.forEach(child => {\\n                    const modulesModel = moduleVersion.relatedModelHistories.find(e => e.modelID == child.id)\\n                    child.version = modulesModel?.version\\n                    updateDependencyMap(modulesModel?.version!, child);\\n                })\\n            }\\n        }\\n    );\\n}\\n\\nfunction close() {\\n    emit(\\\"close\\\");\\n}\\n\\nasync function save() {\\n    executor.execute(\\n        async () => {\\n            const initAsGroup = async () => {\\n                const groupID = CryptoHelper.CreateGuid();\\n                await initHistory(groupID);\\n                await packJob(groupID);\\n                return groupID;\\n            }\\n\\n            const isFlowBackend = viewModel.user?.selectedOrganization?.applications.flow;\\n\\n            switch (props.screenType) {\\n                case \\\"Export\\\":\\n                    if (isFlowBackend) {\\n                        const deployItems = await createAzureDeployItems();\\n                        await packJobsUseCase.createPackJobs([{\\n                            appID: viewModel.studio.appId,\\n                            exportType: \\\"qui\\\",\\n                            selectionData: deployItems\\n                        }]);\\n                        break;\\n                    }\\n\\n                    const groupID = await initAsGroup();\\n                    await createExportJob(groupID);\\n                    break;\\n                case \\\"Deploy\\\":\\n                    switch (cloudTargetMap(selectedTarget.value!, true) as keyof IOrganizationCloud) {\\n                        case \\\"plateauGCP\\\":\\n                            const groupID = await initAsGroup();\\n                            await createDeployJob(groupID);\\n                            break;\\n                        case \\\"azure\\\":\\n                            const deployItems = await createAzureDeployItems();\\n                            await deployJobsUseCase.createAppDeployJob(deployItems, props.platformSelection);\\n                            break;\\n                    }\\n            }\\n            const userMobileUsage = viewModel.user?.mobileUsage;\\n            const appMobileUsage = currentApp.value?.mobileUsage;\\n            if (props.platformSelection.mobile && (!userMobileUsage?.isMobilePublished || !appMobileUsage?.isMobilePublished)) {\\n                backofficeUseCase.updateUserMobileUsage({ ...userMobileUsage, isMobilePublished: true });\\n                applicationUseCase.updateApplication({ ID: currentApp.value?.ID, mobileUsage: { ...appMobileUsage, isMobilePublished: true }, updateReason: \\\"backofficeUpdate\\\" })\\n\\n            }\\n            emit(\\\"close\\\");\\n        },\\n        { loading: true });\\n}\\n\\nasync function createAzureDeployItems() {\\n    const deployItems: Array<IExportItem> = [];\\n    const itemIdObj: Record<string, { item: IModel, path: string, prefix?: string }> = {};\\n\\n    viewModelManager.flatMapItems(viewModel.studio.items, (item, path, prefix) => {\\n        if (item.objectType != \\\"model\\\") { return; }\\n        itemIdObj[item.ID] = { item, path, prefix };\\n        return item;\\n    });\\n\\n    const traverseSelectedItems = (items?: Array<ITableData>) => {\\n        if (!items || items.length == 0) { return; }\\n        items.filter(e => e.checked || e.anyChildChecked).forEach(item => {\\n            if (item.type == \\\"module\\\") {\\n                traverseSelectedItems(item.children);\\n                return;\\n            }\\n\\n            const itemMap = itemIdObj[item.id];\\n\\n            const deployItem: IExportItem = {\\n                id: item.id,\\n                name: jobUtils.getFileFullname(itemMap.item),\\n                path: itemMap.path,\\n                type: jobUtils.getItemType(itemMap.item),\\n                ver: item.version || \\\"latest\\\",\\n                isRootPage: itemMap.item.isRootPage,\\n                modulePrefix: itemMap.prefix,\\n                ownerType: 'application',\\n                ownerName: viewModel.studio.appName,\\n                size: itemMap.item.size,\\n                createDate: itemMap.item.createDate,\\n            };\\n            deployItems.push(deployItem)\\n        });\\n    };\\n\\n    traverseSelectedItems(items.value);\\n\\n    return deployItems;\\n}\\n\\nasync function initHistory(groupID: string) {\\n    return qcloudApi.initPublishHistory({\\n        appID: viewModel.studio.appId,\\n        ID: groupID,\\n        isMultiStep: true,\\n        type: props.screenType == \\\"Deploy\\\" ? \\\"publish\\\" : \\\"download\\\",\\n        cloudProvider: props.screenType == \\\"Deploy\\\" ? cloudTargetMap(selectedTarget.value!, true) as keyof IOrganizationCloud : undefined,\\n        platform: props.platformSelection\\n    });\\n}\\n\\nasync function packJob(groupID: string) {\\n    let exportItemMap = new Map<string, Array<IExportItem>>();\\n    const appName = viewModel.studio.appName;\\n\\n    const itemIdObj: Record<string, { item: IModel, path: string, prefix?: string }> = {};\\n    viewModelManager.flatMapItems(viewModel.studio.items, (item, path, prefix) => {\\n        if (item.objectType != \\\"model\\\") { return; }\\n        itemIdObj[item.ID] = { item, path, prefix };\\n        return item;\\n    });\\n\\n    const createExportObject = (tableItem: ITableData) => {\\n        const item = itemIdObj[tableItem.id].item;\\n        const isAppItem = APP_ITEM_CONTENT_TYPES.some(type => type == item.modelType);\\n        const extractFolderPath = () => {\\n            let folderPath = \\\"\\\"\\n            if (!item.path || !itemIdObj[item.path[0].toString()]) {\\n                return folderPath;\\n            }\\n            item.path?.forEach(pathItem => folderPath += \\\"/\\\" + itemIdObj[pathItem.toString()].item.name)\\n            return folderPath;\\n        }\\n\\n        const path: string = item.path?.length && item.path.length > 0 ? extractFolderPath() : itemIdObj[tableItem.id].path\\n        const retVal: IExportItem = {\\n            id: tableItem.id,\\n            ver: tableItem.version!,\\n            type: jobUtils.getItemType(item),\\n            path,\\n            modulePrefix: itemIdObj[tableItem.id].prefix,\\n            name: jobUtils.getFileFullname(item),\\n            ownerType: isAppItem ? 'application' : (item.parent.objectType as \\\"module\\\" | \\\"application\\\"),\\n            ownerName: isAppItem ? appName : item.parent.name,\\n        };\\n        return retVal;\\n    }\\n\\n    const addToExportItem = (key: string, obj: IExportItem) => {\\n        key = obj.ownerType == 'module' ? `mdl-${key}` : key; // for same named module and app\\n        let items = exportItemMap.get(key);\\n        if (items && items.length > 0) {\\n            items.push(obj);\\n            exportItemMap.set(key, items);\\n        } else\\n            exportItemMap.set(key, [obj]);\\n    }\\n\\n    items.value.filter(e => e.checked ?? e.anyChildChecked).forEach((asset) => {\\n        if (asset.type == 'module') {\\n            asset.children!.filter(e => e.checked).forEach(child => {\\n                const obj = createExportObject(child);\\n                if (obj.type == \\\"entityDesigner\\\")\\n                    obj.entityGenerationDomain = viewModel.user!.selectedOrganization!.actions?.entityGenerationDomain;\\n\\n                const useSeperateModule = obj.type == 'bpmn' || obj.type == 'entityDesigner' || obj.type == 'process';\\n                addToExportItem(useSeperateModule ? asset.name : appName, obj);\\n            });\\n        } else {\\n            const obj = createExportObject(asset);\\n            if (asset.type == 'qjson') {\\n                const isRootPage = viewModel.studio.items.find(i => i.objectType == \\\"model\\\" && i.modelType == \\\"qjson\\\" && (i.additionals as IQJsonAdditionals).isRootPage && i.ID == asset.id);\\n                obj.isRootPage = isRootPage ? true : undefined;\\n            }\\n            addToExportItem(appName, obj);\\n        }\\n    })\\n\\n    let jobs = Array<ICreateExportJobParam>();\\n    exportItemMap.forEach((v, k) => {\\n        jobs.push({\\n            appID: viewModel.studio.appId,\\n            exportType: \\\"qui\\\", //(props.platformSelection.mobile && !props.platformSelection.web) ? \\\"model\\\":  \\\"qui\\\"\\n            selectionData: v,\\n            cause: props.screenType == 'Export' ? 'download' : \\\"publish\\\",\\n            layer: 0,\\n            groupID: groupID,\\n            platformSelection: props.platformSelection\\n        })\\n    })\\n\\n    await packJobsUseCase.createPackJobs(jobs);\\n}\\n\\nasync function createExportJob(groupID: string) {\\n    await executor.executeUseCase<ICreateExportJob>(ICreateExportJob, {\\n        appID: viewModel.studio.appId,\\n        exportType: \\\"qui\\\",\\n        selectionData: [],\\n        layer: 1,\\n        groupID: groupID\\n    });\\n}\\n\\nasync function createDeployJob(groupID: string) {\\n    //1-(n) L1- deployJob(build)\\n    let packages = await qcloudApi.getExportJobsByGroupId({ groupID })\\n        .then(jobs => jobs.jobs.map(e => {\\n            const jobData = e.jobData as IExportJobData;\\n            return {\\n                ownerName: jobData.items[0].ownerName,\\n                jobID: e.jobID,\\n                type: jobData.items[0].ownerType,\\n                mainDir: getDeployableArchiveRoot(jobData)\\n            }\\n        }));\\n\\n    if (!packages || packages.length <= 0)\\n        return;\\n\\n    let buildJobs = Array<ICreateDeployJobParam>();\\n    packages.forEach(pack => {\\n        buildJobs.push({\\n            appID: viewModel.studio.appId,\\n            type: \\\"build\\\",\\n            package: {\\n                type: pack.type as DeployType,\\n                name: pack.ownerName!,\\n                mainDir: pack.mainDir,\\n                zip: `${pack.jobID}.zip`,\\n            },\\n            layer: 1,\\n            groupID: groupID\\n        })\\n    })\\n\\n    await deployJobsUseCase.createBuildJobs(buildJobs);\\n\\n    //2-(1) L2- deployJob(deployment)\\n    let jobParam: ICreateDeployJobParam = {\\n        appID: viewModel.studio.appId,\\n        type: \\\"deployment\\\",\\n        deployConfig: {\\n            process: {\\n                configModelIDs: getProcessConfigList(),\\n                enabled: items.value.some(e => e.anyChildChecked && e.children?.some(e => e.checked && e.type == \\\"bpmn\\\"))\\n            }\\n        },\\n        layer: 2,\\n        groupID: groupID,\\n        platformSelection: props.platformSelection\\n    }\\n\\n    await deployJobsUseCase.startDeploymentJob(jobParam);\\n}\\n\\nfunction getProcessConfigList() {\\n    let processConfigList = Array<IProcessConfigModelItem>();\\n    items.value.forEach((asset) => {\\n        if (asset.type == \\\"module\\\" && asset.anyChildChecked && asset.children) {\\n            const usingService = asset.children.find(c => c.type == \\\"entityDesigner\\\");\\n            if (!usingService)\\n                return;\\n\\n            const serviceName = PlateauHelper.getServiceNameFromModel(usingService.name);\\n            asset.children.forEach(child => {\\n                if (child.checked && child.type == \\\"process\\\") {\\n                    processConfigList.push({\\n                        moduleName: serviceName,\\n                        model: {\\n                            id: child.id,\\n                            name: child.name,\\n                            version: child.version!\\n                        }\\n                    })\\n                }\\n            })\\n        }\\n    })\\n    return processConfigList;\\n}\\n\\nfunction getDeployableArchiveRoot(jobData: IExportJobData) {\\n    if (jobData.items[0].ownerType == \\\"module\\\") {\\n        let edModel = jobData.items.find(e => e.type == \\\"entityDesigner\\\");\\n        if (!edModel)\\n            throw new Error(\\\"!!! this module cannot deploy. Because its have not a service\\\");\\n        return PlateauHelper.getServiceNameFromModel(edModel.name);\\n    }\\n    return PlateauHelper.getQuiPackageNameFromAppName(jobData.app.name);\\n}\\n\\nfunction cloudTargetMap(name: string, pureVal: boolean = false) {\\n    const map: Record<keyof IOrganizationCloud, string> = { azure: \\\"Public Cloud\\\", plateauGCP: \\\"Plateau Platform Playground\\\" };\\n    if (pureVal) {\\n        return Object.keys(map).find(e => {\\n            if (map[e as keyof IOrganizationCloud] === name) {\\n                return true;\\n            }\\n        })\\n    } else {\\n        let key = Object.keys(map).includes(name);\\n        if (!key)\\n            return;\\n        return map[name as keyof IOrganizationCloud];\\n    }\\n}\\n\\nfunction onTargetSelect(value: string) {\\n    selectedTarget.value = value\\n}\\n\\nconst isModuleImported = (item: IModule) => {\\n    const hasAVersion = item.relatedApplications.find(e => e.applicationID == viewModel.studio.appId)?.importedVersion;\\n    if (item.mainOwner != viewModel.studio.appId && item.relatedApplications.at(0)?.applicationID != viewModel.studio.appId && hasAVersion)\\n        return true;\\n    return false;\\n}\\n\\n</script>\\n\\n\\n<style scoped>\\n.container {\\n    padding: 32px 20px 20px;\\n}\\n\\n.settings-container {\\n    position: relative;\\n    top: 0px;\\n    left: 0px;\\n}\\n\\n.custom-text {\\n    /* position: absolute; */\\n    font-family: 'Roboto';\\n    font-style: normal;\\n    font-weight: 500;\\n    font-size: 15px;\\n    line-height: 18px;\\n    /* left: 24px; */\\n    color: #212121;\\n}\\n\\n/* .custom-text.title{\\n    top: 92px;\\n}\\n\\n.custom-text.environment{\\n    top: 174px;\\n} */\\n\\n.radio-button {\\n    position: absolute;\\n    top: 60px;\\n    left: 20px;\\n    cursor: pointer;\\n}\\n\\n.radio-text {\\n    position: absolute;\\n    top: 59px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n    user-select: none;\\n    cursor: pointer;\\n}\\n\\n.existing-app-url {\\n    position: absolute;\\n    width: 760px;\\n    height: 40px;\\n    top: 114px;\\n    left: 20px;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #bcbcbc;\\n    border-radius: 4px;\\n    font: normal normal normal 14px/19px Roboto;\\n    letter-spacing: 0px;\\n    padding: 10px 0px 10px 10px;\\n}\\n\\n.url-error {\\n    border: 1px solid red;\\n}\\n\\n.url-disable {\\n    opacity: 0.5;\\n}\\n\\n.existing-app-url::placeholder {\\n    color: #bcbcbc;\\n    user-select: none;\\n}\\n\\n.modules-selected-checkbox {\\n    cursor: pointer;\\n}\\n\\n.modules-selected-text {\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #757575;\\n    margin: 0 0 13px 30px;\\n    ;\\n}\\n\\n/* .modules-selected-text.deploy {\\n    top: 257px;\\n} */\\n\\n.text-number {\\n    font: normal normal bold 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.modules-datatable {\\n    width: 760px;\\n    height: 288px;\\n    border: 1px solid #bcbcbc;\\n    overflow-x: hidden;\\n    overflow-y: auto;\\n    margin-bottom: 20px;\\n}\\n\\n/* .modules-datatable.deploy {\\n    top: 286px;\\n} */\\n\\n.modules-datatable::-webkit-scrollbar {\\n    width: 4px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar-thumb {\\n    background: #bcbcbc 0% 0% no-repeat padding-box;\\n    border-radius: 10px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar-thumb:hover {\\n    background: #555;\\n}\\n\\n.row-container {\\n    width: 100%;\\n    height: 36px;\\n    position: relative;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #e0e0e0;\\n}\\n\\n.chevron {\\n    position: absolute;\\n    left: 4px;\\n    color: #757575;\\n    font-size: 24px;\\n}\\n\\n.chevron.disabled {\\n    pointer-events: none;\\n    color: #D5D5D5;\\n}\\n\\n.module-checkbox {\\n    position: absolute;\\n    top: 10px;\\n    left: 43px;\\n    cursor: pointer;\\n}\\n\\n.module-name {\\n    position: absolute;\\n    top: 9px;\\n    left: 69px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.module-name.imported {\\n    top: 10px;\\n    left: 87px;\\n}\\n\\n.module-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.model-checkbox {\\n    position: absolute;\\n    top: 10px;\\n    left: 59px;\\n    cursor: pointer;\\n}\\n\\n.model-icon {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 85px;\\n}\\n\\n.app-tier-model-icon {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 69px\\n}\\n\\n.app-tier-model-name {\\n    position: absolute;\\n    top: 10px;\\n    left: 87px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.app-tier-model-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.model-name {\\n    position: absolute;\\n    top: 9px;\\n    left: 103px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.model-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.version-text {\\n    margin: 10px 7px 10px auto;\\n    display: table;\\n    font: normal normal normal 12px/16px Roboto;\\n    color: #757575;\\n    cursor: pointer;\\n    user-select: none;\\n}\\n\\n.version-text.disabled {\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n\\n.version-icon {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #D5D5D5;\\n}\\n\\n.version-icon.disabled {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #EEEEEE;\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n\\n.footer {\\n    position: relative;\\n    width: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: end;\\n}\\n\\n.footer.deploy {\\n    position: relative;\\n    width: 100%;\\n}\\n\\n.footer.export {\\n    margin-top: 102px;\\n}\\n\\n.cancel-button {\\n    border-radius: 4px;\\n    user-select: none;\\n    font-style: normal;\\n    font-weight: 500;\\n    font-family: \\\"ROBOTO\\\";\\n    font-size: 15px;\\n    color: #757575;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n\\n\\n\\n.save-button {\\n    background: #151233 0% 0% no-repeat padding-box;\\n    border-radius: 4px;\\n    user-select: none;\\n    font-weight: 500;\\n    font-size: 15px;\\n    color: #ffffff;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n\\n.mobile-publish-text,\\n.web-publish-text {\\n    padding: 5px 12px;\\n    margin-bottom: 52px;\\n    width: 100%;\\n    color: #757575;\\n    font-size: 14px;\\n    background: #F5F5FA;\\n    border-radius: 4px;\\n    display: flex;\\n    align-items: center;\\n}\\n\\n.mobile-publish-text i,\\n.web-publish-text i {\\n    font-size: 24px;\\n    color: #151233;\\n    margin-right: 4px;\\n}\\n\\n.save-button.deploy {\\n    padding: 10px 16px;\\n}\\n\\n.button-disable .save-button {\\n    color: #757575;\\n    cursor: default;\\n}\\n\\n.button-disable .save-button:hover+.button-tooltip,\\n.start-screen:hover .button-tooltip,\\n.row-container:hover .button-tooltip,\\n.publish-info:hover .button-tooltip {\\n    visibility: visible;\\n    transition: opacity 0.3s ease-out 1s;\\n    opacity: 1;\\n}\\n\\n.button-tooltip {\\n    visibility: hidden;\\n    position: absolute;\\n    background: #757575;\\n    color: #FFFFFF;\\n    font-size: 11px;\\n    font-family: 'Roboto';\\n    text-align: center;\\n    border-radius: 4px;\\n    letter-spacing: 0.2px;\\n    padding: 6px 8px 6px 8px;\\n    top: 56px;\\n    left: 63px;\\n    opacity: 0;\\n}\\n\\n.publish-info {\\n    color: #757575;\\n    font-size: 20px;\\n    margin-left: 10px;\\n}\\n\\n.qjson-color {\\n    color: #449dd1;\\n}\\n\\n.yaml-color {\\n    color: #449dd1;\\n}\\n\\n.namedcomp-color {\\n    color: #212121;\\n}\\n\\n.app-settings-color {\\n    color: #151233;\\n}\\n\\n.js-color {\\n    color: #449dd1;\\n}\\n\\n.css-color {\\n    color: #151233;\\n}\\n\\n.process-color {\\n    color: #007c77;\\n}\\n\\n.bpmn-color {\\n    color: #007c77;\\n}\\n\\n.entity-designer-color {\\n    color: #e9724c;\\n}\\n\\n.select-environment {\\n    width: 100%;\\n    font-size: 15px;\\n    height: 40px;\\n    line-height: 40px;\\n    margin-top: 4px\\n}\\n</style>\\n\\n<style>\\n.selected-environment {\\n    background-color: transparent;\\n    border-radius: 4px;\\n    border: 1px solid #BCBCBC;\\n    color: #212121;\\n    padding-left: 12px;\\n}\\n\\n.custom-placeholder:empty:before {\\n    color: #BCBCBC !important;\\n    font-weight: 400;\\n}\\n\\n.custom-select .items .option {\\n    font-size: 14px;\\n    padding-left: 12px;\\n    line-height: 32px;\\n}\\n\\n.custom-select .items .option:hover {\\n    background-color: #EEEEEE;\\n    color: #212121;\\n}\\n\\n.custom-select .items .option.disabled:hover {\\n    background-color: #FFFFFF;\\n    color: #212121;\\n}\\n\\n.custom-select.select-environment .items {\\n    margin-top: 4px;\\n    color: #212121;\\n    border-radius: 4px;\\n    border: 1px solid #E3E3E3;\\n    overflow: hidden;\\n    background-color: #FFFFFF;\\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\\n    position: static !important;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.selected-environment {\\n    background-color: transparent;\\n    border-radius: 4px;\\n    border: 1px solid #BCBCBC;\\n    color: #212121;\\n    padding-left: 12px;\\n}\\n.custom-placeholder:empty:before {\\n    color: #BCBCBC !important;\\n    font-weight: 400;\\n}\\n.custom-select .items .option {\\n    font-size: 14px;\\n    padding-left: 12px;\\n    line-height: 32px;\\n}\\n.custom-select .items .option:hover {\\n    background-color: #EEEEEE;\\n    color: #212121;\\n}\\n.custom-select .items .option.disabled:hover {\\n    background-color: #FFFFFF;\\n    color: #212121;\\n}\\n.custom-select.select-environment .items {\\n    margin-top: 4px;\\n    color: #212121;\\n    border-radius: 4px;\\n    border: 1px solid #E3E3E3;\\n    overflow: hidden;\\n    background-color: #FFFFFF;\\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\\n    position: static !important;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/presentation/vue3/components/dialogs/publish/publishDialog.vue\"],\"names\":[],\"mappings\":\";AAi5CA;IACI,6BAA6B;IAC7B,kBAAkB;IAClB,yBAAyB;IACzB,cAAc;IACd,kBAAkB;AACtB;AAEA;IACI,yBAAyB;IACzB,gBAAgB;AACpB;AAEA;IACI,eAAe;IACf,kBAAkB;IAClB,iBAAiB;AACrB;AAEA;IACI,yBAAyB;IACzB,cAAc;AAClB;AAEA;IACI,yBAAyB;IACzB,cAAc;AAClB;AAEA;IACI,eAAe;IACf,cAAc;IACd,kBAAkB;IAClB,yBAAyB;IACzB,gBAAgB;IAChB,yBAAyB;IACzB,0CAA0C;IAC1C,2BAA2B;AAC/B\",\"sourcesContent\":[\"<template>\\n    <div class=\\\"container\\\">\\n        <div>\\n            <CheckboxComp :class=\\\"['modules-selected-checkbox', props.screenType == 'Deploy' ? 'deploy' : '']\\\"\\n                :minus=\\\"mainCheckboxState == false\\\" :check=\\\"mainCheckboxState == true\\\"\\n                @click=\\\"handleModuleCountCheckboxEvent(mainCheckboxState == undefined)\\\" />\\n            <div :class=\\\"['modules-selected-text', props.screenType == 'Deploy' ? 'deploy' : '']\\\">\\n                <span class=\\\"text-number\\\">{{ allChildCheckedModulesCount + anyChildCheckedModulesCount +\\n                    checkedRootLevelModelsCount }}</span>\\n                of <span class=\\\"text-number\\\">{{ totalRootLevelCount }}</span> items selected\\n            </div>\\n        </div>\\n        <div :class=\\\"['modules-datatable', props.screenType == 'Deploy' ? 'deploy' : '']\\\" id=\\\"module-container-div\\\">\\n            <div v-for=\\\"item in items\\\" :key=\\\"item.id\\\">\\n                <div v-if=\\\"item?.type == 'module'\\\">\\n                    <div class=\\\"row-container\\\">\\n                        <i v-if=\\\"!item.imported\\\"\\n                            :class=\\\"'mdi mdi-menu' + (item.collapsed ? '-right' : '-down') + ' chevron' + (!item.children || item.children.length == 0 ? ' disabled' : '')\\\"\\n                            @click=\\\"handleCollapse(item)\\\" />\\n                        <CheckboxComp class=\\\"module-checkbox\\\" :check=\\\"item.allChildChecked\\\"\\n                            :minus=\\\"!item.allChildChecked && item.anyChildChecked\\\" :disabled=\\\"item.disabled\\\"\\n                            @click=\\\"handleItemCheckEvent(item)\\\" />\\n                        <i v-if=\\\"item.imported\\\" class=\\\"app-tier-model-icon mdi mdi-puzzle\\\" />\\n                        <span :class=\\\"['module-name', item.imported ? ` imported` : (item.disabled ? ' disabled' : '')]\\\">{{\\n                            item.name }}</span>\\n                        <div v-if=\\\"item.imported\\\" class='version-text' @click=\\\"moduleVersionDialog(item)\\\">\\n                            {{ item.version ? item.version : 'No version' }}\\n                            <i :class=\\\"['mdi mdi-pencil-outline version-icon']\\\"></i>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row-container\\\" v-show=\\\"!item.imported && !item.collapsed\\\" v-for=\\\"child in item?.children\\\"\\n                        :key=\\\"child.id\\\">\\n                        <CheckboxComp class=\\\"model-checkbox\\\" :check=\\\"child.checked\\\" :disabled=\\\"child.disabled\\\"\\n                            @click=\\\"handleItemCheckEvent(child)\\\" />\\n                        <i v-if=\\\"child.type != 'module'\\\"\\n                            :class=\\\"'model-icon ' + ModelContants.getModelVisualInfo(child.type, undefined).icon\\\"\\n                            :style=\\\"{ color: ModelContants.getModelVisualInfo(child.type, undefined).color }\\\" />\\n\\n                        <span :class=\\\"['model-name', child.disabled ? ' disabled' : '']\\\">{{ child.name }}</span>\\n                        <div v-if=\\\"!child.usageType || child.usageType == 'appSettings'\\\"\\n                            :class=\\\"['version-text', child.disabled ? 'disabled' : '']\\\" @click=\\\"versionDialog(child)\\\">\\n                            {{ child.version ? child.version : 'No version' }} <i\\n                                v-if=\\\"!child.usageType || child.usageType == 'appSettings'\\\"\\n                                :class=\\\"['mdi mdi-pencil-outline version-icon', child.disabled ? 'disabled' : '']\\\"></i>\\n                        </div>\\n                        <span v-if=\\\"child.disabled && !child.version\\\" class=\\\"button-tooltip\\\"\\n                            style=\\\"z-index: 1; width: 300px;\\\">No version available for publishing. <b>Stop Working</b> on\\n                            this item and choose the <b>Ready to Publish</b> option.\\n                        </span>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div v-if=\\\"props.screenType == 'Deploy'\\\" style=\\\"margin-bottom: 102px\\\">\\n            <div style=\\\"display: flex; align-items: center;\\\">\\n                <span class=\\\"custom-text environment\\\"> Publish To </span>\\n                <span class=\\\"publish-info\\\">\\n                    <i class=\\\"mdi mdi-information\\\"></i>\\n                    <span class=\\\"button-tooltip\\\" style=\\\"top: 460px; left: 96px; z-index: 1; width: 231px;\\\">Publish To\\n                        options may change depending on the module type you choose.</span>\\n                </span>\\n            </div>\\n\\n            <CustomSelect :options=\\\"publishTargets\\\" @input=\\\"onTargetSelect\\\" :selectedOption=\\\"selectedTarget\\\"\\n                :default=\\\"selectedTarget\\\" :disabledOptions=\\\"disabledOptions\\\" selectedClass=\\\"selected-environment\\\"\\n                placeholder=\\\"Select the publish environment of your application\\\" class=\\\"select-environment\\\">\\n            </CustomSelect>\\n        </div>\\n        <!--         <div v-if=\\\"props.screenType == 'Deploy' && !props.platformSelection.web && props.platformSelection.mobile\\\"\\n            class=\\\"mobile-publish-text\\\">\\n            <i class=\\\"mdi mdi-information\\\"></i>\\n            <span>Models and static files of your mobile application will be served from Public Cloud.</span>\\n        </div> -->\\n        <div :class=\\\"['footer', props.screenType == 'Deploy' ? 'deploy' : 'export']\\\">\\n            <div :class=\\\"['cancel-button', props.screenType == 'Deploy' ? 'deploy' : '']\\\" @click=\\\"close\\\">Cancel</div>\\n            <div v-if=\\\"props.screenType == 'Export'\\\" :class=\\\"(saveButtonDisable ? ' button-disable' : '')\\\"\\n                @click=\\\"!saveButtonDisable && save()\\\">\\n                <span class=\\\"save-button \\\">DOWNLOAD</span>\\n                <span v-if=\\\"!isThereVersion\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -80px; left: 626px; z-index: 1; width: 145px;\\\">There are no items ready to publish. At least\\n                    one of your items must be ready to publish.</span>\\n                <span v-else-if=\\\"!isStartScreenOK\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -46px; left: 640px; z-index: 1; width: 120px;\\\">You need to include your start screen.</span>\\n                <span v-else-if=\\\"!isAllDependenciesOK\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -95px; left: 644px; z-index: 1; width: 135px;\\\">{{ dependencyErrorStr }}</span>\\n            </div>\\n            <div v-if=\\\"props.screenType == 'Deploy'\\\" :class=\\\"[(saveButtonDisable ? ' button-disable' : '')]\\\"\\n                @click=\\\"!saveButtonDisable && save()\\\">\\n                <span class=\\\"save-button deploy\\\">PUBLISH</span>\\n                <span v-if=\\\"!isStartScreenOK\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -46px; left: 652px; z-index: 1; width: 120px;\\\">You need to include your start screen.</span>\\n                <span v-else-if=\\\"!selectedTarget\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -46px; left: 644px; z-index: 1; width: 123px;\\\">You need to select a publish\\n                    environment.</span>\\n                <span v-else-if=\\\"!isThereVersion\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -95px; left: 644px; z-index: 1; width: 135px;\\\">There are no items ready to publish. At least\\n                    one of your items must be ready to publish.</span>\\n                <span v-else-if=\\\"!isAllDependenciesOK\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -95px; left: 644px; z-index: 1; width: 135px;\\\">{{ dependencyErrorStr }}</span>\\n            </div>\\n\\n        </div>\\n    </div>\\n</template>\\n\\n\\n<script setup lang=\\\"ts\\\">\\nimport { CryptoHelper } from \\\"@stechquick/algae/lib/helpers/cryptoHelper\\\";\\nimport { PlateauHelper } from \\\"@stechquick/algae/lib/helpers/plateau/plateauHelper\\\";\\nimport { computed, createApp, defineAsyncComponent, onMounted, ref, nextTick } from \\\"vue\\\";\\nimport { IOrganizationCloud } from \\\"../../../../../../../common/clean/domain/useCases/ICloudProvider\\\";\\nimport { DeployType, ICreateDeployJobParam, ICreateExportJobParam, IExportItem, IExportJobData, IPlatformSelection, IProcessConfigModelItem, ITableData } from \\\"../../../../../../../common/qCloudTemp/exporter\\\";\\nimport { APP_ITEM_CONTENT_TYPES, IQJsonAdditionals } from \\\"../../../../../../../common/qCloudTemp/quickCloud\\\";\\nimport { ModelContants } from \\\"../../../../../../../common/qCloudTemp/modelContants\\\";\\nimport { container } from \\\"../../../../../domain/core/diContainer\\\";\\nimport { IQCloudApi } from \\\"../../../../../domain/infrastructure/IQCloudApi\\\";\\nimport { IModel, IModelHistoryInfo, IModule, IModuleVersion } from \\\"../../../../../domain/model/models\\\";\\nimport { IDialog } from \\\"../../../../../domain/presentation/IDialog\\\";\\nimport { ICreateExportJob } from \\\"../../../../../domain/useCase/ICreateExportJob\\\";\\nimport { IDeployJobs } from \\\"../../../../../domain/useCase/IDeployJobs\\\";\\nimport { IJobUtils } from \\\"../../../../../domain/useCase/IJobUtils\\\";\\nimport { IListMultiModelVersions } from \\\"../../../../../domain/useCase/IListMultiModelVersions\\\";\\nimport { IListMultiModuleVersions } from \\\"../../../../../domain/useCase/IListMultiModuleVersions\\\";\\nimport { IPackJobs } from \\\"../../../../../domain/useCase/IPackJobs\\\";\\nimport { IUseCaseExecutor } from \\\"../../../../../domain/useCase/IUseCaseExecutor\\\";\\nimport { IViewModel } from \\\"../../../../../domain/viewModel/IViewModel\\\";\\nimport { IViewModelManager } from \\\"../../../../../domain/viewModel/IViewModelManager\\\";\\nimport { IBackofficeUseCase } from \\\"../../../../../domain/useCase/IBackofficeUseCase\\\";\\nimport { IApplicationUseCase } from \\\"../../../../../domain/useCase/IApplicationUseCase\\\";\\nimport ExportDialogItem from \\\"./components/exportDialogItem.vue\\\";\\nimport CustomSelect from \\\"../../../components/customSelect.vue\\\";\\nimport CheckboxComp from \\\"../../checkboxComp.vue\\\";\\n\\ninterface IDeployScreenAdditionalProps {\\n    screenType: \\\"Export\\\" | \\\"Deploy\\\";\\n    platformSelection: IPlatformSelection;\\n}\\n\\ninterface IDisabledOptions {\\n    index: number\\n    cause: string;\\n}\\n\\nconst props = defineProps<IDeployScreenAdditionalProps>();\\nconst viewModel = container.resolve<IViewModel>(IViewModel);\\nconst viewModelManager = container.resolve<IViewModelManager>(IViewModelManager);\\nconst dialog = container.resolve<IDialog>(IDialog);\\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\\nconst deployJobsUseCase = container.resolve<IDeployJobs>(IDeployJobs);\\nconst qcloudApi = container.resolve<IQCloudApi>(IQCloudApi);\\nconst packJobsUseCase = container.resolve<IPackJobs>(IPackJobs);\\nconst jobUtils = container.resolve<IJobUtils>(IJobUtils);\\nconst backofficeUseCase = container.resolve<IBackofficeUseCase>(IBackofficeUseCase);\\nconst applicationUseCase = container.resolve<IApplicationUseCase>(IApplicationUseCase);\\n\\n\\nconst emit = defineEmits([\\\"close\\\"]);\\nconst items = ref<Array<ITableData>>([]);\\nconst validations = ref<boolean>(true);\\nconst selectedTarget = ref<string>(\\\"\\\");\\nconst disabledOptions = ref<Array<IDisabledOptions>>();\\nconst publishTargets = ref<Array<string>>();\\nconst modelHistories = ref<Map<string, Array<IModelHistoryInfo>>>();\\nconst importedModuleVersions = ref<Map<string, Array<IModuleVersion>>>();\\nconst startScreen = ref<IModel>();\\nconst dependencyMap = ref<Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>>();\\nconst dependencyErrorStr = ref<string>('');\\nconst currentApp = computed(() => viewModel.apps.find((app) => app.ID == viewModel.studio.appId));\\n\\n\\nonMounted(async () => {\\n    await Promise.all([\\n        executor.executeUseCase<IListMultiModelVersions>(IListMultiModelVersions, {}).then(res => modelHistories.value = res),\\n        executor.executeUseCase<IListMultiModuleVersions>(IListMultiModuleVersions, {}).then(res => importedModuleVersions.value = res)\\n    ])\\n    initDependencies();\\n    handleItems();\\n    props.screenType == \\\"Deploy\\\" && syncPublishTargets();\\n    validations.value = validate();\\n})\\n\\nconst allChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == \\\"module\\\" && e.allChildChecked).length);\\nconst anyChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == \\\"module\\\" && !e.allChildChecked && e.anyChildChecked).length);\\nconst checkedRootLevelModelsCount = computed(() => items.value.filter(e => e.type != \\\"module\\\" && e.checked).length);\\nconst totalRootLevelCount = computed(() => items.value.length);\\nconst saveButtonDisable = computed(() => (props.screenType == \\\"Deploy\\\" && props.platformSelection.web && selectedTarget.value == \\\"\\\") || !validations.value || !items.value.some((item) => item.checked || item.anyChildChecked) || (props.screenType == \\\"Export\\\" && !validateStartScreen()) || !validateDependencies());\\nconst mainCheckboxState = computed(() => items.value.length == allChildCheckedModulesCount.value ? true\\n    : (anyChildCheckedModulesCount.value + checkedRootLevelModelsCount.value > 0 ? false : undefined));\\nconst isThereVersion = computed(() => checkMaxVersionOfAllItems());\\nconst isAllDependenciesOK = computed(validateDependencies)\\nconst isStartScreenOK = computed(validateStartScreen)\\n\\nfunction validate() {\\n    let result = true;\\n    const modules = items.value.filter(e => e.type == \\\"module\\\" && e.anyChildChecked);\\n    const appLayerItems = items.value.filter(e => e.type == \\\"qjson\\\" && e.checked);\\n\\n    startScreen.value = (viewModel.studio.items as Array<IModel>).find(item => item.isRootPage);\\n    if (!startScreen.value)\\n        return false;\\n\\n    if (props.screenType == \\\"Deploy\\\") {\\n        if (modules.length > 0)\\n            result = modules.map(e => e.children).filter(e => !e?.find(f => f.type == \\\"entityDesigner\\\" && f.checked)).length <= 0\\n\\n        let isApplicationWillDeploy = appLayerItems.length > 0;\\n        if (isApplicationWillDeploy) {\\n            result = appLayerItems\\n                .map(e => viewModel.studio.items.find(item => item.ID == e.id) as IModel)\\n                .findIndex(e => ((e.additionals as IQJsonAdditionals).isRootPage)) != -1;\\n        }\\n    }\\n\\n    return result;\\n}\\n\\nfunction validateDependencies() {\\n    const checkMap = new Map<string, boolean>();\\n    items.value.forEach(item => {\\n        if (item.type == 'module' && item.children && item.children.length > 0)\\n            item.children.forEach(child => checkMap.set(child.id, child.checked == true))\\n        else\\n            checkMap.set(item.id, item.checked == true)\\n    })\\n\\n    const mustBeCheckedMap = new Map<string, Array<string>>();\\n    dependencyMap.value?.forEach((deps, id) => {\\n        if (!checkMap.get(id))\\n            return;\\n\\n        deps.dependedTo.forEach(dependedId => {\\n            if (checkMap.get(dependedId))\\n                return;\\n\\n            if (mustBeCheckedMap.has(id)) {\\n                const vals = mustBeCheckedMap.get(id)!\\n                vals.push(dependedId)\\n                mustBeCheckedMap.set(id, vals)\\n            } else {\\n                mustBeCheckedMap.set(id, [dependedId])\\n            }\\n\\n        });\\n    })\\n\\n    //set deps error text\\n    const [firstItemID] = mustBeCheckedMap.keys();\\n    if (firstItemID) {\\n        const firstItemDeps = mustBeCheckedMap.get(firstItemID);\\n        const firstItemDepStr = firstItemDeps ? firstItemDeps.map(findItem).map(e => e?.name).join(', ') : '';\\n        dependencyErrorStr.value = `Select ${firstItemDepStr} first. ${findItem(firstItemID)?.name} depends on ${firstItemDepStr}.`\\n    }\\n\\n    return mustBeCheckedMap.size == 0\\n}\\n\\nfunction validateStartScreen() {\\n    return (items.value.find((item) => item.id == startScreen.value?.ID))?.checked\\n}\\n\\nfunction findItem(ID: string) {\\n    for (const item of items.value) {\\n        if (item.type != 'module' && item.id == ID)\\n            return item;\\n        if (item.type == 'module' && item.children && item.children.length > 0) {\\n            const f = item.children.find(e => e.id == ID)\\n            if (f) return f\\n        }\\n    }\\n}\\n\\nfunction initDependencies() {\\n    const map = new Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>();\\n    const depMap = new Map<string, Array<string>>();\\n\\n    viewModelManager.flatMapItems(viewModel.studio.items, (item, path) => {\\n        if (item.objectType != \\\"model\\\") { return; }\\n\\n        const isImportedModule = item.parent.objectType == \\\"module\\\" && isModuleImported(item.parent);\\n\\n        let version: string | undefined;\\n        if (!isImportedModule) {\\n            const maxVersion = getItemMaxVersion(item)\\n            if (!maxVersion)\\n                return depMap.set(item.ID, item.dependentModels ? item.dependentModels.map(e => e.modelId) : Array<string>());\\n            version = maxVersion;\\n        }\\n        else {\\n            const moduleVersions = importedModuleVersions.value?.get(item.parent.ID)\\n            const moduleVersion = (item.parent as IModule).relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion\\n\\n            const importedModuleModel = moduleVersions?.filter(e => e.version == moduleVersion).flatMap(e => e.relatedModelHistories).find(e => e.modelID == item.ID)\\n            version = importedModuleModel?.version\\n        }\\n\\n        const historyItem = modelHistories.value?.get(item.ID)?.find(e => e.version == version);\\n\\n        depMap.set(item.ID, historyItem?.dependentModels ? historyItem?.dependentModels.map(e => e.modelId) : Array<string>())\\n    });\\n\\n\\n    depMap.forEach((dependedTo, modelId) => {\\n        const dependedBy = Array<string>();\\n        depMap.forEach((dependencies, depModelId) => {\\n            if (dependencies.some(depId => depId == modelId))\\n                dependedBy.push(depModelId)\\n        })\\n        map.set(modelId, { dependedBy, dependedTo });\\n    })\\n    dependencyMap.value = map;\\n}\\n\\nfunction isModelDepended(item: ITableData) {\\n    const deps = dependencyMap.value?.get(item.id)?.dependedBy\\n    if (!deps) return false;\\n\\n    return deps.some(dep => items.value.some(item => {\\n        if (item.type == 'module' && item.anyChildChecked) {\\n            return item.children?.some(child => child.checked && child.id == dep)\\n        }\\n        return item.id == dep && item.checked\\n    }));\\n}\\n\\nasync function handleItems() {\\n    // - modules and module items\\n    items.value = viewModel.studio.items\\n        .filter((item) => item.objectType == \\\"module\\\" && item.children.length > 0)\\n        .map((item) => {\\n            const isImportedModule = isModuleImported(item as IModule);\\n            const moduleVersion = (item as IModule).relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion\\n            const relatedModelHistories = isImportedModule ? importedModuleVersions.value?.get(item.ID)?.find(module => module.version == moduleVersion)?.relatedModelHistories : undefined\\n            const tableData: ITableData = {\\n                id: item.ID,\\n                collapsed: true,\\n                name: item.name,\\n                type: \\\"module\\\",\\n                imported: isImportedModule,\\n                version: moduleVersion,\\n                children: (item as IModule).children\\n                    .filter((child) => child.objectType == \\\"model\\\")\\n                    .map(child => child as IModel)\\n                    .map(child => {\\n                        const childModel: ITableData = { id: child.ID, parentId: item.ID, name: child.name, type: (child as IModel).modelType }\\n                        if (!isImportedModule || child.isUnmodifiable) {\\n                            const maxVersion = getItemMaxVersion(child)\\n                            return {\\n                                ...childModel,\\n                                checked: maxVersion ? true : child.isUnmodifiable,\\n                                disabled: maxVersion ? false : !child.isUnmodifiable,\\n                                version: child.isUnmodifiable ? 'latest' : maxVersion,\\n                            } as ITableData\\n                        }\\n\\n                        const importedModulesModel = relatedModelHistories?.find(e => e.modelID == child.ID)\\n                        return { ...childModel, checked: true, disabled: false, version: importedModulesModel?.version } as ITableData\\n                    })\\n            }\\n            handleParentCheckedStatus(tableData);\\n            return tableData;\\n        });\\n\\n    // - App Settings\\n    const appSettings = viewModel.studio.items.find(e => e.name == 'App Settings')!\\n    const maxVersion = getItemMaxVersion(appSettings as IModel)\\n    appSettings && items.value.push({\\n        id: appSettings.ID,\\n        name: appSettings.name,\\n        checked: true,\\n        disabled: false,\\n        type: (appSettings as IModel).modelType,\\n        version: !maxVersion ? 'latest' : maxVersion\\n    });\\n\\n    function createAndAppendItem(newTableItem: IModel, parent?: ITableData) {\\n        const maxVersion = getItemMaxVersion(newTableItem as IModel)\\n        const isPlaceHolder = newTableItem.modelType == \\\"placeholder\\\"\\n        const disabled = isPlaceHolder ? false : maxVersion ? false : !newTableItem.isUnmodifiable;\\n        const newItem: ITableData = {\\n            id: newTableItem.ID,\\n            name: newTableItem.name,\\n            checked: isPlaceHolder ? true : maxVersion ? true : newTableItem.isUnmodifiable,\\n            disabled,\\n            type: newTableItem.modelType,\\n            version: isPlaceHolder ? undefined : newTableItem.isUnmodifiable ? 'latest' : maxVersion,\\n            level: newTableItem.path?.[newTableItem.path.length - 1] != viewModel.studio.appId ? newTableItem.path?.length : undefined,\\n            collapsed: false,\\n            children: newTableItem.children as unknown as ITableData[],\\n            parentId: parent?.id\\n        }\\n        const newChild = createApp(ExportDialogItem, {\\n            handleItemCheckEvent,\\n            startScreen,\\n            versionDialog,\\n            handleCollapse,\\n            item: newItem\\n        });\\n        const mountEl = document.createElement('div');\\n        newChild.mount(mountEl);\\n        const parentEl = document.getElementById('module-container-div');\\n        parentEl?.appendChild(mountEl);\\n        newTableItem.children?.forEach(iterate => {\\n            createAndAppendItem(iterate, newItem);\\n        })\\n        if (newItem.type != \\\"placeholder\\\") {\\n            items.value.push(newItem);\\n        }\\n    }\\n    // - application items\\n    viewModel.studio.items\\n        .filter((item) => item.objectType == \\\"model\\\" && item.modelType != \\\"appSettings\\\" && item.usageType != \\\"appSettings\\\" && item.usageType != \\\"appAssetList\\\" &&\\n            (item.path?.length == 0 || item.path?.[0].toString() == viewModel.studio.appId))\\n        .forEach(item => {\\n            nextTick(() => createAndAppendItem(item as IModel));\\n        });\\n    // - UI Settings\\n    const uiSettingsID = CryptoHelper.CreateGuid();\\n    const uiSettingsModels = viewModel.studio.items.filter((item) => item.objectType == \\\"model\\\" && item.usageType == \\\"appSettings\\\") as Array<IModel>;\\n    const uiSettings: ITableData = {\\n        id: uiSettingsID,\\n        collapsed: true,\\n        name: \\\"UI Settings\\\",\\n        type: \\\"module\\\",\\n        imported: false,\\n        children: uiSettingsModels.map(settings => {\\n            const maxVersion = getItemMaxVersion(settings)\\n            return {\\n                id: settings.ID,\\n                parentId: uiSettingsID,\\n                name: settings.name,\\n                type: settings.modelType,\\n                checked: maxVersion != undefined,\\n                usageType: settings?.usageType,\\n                disabled: !maxVersion,\\n                version: maxVersion,\\n            }\\n        }) as Array<ITableData>,\\n    };\\n    handleParentCheckedStatus(uiSettings);\\n\\n    // - Styled Components\\n    const uiAssetID = CryptoHelper.CreateGuid();\\n    const appAssetList = viewModel.studio.items.filter((item) => item.objectType == \\\"model\\\" && item.usageType == \\\"appAssetList\\\") as Array<IModel>;\\n    const uiAssetList: ITableData = {\\n        id: uiAssetID,\\n        collapsed: true,\\n        name: \\\"Styled Components\\\",\\n        type: \\\"module\\\",\\n        imported: false,\\n        anyChildChecked: true,\\n        allChildChecked: true,\\n        children: appAssetList.map((asset) => ({\\n            id: asset.ID,\\n            parentId: uiAssetID,\\n            name: asset.name,\\n            type: asset.modelType,\\n            checked: true,\\n            usageType: asset?.usageType,\\n        })) as Array<ITableData>,\\n    };\\n    handleParentCheckedStatus(uiAssetList);\\n\\n    items.value.unshift(uiAssetList);\\n    items.value.unshift(uiSettings);\\n}\\n\\nfunction getItemMaxVersion(item: IModel): string | undefined {\\n    if (!modelHistories.value?.has(item.ID))\\n        return undefined;\\n\\n    const versions = modelHistories.value.get(item.ID);\\n    if (!versions)\\n        return undefined;\\n\\n    const findMaxVersion = (versions: Array<string>) => {\\n        const versionNumbers = versions.map(v => {\\n            const parts: Array<string> = v.split(\\\".\\\");\\n            return parseInt(parts[0]) * 10 + parseInt(parts[1]) * 1;\\n        })\\n\\n        versionNumbers.sort((a, b) => b - a);\\n\\n        const maxVersion = versionNumbers[0];\\n        return `${Math.floor(maxVersion / 10)}.${maxVersion % 10}`;\\n    }\\n\\n    return findMaxVersion(versions.map(e => e.version!));\\n\\n}\\nfunction checkMaxVersionOfAllItems() {\\n    let isThereVersion: boolean = false;\\n    items.value.forEach(item => {\\n        if (item.type == \\\"module\\\") {\\n            item.children?.forEach(child => {\\n                if (child.version) {\\n                    isThereVersion = true;\\n                }\\n\\n            })\\n        }\\n        else {\\n            if (item.version) {\\n                isThereVersion = true;\\n            }\\n        }\\n    })\\n    return isThereVersion;\\n}\\nfunction handleModuleCountCheckboxEvent(value: boolean) {\\n    items.value.filter(e => !e.disabled).forEach((item) => {\\n        item.checked = value;\\n        const allItemsCheckable = item.allChildChecked != undefined && item.children && item.children.length > 0 && !item.children.some(c => c.disabled);\\n        if (allItemsCheckable) item.allChildChecked = value;\\n        if (item.anyChildChecked != undefined) item.anyChildChecked = value;\\n        if (item.children) item.children.filter(c => !c.disabled).forEach((child) => (child.checked = value));\\n    });\\n\\n    validations.value = validate();\\n    props.screenType == \\\"Deploy\\\" && syncPublishTargets();\\n}\\n\\nfunction handleCollapse(item: ITableData, childIterate?: boolean, collapsed?: boolean) {\\n    item.collapsed = collapsed !== undefined ? collapsed : !item.collapsed;\\n    if (childIterate) {\\n        item.children?.forEach(child => {\\n            const childEl = document.getElementById((child as unknown as IModule).ID);\\n            childEl!.style.display = item.collapsed ? \\\"none\\\" : \\\"block\\\";\\n            handleCollapse(child, childIterate, item.collapsed);\\n        })\\n    }\\n}\\n\\nfunction checkAllDependents(item: ITableData) {\\n    if (item.disabled || item.checked) return;\\n\\n    item.checked = true\\n    const parent = items.value.find((i) => i.id == item.parentId)\\n    parent && handleParentCheckedStatus(parent);\\n\\n    const deps = dependencyMap.value?.get(item.id)?.dependedTo\\n    if (!deps) return;\\n\\n    deps.forEach(dep => {\\n        items.value.forEach(item => {\\n            if (item.type == 'module' && !item.allChildChecked) {\\n                const willCheckItem = item.children?.find(child => !child.checked && child.id == dep)\\n                willCheckItem && checkAllDependents(willCheckItem)\\n                handleParentCheckedStatus(item)\\n                return;\\n            }\\n\\n            if (!item.checked && item.id == dep) {\\n                checkAllDependents(item)\\n                item.parentId && handleParentCheckedStatus(items.value.find((i) => i.id == item.parentId)!)\\n            }\\n        })\\n    });\\n}\\n\\nfunction handleItemCheckEvent(item: ITableData) {\\n    if (item.disabled || isModelDepended(item) || item.name == 'App Settings')\\n        return;\\n\\n    if (item.type != \\\"module\\\") {\\n        if (item.checked) {\\n            item.checked = false;\\n            const parent = items.value.find((i) => i.id == item.parentId);\\n            parent && handleParentCheckedStatus(parent);\\n        } else {\\n            checkAllDependents(item)\\n        }\\n    } else {\\n        if (item.children && item.children.filter(c => !c.disabled).length > 0) {\\n            if (item.anyChildChecked) {\\n                item.children.filter(c => !c.disabled).forEach(child => child.checked = false);\\n                item.checked = false;\\n                handleParentCheckedStatus(item);\\n            } else {\\n                item.children.forEach(checkAllDependents);\\n                item.checked = true;\\n            }\\n        }\\n        else {\\n            item.checked = !item.checked;\\n            item.allChildChecked = false;\\n        }\\n    }\\n\\n    validations.value = validate();\\n    props.screenType == \\\"Deploy\\\" && syncPublishTargets();\\n}\\n\\nfunction handleParentCheckedStatus(item: ITableData) {\\n    item.disabled = item.children && (item.children.length == 0 || !item.children?.some(child => !child.disabled))\\n    item.allChildChecked = item.children && item.children.length > 0 && !item.children.some((child) => !child.checked || child.disabled);\\n    item.anyChildChecked = item.children?.some((child) => child.checked && !child.disabled);\\n}\\n\\nfunction syncPublishTargets() {\\n    publishTargets.value = []; disabledOptions.value = [];\\n\\n    const targets = viewModel.user?.selectedOrganization?.actions?.publish?.targets;\\n    if (!targets)\\n        return;\\n\\n    const isSelectAnyItem = items.value.find(e => e.anyChildChecked || e.checked);\\n    if (!isSelectAnyItem) {\\n        publishTargets.value = Object.entries(targets).map(e => cloudTargetMap(e[0])!);\\n        const disabledOptionList = Array<IDisabledOptions>();\\n        for (let i = 0; i < publishTargets.value.length; i++) {\\n            disabledOptionList.push({ index: i, cause: \\\"You need to include items to publish.\\\" })\\n        }\\n        disabledOptions.value = disabledOptionList;\\n        return;\\n    }\\n\\n    const checkedPublishTargets = checkAndSetDisabledCauses(targets);\\n    const sortedTargets = checkedPublishTargets.sort((e, f) => (!e.cause === !f.cause) ? 0 : e.cause ? 1 : -1);\\n\\n    const disabledOptionList = Array<IDisabledOptions>();\\n    for (let i = 0; i < sortedTargets.length; i++) {\\n        const cause = sortedTargets[i].cause;\\n        if (cause) disabledOptionList.push({ index: i, cause })\\n    }\\n    disabledOptions.value = disabledOptionList;\\n    publishTargets.value = sortedTargets.map(e => e.optionName);\\n\\n    selectedTarget.value = !sortedTargets[0].cause ? sortedTargets[0].optionName : \\\"\\\";\\n}\\n\\nfunction checkAndSetDisabledCauses(targets: Record<keyof IOrganizationCloud, boolean>) {\\n    const list = Array<{ optionName: string, cause?: string }>();\\n\\n    Object.keys(targets).forEach(e => {\\n        const key = e as keyof IOrganizationCloud;\\n        const value = targets[key];\\n        const optionName = cloudTargetMap(key)!;\\n        if (!value)\\n            return list.push({ optionName, cause: \\\"You are not authorized to publish to this target.\\\" });\\n\\n\\n        switch (key) {\\n            case \\\"azure\\\":\\n                const traverseSelectedItems = (status: boolean, items?: Array<ITableData>) => {\\n                    if (!items || items.length == 0) { return status; }\\n                    for (const item of items) {\\n                        if (item.checked || item.anyChildChecked) {\\n                            if (item.type == \\\"module\\\") {\\n                                status = traverseSelectedItems(status, item.children);\\n                            }\\n                            if (item.type == \\\"entityDesigner\\\" || item.type == \\\"bpmn\\\" || item.type == \\\"process\\\") {\\n                                status = false;\\n                                break;\\n                            }\\n                        }\\n\\n                    }\\n                    return status;\\n                }\\n\\n                const status = traverseSelectedItems(true, items.value);\\n                if (!status)\\n                    return list.push({ optionName, cause: \\\"Entity and process models cannot be published to this target.\\\" });\\n                break;\\n            case \\\"plateauGCP\\\":\\n                const modulesHasNotAnEDModel = items.value.filter(e => e.name != \\\"UI Settings\\\").find(e => e.type == \\\"module\\\" && e.anyChildChecked && e.children?.some(c => c.checked && (c.type == \\\"bpmn\\\" || c.type == \\\"process\\\")) && !e.children?.some(c => c.type == \\\"entityDesigner\\\" && c.checked))\\n                if (modulesHasNotAnEDModel)\\n                    return list.push({ optionName, cause: `This target not available. Selected module '${modulesHasNotAnEDModel.name}' has not any Data Model.` })\\n                break;\\n        }\\n\\n        list.push({ optionName });\\n    })\\n\\n    return list;\\n}\\n\\nfunction updateDependencyMap(newVersion: string, item: ITableData) {\\n    const deps = dependencyMap.value?.get(item.id);\\n    dependencyMap.value?.set(item.id, {\\n        dependedBy: deps?.dependedBy || Array<string>(),\\n        dependedTo: modelHistories.value?.get(item.id)?.find(e => e.version == newVersion)?.dependentModels?.map(e => e.modelId) || Array<string>()\\n    })\\n}\\n\\nfunction versionDialog(item: ITableData) {\\n    const clickedNode = { id: item.id, state: { checked: item.checked }, text: item.name, type: item.type, version: item.version };\\n    const hasAnyVersion = modelHistories.value?.has(item.id);\\n    const options = {\\n        clickedNode, cb: (version: string) => {\\n            item.version = version;\\n            updateDependencyMap(version, item);\\n        }\\n    } as any;\\n\\n    if (hasAnyVersion) {\\n        options.versions = modelHistories.value?.get(item.id)\\n    }\\n    dialog.showDialog(\\n        defineAsyncComponent(() => import(\\\"../../application/modelVersionDialog.vue\\\")),\\n        { closable: true, title: \\\"Change Version\\\", width: \\\"1080px\\\", maxHeight: \\\"500px\\\", overflow: \\\"auto\\\" }, options\\n    );\\n}\\n\\n\\nfunction moduleVersionDialog(item: ITableData) {\\n    dialog.showDialog(\\n        defineAsyncComponent(() => import(\\\"../../application/moduleVersionDialog.vue\\\")),\\n        { closable: true, title: \\\"Change Version\\\", width: \\\"1080px\\\", maxHeight: \\\"500px\\\", overflow: \\\"auto\\\" },\\n        {\\n            module: { ID: item.id }, versions: importedModuleVersions.value?.get(item.id), cb: (moduleVersion: IModuleVersion) => {\\n                item.version = moduleVersion.version;\\n                item.children?.forEach(child => {\\n                    const modulesModel = moduleVersion.relatedModelHistories.find(e => e.modelID == child.id)\\n                    child.version = modulesModel?.version\\n                    updateDependencyMap(modulesModel?.version!, child);\\n                })\\n            }\\n        }\\n    );\\n}\\n\\nfunction close() {\\n    emit(\\\"close\\\");\\n}\\n\\nasync function save() {\\n    executor.execute(\\n        async () => {\\n            const initAsGroup = async () => {\\n                const groupID = CryptoHelper.CreateGuid();\\n                await initHistory(groupID);\\n                await packJob(groupID);\\n                return groupID;\\n            }\\n\\n            const isFlowBackend = viewModel.user?.selectedOrganization?.applications.flow;\\n\\n            switch (props.screenType) {\\n                case \\\"Export\\\":\\n                    if (isFlowBackend) {\\n                        const deployItems = await createAzureDeployItems();\\n                        await packJobsUseCase.createPackJobs([{\\n                            appID: viewModel.studio.appId,\\n                            exportType: \\\"qui\\\",\\n                            selectionData: deployItems\\n                        }]);\\n                        break;\\n                    }\\n\\n                    const groupID = await initAsGroup();\\n                    await createExportJob(groupID);\\n                    break;\\n                case \\\"Deploy\\\":\\n                    switch (cloudTargetMap(selectedTarget.value!, true) as keyof IOrganizationCloud) {\\n                        case \\\"plateauGCP\\\":\\n                            const groupID = await initAsGroup();\\n                            await createDeployJob(groupID);\\n                            break;\\n                        case \\\"azure\\\":\\n                            const deployItems = await createAzureDeployItems();\\n                            await deployJobsUseCase.createAppDeployJob(deployItems, props.platformSelection);\\n                            break;\\n                    }\\n            }\\n            const userMobileUsage = viewModel.user?.mobileUsage;\\n            const appMobileUsage = currentApp.value?.mobileUsage;\\n            if (props.platformSelection.mobile && (!userMobileUsage?.isMobilePublished || !appMobileUsage?.isMobilePublished)) {\\n                backofficeUseCase.updateUserMobileUsage({ ...userMobileUsage, isMobilePublished: true });\\n                applicationUseCase.updateApplication({ ID: currentApp.value?.ID, mobileUsage: { ...appMobileUsage, isMobilePublished: true }, updateReason: \\\"backofficeUpdate\\\" })\\n\\n            }\\n            emit(\\\"close\\\");\\n        },\\n        { loading: true });\\n}\\n\\nasync function createAzureDeployItems() {\\n    const deployItems: Array<IExportItem> = [];\\n    const itemIdObj: Record<string, { item: IModel, path: string, prefix?: string }> = {};\\n\\n    viewModelManager.flatMapItems(viewModel.studio.items, (item, path, prefix) => {\\n        if (item.objectType != \\\"model\\\") { return; }\\n        itemIdObj[item.ID] = { item, path, prefix };\\n        return item;\\n    });\\n\\n    const traverseSelectedItems = (items?: Array<ITableData>) => {\\n        if (!items || items.length == 0) { return; }\\n        items.filter(e => e.checked || e.anyChildChecked).forEach(item => {\\n            if (item.type == \\\"module\\\") {\\n                traverseSelectedItems(item.children);\\n                return;\\n            }\\n\\n            const itemMap = itemIdObj[item.id];\\n\\n            const deployItem: IExportItem = {\\n                id: item.id,\\n                name: jobUtils.getFileFullname(itemMap.item),\\n                path: itemMap.path,\\n                type: jobUtils.getItemType(itemMap.item),\\n                ver: item.version || \\\"latest\\\",\\n                isRootPage: itemMap.item.isRootPage,\\n                modulePrefix: itemMap.prefix,\\n                ownerType: 'application',\\n                ownerName: viewModel.studio.appName,\\n                size: itemMap.item.size,\\n                createDate: itemMap.item.createDate,\\n            };\\n            deployItems.push(deployItem)\\n        });\\n    };\\n\\n    traverseSelectedItems(items.value);\\n\\n    return deployItems;\\n}\\n\\nasync function initHistory(groupID: string) {\\n    return qcloudApi.initPublishHistory({\\n        appID: viewModel.studio.appId,\\n        ID: groupID,\\n        isMultiStep: true,\\n        type: props.screenType == \\\"Deploy\\\" ? \\\"publish\\\" : \\\"download\\\",\\n        cloudProvider: props.screenType == \\\"Deploy\\\" ? cloudTargetMap(selectedTarget.value!, true) as keyof IOrganizationCloud : undefined,\\n        platform: props.platformSelection\\n    });\\n}\\n\\nasync function packJob(groupID: string) {\\n    let exportItemMap = new Map<string, Array<IExportItem>>();\\n    const appName = viewModel.studio.appName;\\n\\n    const itemIdObj: Record<string, { item: IModel, path: string, prefix?: string }> = {};\\n    viewModelManager.flatMapItems(viewModel.studio.items, (item, path, prefix) => {\\n        if (item.objectType != \\\"model\\\") { return; }\\n        itemIdObj[item.ID] = { item, path, prefix };\\n        return item;\\n    });\\n\\n    const createExportObject = (tableItem: ITableData) => {\\n        const item = itemIdObj[tableItem.id].item;\\n        const isAppItem = APP_ITEM_CONTENT_TYPES.some(type => type == item.modelType);\\n        const extractFolderPath = () => {\\n            let folderPath = \\\"\\\"\\n            if (!item.path || !itemIdObj[item.path[0].toString()]) {\\n                return folderPath;\\n            }\\n            item.path?.forEach(pathItem => folderPath += \\\"/\\\" + itemIdObj[pathItem.toString()].item.name)\\n            return folderPath;\\n        }\\n\\n        const path: string = item.path?.length && item.path.length > 0 ? extractFolderPath() : itemIdObj[tableItem.id].path\\n        const retVal: IExportItem = {\\n            id: tableItem.id,\\n            ver: tableItem.version!,\\n            type: jobUtils.getItemType(item),\\n            path,\\n            modulePrefix: itemIdObj[tableItem.id].prefix,\\n            name: jobUtils.getFileFullname(item),\\n            ownerType: isAppItem ? 'application' : (item.parent.objectType as \\\"module\\\" | \\\"application\\\"),\\n            ownerName: isAppItem ? appName : item.parent.name,\\n        };\\n        return retVal;\\n    }\\n\\n    const addToExportItem = (key: string, obj: IExportItem) => {\\n        key = obj.ownerType == 'module' ? `mdl-${key}` : key; // for same named module and app\\n        let items = exportItemMap.get(key);\\n        if (items && items.length > 0) {\\n            items.push(obj);\\n            exportItemMap.set(key, items);\\n        } else\\n            exportItemMap.set(key, [obj]);\\n    }\\n\\n    items.value.filter(e => e.checked ?? e.anyChildChecked).forEach((asset) => {\\n        if (asset.type == 'module') {\\n            asset.children!.filter(e => e.checked).forEach(child => {\\n                const obj = createExportObject(child);\\n                if (obj.type == \\\"entityDesigner\\\")\\n                    obj.entityGenerationDomain = viewModel.user!.selectedOrganization!.actions?.entityGenerationDomain;\\n\\n                const useSeperateModule = obj.type == 'bpmn' || obj.type == 'entityDesigner' || obj.type == 'process';\\n                addToExportItem(useSeperateModule ? asset.name : appName, obj);\\n            });\\n        } else {\\n            const obj = createExportObject(asset);\\n            if (asset.type == 'qjson') {\\n                const isRootPage = viewModel.studio.items.find(i => i.objectType == \\\"model\\\" && i.modelType == \\\"qjson\\\" && (i.additionals as IQJsonAdditionals).isRootPage && i.ID == asset.id);\\n                obj.isRootPage = isRootPage ? true : undefined;\\n            }\\n            addToExportItem(appName, obj);\\n        }\\n    })\\n\\n    let jobs = Array<ICreateExportJobParam>();\\n    exportItemMap.forEach((v, k) => {\\n        jobs.push({\\n            appID: viewModel.studio.appId,\\n            exportType: \\\"qui\\\", //(props.platformSelection.mobile && !props.platformSelection.web) ? \\\"model\\\":  \\\"qui\\\"\\n            selectionData: v,\\n            cause: props.screenType == 'Export' ? 'download' : \\\"publish\\\",\\n            layer: 0,\\n            groupID: groupID,\\n            platformSelection: props.platformSelection\\n        })\\n    })\\n\\n    await packJobsUseCase.createPackJobs(jobs);\\n}\\n\\nasync function createExportJob(groupID: string) {\\n    await executor.executeUseCase<ICreateExportJob>(ICreateExportJob, {\\n        appID: viewModel.studio.appId,\\n        exportType: \\\"qui\\\",\\n        selectionData: [],\\n        layer: 1,\\n        groupID: groupID\\n    });\\n}\\n\\nasync function createDeployJob(groupID: string) {\\n    //1-(n) L1- deployJob(build)\\n    let packages = await qcloudApi.getExportJobsByGroupId({ groupID })\\n        .then(jobs => jobs.jobs.map(e => {\\n            const jobData = e.jobData as IExportJobData;\\n            return {\\n                ownerName: jobData.items[0].ownerName,\\n                jobID: e.jobID,\\n                type: jobData.items[0].ownerType,\\n                mainDir: getDeployableArchiveRoot(jobData)\\n            }\\n        }));\\n\\n    if (!packages || packages.length <= 0)\\n        return;\\n\\n    let buildJobs = Array<ICreateDeployJobParam>();\\n    packages.forEach(pack => {\\n        buildJobs.push({\\n            appID: viewModel.studio.appId,\\n            type: \\\"build\\\",\\n            package: {\\n                type: pack.type as DeployType,\\n                name: pack.ownerName!,\\n                mainDir: pack.mainDir,\\n                zip: `${pack.jobID}.zip`,\\n            },\\n            layer: 1,\\n            groupID: groupID\\n        })\\n    })\\n\\n    await deployJobsUseCase.createBuildJobs(buildJobs);\\n\\n    //2-(1) L2- deployJob(deployment)\\n    let jobParam: ICreateDeployJobParam = {\\n        appID: viewModel.studio.appId,\\n        type: \\\"deployment\\\",\\n        deployConfig: {\\n            process: {\\n                configModelIDs: getProcessConfigList(),\\n                enabled: items.value.some(e => e.anyChildChecked && e.children?.some(e => e.checked && e.type == \\\"bpmn\\\"))\\n            }\\n        },\\n        layer: 2,\\n        groupID: groupID,\\n        platformSelection: props.platformSelection\\n    }\\n\\n    await deployJobsUseCase.startDeploymentJob(jobParam);\\n}\\n\\nfunction getProcessConfigList() {\\n    let processConfigList = Array<IProcessConfigModelItem>();\\n    items.value.forEach((asset) => {\\n        if (asset.type == \\\"module\\\" && asset.anyChildChecked && asset.children) {\\n            const usingService = asset.children.find(c => c.type == \\\"entityDesigner\\\");\\n            if (!usingService)\\n                return;\\n\\n            const serviceName = PlateauHelper.getServiceNameFromModel(usingService.name);\\n            asset.children.forEach(child => {\\n                if (child.checked && child.type == \\\"process\\\") {\\n                    processConfigList.push({\\n                        moduleName: serviceName,\\n                        model: {\\n                            id: child.id,\\n                            name: child.name,\\n                            version: child.version!\\n                        }\\n                    })\\n                }\\n            })\\n        }\\n    })\\n    return processConfigList;\\n}\\n\\nfunction getDeployableArchiveRoot(jobData: IExportJobData) {\\n    if (jobData.items[0].ownerType == \\\"module\\\") {\\n        let edModel = jobData.items.find(e => e.type == \\\"entityDesigner\\\");\\n        if (!edModel)\\n            throw new Error(\\\"!!! this module cannot deploy. Because its have not a service\\\");\\n        return PlateauHelper.getServiceNameFromModel(edModel.name);\\n    }\\n    return PlateauHelper.getQuiPackageNameFromAppName(jobData.app.name);\\n}\\n\\nfunction cloudTargetMap(name: string, pureVal: boolean = false) {\\n    const map: Record<keyof IOrganizationCloud, string> = { azure: \\\"Public Cloud\\\", plateauGCP: \\\"Plateau Platform Playground\\\" };\\n    if (pureVal) {\\n        return Object.keys(map).find(e => {\\n            if (map[e as keyof IOrganizationCloud] === name) {\\n                return true;\\n            }\\n        })\\n    } else {\\n        let key = Object.keys(map).includes(name);\\n        if (!key)\\n            return;\\n        return map[name as keyof IOrganizationCloud];\\n    }\\n}\\n\\nfunction onTargetSelect(value: string) {\\n    selectedTarget.value = value\\n}\\n\\nconst isModuleImported = (item: IModule) => {\\n    const hasAVersion = item.relatedApplications.find(e => e.applicationID == viewModel.studio.appId)?.importedVersion;\\n    if (item.mainOwner != viewModel.studio.appId && item.relatedApplications.at(0)?.applicationID != viewModel.studio.appId && hasAVersion)\\n        return true;\\n    return false;\\n}\\n\\n</script>\\n\\n\\n<style scoped>\\n.container {\\n    padding: 32px 20px 20px;\\n}\\n\\n.settings-container {\\n    position: relative;\\n    top: 0px;\\n    left: 0px;\\n}\\n\\n.custom-text {\\n    /* position: absolute; */\\n    font-family: 'Roboto';\\n    font-style: normal;\\n    font-weight: 500;\\n    font-size: 15px;\\n    line-height: 18px;\\n    /* left: 24px; */\\n    color: #212121;\\n}\\n\\n/* .custom-text.title{\\n    top: 92px;\\n}\\n\\n.custom-text.environment{\\n    top: 174px;\\n} */\\n\\n.radio-button {\\n    position: absolute;\\n    top: 60px;\\n    left: 20px;\\n    cursor: pointer;\\n}\\n\\n.radio-text {\\n    position: absolute;\\n    top: 59px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n    user-select: none;\\n    cursor: pointer;\\n}\\n\\n.existing-app-url {\\n    position: absolute;\\n    width: 760px;\\n    height: 40px;\\n    top: 114px;\\n    left: 20px;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #bcbcbc;\\n    border-radius: 4px;\\n    font: normal normal normal 14px/19px Roboto;\\n    letter-spacing: 0px;\\n    padding: 10px 0px 10px 10px;\\n}\\n\\n.url-error {\\n    border: 1px solid red;\\n}\\n\\n.url-disable {\\n    opacity: 0.5;\\n}\\n\\n.existing-app-url::placeholder {\\n    color: #bcbcbc;\\n    user-select: none;\\n}\\n\\n.modules-selected-checkbox {\\n    cursor: pointer;\\n}\\n\\n.modules-selected-text {\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #757575;\\n    margin: 0 0 13px 30px;\\n    ;\\n}\\n\\n/* .modules-selected-text.deploy {\\n    top: 257px;\\n} */\\n\\n.text-number {\\n    font: normal normal bold 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.modules-datatable {\\n    width: 760px;\\n    height: 288px;\\n    border: 1px solid #bcbcbc;\\n    overflow-x: hidden;\\n    overflow-y: auto;\\n    margin-bottom: 20px;\\n}\\n\\n/* .modules-datatable.deploy {\\n    top: 286px;\\n} */\\n\\n.modules-datatable::-webkit-scrollbar {\\n    width: 4px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar-thumb {\\n    background: #bcbcbc 0% 0% no-repeat padding-box;\\n    border-radius: 10px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar-thumb:hover {\\n    background: #555;\\n}\\n\\n.row-container {\\n    width: 100%;\\n    height: 36px;\\n    position: relative;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #e0e0e0;\\n}\\n\\n.chevron {\\n    position: absolute;\\n    left: 4px;\\n    color: #757575;\\n    font-size: 24px;\\n}\\n\\n.chevron.disabled {\\n    pointer-events: none;\\n    color: #D5D5D5;\\n}\\n\\n.module-checkbox {\\n    position: absolute;\\n    top: 10px;\\n    left: 43px;\\n    cursor: pointer;\\n}\\n\\n.module-name {\\n    position: absolute;\\n    top: 9px;\\n    left: 69px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.module-name.imported {\\n    top: 10px;\\n    left: 87px;\\n}\\n\\n.module-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.model-checkbox {\\n    position: absolute;\\n    top: 10px;\\n    left: 59px;\\n    cursor: pointer;\\n}\\n\\n.model-icon {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 85px;\\n}\\n\\n.app-tier-model-icon {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 69px\\n}\\n\\n.app-tier-model-name {\\n    position: absolute;\\n    top: 10px;\\n    left: 87px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.app-tier-model-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.model-name {\\n    position: absolute;\\n    top: 9px;\\n    left: 103px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.model-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.version-text {\\n    margin: 10px 7px 10px auto;\\n    display: table;\\n    font: normal normal normal 12px/16px Roboto;\\n    color: #757575;\\n    cursor: pointer;\\n    user-select: none;\\n}\\n\\n.version-text.disabled {\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n\\n.version-icon {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #D5D5D5;\\n}\\n\\n.version-icon.disabled {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #EEEEEE;\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n\\n.footer {\\n    position: relative;\\n    width: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: end;\\n}\\n\\n.footer.deploy {\\n    position: relative;\\n    width: 100%;\\n}\\n\\n.footer.export {\\n    margin-top: 102px;\\n}\\n\\n.cancel-button {\\n    border-radius: 4px;\\n    user-select: none;\\n    font-style: normal;\\n    font-weight: 500;\\n    font-family: \\\"ROBOTO\\\";\\n    font-size: 15px;\\n    color: #757575;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n\\n\\n\\n.save-button {\\n    background: #151233 0% 0% no-repeat padding-box;\\n    border-radius: 4px;\\n    user-select: none;\\n    font-weight: 500;\\n    font-size: 15px;\\n    color: #ffffff;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n\\n.mobile-publish-text,\\n.web-publish-text {\\n    padding: 5px 12px;\\n    margin-bottom: 52px;\\n    width: 100%;\\n    color: #757575;\\n    font-size: 14px;\\n    background: #F5F5FA;\\n    border-radius: 4px;\\n    display: flex;\\n    align-items: center;\\n}\\n\\n.mobile-publish-text i,\\n.web-publish-text i {\\n    font-size: 24px;\\n    color: #151233;\\n    margin-right: 4px;\\n}\\n\\n.save-button.deploy {\\n    padding: 10px 16px;\\n}\\n\\n.button-disable .save-button {\\n    color: #757575;\\n    cursor: default;\\n}\\n\\n.button-disable .save-button:hover+.button-tooltip,\\n.start-screen:hover .button-tooltip,\\n.row-container:hover .button-tooltip,\\n.publish-info:hover .button-tooltip {\\n    visibility: visible;\\n    transition: opacity 0.3s ease-out 1s;\\n    opacity: 1;\\n}\\n\\n.button-tooltip {\\n    visibility: hidden;\\n    position: absolute;\\n    background: #757575;\\n    color: #FFFFFF;\\n    font-size: 11px;\\n    font-family: 'Roboto';\\n    text-align: center;\\n    border-radius: 4px;\\n    letter-spacing: 0.2px;\\n    padding: 6px 8px 6px 8px;\\n    top: 56px;\\n    left: 63px;\\n    opacity: 0;\\n}\\n\\n.publish-info {\\n    color: #757575;\\n    font-size: 20px;\\n    margin-left: 10px;\\n}\\n\\n.qjson-color {\\n    color: #449dd1;\\n}\\n\\n.yaml-color {\\n    color: #449dd1;\\n}\\n\\n.namedcomp-color {\\n    color: #212121;\\n}\\n\\n.app-settings-color {\\n    color: #151233;\\n}\\n\\n.js-color {\\n    color: #449dd1;\\n}\\n\\n.css-color {\\n    color: #151233;\\n}\\n\\n.process-color {\\n    color: #007c77;\\n}\\n\\n.bpmn-color {\\n    color: #007c77;\\n}\\n\\n.entity-designer-color {\\n    color: #e9724c;\\n}\\n\\n.select-environment {\\n    width: 100%;\\n    font-size: 15px;\\n    height: 40px;\\n    line-height: 40px;\\n    margin-top: 4px\\n}\\n</style>\\n\\n<style>\\n.selected-environment {\\n    background-color: transparent;\\n    border-radius: 4px;\\n    border: 1px solid #BCBCBC;\\n    color: #212121;\\n    padding-left: 12px;\\n}\\n\\n.custom-placeholder:empty:before {\\n    color: #BCBCBC !important;\\n    font-weight: 400;\\n}\\n\\n.custom-select .items .option {\\n    font-size: 14px;\\n    padding-left: 12px;\\n    line-height: 32px;\\n}\\n\\n.custom-select .items .option:hover {\\n    background-color: #EEEEEE;\\n    color: #212121;\\n}\\n\\n.custom-select .items .option.disabled:hover {\\n    background-color: #FFFFFF;\\n    color: #212121;\\n}\\n\\n.custom-select.select-environment .items {\\n    margin-top: 4px;\\n    color: #212121;\\n    border-radius: 4px;\\n    border: 1px solid #E3E3E3;\\n    overflow: hidden;\\n    background-color: #FFFFFF;\\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\\n    position: static !important;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","export class CryptoHelper {\n    private static guidCounter = 0;\n\n    /**\n     * \n     * @param base number layout (number of distinct digits) (10'luk sayı düzeni, 16'lık sayı düzeni)\n     * @param length length of word. Max value: 16\n     */\n    public static GetRandomWord(base: number, length: number) {\n        return Math.random().toString(base).substring(2, length + 2);\n    }\n\n    /**\n     * Ex: be945482-jf10-40d1-a50d-rzxa2c41fdcu\n     */\n    public static CreateGuid() {\n        return [8, 4, 4, 4, 6].map(length => this.GetRandomWord(36, length)).join(\"-\") + ((++CryptoHelper.guidCounter) % 2150000000).toString(36);\n    }\n}","\nexport class PlateauHelper {\n    public static purify = (str: string) => str.replace(/[^a-zA-Z0-9]/g, \"\").toLowerCase();\n\n    public static getPlateauEnvironmentName = (envPrefix: string, appName: string) => {\n        if(!envPrefix || !appName)\n            throw new Error(\"Environment name prefix or application name not found!!!\" );\n\n        envPrefix = (envPrefix.endsWith(\"-\") ? envPrefix : (envPrefix + \"-\")).toLowerCase();\n        appName = PlateauHelper.purify(appName);\n        return `${envPrefix}${appName}`;\n    }\n\n    public static getQuiPackageNameFromAppName = (appName: string) => `${PlateauHelper.purify(appName)}-qui`;\n\n    public static getApplicationUINameFromQuiPkg = (quiPackageName: string) => PlateauHelper.purify(quiPackageName.replace(\"-qui\", \"ui\"));\n    \n    public static getApplicationHostNamePrefix = (appName: string) => `${PlateauHelper.purify(appName)}ui`;\n\n    public static getServiceNameFromModel = (modelName: string) => PlateauHelper.purify(modelName.replace(\".dm\", \"\"));\n}\n","import { IQJsonAdditionals, ModelAdditionals, ModelType } from \"./quickCloud\";\n\ntype ValueOf<Type> = Type extends any ? Type[keyof Type] : never;\ntype FieldValueOf<Type extends typeof typeSafety, Field extends keyof Type[keyof Type]> = Type[keyof Type][Field]\nexport type EditorModelTypes = ValueOf<FieldValueOf<typeof EditorConsts, \"modelKeys\">>;\nlet typeSafety: Record<string, { modelKeys: Record<string, string> }>;\nexport const EditorConsts = typeSafety = {\n    quick: {\n        modelKeys: {\n            self: \"qjson\" as \"qjson\",\n        }\n    },\n    flow: {\n        modelKeys: {\n            design: \"flow-design\" as \"flow-design\",\n            runtime: \"flow-runtime\" as \"flow-runtime\",\n        }\n    },\n    flowEntity: {\n        modelKeys: {\n            single: \"flow-entity\" as \"flow-entity\",\n        }\n    },\n};\n\ninterface ModelVisualInfo {\n    icon: string;\n    color: string;\n}\nconst cssJsTsYaml: ModelVisualInfo = { color: \"#449DD1\", icon: \"mdi mdi-cog-outline\" };\nconst jpegJpgPngSvgGif: ModelVisualInfo = { color: \"#212121\", icon: \"mdi mdi-image-outline \" }\nconst modelVisuals: Record<ModelType, ModelVisualInfo | Error | ((additional: ModelAdditionals | undefined) => ModelVisualInfo)> = {\n    qjson: (additionals) => {\n        if (additionals && (additionals as IQJsonAdditionals).qjsonType == \"quickComponent\") {\n            return { color: \"#449DD1\", icon: \"mdi mdi-shape-outline\" };\n        }\n        return { color: \"#449DD1\", icon: \"mdi mdi-palette\" };\n    },\n    css: { color: \"#151233\", icon: \"mdi mdi-music-accidental-sharp\" },\n    js: cssJsTsYaml,\n    ts: cssJsTsYaml,\n    yaml: cssJsTsYaml,\n    entityDesigner: { color: \"#E9724C\", icon: \"mdi mdi-database\" },\n    bpmn: { color: \"#007C77\", icon: \"mdi mdi-vector-polyline\" },\n    process: { color: \"#007C77\", icon: \"mdi mdi-auto-fix\" },\n    flow: { color: \"#007C77\", icon: \"mdi mdi-step-forward\" },\n    flowEntity: { color: \"blue\", icon: \"mdi mdi-step-forward\" },\n    namedComponent: { color: \"#212121\", icon: \"mdi mdi-cube-outline\" },\n    step: new Error(\"unimplemented for namedComponent\"),\n    jpeg: jpegJpgPngSvgGif,\n    jpg: jpegJpgPngSvgGif,\n    png: jpegJpgPngSvgGif,\n    svg: jpegJpgPngSvgGif,\n    gif: jpegJpgPngSvgGif,\n    woff: { color: \"#007C77\", icon: \"mdi-format-font,\" },\n    woff2: { color: \"#007C77\", icon: \"mdi-format-font,\" },\n    ttf: { color: \"#007C77\", icon: \"mdi-format-font,\" },\n    lottie: jpegJpgPngSvgGif,\n    appSettings: new Error(\"unimplemented for appSettings\"),\n    placeholder: { color: \"#212121\", icon: \"mdi mdi-folder-open\" },\n    json: new Error(\"unimplemented for json\"),\n}\n\nexport class ModelContants {\n    public static getModelVisualInfo(modelType: ModelType, modelAdditionals: ModelAdditionals | undefined): ModelVisualInfo {\n        const retVal = modelVisuals[modelType];\n        if (retVal instanceof Error) { throw retVal; }\n        return typeof retVal == \"function\" ? retVal(modelAdditionals) : retVal;\n    }\n}","import { IAppCloud, IOrganizationCloud } from \"../clean/domain/useCases/ICloudProvider\";\n\n\nexport const DEPENDED_MODEL_KEYS = [\"qjson\", \"named\", \"img\",  \"woff\", \"woff2\", \"ttf\"];\nexport const DEPENDED_IMAGE_KEYS = [ \"png\", \"jpg\", \"jpeg\", \"svg\", \"gif\"];\nexport const APP_ITEM_CONTENT_TYPES = [\"qjson\", \"css\" , \"png\" , \"jpg\" , \"jpeg\" , \"svg\" , \"gif\" , \"lottie\" , \"json\", \"woff\", \"woff2\", \"ttf\"];\n\nexport type ObjectID = string; // GUID\n//export type AuthenticationTypes = [\"QCLOUDAUTH\", \"ADFS\"];\nexport type AuthenticationType = \"QCLOUDAUTH\" | \"ADFS\";\nexport type ModelHistoryType = \"update\" | \"delete\" | \"checkin\" | \"publish\" | \"ownerItemDelete\";\nexport type DomainObjectType = \"domain\";\nexport type ApplicationObjectType = \"application\";\nexport type ModuleObjectType = \"module\";\nexport type FolderObjectType = \"folder\";\nexport type ModelObjectType = \"model\";\nexport type AppSettingsObjectType = \"appSettings\";\nexport type AppAssetObjectType = \"appAssetList\";\nexport type QJsonType = \"qjson\" | \"template\" | \"pageTemplate\" | \"quickComponent\";\nexport type ModelResponseType = \"info\" | \"body\" | \"full\";\nexport type ContentType = \"qjson\" | \"js\" | \"ts\" | \"yaml\" | \"css\" | \"png\" | \"jpg\" | \"jpeg\" | \"svg\" | \"gif\" | \"lottie\" | \"woff\" | \"woff2\" | \"ttf\" | \"json\";\nexport type ModelType = ContentType | \"bpmn\" | \"process\" | \"entityDesigner\" | \"namedComponent\" | \"flow\" | \"step\" | \"flowEntity\" | \"appSettings\" | \"placeholder\";\nexport type UsageType = AppSettingsObjectType | AppAssetObjectType;\nexport type ModuleType = \"basic\";\nexport type AllCreateObjectTypes = ModelType | FolderObjectType | ModuleObjectType;\nexport type AppSettingsModelKeys = \"settings\" | \"componentList\" | \"containerServices\" | \"pipeline\" | \"alert\" | \"loading\" | \"globalLocalization\" | \"localProxy\" | \"style\" | \"rootqjson\" | \"asset\" | \"appSettings\";\nexport type ExtensionType = \"png\" | \"jpg\" | \"jpeg\" | \"svg\" | \"gif\" | \"json\" | \"woff\" | \"woff2\" | \"ttf\";\nexport type ModuleShareType = 'reference' | 'version';\n\nexport const UISettingsType = {\n    alert: \"Alert Component\",\n    pipeline: \"Pipeline\",\n    loading: \"Loading Component\",\n    settings: \"Settings File\",\n    localProxy: \"Local Proxy File\",\n    contSvc: \"Container Services File\",\n    css: \"Style File\",\n    compList: \"Component List\",\n    globalLocalization: \"Global Localization\",\n    assetList: \"Asset List\"\n} as const;\nexport type UISettingsType = typeof UISettingsType[keyof typeof UISettingsType];\n\nexport interface ICloudObject {\n    ID: ObjectID;\n    shortID24?: string; //TODO: delete\n    name: string;\n    ownerUser: ObjectID;\n    createDate: Date;\n    createdBy: ObjectID;\n    updateDate?: Date;\n    updatedBy?: ObjectID;\n    isPermanent?: boolean;\n    priority?: number;\n    path?: Array<String>;\n}\n\nexport interface IMicroserviceDefinition {\n    name: string;\n    version: string;\n}\n\nexport interface IApplicationDetails {\n    moduleCount: number;\n    pageCount: number;\n    pageTemplateCount: number;\n    templateCount: number;\n    processCount: number;\n    entityCount: number;\n    uiSettingsCount: number;\n}\n\nexport interface IApplicationExportSettings {\n    selectedType: \"download\" | \"fileSystem\";\n}\n\nexport interface IApplicationLogoInfo {\n    hostUrl: string;\n    path: string;\n    updateDate: Date;\n}\n\nexport interface IApplication extends ICloudObject {\n    /**\n     * This is the RESERVED ID which should be used for publishments.\n     */\n    publishmentId?: ObjectID;\n    objectType: ApplicationObjectType;\n    //logo?: string;\n    logoInfo?: IApplicationLogoInfo;\n    color?: string;\n    description?: string;\n    store?: {\n        productID: ObjectID;\n        productVerID: ObjectID;\n    };\n    cloud?: IAppCloud;\n    exportSettings?: IApplicationExportSettings;\n    modifyDate?: Date;\n    firstPublishDate?: Date;\n    lastPublishDate?: Date;\n    mobileUsage?: IUpdateMobileUsage;\n}\n\nexport interface IModuleRelatedApplicationItem {\n    applicationID: ObjectID;\n    importedVersion?: string;\n}\n\nexport interface IModuleRelatedModelItem {\n    modelID: ObjectID;\n    version: string;\n}\n\nexport interface IModule extends ICloudObject {\n    description?: string;\n    modifyDate?: Date;\n    prefix?: string;\n    objectType: ModuleObjectType;\n    relatedApplications: Array<IModuleRelatedApplicationItem>;\n    moduleType?: ModuleType;\n    store?: {\n        productID: ObjectID;\n        productVerID: ObjectID;\n    };\n    mainOwner: ObjectID;\n    shareType?: ModuleShareType;  //migrate: related app i birden fazla olanlar icin 'reference'\n    currentVersion?: string;\n    lastReleasedVersion?: string;\n}\n\nexport interface IModuleVersion extends ICloudObject {\n    moduleID: ObjectID;\n    version: string;\n    relatedApplications?: Array<IModuleRelatedApplicationItem>;\n    relatedModelHistories: Array<IModuleRelatedModelItem>;\n    description?: string;\n}\n\nexport interface IModelCopyInfo {\n    sourceModelID: ObjectID;\n    date: Date;\n    user: string;\n}\n\nexport type AllModelAdditionalTypes = IQJsonAdditionals | IProcessWizardAdditionals | IBpmnAdditionals | IEntityDesignerAddtionals | IFlowModelAdditionals | IStepModelAdditionals | IAppSettingsModelAddtionals\n\nexport interface IModelInfo extends ICloudObject {\n    objectType: ModelObjectType;\n    ownerItem: ObjectID;\n    ownerType: ApplicationObjectType | ModuleObjectType;\n    modelType: ModelType;\n    extension?: ExtensionType;\n    modelAdditionals: AllModelAdditionalTypes;\n    key?: AppSettingsModelKeys;\n    checkouts?: Array<IModelCheckout>;\n    usageType?: UsageType;\n    copyFromInfo?: IModelCopyInfo;\n    size?: number;\n    store?: {\n        productVerID?: ObjectID;\n        productVerContentID?: ObjectID;\n    };\n    latestPublishedVer?: number;\n    dependentModels?: Array<IDependentModel>;\n    path?: Array<String>;\n    modelID?: string;\n    version?: string;\n}\n\nexport interface IDependentModel {\n    modelId: string;\n}\n\nexport interface IModelBodyObject {\n    key: string;\n    model: any;\n}\n\nexport interface IModelBody extends IModelBodyObject {\n    modelID: ObjectID;// this variable cannot change by version.\n    informationId: ObjectID; //if model is versioned model; informationId = histID\n    createDate: Date;\n    size?: number;\n}\n\nexport interface IModelCheckout {\n    user: string;\n    date: Date;\n}\n\nexport interface IQJsonAdditionals {\n    qjsonType: QJsonType;\n    image?: string;\n    isRootPage?: boolean;\n}\n\nexport interface IProcessWizardAdditionals { }\n\nexport interface IBpmnAdditionals {\n    isAutoGenerated?: boolean; //undefined & false => auto generated | true => manuel added\n    isModifiedByUser?: boolean;\n}\n\nexport interface IEntityDesignerAddtionals { }\n\nexport interface IFlowModelAdditionals { }\nexport interface IStepModelAdditionals {\n    compatibilities: { ui: boolean; service: boolean; };\n}\n\nexport interface IAppSettingsModelAddtionals { }\n\nexport type ModelAdditionals = IQJsonAdditionals | IProcessWizardAdditionals | IBpmnAdditionals | IEntityDesignerAddtionals | IAppSettingsModelAddtionals;\n\nexport interface IModelHistoryInfo extends ICloudObject, IModelInfo {\n    modelID: ObjectID;\n    historyType: ModelHistoryType;\n    version?: string;\n    shortComment?: string;\n    comment?: string;\n    dependentModels?: Array<IDependentModel>;\n}\n\nexport interface ISystemUser extends ICloudObject {\n    mailAddress: string;\n    loginType: AuthenticationType;\n    password?: string;\n}\n\nexport interface IQCloudLogItem {\n    ID?: string;\n    detail: any;\n    stack?: string;\n    state?: { app: { ID: string; name: string }; openItemIDs?: Array<string>; currentItemID?: string };\n    level: \"debug\" | \"info\" | \"log\" | \"trace\" | \"warning\" | \"error\";\n    type: \"business\" | \"technical\";\n}\n\nexport interface IQCloudLogDBItem extends IQCloudLogItem {\n    date: Date;\n    user?: { ID: ObjectID; name?: string; email: string };\n}\n\n\nexport interface ITenantDefinitions extends ICloudObject {\n    value: any;\n    isActive: boolean;\n    objectType?: AppSettingsObjectType | \"deploySettings\" | \"appTemplate\";\n    targetObjectType?: ApplicationObjectType | DomainObjectType;\n    contentType?: ContentType;\n    description?: string;\n    key?: AppSettingsModelKeys;\n}\n\nexport type ItemLimitActionType = \"deleteOldest\" | \"stopAdding\";\n\nexport interface IItemLimitationDetail {\n    value: number;\n    action?: ItemLimitActionType;\n}\n\nexport interface IItemLimitations {\n    history: {\n        maxCountPerModel: IItemLimitationDetail;\n        maxCountPerModule: IItemLimitationDetail;\n        maxCountPerApplication: IItemLimitationDetail;\n        maxCountPerTenant: IItemLimitationDetail;\n    };\n    model: {\n        maxCountPerModule: IItemLimitationDetail;\n        maxCountPerApplication: IItemLimitationDetail;\n        maxCountPerTenant: IItemLimitationDetail;\n    };\n    module: {\n        maxCountPerApplication: IItemLimitationDetail;\n        maxCountPerTenant: IItemLimitationDetail;\n    };\n    application: {\n        maxCountPerTenant: IItemLimitationDetail;\n    };\n}\n\n// let itemLimittations: IItemLimitations = {\n//     history: {\n//         maxCountPerModel: { value: -1 },\n//         maxCountPerModule: { value: -1 },\n//         maxCountPerApplication: { value: -1 },\n//         maxCountPerTenant: { value: -1 },\n//     },\n//     model: {\n//         maxCountPerModule: { value: -1 },\n//         maxCountPerApplication: { value: -1 },\n//         maxCountPerTenant: { value: -1 },\n//     },\n//     module: {\n//         maxCountPerApplication: { value: -1 },\n//         maxCountPerTenant: { value: -1 },\n//     },\n//     application: {\n//         maxCountPerTenant: { value: -1 },\n//     },\n// }\n\n// const items = [\n//     {targetobject: \"history\", limitkey: \"maxCountPerModel\", value: 10, limitaction: \"deleteOldest\"},\n//     {targetobject: \"model\", limitkey: \"maxCountPerApplication\", value: 20, limitaction: \"deleteOldest\"}\n// ];\n\n// items.forEach(item => {\n//     const itemLimit = itemLimittations as any;\n//     itemLimit[item.targetobject][item.limitkey] = {value: item.value, action: item.limitaction};\n//     itemLimittations = itemLimit as IItemLimitations;\n// });\n\n// const dic:Record<string, Array<{text: string, value: string}>> = {\n//     \"history\": [\n//         {text: \"maxCountountPerModel\", value: \"maxCountountPerModel\"},\n//         {text: \"maxCountountPerModule\", value: \"maxCountountPerModule\"},\n//         {text: \"maxCountountPerApplication\", value: \"maxCountountPerApplication\"},\n//         {text: \"maxCountountPerTenant\", value: \"maxCountountPerTenant\"},\n//     ],\n//     \"model\": [\n//         {text: \"maxCountountPerModule\", value: \"maxCountountPerModule\"},\n//         {text: \"maxCountountPerApplication\", value: \"maxCountountPerApplication\"},\n//         {text: \"maxCountountPerTenant\", value: \"maxCountountPerTenant\"}\n//     ],\n//     \"module\": [],\n//     \"application\": []\n// }\n\n\nexport interface IOrganizationActions {\n    publish?: {\n        targets?: Record<keyof IOrganizationCloud, boolean>;\n    };\n    entityGenerationDomain?: \"softtech\" | \"isbank\";\n}\n\nexport type ITreeviewItemType = ModelType | \"module\" | \"folder\";\n\nexport interface ITreeviewItem {\n    id: string;\n    parentId?: string;\n    name: string;\n    priority: number;\n    type: ITreeviewItemType;\n    createDate: Date;\n    path: Array<String>;\n    shortName?: string;\n    modelAdditionals?: IQJsonAdditionals | IProcessWizardAdditionals | IBpmnAdditionals | IEntityDesignerAddtionals;\n    children?: Array<ITreeviewItem>;\n    moduleType?: ModuleType;\n    usageType?: UsageType;\n    checkouts?: Array<IModelCheckout>;\n    relatedApplications?: IModule[\"relatedApplications\"];\n    size?: number;\n    prefix?: string;\n    dependentModels?: Array<IDependentModel>;\n    moduleMainOwner?: ObjectID;\n    moduleShareType?: ModuleShareType;\n    currentModuleVersion?: string;\n    currentModelVersion?: string;\n    lastReleasedModuleVersion?: string;\n}\n\nexport interface IScreenItem {\n    id: string;\n    fileName: string;\n    ownerItem: string;\n}\n\nexport interface IApplicationCard extends IApplication {\n    moduleCount: number;\n    pageCount: number;\n    templateCount: number;\n}\n\nexport interface IPimQJsonOptions {\n    qJsonType?: QJsonType;\n}\n\nexport type GeneratePageType = \"create\" | \"list\" | \"update\";\n\nexport interface IIntegration extends ICloudObject {\n    theme: string;\n    settings: {\n        engine: {\n            version: string;\n            babel: boolean;\n            embedded: boolean;\n            multitab: boolean;\n            plugins: Array<{\n                Native: [\n                    {\n                        name: string;\n                        text: string;\n                        dependencies: Array<string>;\n                        enabled: boolean;\n                    }\n                ];\n                Quick: [\n                    {\n                        name: string;\n                        text: string;\n                        dependencies: Array<string>;\n                        enabled: boolean;\n                    }\n                ];\n            }>;\n            region: string;\n            backend: string;\n        };\n        backends: Array<string>;\n        configuration: any; //IWebSDKSettings\n    };\n    componentList: Record<\n        string,\n        Record<\n            string,\n            {\n                type: string;\n                required: boolean;\n                editorDefaultValue: string;\n                runTimeOverrideValue: string;\n                runTimeDefaultValue: string;\n                options: Array<string>;\n            }\n        >\n    >;\n}\n\nexport interface IAppToken {\n    secret: string;\n    app: string;\n    email: string;\n}\n\nexport interface ITags extends ICloudObject {\n    description?: string;\n}\n\nexport interface IOrganizationGroup extends ICloudObject {\n    description?: string;\n    createdBy: string;\n    createDate: Date;\n}\n\nexport interface ISDActivities {\n    ID: ObjectID;\n    username: string;\n    lastAccessDate: Date;\n    logs: Array<{time : Date}>;\n}\nexport interface IUpdateMobileUsage {\n    isMobileTemplateUsed?: boolean;\n    isMobilePublished?: boolean;\n}","import { IApplicationExportSettings } from '../../../../common/qCloudTemp/quickCloud';\nimport { IUpdateApplicationRequest } from '../../../../common/qCloudTemp/symDtoObjects';\nimport { IApplication, ILoggedInUser } from \"../model/models\";\n\nexport interface IUpdateApplicationParam {\n    ID: string;\n    name?: string;\n    description?: string;\n    logo?: string;\n    color?: string;\n    ownerUser?: ILoggedInUser;\n    exportSettings?: IApplicationExportSettings;\n}\nexport interface ICreateApplicationParam {\n    name: string;\n    description?: string;\n    logo?: string;\n    color?: string;\n    templateName?: string;\n}\nexport interface IApplicationUseCase {\n    updateApplication(param: IUpdateApplicationRequest): Promise<void>;\n    createApplication(param: ICreateApplicationParam): Promise<IApplication>;\n}\nexport const IApplicationUseCase = Symbol.for(\"IApplicationUseCase\");","import { IUser_SUSI } from \"../../../../common/qCloudTemp/authentication\";\nimport { IOrganization } from \"../../../../common/qCloudTemp/membership\";\nimport { IApplication, IOrganizationGroup, ISDActivities, ITags } from \"../../../../common/qCloudTemp/quickCloud\";\nimport { IAddOrganizationGroupRequest, IAddTagRequest, IBoListOrganizationUsersRequest, IBoRemoveTagFromOrganizationRequest, IBoRemoveUserFromOrganizationRequest, IBoUpdateOrganizationRequest, IBoUpdateOrganizationResponse, IUpdateTagRequest, IGetOrganizaionGroupDetailsRequest, IGetOrganizaionGroupDetailsResponse, IUpdateOrganizaionGroupRequest, IUpdateMobileUsage, } from \"../../../../common/qCloudTemp/symDtoObjects\";\nimport { IUserRequest } from \"../../../../common/qCloudTemp/userRequest\";\nimport { IUpdateOrganization, IUpdateUserInfo } from \"../infrastructure/IQCloudApi\";\n\nexport interface IAzureResourceGroupUrls {\n    overviewUrl: string;\n    costUrl: string;\n}\n\nexport interface IOrganizationUIExtended extends IOrganization {\n    organizationGroupName?: string;\n    createdBy?: string;\n    tagNames?: Array<string>;\n}\n\nexport interface IUser_SUSIExtended extends IUser_SUSI {\n    organizationNames?: Array<string>;\n    licensed?: boolean;\n}\nexport interface IApplicationExtended extends IApplication {\n    organizationName?: string;\n    licensed?: boolean;\n}\nexport interface IUserRequestExtended extends IUserRequest {\n    userName?: string;\n    userLastname?: string;\n    userRole?: string;\n    organizationName?: string;\n    organizationAccountType?: string;\n}\nexport interface IApplicationExtended extends IApplication {\n    uiPageCount: number;\n    uiPageSize: number;\n}\n\nexport interface IBackofficeUseCase {\n    setBreadcrumb(values: Array<string>): void;\n    clearBreadcrumb(): void;\n    getAzureResourceGroupUrls(resourceGroupId: string): Promise<IAzureResourceGroupUrls>;\n    getDashboardInfo(): Promise<void>;\n    getUserInfo(userId: string): Promise<IUser_SUSI>;\n    getOrganizationInfo(organizationId: string): Promise<IOrganization>;\n    listUsers(): Promise<void>;\n    listOrganizations(): Promise<Array<IOrganizationUIExtended>>;\n    getOrgGroupNameByOrgID(orgID: string): Promise<string | undefined>\n    updateUserInfo(userId: string, properties: IUpdateUserInfo): Promise<IUser_SUSI>;\n    removeUserFromOrganization(properties: IBoRemoveUserFromOrganizationRequest): Promise<void>;\n    listOrganizationUsers(organizationId: string): Promise<Array<IUser_SUSI>>;\n    listOrganizationApps(organizationId: string): Promise<Array<IApplication>>;\n    deleteOrganization(organizationId: string, organizationName: string): Promise<void>;\n    updateOrganization(organizationId: string, properties: IUpdateOrganization): Promise<IOrganization>;\n    deleteUser(userId: string, userEmail: string): Promise<void>;\n    getOrganizationsByUserId(userID: string): Promise<IOrganization[]>;\n    addTag(properties: IAddTagRequest): Promise<void>;\n    getTag(tagID: string): Promise<ITags>;\n    listTags(): Promise<void>;\n    updateTag(properties: IUpdateTagRequest): Promise<void>;\n    deleteTag(tagID: string): Promise<void>;\n    getOrganizationsByTagId(tagID: string): Promise<IOrganization[]>;\n    removeTagFromOrganization(properties: IBoRemoveTagFromOrganizationRequest): Promise<void>;\n    listUserRequests(): Promise<Array<IUserRequest>>;\n    addOrganizationGroup(properties: IAddOrganizationGroupRequest): Promise<void>;\n    listOrganizationGroups(): Promise<IOrganizationGroup[]>\n    updateOrganizationGroup(request: IUpdateOrganizaionGroupRequest): Promise<void>;\n    getOrganizationGroupDetails(request: IGetOrganizaionGroupDetailsRequest): Promise<IGetOrganizaionGroupDetailsResponse>;\n    getOrganizationAppsByOrganizationIdForOrgGroup(orgID: string, orgGroup: IGetOrganizaionGroupDetailsResponse): IApplication[] | undefined;\n    getAllAppsForOrgGroup(orgGroup: IGetOrganizaionGroupDetailsResponse): IApplicationExtended[];\n    getUsersPerOrganizationForOrgGroup(orgID: string, orgGroup: IGetOrganizaionGroupDetailsResponse): IUser_SUSI[];\n    deleteOrganizationFromGorup(organizationId: string): Promise<void>;\n    deleteOrganizationGroup(organizationGroupId: string): Promise<void>;\n    listServiceDesignerActivities(): Promise<Array<ISDActivities>>;\n    downloadActivityXlsxFile(activities: Array<ISDActivities>): Promise<void>;\n    updateUserMobileUsage(mobileUsage: IUpdateMobileUsage): Promise<void>;\n    downloadUserListXlsxFile(users: Array<IUser_SUSIExtended>): Promise<void>;\n    deleteUserStandAloneInfo(userId: string): Promise<void>;\n}\n\nexport const IBackofficeUseCase = Symbol.for(\"IBackofficeUseCase\");","import { ICreateExportJobParam } from \"../../../../common/qCloudTemp/exporter\";\nimport { IUseCase } from \"./IUseCase\";\n\nexport interface ICreateExportJob extends IUseCase<void, ICreateExportJobParam> {}\n\nexport const ICreateExportJob = Symbol.for(\"ICreateExportJob\");","import { ICreateDeployJobParam, IDeployJobItem, IExportItem, IPlatformSelection } from \"../../../../common/qCloudTemp/exporter\";\nimport { IProviderGetLastBuildStatusResponse } from \"../infrastructure/IProviderApi\";\n\nexport interface IDeployJobs {\n    createAppDeployJob(deployItems: Array<IExportItem>, platformSelection?: IPlatformSelection ): Promise<void>;\n    startDeploymentJob(deployJobs: ICreateDeployJobParam): Promise<void>;\n    createBuildJobs(deployJobs: Array<ICreateDeployJobParam>): Promise<void>;\n    checkRepoHasService(repoIds: Array<number>): Promise<Array<{ repoId: number; exist: boolean }>>;\n    getRepoNameById(repoId: number): Promise<string>;\n    getProductConfigInfo(productRepoId: number, quiRepoId?: number): Promise<{ domain: string; quiName?: string }>;\n    getLastBuildStatus(jobName: string): Promise<IProviderGetLastBuildStatusResponse>;\n}\n\nexport const IDeployJobs = Symbol.for(\"IDeployJobs\");","import { IExportItem } from \"../../../../common/qCloudTemp/exporter\";\nimport { IExportViewItem, IModel } from \"../model/models\";\n\nexport interface IJobUtils {\n    //settingTypeMapper(fileName: string): IExportItem[\"type\"];\n    getItemType(item: IExportViewItem | IModel): IExportItem[\"type\"];\n    getFileFullname(item: IExportViewItem | IModel): string;\n}\n\nexport const IJobUtils = Symbol.for(\"IJobUtils\");","import { IModelHistoryInfo } from \"../model/models\";\nimport { IUseCase } from \"./IUseCase\";\n\nexport interface IListMultiModelVersionsParam { }\nexport interface IListMultiModelVersions extends IUseCase<Map<string, Array<IModelHistoryInfo>>, IListMultiModelVersionsParam> {\n\n}\nexport const IListMultiModelVersions = Symbol.for(\"IListMultiModelVersions\");","import { IModuleVersion } from \"../../../../common/qCloudTemp/quickCloud\";\nimport { IUseCase } from \"./IUseCase\";\n\nexport interface IListMultiModuleVersionsParam { }\nexport interface IListMultiModuleVersions extends IUseCase<Map<string, Array<IModuleVersion>>, IListMultiModuleVersionsParam> {\n\n}\nexport const IListMultiModuleVersions = Symbol.for(\"IListMultiModuleVersions\");","import { ICreateExportJobParam, IExportJobDbItem } from \"../../../../common/qCloudTemp/exporter\";\nexport interface IPackJobs {\n    createPackJobs(jobs: Array<ICreateExportJobParam>): Promise<Array<IExportJobDbItem>>;\n}\n\nexport const IPackJobs = Symbol.for(\"IPackJobs\");","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-f30ae8a0\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = [\"id\"]\nconst _hoisted_2 = {\n  key: 0,\n  class: \"start-screen\"\n}\nconst _hoisted_3 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"mdi mdi-home-outline\" }, null, -1 /* HOISTED */))\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"button-tooltip\",\n  style: {\"top\":\"-30px\",\"left\":\"2px\",\"z-index\":\"1\",\"width\":\"80px\"}\n}, \"Start Screen\", -1 /* HOISTED */))\nconst _hoisted_5 = [\n  _hoisted_3,\n  _hoisted_4\n]\nconst _hoisted_6 = {\n  key: 1,\n  class: \"button-tooltip\",\n  style: {\"z-index\":\"1\",\"width\":\"300px\"}\n}\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"b\", null, \"Stop Working\", -1 /* HOISTED */))\nconst _hoisted_8 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"b\", null, \"Ready to Publish\", -1 /* HOISTED */))\n\nimport CheckboxComp from \"../../../checkboxComp.vue\";\nimport { ITableData } from '../../../../../../../../common/qCloudTemp/exporter';\nimport { IModel } from '../../../../../../domain/model/models';\nimport { computed, ref } from \"vue\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'exportDialogItem',\n  props: {\n    handleItemCheckEvent: { type: Function },\n    startScreen: null,\n    versionDialog: { type: Function },\n    handleCollapse: { type: Function },\n    item: null\n  },\n  setup(__props: any) {\n\nconst props = __props as {\n\thandleItemCheckEvent: (item: ITableData) => void;\n\tstartScreen: IModel | undefined;\n\tversionDialog: (item: ITableData) => void;\n\thandleCollapse: (item: ITableData, childIterate?: boolean) => void;\n\titem: ITableData,\n\t// parentItem: ITableData\n};\n\n\n\nconst chevronClass = ref(\"mdi mdi-menu-down chevron\");\nconst checked = ref(props.item.checked);\n\nfunction calculateClass() {\n\tprops.handleCollapse(props.item, true);\n\tchevronClass.value = `mdi mdi-menu${props.item.collapsed ? '-right' : '-down'} chevron`\n};\n\nfunction check() {\n\tprops.handleItemCheckEvent(props.item);\n\tchecked.value = props.item.checked;\n\treturn checked.value\n}\n\nconst iconLeft = computed(() => {\n\tconst level = props.item.type != \"placeholder\" && props.item.parentId ? (props.item.level || 0) + 1 : props.item.level || 0;\n\treturn level * 25;\n});\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: \"row-container\",\n    id: __props.item.id\n  }, [\n    (__props.item.children && __props.item.children?.length > 0)\n      ? (_openBlock(), _createElementBlock(\"i\", {\n          key: 0,\n          class: _normalizeClass(chevronClass.value),\n          onClick: calculateClass,\n          style: _normalizeStyle({ cursor: 'pointer', left: __props.item.level == 0 ? _unref(iconLeft) + 4 + 'px' : _unref(iconLeft) + 'px' })\n        }, null, 6 /* CLASS, STYLE */))\n      : _createCommentVNode(\"v-if\", true),\n    (__props.item.type == 'placeholder')\n      ? (_openBlock(), _createElementBlock(\"i\", {\n          key: 1,\n          style: _normalizeStyle({ top: '4px', fontSize: 'larger', cursor: 'pointer', left: _unref(iconLeft) + 43 + 'px', position: 'absolute' }),\n          onClick: calculateClass,\n          class: \"mdi mdi-folder app-settings-color app-tier-model-icon\"\n        }, null, 4 /* STYLE */))\n      : (_openBlock(), _createBlock(CheckboxComp, {\n          key: 2,\n          style: _normalizeStyle({ top: '8px', cursor: 'pointer', left: _unref(iconLeft) + (!__props.item.level ? 43 : 20) + 'px', position: 'absolute' }),\n          check: checked.value,\n          disabled: __props.item.disabled,\n          onClick: check\n        }, null, 8 /* PROPS */, [\"style\", \"check\", \"disabled\"])),\n    (__props.item?.type == 'qjson')\n      ? (_openBlock(), _createElementBlock(\"i\", {\n          key: 3,\n          style: _normalizeStyle({ left: _unref(iconLeft) + (!__props.item.level ? 69 : 45) + 'px' }),\n          class: \"mdi mdi-palette qjson-color app-tier-model-icon\"\n        }, null, 4 /* STYLE */))\n      : (__props.item?.type == 'yaml')\n        ? (_openBlock(), _createElementBlock(\"i\", {\n            key: 4,\n            style: _normalizeStyle({ left: _unref(iconLeft) + (!__props.item.level ? 69 : 45) + 'px' }),\n            class: \"mdi mdi-cog-outline yaml-color app-tier-model-icon\"\n          }, null, 4 /* STYLE */))\n        : _createCommentVNode(\"v-if\", true),\n    (__props.item?.type == 'js')\n      ? (_openBlock(), _createElementBlock(\"i\", {\n          key: 5,\n          style: _normalizeStyle({ left: _unref(iconLeft) + (!__props.item.level ? 69 : 45) + 'px' }),\n          class: \"mdi mdi-cog-outline js-color app-tier-model-icon\"\n        }, null, 4 /* STYLE */))\n      : _createCommentVNode(\"v-if\", true),\n    (__props.item?.type == 'css')\n      ? (_openBlock(), _createElementBlock(\"i\", {\n          key: 6,\n          style: _normalizeStyle({ left: _unref(iconLeft) + (!__props.item.level ? 69 : 45) + 'px' }),\n          class: \"mdi mdi-music-accidental-sharp css-color app-tier-model-icon\"\n        }, null, 4 /* STYLE */))\n      : (__props.item?.type == 'process')\n        ? (_openBlock(), _createElementBlock(\"i\", {\n            key: 7,\n            style: _normalizeStyle({ left: _unref(iconLeft) + (!__props.item.level ? 69 : 45) + 'px' }),\n            class: \"mdi mdi-auto-fix process-color app-tier-model-icon\"\n          }, null, 4 /* STYLE */))\n        : (__props.item?.type == 'bpmn')\n          ? (_openBlock(), _createElementBlock(\"i\", {\n              key: 8,\n              style: _normalizeStyle({ left: _unref(iconLeft) + (!__props.item.level ? 69 : 45) + 'px' }),\n              class: \"mdi mdi-vector-polyline bpmn-color app-tier-model-icon\"\n            }, null, 4 /* STYLE */))\n          : (__props.item?.type == 'entityDesigner')\n            ? (_openBlock(), _createElementBlock(\"i\", {\n                key: 9,\n                style: _normalizeStyle({ left: _unref(iconLeft) + (!__props.item.level ? 69 : 45) + 'px' }),\n                class: \"mdi mdi-database entity-designer-color app-tier-model-icon\"\n              }, null, 4 /* STYLE */))\n            : (__props.item?.type == 'flow')\n              ? (_openBlock(), _createElementBlock(\"i\", {\n                  key: 10,\n                  style: _normalizeStyle({ left: _unref(iconLeft) + (!__props.item.level ? 69 : 45) + 'px' }),\n                  class: \"mdi mdi-step-forward bpmn-color app-tier-model-icon\"\n                }, null, 4 /* STYLE */))\n              : (__props.item.type == 'namedComponent')\n                ? (_openBlock(), _createElementBlock(\"i\", {\n                    key: 11,\n                    style: _normalizeStyle({ left: _unref(iconLeft) + (!__props.item.level ? 69 : 45) + 'px' }),\n                    class: \"mdi mdi-cube-outline namedcomp-color app-tier-model-icon\"\n                  }, null, 4 /* STYLE */))\n                : (__props.item.type == 'appSettings')\n                  ? (_openBlock(), _createElementBlock(\"i\", {\n                      key: 12,\n                      style: _normalizeStyle({ left: _unref(iconLeft) + (!__props.item.level ? 69 : 45) + 'px' }),\n                      class: \"mdi mdi-cog app-settings-color app-tier-model-icon\"\n                    }, null, 4 /* STYLE */))\n                  : _createCommentVNode(\"v-if\", true),\n    _createElementVNode(\"span\", {\n      style: _normalizeStyle({ left: _unref(iconLeft) + (!__props.item.level && __props.item.type != 'placeholder' ? 91 : 71) + 'px' }),\n      class: \"app-tier-model-name\"\n    }, [\n      _createTextVNode(_toDisplayString(__props.item?.name) + \" \", 1 /* TEXT */),\n      (__props.startScreen?.ID == __props.item.id)\n        ? (_openBlock(), _createElementBlock(\"span\", _hoisted_2, _hoisted_5))\n        : _createCommentVNode(\"v-if\", true)\n    ], 4 /* STYLE */),\n    (__props.item.type != 'placeholder')\n      ? (_openBlock(), _createElementBlock(_Fragment, { key: 13 }, [\n          (!__props.item.usageType)\n            ? (_openBlock(), _createElementBlock(\"span\", {\n                key: 0,\n                class: _normalizeClass(['version-text', __props.item.disabled ? 'disabled' : '']),\n                onClick: _cache[0] || (_cache[0] = ($event: any) => (__props.versionDialog(__props.item)))\n              }, [\n                _createTextVNode(_toDisplayString(__props.item.version ? __props.item.version : 'No version') + \" \", 1 /* TEXT */),\n                (!__props.item.usageType)\n                  ? (_openBlock(), _createElementBlock(\"i\", {\n                      key: 0,\n                      class: _normalizeClass(['mdi mdi-pencil-outline version-icon', __props.item.disabled ? 'disabled' : ''])\n                    }, null, 2 /* CLASS */))\n                  : _createCommentVNode(\"v-if\", true)\n              ], 2 /* CLASS */))\n            : _createCommentVNode(\"v-if\", true),\n          (__props.item.disabled && !__props.item.version)\n            ? (_openBlock(), _createElementBlock(\"span\", _hoisted_6, [\n                _createTextVNode(\"No version available for publishing. \"),\n                _hoisted_7,\n                _createTextVNode(\" on this item and choose the \"),\n                _hoisted_8,\n                _createTextVNode(\" option. \")\n              ]))\n            : _createCommentVNode(\"v-if\", true)\n        ], 64 /* STABLE_FRAGMENT */))\n      : _createCommentVNode(\"v-if\", true)\n  ], 8 /* PROPS */, _hoisted_1))\n}\n}\n\n})","\n      import API from \"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./exportDialogItem.vue?vue&type=style&index=0&id=f30ae8a0&scoped=true&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./exportDialogItem.vue?vue&type=style&index=0&id=f30ae8a0&scoped=true&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","import script from \"./exportDialogItem.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./exportDialogItem.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./exportDialogItem.vue?vue&type=style&index=0&id=f30ae8a0&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/studio/studio/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-f30ae8a0\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, normalizeClass as _normalizeClass, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, vShow as _vShow, withDirectives as _withDirectives, createStaticVNode as _createStaticVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-15858c1c\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"container\" }\nconst _hoisted_2 = { class: \"text-number\" }\nconst _hoisted_3 = { class: \"text-number\" }\nconst _hoisted_4 = { key: 0 }\nconst _hoisted_5 = { class: \"row-container\" }\nconst _hoisted_6 = [\"onClick\"]\nconst _hoisted_7 = {\n  key: 1,\n  class: \"app-tier-model-icon mdi mdi-puzzle\"\n}\nconst _hoisted_8 = [\"onClick\"]\nconst _hoisted_9 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: /*#__PURE__*/_normalizeClass(['mdi mdi-pencil-outline version-icon'])\n}, null, -1 /* HOISTED */))\nconst _hoisted_10 = [\"onClick\"]\nconst _hoisted_11 = {\n  key: 2,\n  class: \"button-tooltip\",\n  style: {\"z-index\":\"1\",\"width\":\"300px\"}\n}\nconst _hoisted_12 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"b\", null, \"Stop Working\", -1 /* HOISTED */))\nconst _hoisted_13 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"b\", null, \"Ready to Publish\", -1 /* HOISTED */))\nconst _hoisted_14 = {\n  key: 0,\n  style: {\"margin-bottom\":\"102px\"}\n}\nconst _hoisted_15 = /*#__PURE__*/_createStaticVNode(\"<div style=\\\"display:flex;align-items:center;\\\" data-v-15858c1c><span class=\\\"custom-text environment\\\" data-v-15858c1c> Publish To </span><span class=\\\"publish-info\\\" data-v-15858c1c><i class=\\\"mdi mdi-information\\\" data-v-15858c1c></i><span class=\\\"button-tooltip\\\" style=\\\"top:460px;left:96px;z-index:1;width:231px;\\\" data-v-15858c1c>Publish To options may change depending on the module type you choose.</span></span></div>\", 1)\nconst _hoisted_16 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"save-button\" }, \"DOWNLOAD\", -1 /* HOISTED */))\nconst _hoisted_17 = {\n  key: 0,\n  class: \"button-tooltip\",\n  style: {\"top\":\"-80px\",\"left\":\"626px\",\"z-index\":\"1\",\"width\":\"145px\"}\n}\nconst _hoisted_18 = {\n  key: 1,\n  class: \"button-tooltip\",\n  style: {\"top\":\"-46px\",\"left\":\"640px\",\"z-index\":\"1\",\"width\":\"120px\"}\n}\nconst _hoisted_19 = {\n  key: 2,\n  class: \"button-tooltip\",\n  style: {\"top\":\"-95px\",\"left\":\"644px\",\"z-index\":\"1\",\"width\":\"135px\"}\n}\nconst _hoisted_20 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"save-button deploy\" }, \"PUBLISH\", -1 /* HOISTED */))\nconst _hoisted_21 = {\n  key: 0,\n  class: \"button-tooltip\",\n  style: {\"top\":\"-46px\",\"left\":\"652px\",\"z-index\":\"1\",\"width\":\"120px\"}\n}\nconst _hoisted_22 = {\n  key: 1,\n  class: \"button-tooltip\",\n  style: {\"top\":\"-46px\",\"left\":\"644px\",\"z-index\":\"1\",\"width\":\"123px\"}\n}\nconst _hoisted_23 = {\n  key: 2,\n  class: \"button-tooltip\",\n  style: {\"top\":\"-95px\",\"left\":\"644px\",\"z-index\":\"1\",\"width\":\"135px\"}\n}\nconst _hoisted_24 = {\n  key: 3,\n  class: \"button-tooltip\",\n  style: {\"top\":\"-95px\",\"left\":\"644px\",\"z-index\":\"1\",\"width\":\"135px\"}\n}\n\nimport { CryptoHelper } from \"@stechquick/algae/lib/helpers/cryptoHelper\";\nimport { PlateauHelper } from \"@stechquick/algae/lib/helpers/plateau/plateauHelper\";\nimport { computed, createApp, defineAsyncComponent, onMounted, ref, nextTick } from \"vue\";\nimport { IOrganizationCloud } from \"../../../../../../../common/clean/domain/useCases/ICloudProvider\";\nimport { DeployType, ICreateDeployJobParam, ICreateExportJobParam, IExportItem, IExportJobData, IPlatformSelection, IProcessConfigModelItem, ITableData } from \"../../../../../../../common/qCloudTemp/exporter\";\nimport { APP_ITEM_CONTENT_TYPES, IQJsonAdditionals } from \"../../../../../../../common/qCloudTemp/quickCloud\";\nimport { ModelContants } from \"../../../../../../../common/qCloudTemp/modelContants\";\nimport { container } from \"../../../../../domain/core/diContainer\";\nimport { IQCloudApi } from \"../../../../../domain/infrastructure/IQCloudApi\";\nimport { IModel, IModelHistoryInfo, IModule, IModuleVersion } from \"../../../../../domain/model/models\";\nimport { IDialog } from \"../../../../../domain/presentation/IDialog\";\nimport { ICreateExportJob } from \"../../../../../domain/useCase/ICreateExportJob\";\nimport { IDeployJobs } from \"../../../../../domain/useCase/IDeployJobs\";\nimport { IJobUtils } from \"../../../../../domain/useCase/IJobUtils\";\nimport { IListMultiModelVersions } from \"../../../../../domain/useCase/IListMultiModelVersions\";\nimport { IListMultiModuleVersions } from \"../../../../../domain/useCase/IListMultiModuleVersions\";\nimport { IPackJobs } from \"../../../../../domain/useCase/IPackJobs\";\nimport { IUseCaseExecutor } from \"../../../../../domain/useCase/IUseCaseExecutor\";\nimport { IViewModel } from \"../../../../../domain/viewModel/IViewModel\";\nimport { IViewModelManager } from \"../../../../../domain/viewModel/IViewModelManager\";\nimport { IBackofficeUseCase } from \"../../../../../domain/useCase/IBackofficeUseCase\";\nimport { IApplicationUseCase } from \"../../../../../domain/useCase/IApplicationUseCase\";\nimport ExportDialogItem from \"./components/exportDialogItem.vue\";\nimport CustomSelect from \"../../../components/customSelect.vue\";\nimport CheckboxComp from \"../../checkboxComp.vue\";\n\ninterface IDeployScreenAdditionalProps {\n    screenType: \"Export\" | \"Deploy\";\n    platformSelection: IPlatformSelection;\n}\n\ninterface IDisabledOptions {\n    index: number\n    cause: string;\n}\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'publishDialog',\n  props: {\n    screenType: null,\n    platformSelection: null\n  },\n  emits: [\"close\"],\n  setup(__props: any, { emit }) {\n\nconst props = __props as {\n    screenType: \"Export\" | \"Deploy\";\n    platformSelection: IPlatformSelection;\n};\n\n\nconst viewModel = container.resolve<IViewModel>(IViewModel);\nconst viewModelManager = container.resolve<IViewModelManager>(IViewModelManager);\nconst dialog = container.resolve<IDialog>(IDialog);\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\nconst deployJobsUseCase = container.resolve<IDeployJobs>(IDeployJobs);\nconst qcloudApi = container.resolve<IQCloudApi>(IQCloudApi);\nconst packJobsUseCase = container.resolve<IPackJobs>(IPackJobs);\nconst jobUtils = container.resolve<IJobUtils>(IJobUtils);\nconst backofficeUseCase = container.resolve<IBackofficeUseCase>(IBackofficeUseCase);\nconst applicationUseCase = container.resolve<IApplicationUseCase>(IApplicationUseCase);\n\n\n\nconst items = ref<Array<ITableData>>([]);\nconst validations = ref<boolean>(true);\nconst selectedTarget = ref<string>(\"\");\nconst disabledOptions = ref<Array<IDisabledOptions>>();\nconst publishTargets = ref<Array<string>>();\nconst modelHistories = ref<Map<string, Array<IModelHistoryInfo>>>();\nconst importedModuleVersions = ref<Map<string, Array<IModuleVersion>>>();\nconst startScreen = ref<IModel>();\nconst dependencyMap = ref<Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>>();\nconst dependencyErrorStr = ref<string>('');\nconst currentApp = computed(() => viewModel.apps.find((app) => app.ID == viewModel.studio.appId));\n\n\nonMounted(async () => {\n    await Promise.all([\n        executor.executeUseCase<IListMultiModelVersions>(IListMultiModelVersions, {}).then(res => modelHistories.value = res),\n        executor.executeUseCase<IListMultiModuleVersions>(IListMultiModuleVersions, {}).then(res => importedModuleVersions.value = res)\n    ])\n    initDependencies();\n    handleItems();\n    props.screenType == \"Deploy\" && syncPublishTargets();\n    validations.value = validate();\n})\n\nconst allChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == \"module\" && e.allChildChecked).length);\nconst anyChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == \"module\" && !e.allChildChecked && e.anyChildChecked).length);\nconst checkedRootLevelModelsCount = computed(() => items.value.filter(e => e.type != \"module\" && e.checked).length);\nconst totalRootLevelCount = computed(() => items.value.length);\nconst saveButtonDisable = computed(() => (props.screenType == \"Deploy\" && props.platformSelection.web && selectedTarget.value == \"\") || !validations.value || !items.value.some((item) => item.checked || item.anyChildChecked) || (props.screenType == \"Export\" && !validateStartScreen()) || !validateDependencies());\nconst mainCheckboxState = computed(() => items.value.length == allChildCheckedModulesCount.value ? true\n    : (anyChildCheckedModulesCount.value + checkedRootLevelModelsCount.value > 0 ? false : undefined));\nconst isThereVersion = computed(() => checkMaxVersionOfAllItems());\nconst isAllDependenciesOK = computed(validateDependencies)\nconst isStartScreenOK = computed(validateStartScreen)\n\nfunction validate() {\n    let result = true;\n    const modules = items.value.filter(e => e.type == \"module\" && e.anyChildChecked);\n    const appLayerItems = items.value.filter(e => e.type == \"qjson\" && e.checked);\n\n    startScreen.value = (viewModel.studio.items as Array<IModel>).find(item => item.isRootPage);\n    if (!startScreen.value)\n        return false;\n\n    if (props.screenType == \"Deploy\") {\n        if (modules.length > 0)\n            result = modules.map(e => e.children).filter(e => !e?.find(f => f.type == \"entityDesigner\" && f.checked)).length <= 0\n\n        let isApplicationWillDeploy = appLayerItems.length > 0;\n        if (isApplicationWillDeploy) {\n            result = appLayerItems\n                .map(e => viewModel.studio.items.find(item => item.ID == e.id) as IModel)\n                .findIndex(e => ((e.additionals as IQJsonAdditionals).isRootPage)) != -1;\n        }\n    }\n\n    return result;\n}\n\nfunction validateDependencies() {\n    const checkMap = new Map<string, boolean>();\n    items.value.forEach(item => {\n        if (item.type == 'module' && item.children && item.children.length > 0)\n            item.children.forEach(child => checkMap.set(child.id, child.checked == true))\n        else\n            checkMap.set(item.id, item.checked == true)\n    })\n\n    const mustBeCheckedMap = new Map<string, Array<string>>();\n    dependencyMap.value?.forEach((deps, id) => {\n        if (!checkMap.get(id))\n            return;\n\n        deps.dependedTo.forEach(dependedId => {\n            if (checkMap.get(dependedId))\n                return;\n\n            if (mustBeCheckedMap.has(id)) {\n                const vals = mustBeCheckedMap.get(id)!\n                vals.push(dependedId)\n                mustBeCheckedMap.set(id, vals)\n            } else {\n                mustBeCheckedMap.set(id, [dependedId])\n            }\n\n        });\n    })\n\n    //set deps error text\n    const [firstItemID] = mustBeCheckedMap.keys();\n    if (firstItemID) {\n        const firstItemDeps = mustBeCheckedMap.get(firstItemID);\n        const firstItemDepStr = firstItemDeps ? firstItemDeps.map(findItem).map(e => e?.name).join(', ') : '';\n        dependencyErrorStr.value = `Select ${firstItemDepStr} first. ${findItem(firstItemID)?.name} depends on ${firstItemDepStr}.`\n    }\n\n    return mustBeCheckedMap.size == 0\n}\n\nfunction validateStartScreen() {\n    return (items.value.find((item) => item.id == startScreen.value?.ID))?.checked\n}\n\nfunction findItem(ID: string) {\n    for (const item of items.value) {\n        if (item.type != 'module' && item.id == ID)\n            return item;\n        if (item.type == 'module' && item.children && item.children.length > 0) {\n            const f = item.children.find(e => e.id == ID)\n            if (f) return f\n        }\n    }\n}\n\nfunction initDependencies() {\n    const map = new Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>();\n    const depMap = new Map<string, Array<string>>();\n\n    viewModelManager.flatMapItems(viewModel.studio.items, (item, path) => {\n        if (item.objectType != \"model\") { return; }\n\n        const isImportedModule = item.parent.objectType == \"module\" && isModuleImported(item.parent);\n\n        let version: string | undefined;\n        if (!isImportedModule) {\n            const maxVersion = getItemMaxVersion(item)\n            if (!maxVersion)\n                return depMap.set(item.ID, item.dependentModels ? item.dependentModels.map(e => e.modelId) : Array<string>());\n            version = maxVersion;\n        }\n        else {\n            const moduleVersions = importedModuleVersions.value?.get(item.parent.ID)\n            const moduleVersion = (item.parent as IModule).relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion\n\n            const importedModuleModel = moduleVersions?.filter(e => e.version == moduleVersion).flatMap(e => e.relatedModelHistories).find(e => e.modelID == item.ID)\n            version = importedModuleModel?.version\n        }\n\n        const historyItem = modelHistories.value?.get(item.ID)?.find(e => e.version == version);\n\n        depMap.set(item.ID, historyItem?.dependentModels ? historyItem?.dependentModels.map(e => e.modelId) : Array<string>())\n    });\n\n\n    depMap.forEach((dependedTo, modelId) => {\n        const dependedBy = Array<string>();\n        depMap.forEach((dependencies, depModelId) => {\n            if (dependencies.some(depId => depId == modelId))\n                dependedBy.push(depModelId)\n        })\n        map.set(modelId, { dependedBy, dependedTo });\n    })\n    dependencyMap.value = map;\n}\n\nfunction isModelDepended(item: ITableData) {\n    const deps = dependencyMap.value?.get(item.id)?.dependedBy\n    if (!deps) return false;\n\n    return deps.some(dep => items.value.some(item => {\n        if (item.type == 'module' && item.anyChildChecked) {\n            return item.children?.some(child => child.checked && child.id == dep)\n        }\n        return item.id == dep && item.checked\n    }));\n}\n\nasync function handleItems() {\n    // - modules and module items\n    items.value = viewModel.studio.items\n        .filter((item) => item.objectType == \"module\" && item.children.length > 0)\n        .map((item) => {\n            const isImportedModule = isModuleImported(item as IModule);\n            const moduleVersion = (item as IModule).relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion\n            const relatedModelHistories = isImportedModule ? importedModuleVersions.value?.get(item.ID)?.find(module => module.version == moduleVersion)?.relatedModelHistories : undefined\n            const tableData: ITableData = {\n                id: item.ID,\n                collapsed: true,\n                name: item.name,\n                type: \"module\",\n                imported: isImportedModule,\n                version: moduleVersion,\n                children: (item as IModule).children\n                    .filter((child) => child.objectType == \"model\")\n                    .map(child => child as IModel)\n                    .map(child => {\n                        const childModel: ITableData = { id: child.ID, parentId: item.ID, name: child.name, type: (child as IModel).modelType }\n                        if (!isImportedModule || child.isUnmodifiable) {\n                            const maxVersion = getItemMaxVersion(child)\n                            return {\n                                ...childModel,\n                                checked: maxVersion ? true : child.isUnmodifiable,\n                                disabled: maxVersion ? false : !child.isUnmodifiable,\n                                version: child.isUnmodifiable ? 'latest' : maxVersion,\n                            } as ITableData\n                        }\n\n                        const importedModulesModel = relatedModelHistories?.find(e => e.modelID == child.ID)\n                        return { ...childModel, checked: true, disabled: false, version: importedModulesModel?.version } as ITableData\n                    })\n            }\n            handleParentCheckedStatus(tableData);\n            return tableData;\n        });\n\n    // - App Settings\n    const appSettings = viewModel.studio.items.find(e => e.name == 'App Settings')!\n    const maxVersion = getItemMaxVersion(appSettings as IModel)\n    appSettings && items.value.push({\n        id: appSettings.ID,\n        name: appSettings.name,\n        checked: true,\n        disabled: false,\n        type: (appSettings as IModel).modelType,\n        version: !maxVersion ? 'latest' : maxVersion\n    });\n\n    function createAndAppendItem(newTableItem: IModel, parent?: ITableData) {\n        const maxVersion = getItemMaxVersion(newTableItem as IModel)\n        const isPlaceHolder = newTableItem.modelType == \"placeholder\"\n        const disabled = isPlaceHolder ? false : maxVersion ? false : !newTableItem.isUnmodifiable;\n        const newItem: ITableData = {\n            id: newTableItem.ID,\n            name: newTableItem.name,\n            checked: isPlaceHolder ? true : maxVersion ? true : newTableItem.isUnmodifiable,\n            disabled,\n            type: newTableItem.modelType,\n            version: isPlaceHolder ? undefined : newTableItem.isUnmodifiable ? 'latest' : maxVersion,\n            level: newTableItem.path?.[newTableItem.path.length - 1] != viewModel.studio.appId ? newTableItem.path?.length : undefined,\n            collapsed: false,\n            children: newTableItem.children as unknown as ITableData[],\n            parentId: parent?.id\n        }\n        const newChild = createApp(ExportDialogItem, {\n            handleItemCheckEvent,\n            startScreen,\n            versionDialog,\n            handleCollapse,\n            item: newItem\n        });\n        const mountEl = document.createElement('div');\n        newChild.mount(mountEl);\n        const parentEl = document.getElementById('module-container-div');\n        parentEl?.appendChild(mountEl);\n        newTableItem.children?.forEach(iterate => {\n            createAndAppendItem(iterate, newItem);\n        })\n        if (newItem.type != \"placeholder\") {\n            items.value.push(newItem);\n        }\n    }\n    // - application items\n    viewModel.studio.items\n        .filter((item) => item.objectType == \"model\" && item.modelType != \"appSettings\" && item.usageType != \"appSettings\" && item.usageType != \"appAssetList\" &&\n            (item.path?.length == 0 || item.path?.[0].toString() == viewModel.studio.appId))\n        .forEach(item => {\n            nextTick(() => createAndAppendItem(item as IModel));\n        });\n    // - UI Settings\n    const uiSettingsID = CryptoHelper.CreateGuid();\n    const uiSettingsModels = viewModel.studio.items.filter((item) => item.objectType == \"model\" && item.usageType == \"appSettings\") as Array<IModel>;\n    const uiSettings: ITableData = {\n        id: uiSettingsID,\n        collapsed: true,\n        name: \"UI Settings\",\n        type: \"module\",\n        imported: false,\n        children: uiSettingsModels.map(settings => {\n            const maxVersion = getItemMaxVersion(settings)\n            return {\n                id: settings.ID,\n                parentId: uiSettingsID,\n                name: settings.name,\n                type: settings.modelType,\n                checked: maxVersion != undefined,\n                usageType: settings?.usageType,\n                disabled: !maxVersion,\n                version: maxVersion,\n            }\n        }) as Array<ITableData>,\n    };\n    handleParentCheckedStatus(uiSettings);\n\n    // - Styled Components\n    const uiAssetID = CryptoHelper.CreateGuid();\n    const appAssetList = viewModel.studio.items.filter((item) => item.objectType == \"model\" && item.usageType == \"appAssetList\") as Array<IModel>;\n    const uiAssetList: ITableData = {\n        id: uiAssetID,\n        collapsed: true,\n        name: \"Styled Components\",\n        type: \"module\",\n        imported: false,\n        anyChildChecked: true,\n        allChildChecked: true,\n        children: appAssetList.map((asset) => ({\n            id: asset.ID,\n            parentId: uiAssetID,\n            name: asset.name,\n            type: asset.modelType,\n            checked: true,\n            usageType: asset?.usageType,\n        })) as Array<ITableData>,\n    };\n    handleParentCheckedStatus(uiAssetList);\n\n    items.value.unshift(uiAssetList);\n    items.value.unshift(uiSettings);\n}\n\nfunction getItemMaxVersion(item: IModel): string | undefined {\n    if (!modelHistories.value?.has(item.ID))\n        return undefined;\n\n    const versions = modelHistories.value.get(item.ID);\n    if (!versions)\n        return undefined;\n\n    const findMaxVersion = (versions: Array<string>) => {\n        const versionNumbers = versions.map(v => {\n            const parts: Array<string> = v.split(\".\");\n            return parseInt(parts[0]) * 10 + parseInt(parts[1]) * 1;\n        })\n\n        versionNumbers.sort((a, b) => b - a);\n\n        const maxVersion = versionNumbers[0];\n        return `${Math.floor(maxVersion / 10)}.${maxVersion % 10}`;\n    }\n\n    return findMaxVersion(versions.map(e => e.version!));\n\n}\nfunction checkMaxVersionOfAllItems() {\n    let isThereVersion: boolean = false;\n    items.value.forEach(item => {\n        if (item.type == \"module\") {\n            item.children?.forEach(child => {\n                if (child.version) {\n                    isThereVersion = true;\n                }\n\n            })\n        }\n        else {\n            if (item.version) {\n                isThereVersion = true;\n            }\n        }\n    })\n    return isThereVersion;\n}\nfunction handleModuleCountCheckboxEvent(value: boolean) {\n    items.value.filter(e => !e.disabled).forEach((item) => {\n        item.checked = value;\n        const allItemsCheckable = item.allChildChecked != undefined && item.children && item.children.length > 0 && !item.children.some(c => c.disabled);\n        if (allItemsCheckable) item.allChildChecked = value;\n        if (item.anyChildChecked != undefined) item.anyChildChecked = value;\n        if (item.children) item.children.filter(c => !c.disabled).forEach((child) => (child.checked = value));\n    });\n\n    validations.value = validate();\n    props.screenType == \"Deploy\" && syncPublishTargets();\n}\n\nfunction handleCollapse(item: ITableData, childIterate?: boolean, collapsed?: boolean) {\n    item.collapsed = collapsed !== undefined ? collapsed : !item.collapsed;\n    if (childIterate) {\n        item.children?.forEach(child => {\n            const childEl = document.getElementById((child as unknown as IModule).ID);\n            childEl!.style.display = item.collapsed ? \"none\" : \"block\";\n            handleCollapse(child, childIterate, item.collapsed);\n        })\n    }\n}\n\nfunction checkAllDependents(item: ITableData) {\n    if (item.disabled || item.checked) return;\n\n    item.checked = true\n    const parent = items.value.find((i) => i.id == item.parentId)\n    parent && handleParentCheckedStatus(parent);\n\n    const deps = dependencyMap.value?.get(item.id)?.dependedTo\n    if (!deps) return;\n\n    deps.forEach(dep => {\n        items.value.forEach(item => {\n            if (item.type == 'module' && !item.allChildChecked) {\n                const willCheckItem = item.children?.find(child => !child.checked && child.id == dep)\n                willCheckItem && checkAllDependents(willCheckItem)\n                handleParentCheckedStatus(item)\n                return;\n            }\n\n            if (!item.checked && item.id == dep) {\n                checkAllDependents(item)\n                item.parentId && handleParentCheckedStatus(items.value.find((i) => i.id == item.parentId)!)\n            }\n        })\n    });\n}\n\nfunction handleItemCheckEvent(item: ITableData) {\n    if (item.disabled || isModelDepended(item) || item.name == 'App Settings')\n        return;\n\n    if (item.type != \"module\") {\n        if (item.checked) {\n            item.checked = false;\n            const parent = items.value.find((i) => i.id == item.parentId);\n            parent && handleParentCheckedStatus(parent);\n        } else {\n            checkAllDependents(item)\n        }\n    } else {\n        if (item.children && item.children.filter(c => !c.disabled).length > 0) {\n            if (item.anyChildChecked) {\n                item.children.filter(c => !c.disabled).forEach(child => child.checked = false);\n                item.checked = false;\n                handleParentCheckedStatus(item);\n            } else {\n                item.children.forEach(checkAllDependents);\n                item.checked = true;\n            }\n        }\n        else {\n            item.checked = !item.checked;\n            item.allChildChecked = false;\n        }\n    }\n\n    validations.value = validate();\n    props.screenType == \"Deploy\" && syncPublishTargets();\n}\n\nfunction handleParentCheckedStatus(item: ITableData) {\n    item.disabled = item.children && (item.children.length == 0 || !item.children?.some(child => !child.disabled))\n    item.allChildChecked = item.children && item.children.length > 0 && !item.children.some((child) => !child.checked || child.disabled);\n    item.anyChildChecked = item.children?.some((child) => child.checked && !child.disabled);\n}\n\nfunction syncPublishTargets() {\n    publishTargets.value = []; disabledOptions.value = [];\n\n    const targets = viewModel.user?.selectedOrganization?.actions?.publish?.targets;\n    if (!targets)\n        return;\n\n    const isSelectAnyItem = items.value.find(e => e.anyChildChecked || e.checked);\n    if (!isSelectAnyItem) {\n        publishTargets.value = Object.entries(targets).map(e => cloudTargetMap(e[0])!);\n        const disabledOptionList = Array<IDisabledOptions>();\n        for (let i = 0; i < publishTargets.value.length; i++) {\n            disabledOptionList.push({ index: i, cause: \"You need to include items to publish.\" })\n        }\n        disabledOptions.value = disabledOptionList;\n        return;\n    }\n\n    const checkedPublishTargets = checkAndSetDisabledCauses(targets);\n    const sortedTargets = checkedPublishTargets.sort((e, f) => (!e.cause === !f.cause) ? 0 : e.cause ? 1 : -1);\n\n    const disabledOptionList = Array<IDisabledOptions>();\n    for (let i = 0; i < sortedTargets.length; i++) {\n        const cause = sortedTargets[i].cause;\n        if (cause) disabledOptionList.push({ index: i, cause })\n    }\n    disabledOptions.value = disabledOptionList;\n    publishTargets.value = sortedTargets.map(e => e.optionName);\n\n    selectedTarget.value = !sortedTargets[0].cause ? sortedTargets[0].optionName : \"\";\n}\n\nfunction checkAndSetDisabledCauses(targets: Record<keyof IOrganizationCloud, boolean>) {\n    const list = Array<{ optionName: string, cause?: string }>();\n\n    Object.keys(targets).forEach(e => {\n        const key = e as keyof IOrganizationCloud;\n        const value = targets[key];\n        const optionName = cloudTargetMap(key)!;\n        if (!value)\n            return list.push({ optionName, cause: \"You are not authorized to publish to this target.\" });\n\n\n        switch (key) {\n            case \"azure\":\n                const traverseSelectedItems = (status: boolean, items?: Array<ITableData>) => {\n                    if (!items || items.length == 0) { return status; }\n                    for (const item of items) {\n                        if (item.checked || item.anyChildChecked) {\n                            if (item.type == \"module\") {\n                                status = traverseSelectedItems(status, item.children);\n                            }\n                            if (item.type == \"entityDesigner\" || item.type == \"bpmn\" || item.type == \"process\") {\n                                status = false;\n                                break;\n                            }\n                        }\n\n                    }\n                    return status;\n                }\n\n                const status = traverseSelectedItems(true, items.value);\n                if (!status)\n                    return list.push({ optionName, cause: \"Entity and process models cannot be published to this target.\" });\n                break;\n            case \"plateauGCP\":\n                const modulesHasNotAnEDModel = items.value.filter(e => e.name != \"UI Settings\").find(e => e.type == \"module\" && e.anyChildChecked && e.children?.some(c => c.checked && (c.type == \"bpmn\" || c.type == \"process\")) && !e.children?.some(c => c.type == \"entityDesigner\" && c.checked))\n                if (modulesHasNotAnEDModel)\n                    return list.push({ optionName, cause: `This target not available. Selected module '${modulesHasNotAnEDModel.name}' has not any Data Model.` })\n                break;\n        }\n\n        list.push({ optionName });\n    })\n\n    return list;\n}\n\nfunction updateDependencyMap(newVersion: string, item: ITableData) {\n    const deps = dependencyMap.value?.get(item.id);\n    dependencyMap.value?.set(item.id, {\n        dependedBy: deps?.dependedBy || Array<string>(),\n        dependedTo: modelHistories.value?.get(item.id)?.find(e => e.version == newVersion)?.dependentModels?.map(e => e.modelId) || Array<string>()\n    })\n}\n\nfunction versionDialog(item: ITableData) {\n    const clickedNode = { id: item.id, state: { checked: item.checked }, text: item.name, type: item.type, version: item.version };\n    const hasAnyVersion = modelHistories.value?.has(item.id);\n    const options = {\n        clickedNode, cb: (version: string) => {\n            item.version = version;\n            updateDependencyMap(version, item);\n        }\n    } as any;\n\n    if (hasAnyVersion) {\n        options.versions = modelHistories.value?.get(item.id)\n    }\n    dialog.showDialog(\n        defineAsyncComponent(() => import(\"../../application/modelVersionDialog.vue\")),\n        { closable: true, title: \"Change Version\", width: \"1080px\", maxHeight: \"500px\", overflow: \"auto\" }, options\n    );\n}\n\n\nfunction moduleVersionDialog(item: ITableData) {\n    dialog.showDialog(\n        defineAsyncComponent(() => import(\"../../application/moduleVersionDialog.vue\")),\n        { closable: true, title: \"Change Version\", width: \"1080px\", maxHeight: \"500px\", overflow: \"auto\" },\n        {\n            module: { ID: item.id }, versions: importedModuleVersions.value?.get(item.id), cb: (moduleVersion: IModuleVersion) => {\n                item.version = moduleVersion.version;\n                item.children?.forEach(child => {\n                    const modulesModel = moduleVersion.relatedModelHistories.find(e => e.modelID == child.id)\n                    child.version = modulesModel?.version\n                    updateDependencyMap(modulesModel?.version!, child);\n                })\n            }\n        }\n    );\n}\n\nfunction close() {\n    emit(\"close\");\n}\n\nasync function save() {\n    executor.execute(\n        async () => {\n            const initAsGroup = async () => {\n                const groupID = CryptoHelper.CreateGuid();\n                await initHistory(groupID);\n                await packJob(groupID);\n                return groupID;\n            }\n\n            const isFlowBackend = viewModel.user?.selectedOrganization?.applications.flow;\n\n            switch (props.screenType) {\n                case \"Export\":\n                    if (isFlowBackend) {\n                        const deployItems = await createAzureDeployItems();\n                        await packJobsUseCase.createPackJobs([{\n                            appID: viewModel.studio.appId,\n                            exportType: \"qui\",\n                            selectionData: deployItems\n                        }]);\n                        break;\n                    }\n\n                    const groupID = await initAsGroup();\n                    await createExportJob(groupID);\n                    break;\n                case \"Deploy\":\n                    switch (cloudTargetMap(selectedTarget.value!, true) as keyof IOrganizationCloud) {\n                        case \"plateauGCP\":\n                            const groupID = await initAsGroup();\n                            await createDeployJob(groupID);\n                            break;\n                        case \"azure\":\n                            const deployItems = await createAzureDeployItems();\n                            await deployJobsUseCase.createAppDeployJob(deployItems, props.platformSelection);\n                            break;\n                    }\n            }\n            const userMobileUsage = viewModel.user?.mobileUsage;\n            const appMobileUsage = currentApp.value?.mobileUsage;\n            if (props.platformSelection.mobile && (!userMobileUsage?.isMobilePublished || !appMobileUsage?.isMobilePublished)) {\n                backofficeUseCase.updateUserMobileUsage({ ...userMobileUsage, isMobilePublished: true });\n                applicationUseCase.updateApplication({ ID: currentApp.value?.ID, mobileUsage: { ...appMobileUsage, isMobilePublished: true }, updateReason: \"backofficeUpdate\" })\n\n            }\n            emit(\"close\");\n        },\n        { loading: true });\n}\n\nasync function createAzureDeployItems() {\n    const deployItems: Array<IExportItem> = [];\n    const itemIdObj: Record<string, { item: IModel, path: string, prefix?: string }> = {};\n\n    viewModelManager.flatMapItems(viewModel.studio.items, (item, path, prefix) => {\n        if (item.objectType != \"model\") { return; }\n        itemIdObj[item.ID] = { item, path, prefix };\n        return item;\n    });\n\n    const traverseSelectedItems = (items?: Array<ITableData>) => {\n        if (!items || items.length == 0) { return; }\n        items.filter(e => e.checked || e.anyChildChecked).forEach(item => {\n            if (item.type == \"module\") {\n                traverseSelectedItems(item.children);\n                return;\n            }\n\n            const itemMap = itemIdObj[item.id];\n\n            const deployItem: IExportItem = {\n                id: item.id,\n                name: jobUtils.getFileFullname(itemMap.item),\n                path: itemMap.path,\n                type: jobUtils.getItemType(itemMap.item),\n                ver: item.version || \"latest\",\n                isRootPage: itemMap.item.isRootPage,\n                modulePrefix: itemMap.prefix,\n                ownerType: 'application',\n                ownerName: viewModel.studio.appName,\n                size: itemMap.item.size,\n                createDate: itemMap.item.createDate,\n            };\n            deployItems.push(deployItem)\n        });\n    };\n\n    traverseSelectedItems(items.value);\n\n    return deployItems;\n}\n\nasync function initHistory(groupID: string) {\n    return qcloudApi.initPublishHistory({\n        appID: viewModel.studio.appId,\n        ID: groupID,\n        isMultiStep: true,\n        type: props.screenType == \"Deploy\" ? \"publish\" : \"download\",\n        cloudProvider: props.screenType == \"Deploy\" ? cloudTargetMap(selectedTarget.value!, true) as keyof IOrganizationCloud : undefined,\n        platform: props.platformSelection\n    });\n}\n\nasync function packJob(groupID: string) {\n    let exportItemMap = new Map<string, Array<IExportItem>>();\n    const appName = viewModel.studio.appName;\n\n    const itemIdObj: Record<string, { item: IModel, path: string, prefix?: string }> = {};\n    viewModelManager.flatMapItems(viewModel.studio.items, (item, path, prefix) => {\n        if (item.objectType != \"model\") { return; }\n        itemIdObj[item.ID] = { item, path, prefix };\n        return item;\n    });\n\n    const createExportObject = (tableItem: ITableData) => {\n        const item = itemIdObj[tableItem.id].item;\n        const isAppItem = APP_ITEM_CONTENT_TYPES.some(type => type == item.modelType);\n        const extractFolderPath = () => {\n            let folderPath = \"\"\n            if (!item.path || !itemIdObj[item.path[0].toString()]) {\n                return folderPath;\n            }\n            item.path?.forEach(pathItem => folderPath += \"/\" + itemIdObj[pathItem.toString()].item.name)\n            return folderPath;\n        }\n\n        const path: string = item.path?.length && item.path.length > 0 ? extractFolderPath() : itemIdObj[tableItem.id].path\n        const retVal: IExportItem = {\n            id: tableItem.id,\n            ver: tableItem.version!,\n            type: jobUtils.getItemType(item),\n            path,\n            modulePrefix: itemIdObj[tableItem.id].prefix,\n            name: jobUtils.getFileFullname(item),\n            ownerType: isAppItem ? 'application' : (item.parent.objectType as \"module\" | \"application\"),\n            ownerName: isAppItem ? appName : item.parent.name,\n        };\n        return retVal;\n    }\n\n    const addToExportItem = (key: string, obj: IExportItem) => {\n        key = obj.ownerType == 'module' ? `mdl-${key}` : key; // for same named module and app\n        let items = exportItemMap.get(key);\n        if (items && items.length > 0) {\n            items.push(obj);\n            exportItemMap.set(key, items);\n        } else\n            exportItemMap.set(key, [obj]);\n    }\n\n    items.value.filter(e => e.checked ?? e.anyChildChecked).forEach((asset) => {\n        if (asset.type == 'module') {\n            asset.children!.filter(e => e.checked).forEach(child => {\n                const obj = createExportObject(child);\n                if (obj.type == \"entityDesigner\")\n                    obj.entityGenerationDomain = viewModel.user!.selectedOrganization!.actions?.entityGenerationDomain;\n\n                const useSeperateModule = obj.type == 'bpmn' || obj.type == 'entityDesigner' || obj.type == 'process';\n                addToExportItem(useSeperateModule ? asset.name : appName, obj);\n            });\n        } else {\n            const obj = createExportObject(asset);\n            if (asset.type == 'qjson') {\n                const isRootPage = viewModel.studio.items.find(i => i.objectType == \"model\" && i.modelType == \"qjson\" && (i.additionals as IQJsonAdditionals).isRootPage && i.ID == asset.id);\n                obj.isRootPage = isRootPage ? true : undefined;\n            }\n            addToExportItem(appName, obj);\n        }\n    })\n\n    let jobs = Array<ICreateExportJobParam>();\n    exportItemMap.forEach((v, k) => {\n        jobs.push({\n            appID: viewModel.studio.appId,\n            exportType: \"qui\", //(props.platformSelection.mobile && !props.platformSelection.web) ? \"model\":  \"qui\"\n            selectionData: v,\n            cause: props.screenType == 'Export' ? 'download' : \"publish\",\n            layer: 0,\n            groupID: groupID,\n            platformSelection: props.platformSelection\n        })\n    })\n\n    await packJobsUseCase.createPackJobs(jobs);\n}\n\nasync function createExportJob(groupID: string) {\n    await executor.executeUseCase<ICreateExportJob>(ICreateExportJob, {\n        appID: viewModel.studio.appId,\n        exportType: \"qui\",\n        selectionData: [],\n        layer: 1,\n        groupID: groupID\n    });\n}\n\nasync function createDeployJob(groupID: string) {\n    //1-(n) L1- deployJob(build)\n    let packages = await qcloudApi.getExportJobsByGroupId({ groupID })\n        .then(jobs => jobs.jobs.map(e => {\n            const jobData = e.jobData as IExportJobData;\n            return {\n                ownerName: jobData.items[0].ownerName,\n                jobID: e.jobID,\n                type: jobData.items[0].ownerType,\n                mainDir: getDeployableArchiveRoot(jobData)\n            }\n        }));\n\n    if (!packages || packages.length <= 0)\n        return;\n\n    let buildJobs = Array<ICreateDeployJobParam>();\n    packages.forEach(pack => {\n        buildJobs.push({\n            appID: viewModel.studio.appId,\n            type: \"build\",\n            package: {\n                type: pack.type as DeployType,\n                name: pack.ownerName!,\n                mainDir: pack.mainDir,\n                zip: `${pack.jobID}.zip`,\n            },\n            layer: 1,\n            groupID: groupID\n        })\n    })\n\n    await deployJobsUseCase.createBuildJobs(buildJobs);\n\n    //2-(1) L2- deployJob(deployment)\n    let jobParam: ICreateDeployJobParam = {\n        appID: viewModel.studio.appId,\n        type: \"deployment\",\n        deployConfig: {\n            process: {\n                configModelIDs: getProcessConfigList(),\n                enabled: items.value.some(e => e.anyChildChecked && e.children?.some(e => e.checked && e.type == \"bpmn\"))\n            }\n        },\n        layer: 2,\n        groupID: groupID,\n        platformSelection: props.platformSelection\n    }\n\n    await deployJobsUseCase.startDeploymentJob(jobParam);\n}\n\nfunction getProcessConfigList() {\n    let processConfigList = Array<IProcessConfigModelItem>();\n    items.value.forEach((asset) => {\n        if (asset.type == \"module\" && asset.anyChildChecked && asset.children) {\n            const usingService = asset.children.find(c => c.type == \"entityDesigner\");\n            if (!usingService)\n                return;\n\n            const serviceName = PlateauHelper.getServiceNameFromModel(usingService.name);\n            asset.children.forEach(child => {\n                if (child.checked && child.type == \"process\") {\n                    processConfigList.push({\n                        moduleName: serviceName,\n                        model: {\n                            id: child.id,\n                            name: child.name,\n                            version: child.version!\n                        }\n                    })\n                }\n            })\n        }\n    })\n    return processConfigList;\n}\n\nfunction getDeployableArchiveRoot(jobData: IExportJobData) {\n    if (jobData.items[0].ownerType == \"module\") {\n        let edModel = jobData.items.find(e => e.type == \"entityDesigner\");\n        if (!edModel)\n            throw new Error(\"!!! this module cannot deploy. Because its have not a service\");\n        return PlateauHelper.getServiceNameFromModel(edModel.name);\n    }\n    return PlateauHelper.getQuiPackageNameFromAppName(jobData.app.name);\n}\n\nfunction cloudTargetMap(name: string, pureVal: boolean = false) {\n    const map: Record<keyof IOrganizationCloud, string> = { azure: \"Public Cloud\", plateauGCP: \"Plateau Platform Playground\" };\n    if (pureVal) {\n        return Object.keys(map).find(e => {\n            if (map[e as keyof IOrganizationCloud] === name) {\n                return true;\n            }\n        })\n    } else {\n        let key = Object.keys(map).includes(name);\n        if (!key)\n            return;\n        return map[name as keyof IOrganizationCloud];\n    }\n}\n\nfunction onTargetSelect(value: string) {\n    selectedTarget.value = value\n}\n\nconst isModuleImported = (item: IModule) => {\n    const hasAVersion = item.relatedApplications.find(e => e.applicationID == viewModel.studio.appId)?.importedVersion;\n    if (item.mainOwner != viewModel.studio.appId && item.relatedApplications.at(0)?.applicationID != viewModel.studio.appId && hasAVersion)\n        return true;\n    return false;\n}\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", null, [\n      _createVNode(CheckboxComp, {\n        class: _normalizeClass(['modules-selected-checkbox', props.screenType == 'Deploy' ? 'deploy' : '']),\n        minus: _unref(mainCheckboxState) == false,\n        check: _unref(mainCheckboxState) == true,\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (handleModuleCountCheckboxEvent(_unref(mainCheckboxState) == undefined)))\n      }, null, 8 /* PROPS */, [\"class\", \"minus\", \"check\"]),\n      _createElementVNode(\"div\", {\n        class: _normalizeClass(['modules-selected-text', props.screenType == 'Deploy' ? 'deploy' : ''])\n      }, [\n        _createElementVNode(\"span\", _hoisted_2, _toDisplayString(_unref(allChildCheckedModulesCount) + _unref(anyChildCheckedModulesCount) +\n                    _unref(checkedRootLevelModelsCount)), 1 /* TEXT */),\n        _createTextVNode(\" of \"),\n        _createElementVNode(\"span\", _hoisted_3, _toDisplayString(_unref(totalRootLevelCount)), 1 /* TEXT */),\n        _createTextVNode(\" items selected \")\n      ], 2 /* CLASS */)\n    ]),\n    _createElementVNode(\"div\", {\n      class: _normalizeClass(['modules-datatable', props.screenType == 'Deploy' ? 'deploy' : '']),\n      id: \"module-container-div\"\n    }, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(items.value, (item) => {\n        return (_openBlock(), _createElementBlock(\"div\", {\n          key: item.id\n        }, [\n          (item?.type == 'module')\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n                _createElementVNode(\"div\", _hoisted_5, [\n                  (!item.imported)\n                    ? (_openBlock(), _createElementBlock(\"i\", {\n                        key: 0,\n                        class: _normalizeClass('mdi mdi-menu' + (item.collapsed ? '-right' : '-down') + ' chevron' + (!item.children || item.children.length == 0 ? ' disabled' : '')),\n                        onClick: ($event: any) => (handleCollapse(item))\n                      }, null, 10 /* CLASS, PROPS */, _hoisted_6))\n                    : _createCommentVNode(\"v-if\", true),\n                  _createVNode(CheckboxComp, {\n                    class: \"module-checkbox\",\n                    check: item.allChildChecked,\n                    minus: !item.allChildChecked && item.anyChildChecked,\n                    disabled: item.disabled,\n                    onClick: ($event: any) => (handleItemCheckEvent(item))\n                  }, null, 8 /* PROPS */, [\"check\", \"minus\", \"disabled\", \"onClick\"]),\n                  (item.imported)\n                    ? (_openBlock(), _createElementBlock(\"i\", _hoisted_7))\n                    : _createCommentVNode(\"v-if\", true),\n                  _createElementVNode(\"span\", {\n                    class: _normalizeClass(['module-name', item.imported ? ` imported` : (item.disabled ? ' disabled' : '')])\n                  }, _toDisplayString(item.name), 3 /* TEXT, CLASS */),\n                  (item.imported)\n                    ? (_openBlock(), _createElementBlock(\"div\", {\n                        key: 2,\n                        class: \"version-text\",\n                        onClick: ($event: any) => (moduleVersionDialog(item))\n                      }, [\n                        _createTextVNode(_toDisplayString(item.version ? item.version : 'No version') + \" \", 1 /* TEXT */),\n                        _hoisted_9\n                      ], 8 /* PROPS */, _hoisted_8))\n                    : _createCommentVNode(\"v-if\", true)\n                ]),\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item?.children, (child) => {\n                  return _withDirectives((_openBlock(), _createElementBlock(\"div\", {\n                    class: \"row-container\",\n                    key: child.id\n                  }, [\n                    _createVNode(CheckboxComp, {\n                      class: \"model-checkbox\",\n                      check: child.checked,\n                      disabled: child.disabled,\n                      onClick: ($event: any) => (handleItemCheckEvent(child))\n                    }, null, 8 /* PROPS */, [\"check\", \"disabled\", \"onClick\"]),\n                    (child.type != 'module')\n                      ? (_openBlock(), _createElementBlock(\"i\", {\n                          key: 0,\n                          class: _normalizeClass('model-icon ' + _unref(ModelContants).getModelVisualInfo(child.type, undefined).icon),\n                          style: _normalizeStyle({ color: _unref(ModelContants).getModelVisualInfo(child.type, undefined).color })\n                        }, null, 6 /* CLASS, STYLE */))\n                      : _createCommentVNode(\"v-if\", true),\n                    _createElementVNode(\"span\", {\n                      class: _normalizeClass(['model-name', child.disabled ? ' disabled' : ''])\n                    }, _toDisplayString(child.name), 3 /* TEXT, CLASS */),\n                    (!child.usageType || child.usageType == 'appSettings')\n                      ? (_openBlock(), _createElementBlock(\"div\", {\n                          key: 1,\n                          class: _normalizeClass(['version-text', child.disabled ? 'disabled' : '']),\n                          onClick: ($event: any) => (versionDialog(child))\n                        }, [\n                          _createTextVNode(_toDisplayString(child.version ? child.version : 'No version') + \" \", 1 /* TEXT */),\n                          (!child.usageType || child.usageType == 'appSettings')\n                            ? (_openBlock(), _createElementBlock(\"i\", {\n                                key: 0,\n                                class: _normalizeClass(['mdi mdi-pencil-outline version-icon', child.disabled ? 'disabled' : ''])\n                              }, null, 2 /* CLASS */))\n                            : _createCommentVNode(\"v-if\", true)\n                        ], 10 /* CLASS, PROPS */, _hoisted_10))\n                      : _createCommentVNode(\"v-if\", true),\n                    (child.disabled && !child.version)\n                      ? (_openBlock(), _createElementBlock(\"span\", _hoisted_11, [\n                          _createTextVNode(\"No version available for publishing. \"),\n                          _hoisted_12,\n                          _createTextVNode(\" on this item and choose the \"),\n                          _hoisted_13,\n                          _createTextVNode(\" option. \")\n                        ]))\n                      : _createCommentVNode(\"v-if\", true)\n                  ])), [\n                    [_vShow, !item.imported && !item.collapsed]\n                  ])\n                }), 128 /* KEYED_FRAGMENT */))\n              ]))\n            : _createCommentVNode(\"v-if\", true)\n        ]))\n      }), 128 /* KEYED_FRAGMENT */))\n    ], 2 /* CLASS */),\n    (props.screenType == 'Deploy')\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [\n          _hoisted_15,\n          _createVNode(CustomSelect, {\n            options: publishTargets.value,\n            onInput: onTargetSelect,\n            selectedOption: selectedTarget.value,\n            default: selectedTarget.value,\n            disabledOptions: disabledOptions.value,\n            selectedClass: \"selected-environment\",\n            placeholder: \"Select the publish environment of your application\",\n            class: \"select-environment\"\n          }, null, 8 /* PROPS */, [\"options\", \"selectedOption\", \"default\", \"disabledOptions\"])\n        ]))\n      : _createCommentVNode(\"v-if\", true),\n    _createCommentVNode(\"         <div v-if=\\\"props.screenType == 'Deploy' && !props.platformSelection.web && props.platformSelection.mobile\\\"\\n            class=\\\"mobile-publish-text\\\">\\n            <i class=\\\"mdi mdi-information\\\"></i>\\n            <span>Models and static files of your mobile application will be served from Public Cloud.</span>\\n        </div> \"),\n    _createElementVNode(\"div\", {\n      class: _normalizeClass(['footer', props.screenType == 'Deploy' ? 'deploy' : 'export'])\n    }, [\n      _createElementVNode(\"div\", {\n        class: _normalizeClass(['cancel-button', props.screenType == 'Deploy' ? 'deploy' : '']),\n        onClick: close\n      }, \"Cancel\", 2 /* CLASS */),\n      (props.screenType == 'Export')\n        ? (_openBlock(), _createElementBlock(\"div\", {\n            key: 0,\n            class: _normalizeClass((_unref(saveButtonDisable) ? ' button-disable' : '')),\n            onClick: _cache[1] || (_cache[1] = ($event: any) => (!_unref(saveButtonDisable) && save()))\n          }, [\n            _hoisted_16,\n            (!_unref(isThereVersion))\n              ? (_openBlock(), _createElementBlock(\"span\", _hoisted_17, \"There are no items ready to publish. At least one of your items must be ready to publish.\"))\n              : (!_unref(isStartScreenOK))\n                ? (_openBlock(), _createElementBlock(\"span\", _hoisted_18, \"You need to include your start screen.\"))\n                : (!_unref(isAllDependenciesOK))\n                  ? (_openBlock(), _createElementBlock(\"span\", _hoisted_19, _toDisplayString(dependencyErrorStr.value), 1 /* TEXT */))\n                  : _createCommentVNode(\"v-if\", true)\n          ], 2 /* CLASS */))\n        : _createCommentVNode(\"v-if\", true),\n      (props.screenType == 'Deploy')\n        ? (_openBlock(), _createElementBlock(\"div\", {\n            key: 1,\n            class: _normalizeClass([(_unref(saveButtonDisable) ? ' button-disable' : '')]),\n            onClick: _cache[2] || (_cache[2] = ($event: any) => (!_unref(saveButtonDisable) && save()))\n          }, [\n            _hoisted_20,\n            (!_unref(isStartScreenOK))\n              ? (_openBlock(), _createElementBlock(\"span\", _hoisted_21, \"You need to include your start screen.\"))\n              : (!selectedTarget.value)\n                ? (_openBlock(), _createElementBlock(\"span\", _hoisted_22, \"You need to select a publish environment.\"))\n                : (!_unref(isThereVersion))\n                  ? (_openBlock(), _createElementBlock(\"span\", _hoisted_23, \"There are no items ready to publish. At least one of your items must be ready to publish.\"))\n                  : (!_unref(isAllDependenciesOK))\n                    ? (_openBlock(), _createElementBlock(\"span\", _hoisted_24, _toDisplayString(dependencyErrorStr.value), 1 /* TEXT */))\n                    : _createCommentVNode(\"v-if\", true)\n          ], 2 /* CLASS */))\n        : _createCommentVNode(\"v-if\", true)\n    ], 2 /* CLASS */)\n  ]))\n}\n}\n\n})","\n      import API from \"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./publishDialog.vue?vue&type=style&index=0&id=15858c1c&scoped=true&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./publishDialog.vue?vue&type=style&index=0&id=15858c1c&scoped=true&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./publishDialog.vue?vue&type=style&index=1&id=15858c1c&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./publishDialog.vue?vue&type=style&index=1&id=15858c1c&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","import script from \"./publishDialog.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./publishDialog.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./publishDialog.vue?vue&type=style&index=0&id=15858c1c&scoped=true&lang=css\"\nimport \"./publishDialog.vue?vue&type=style&index=1&id=15858c1c&lang=css\"\n\nimport exportComponent from \"/home/runner/work/studio/studio/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-15858c1c\"]])\n\nexport default __exports__"],"names":["___CSS_LOADER_EXPORT___","push","module","id","GetRandomWord","base","length","Math","random","toString","substring","CreateGuid","map","join","CryptoHelper","guidCounter","purify","str","replace","toLowerCase","getPlateauEnvironmentName","envPrefix","appName","Error","endsWith","PlateauHelper","getQuiPackageNameFromAppName","getApplicationUINameFromQuiPkg","quiPackageName","getApplicationHostNamePrefix","getServiceNameFromModel","modelName","typeSafety","EditorConsts","quick","modelKeys","self","flow","design","runtime","flowEntity","single","cssJsTsYaml","color","icon","jpegJpgPngSvgGif","modelVisuals","qjson","additionals","qjsonType","css","js","ts","yaml","entityDesigner","bpmn","process","namedComponent","step","jpeg","jpg","png","svg","gif","woff","woff2","ttf","lottie","appSettings","placeholder","json","ModelContants","getModelVisualInfo","modelType","modelAdditionals","retVal","DEPENDED_IMAGE_KEYS","APP_ITEM_CONTENT_TYPES","UISettingsType","alert","pipeline","loading","settings","localProxy","contSvc","compList","globalLocalization","assetList","IApplicationUseCase","Symbol","for","IBackofficeUseCase","ICreateExportJob","IDeployJobs","IJobUtils","IListMultiModelVersions","IListMultiModuleVersions","IPackJobs","_withScopeId","n","_hoisted_1","_hoisted_2","key","class","_hoisted_5","_","style","_hoisted_6","_hoisted_7","_hoisted_8","__name","props","handleItemCheckEvent","type","Function","startScreen","versionDialog","handleCollapse","item","setup","__props","chevronClass","checked","calculateClass","value","collapsed","check","iconLeft","parentId","level","_ctx","_cache","children","onClick","cursor","left","top","fontSize","position","disabled","name","ID","usageType","$event","version","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","screenType","platformSelection","emits","emit","viewModel","resolve","IViewModel","viewModelManager","IViewModelManager","dialog","IDialog","executor","IUseCaseExecutor","deployJobsUseCase","qcloudApi","IQCloudApi","packJobsUseCase","jobUtils","backofficeUseCase","applicationUseCase","items","validations","selectedTarget","disabledOptions","publishTargets","modelHistories","importedModuleVersions","dependencyMap","dependencyErrorStr","currentApp","apps","find","app","studio","appId","async","Promise","all","executeUseCase","then","res","Map","depMap","flatMapItems","path","objectType","parent","isModuleImported","moduleVersions","get","moduleVersion","relatedApplications","applicationID","importedVersion","importedModuleModel","filter","e","flatMap","relatedModelHistories","modelID","maxVersion","getItemMaxVersion","set","dependentModels","modelId","Array","historyItem","forEach","dependedTo","dependedBy","dependencies","depModelId","some","depId","initDependencies","isImportedModule","undefined","tableData","imported","child","childModel","isUnmodifiable","importedModulesModel","handleParentCheckedStatus","createAndAppendItem","newTableItem","isPlaceHolder","newItem","newChild","createApp","mountEl","document","createElement","mount","parentEl","getElementById","appendChild","iterate","uiSettingsID","uiSettingsModels","uiSettings","uiAssetID","appAssetList","uiAssetList","anyChildChecked","allChildChecked","asset","unshift","handleItems","syncPublishTargets","validate","allChildCheckedModulesCount","anyChildCheckedModulesCount","checkedRootLevelModelsCount","totalRootLevelCount","saveButtonDisable","web","validateStartScreen","validateDependencies","mainCheckboxState","isThereVersion","checkMaxVersionOfAllItems","isAllDependenciesOK","isStartScreenOK","result","modules","appLayerItems","isRootPage","f","findIndex","checkMap","mustBeCheckedMap","deps","dependedId","has","vals","firstItemID","keys","firstItemDeps","firstItemDepStr","findItem","size","versions","versionNumbers","v","parts","split","parseInt","sort","a","b","floor","findMaxVersion","childIterate","display","checkAllDependents","i","dep","willCheckItem","isModelDepended","c","targets","user","selectedOrganization","actions","publish","Object","entries","cloudTargetMap","disabledOptionList","index","cause","checkedPublishTargets","list","optionName","traverseSelectedItems","status","modulesHasNotAnEDModel","checkAndSetDisabledCauses","sortedTargets","updateDependencyMap","newVersion","clickedNode","state","text","cb","showDialog","closable","title","width","maxHeight","overflow","close","save","execute","initAsGroup","groupID","initPublishHistory","appID","isMultiStep","cloudProvider","platform","initHistory","exportItemMap","itemIdObj","prefix","createExportObject","tableItem","isAppItem","folderPath","pathItem","extractFolderPath","ver","getItemType","modulePrefix","getFileFullname","ownerType","ownerName","addToExportItem","obj","entityGenerationDomain","useSeperateModule","jobs","k","exportType","selectionData","layer","createPackJobs","packJob","isFlowBackend","applications","deployItems","createAzureDeployItems","createExportJob","packages","getExportJobsByGroupId","jobData","jobID","mainDir","getDeployableArchiveRoot","buildJobs","pack","package","zip","createBuildJobs","jobParam","deployConfig","configModelIDs","getProcessConfigList","enabled","startDeploymentJob","createDeployJob","createAppDeployJob","userMobileUsage","mobileUsage","appMobileUsage","mobile","isMobilePublished","updateUserMobileUsage","updateApplication","updateReason","itemMap","deployItem","createDate","processConfigList","usingService","serviceName","moduleName","model","edModel","pureVal","azure","plateauGCP","includes","onTargetSelect","hasAVersion","mainOwner","at","minus","modulesModel","onInput","selectedOption","default","selectedClass"],"sourceRoot":""}