"use strict";(this.webpackChunkqcloud_shell=this.webpackChunkqcloud_shell||[]).push([[4336],{5312:(e,n,t)=>{t.d(n,{Z:()=>c});var i=t(34663),l=t.n(i),o=t(7638),a=t.n(o),s=t(79240),r=a()(l());r.i(s.Z),r.push([e.id,'\n.fileInputDiv[data-v-5e9e5939] {\n    margin-left: 20px;\n    margin-top: 20px;\n    margin-right: 20px;\n}\n.selectedItems[data-v-5e9e5939] {\n    margin-left: 10px;\n    margin-top: 10px;\n    max-height: 199px;\n    overflow: auto;\n}\n\n/* .selectedItems::-webkit-scrollbar-thumb {\n    background-color: #d0d1e9;\n    border-radius: 16px;\n}\n\n.selectedItems::-webkit-scrollbar {\n    width: 12px;\n}\n\n.selectedItems::-webkit-scrollbar-track {\n    background: transparent;\n} */\n.importBtn[data-v-5e9e5939] {\n    border-radius: 4px;\n    border: none;\n    opacity: 1;\n    color: white;\n    width: 97px;\n    height: 40px;\n    font-style: normal;\n    font-size: 16px;\n    font-weight: 500;\n    letter-spacing: 0px;\n    font-family: "ROBOTO";\n}\n.importBtnDiv[data-v-5e9e5939] {\n    text-align: end;\n    margin: 30px 20px 30px 0px;\n}\n.removeIcon[data-v-5e9e5939] {\n    cursor: pointer;\n    padding-right: 10px;\n    font-style: normal;\n    font-size: 18px;\n    letter-spacing: 0px;\n    opacity: 1;\n}\n.removeIconReposition[data-v-5e9e5939] {\n    cursor: pointer;\n    padding-right: 10px;\n    font-style: normal;\n    font-size: 18px;\n    margin-left: 23px;\n}\n.loading[data-v-5e9e5939] {\n    cursor: pointer;\n    color: #212121;\n    padding-right: 10px;\n    font-style: normal;\n    font-size: 18px;\n    letter-spacing: 0px;\n    opacity: 1;\n}\n[data-v-5e9e5939]::-webkit-file-upload-button {\n    background: #2f3160;\n    color: white;\n    border-radius: 4px;\n    width: 120px;\n    height: 48px;\n}\n.fileUploadDiv[data-v-5e9e5939] {\n    cursor: pointer;\n}\n.filesValue[data-v-5e9e5939] {\n    margin-top: 10px;\n    background-color: #f5f5f5;\n    display: flex;\n    border-radius: 4px;\n    font-style: normal;\n    font-weight: 400;\n    font-size: 16px;\n    letter-spacing: 0px;\n    opacity: 1;\n    font-family: "ROBOTO";\n    margin-left: 10px;\n    width: 561px;\n    text-align: start;\n}\n.uploadFilesText[data-v-5e9e5939] {\n    color: #616161;\n    font-style: normal;\n    font-weight: 400;\n    font-size: 18px;\n    letter-spacing: 0px;\n    opacity: 1;\n    margin-left: 20px;\n    margin-top: 10px;\n\n    font-family: "ROBOTO";\n}\n.fileTypeQjson[data-v-5e9e5939] {\n    font-size: 18px;\n    padding-left: 5px;\n}\n.fileTypeImage[data-v-5e9e5939] {\n    font-size: 18px;\n    padding-left: 5px;\n}\n.fileTypeEntity[data-v-5e9e5939] {\n    font-size: 18px;\n    padding-left: 5px;\n}\n.fileTypeBpmn[data-v-5e9e5939] {\n    font-size: 18px;\n    padding-left: 5px;\n}\n.fileTypeProcess[data-v-5e9e5939] {\n    font-size: 18px;\n    padding-left: 5px;\n}\n.unacceptableFileType[data-v-5e9e5939] {\n    color: red;\n    font-size: 18px;\n    padding-left: 5px;\n}\n.uploadArea[data-v-5e9e5939] {\n    text-align: center;\n    padding-top: 25px;\n    border: 1px dashed #a1a1a1;\n    height: 100px;\n}\n.cancelBtn[data-v-5e9e5939] {\n    background: none;\n    border: none;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 16px;\n    letter-spacing: 0px;\n    opacity: 1;\n    margin-left: 50px;\n    font-family: "ROBOTO";\n    margin-right: 10px;\n    color: #757575;\n    letter-spacing: 0.02px;\n}\n.loader[data-v-5e9e5939] {\n    border: 3px solid #f3f3f3;\n    border-radius: 70%;\n    border-top: 3px solid #3498db;\n    width: 12px;\n    height: 12px;\n    -webkit-animation: spin-5e9e5939 1s linear infinite;\n    animation: spin-5e9e5939 1s linear infinite;\n}\n.ml-6[data-v-5e9e5939] {\n    margin-left: 6px;\n}\n\n/* Safari */\n@-webkit-keyframes spin-5e9e5939 {\n0% {\n        -webkit-transform: rotate(0deg);\n}\n100% {\n        -webkit-transform: rotate(360deg);\n}\n}\n@keyframes spin-5e9e5939 {\n0% {\n        transform: rotate(0deg);\n}\n100% {\n        transform: rotate(360deg);\n}\n}\n',"",{version:3,sources:["webpack://./src/presentation/vue3/components/dialogs/importModelDialog.vue"],names:[],mappings:";AA4cA;IACI,iBAAiB;IACjB,gBAAgB;IAChB,kBAAkB;AACtB;AAEA;IACI,iBAAiB;IACjB,gBAAgB;IAChB,iBAAiB;IACjB,cAAc;AAClB;;AAEA;;;;;;;;;;;GAWG;AAEH;IACI,kBAAkB;IAClB,YAAY;IACZ,UAAU;IACV,YAAY;IACZ,WAAW;IACX,YAAY;IACZ,kBAAkB;IAClB,eAAe;IACf,gBAAgB;IAChB,mBAAmB;IACnB,qBAAqB;AACzB;AAEA;IACI,eAAe;IACf,0BAA0B;AAE9B;AAEA;IACI,eAAe;IACf,mBAAmB;IACnB,kBAAkB;IAClB,eAAe;IACf,mBAAmB;IACnB,UAAU;AACd;AAEA;IACI,eAAe;IACf,mBAAmB;IACnB,kBAAkB;IAClB,eAAe;IACf,iBAAiB;AACrB;AAEA;IACI,eAAe;IACf,cAAc;IACd,mBAAmB;IACnB,kBAAkB;IAClB,eAAe;IACf,mBAAmB;IACnB,UAAU;AACd;AAEA;IACI,mBAAmB;IACnB,YAAY;IACZ,kBAAkB;IAClB,YAAY;IACZ,YAAY;AAChB;AAEA;IACI,eAAe;AACnB;AAEA;IACI,gBAAgB;IAChB,yBAAyB;IACzB,aAAa;IACb,kBAAkB;IAClB,kBAAkB;IAClB,gBAAgB;IAChB,eAAe;IACf,mBAAmB;IACnB,UAAU;IACV,qBAAqB;IACrB,iBAAiB;IACjB,YAAY;IACZ,iBAAiB;AACrB;AAEA;IACI,cAAc;IACd,kBAAkB;IAClB,gBAAgB;IAChB,eAAe;IACf,mBAAmB;IACnB,UAAU;IACV,iBAAiB;IACjB,gBAAgB;;IAEhB,qBAAqB;AACzB;AAEA;IACI,eAAe;IACf,iBAAiB;AACrB;AAEA;IACI,eAAe;IACf,iBAAiB;AACrB;AAEA;IACI,eAAe;IACf,iBAAiB;AACrB;AAEA;IACI,eAAe;IACf,iBAAiB;AACrB;AAEA;IACI,eAAe;IACf,iBAAiB;AACrB;AAEA;IACI,UAAU;IACV,eAAe;IACf,iBAAiB;AACrB;AAEA;IACI,kBAAkB;IAClB,iBAAiB;IACjB,0BAA0B;IAC1B,aAAa;AACjB;AAEA;IACI,gBAAgB;IAChB,YAAY;IACZ,kBAAkB;IAClB,gBAAgB;IAChB,eAAe;IACf,mBAAmB;IACnB,UAAU;IACV,iBAAiB;IACjB,qBAAqB;IACrB,kBAAkB;IAClB,cAAc;IACd,sBAAsB;AAC1B;AAEA;IACI,yBAAyB;IACzB,kBAAkB;IAClB,6BAA6B;IAC7B,WAAW;IACX,YAAY;IACZ,mDAA0C;IAC1C,2CAAkC;AACtC;AAEA;IACI,gBAAgB;AACpB;;AAEA,WAAW;AACX;AACI;QACI,+BAA+B;AACnC;AAEA;QACI,iCAAiC;AACrC;AACJ;AAEA;AACI;QACI,uBAAuB;AAC3B;AAEA;QACI,yBAAyB;AAC7B;AACJ",sourcesContent:['<script setup lang="ts">\nimport { IUseCaseExecutor } from "../../../../domain/useCase/IUseCaseExecutor";\nimport { container } from "../../../../domain/core/diContainer";\nimport { ICreateModel, ICreateModelParam } from "../../../../domain/useCase/ICreateModel";\nimport { IApplication, IFolder, IModule } from "../../../../domain/model/models";\nimport { INewItemProps } from "../../../../domain/presentation/dialogs/INewItemProps";\nimport { ref } from "@vue/runtime-dom";\nimport { computed } from "@vue/reactivity";\nimport { TooltipImpl } from "../../impls/tooltipImpl";\nimport { IFormValidator, IFormValidatorOptions, IFormValidatorResponseItem } from "../../../../domain/infrastructure/IFormValidator";\nimport { IViewModel } from "../../../../domain/viewModel/IViewModel";\nimport { IQuickEditor } from "../../../../domain/objects/editors/IQuickEditor";\nimport { BinaryHelper } from "@stechquick/algae/lib/helpers/binaryHelper";\n\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\nconst tooltip = container.resolve<TooltipImpl>(TooltipImpl);\nconst formValidator = container.resolve<IFormValidator>(IFormValidator);\nconst viewModel = container.resolve<IViewModel>(IViewModel);\nconst nameValidations: IFormValidatorOptions = { minAndMaxLength: { min: 3, max: 40 }, availableCharacters: true, nonSpaceCharacter: true };\n\nconst applications = ref(viewModel.user!.selectedOrganization!.applications);\n\ninterface IImportFile {\n    name: string;\n    content: string;\n    isDuplicate: boolean;\n    isAcceptable: boolean;\n    nameValidationExceptions: Array<IFormValidatorResponseItem>;\n    type: "entity" | "qjson" | "process" | "bpmn" | "flow" | "png" | "jpg" | "jpeg" | "svg" | "gif" | "json" | "css";\n}\n\ninterface INewItemPropsInline extends INewItemProps {\n    parent: IModule | IFolder | IApplication;\n}\n\nconst props = defineProps<INewItemPropsInline>();\n\nconst fileItems = ref<Array<IImportFile>>([]);\n\nconst loadingIcon = ref(false);\nconst emit = defineEmits(["close"]);\nconst entityNumber = ref(0);\nlet acceptableFileTypes: Array<IImportFile["type"]> =\n    props.parent.objectType == "application"\n        ? ["qjson" ]\n        : props.parent.objectType == "module" || props.parent.objectType == "folder"\n        ? Object.entries(applications.value)\n              .filter((application) => application[1])\n              .map((application) => (application[0] == "quick" ? "qjson" : (application[0] as IImportFile["type"])))\n        : [];\nacceptableFileTypes = acceptableFileTypes.concat(["gif", "png", "jpeg", "jpg", "svg", "json"])\n\nconst binaryFileTypes: Array<string> = ["gif", "png", "jpeg", "jpg", "svg"]; // dictionary yap.\n\nif(viewModel.user!.selectedOrganization!.features?.multipleCss) {\n    acceptableFileTypes = acceptableFileTypes.concat(["css"]);\n}\nconsole.log(acceptableFileTypes)\nconst hasEntity = ref(props.parent?.children?.some((i) => i.objectType == "model" && i.modelType == "entityDesigner") == true);\n\nfunction checkDuplicate(name: string, type: IImportFile["type"]) {\n    let extensionType = (type == "json") ? "lottie" : type;\n    const isDuplicate = props.parent?.children?.some(\n        (i) => i.name == name.split(".").slice(0, -1).join(".") && i.objectType == "model" && i.modelType == extensionType\n    ) || props.parent?.children?.some(\n        (i) => i.name.split(".").slice(0, -1).join(".") == name.split(".").slice(0, -1).join(".") && i.objectType == "model" && i.modelType == extensionType\n    ) ;\n    return isDuplicate == true;\n}\n\nfunction getInputAccept() {\n    let types = "";\n    if(props.parent.objectType == \'application\') {\n        types = \'.qjson\'\n    } else {\n        types = `${Object.entries(applications)\n                          .filter((application) => application[1] == true)\n                          .reduce((str, application) => str.concat(\'.\' + (application[0] == \'quick\' ? \'qjson\' : application[0]) + \',\'), \'\')\n                          .slice(0, -1)}`;\n    }\n\n    if(viewModel.user!.selectedOrganization!.features?.multipleCss) {\n        types += ", .css";\n    }\n\n    return types;\n}\n\nfunction checkExtension(file: string) {\n    const extension = file.substring(file.lastIndexOf(".") + 1, file.length);\n    return extension as IImportFile["type"];\n}\n\nasync function selectedFiles() {\n    var item = document.getElementById("fileInput") as HTMLInputElement | null;\n    for (var i = 0; i < item?.files?.length!; i++) {\n        const file = item?.files?.item(i);\n        const extensionOfFile = checkExtension(file!.name);\n        const fileNameWithoutExtension = file!.name.substring(0, file!.name.lastIndexOf("."));\n        \n        const isExist = fileItems.value.some((i) => i.name == file?.name) || fileItems.value.some((i) => i.name.substring(0, file!.name.lastIndexOf(".")) == fileNameWithoutExtension) ;\n       \n        if (isExist) { continue; }\n        \n            const isDuplicate = checkDuplicate(file!.name, extensionOfFile) || checkDuplicate(fileNameWithoutExtension, extensionOfFile);\n\n            const nameValidationExceptions: Array<IFormValidatorResponseItem> = formValidator\n                .validate(fileNameWithoutExtension, nameValidations)\n                .filter((item) => !item.isValid);\n            const isAcceptable = acceptableFileTypes.includes(extensionOfFile);\n\n        const isBinaryFile = BinaryHelper.checkBinaryFile(extensionOfFile);\n\n        if(isBinaryFile){\n            const binaryFileContent = await getBinaryFileContent(file!);\n            fileItems.value.push({\n                name: file!.name,\n                content: binaryFileContent,\n                nameValidationExceptions,\n                isDuplicate,\n                isAcceptable,\n                type: extensionOfFile,\n            });\n        }\n        else{\n            const text = await file!.text();\n            fileItems.value.push({\n                name: file!.name,\n                content: text,\n                nameValidationExceptions,\n                isDuplicate,\n                isAcceptable,\n                type: extensionOfFile,\n            });\n        }\n\n            if (extensionOfFile == "entity") {\n                entityNumber.value = entityNumber.value + 1;\n            }\n        }\n    tooltip.startTooltip();\n}\n\nasync function getBinaryFileContent(file: File): Promise<string> {\n    const fileReader = new FileReader();\n\n    return new Promise((resolve, reject) => {\n        fileReader.onload = () => {\n            resolve(fileReader.result as string);\n        };\n        fileReader.readAsDataURL(file);\n    });\n}\n\nasync function importSelectedModels() {\n    emit("close");\n    if (isButtonDisabled.value) return;\n    loadingIcon.value = true;\n\n    let images: { path: string; name: string; }[] = [];\n    fileItems.value.forEach(async (item) => {\n        if (item.isDuplicate || !item.isAcceptable || item.nameValidationExceptions.length != 0) {\n            return;\n        }\n\n        const createObject: ICreateModelParam = {\n            name: item.name.split(".").slice(0, -1).join("."),\n            parentObjectId: props.parent.ID,\n            modelBody: [{ key: item.type, model: item!.content }],\n            modelType: "qjson",\n            modelAdditionals: { qjsonType: "qjson" },\n        };\n\n        switch (item.type) {\n            case "qjson":\n                createObject.modelType = "qjson";\n                createObject.modelAdditionals = { qjsonType: "qjson" };\n                break;\n            case "entity":\n                if (isEntityRuleBlock(item)) {\n                    return;\n                }\n                createObject.modelType = "entityDesigner";\n                createObject.modelAdditionals = {};\n                break;\n            case "bpmn":\n                createObject.modelType = "bpmn";\n                createObject.modelAdditionals = { isAutoGenerated: false, isModifiedByUser: true };\n                break;\n\n            case "process":\n                createObject.modelType = "process";\n                createObject.modelAdditionals = {};\n                break;\n            case "png":\n                createObject.modelType = "png";\n                createObject.extension = "png";\n                createObject.modelAdditionals = {};\n                break;\n            case "jpg": \n                createObject.modelType = "jpg";\n                createObject.extension = "jpg";\n                createObject.modelAdditionals = {};\n                break;\n            case "jpeg":\n                createObject.modelType = "jpeg";\n                createObject.extension = "jpeg";\n                createObject.modelAdditionals = {};\n                break;\n            case "svg":\n                createObject.modelType = "svg";\n                createObject.extension = "svg";\n                createObject.modelAdditionals = {};\n                break;\n            case "gif":\n                createObject.modelType = "gif";\n                createObject.extension = "gif";\n                createObject.modelAdditionals = {};\n                break;\n            case "json":\n                createObject.modelType = "lottie";\n                createObject.extension = "json";\n                break;\n            case "css":\n                createObject.modelType = "css";\n                createObject.key = "style";\n                createObject.modelAdditionals = {};\n                break;\n        }\n\n        try {\n            let model = await executor.executeUseCase<ICreateModel>(ICreateModel, createObject);\n            images.push({path: formatPath(model.ID), name: model.name});\n\n            if(model?.modelType === "css" && item!.content) {\n                const targetEditor = container.resolve<IQuickEditor>(IQuickEditor);\n                targetEditor.replaceStyle!("addStyle", model.ID, item!.content);\n            }\n        }\n        catch{\n            console.log("error")\n        }\n    \n        loadingIcon.value = false;\n    });\n       \n\n    // if(images.length != 0) {\n    //     const targetEditor = container.resolve<IQuickEditor>(IQuickEditor);\n    //     await targetEditor.setImages(images);\n    // }\n      \n}\nfunction formatPath(id:string){\n    return `<<img:${id}>>`;\n}\nfunction computedIcon(fileType: string, isAcceptable?: boolean) {\n    let color = "red"\n    switch (fileType) {\n        case "qjson":\n            if (!isAcceptable)\n                color = "#449dd1"\n            return `mdi mdi-palette fileTypeQjson color = \'${color}\'`;\n        case "entity":\n            if (!isAcceptable)\n                color = "rgb(233, 114, 76)"\n            return `mdi mdi-database fileTypeEntity color = \'${color}\'`;\n        case "bpmn":\n            if (!isAcceptable)\n                color = "rgb(0, 124, 119)"\n            return `mdi mdi-vector-polyline fileTypeBpmn color = \'${color}\'`;\n        case "process":\n            if (!isAcceptable)\n                color = "rgb(0, 124, 119)"\n            return `mdi mdi-auto-fix fileTypeProcess color = \'${color}\'`;\n        case "png":\n        case "jpg":\n        case "jpeg":\n        case "svg":\n        case "gif":\n        case "json":\n            if (!isAcceptable)\n                color = "#212121"\n            return `mdi mdi-image-outline fileTypeImage color = \'${color}\'`;\n        case "css":\n            return "mdi mdi-music-accidental-sharp ml-6";\n        default:\n    }\n}\n\nfunction removeItem(file: IImportFile, selectedFiles: Array<any>) {\n    if (file.type == "entity") {\n        entityNumber.value = entityNumber.value - 1;\n    }\n    const index = selectedFiles.indexOf(file);\n    selectedFiles.splice(index, 1);\n    tooltip.startTooltip();\n}\n\nfunction isEntityRuleBlock(item: IImportFile) {\n    if (item.type != "entity") {\n        return false;\n    }\n\n    const isEntityRuleBlock = hasEntity.value || entityNumber.value > 1;\n    return isEntityRuleBlock;\n}\n\nfunction anyNotDuplicateItem() {\n    const retVal = fileItems.value.some((i) => i.type != "entity" && !i.isDuplicate && i.isAcceptable);\n    return retVal;\n}\n\nfunction anyAcceptableItem() {\n    const retVal = fileItems.value.some((i) => i.isAcceptable && i.nameValidationExceptions.length == 0);\n    return retVal;\n}\n\nconst isButtonDisabled = computed(() => {\n    if (fileItems.value.length == 0) {\n        return true;\n    }\n\n    if (!anyAcceptableItem()) {\n        return true;\n    }\n\n    if (loadingIcon.value) {\n        return true;\n    }\n\n    if (fileItems.value.length > entityNumber.value && anyNotDuplicateItem()) {\n        return false;\n    }\n\n    if (fileItems.value.some((i) => i.type != "entity")) {\n        return true;\n    }\n\n    const isEntityRuleBlock = entityNumber.value > 1 || (hasEntity.value && entityNumber.value > 0);\n    return isEntityRuleBlock;\n});\n<\/script>\n\n<template>\n    <div class="fileInputDiv">\n        <div class="fileUploadDiv col-12" onclick="document.getElementById(\'fileInput\').click()">\n            <div class="col-12 uploadArea" style="display: flex; padding-left: 150px; padding-top: 35px">\n                <div\n                    class="mdi mdi-cloud-upload-outline"\n                    style="text-align: center; font-size: 25px; color: #a1a1a1; padding-right: 10px; margin-top: -7px"\n                ></div>\n                <span style="font-weight: bold">Click</span><span style="padding-left: 10px">here to upload your files.</span>\n            </div>\n        </div>\n        <input\n            style="display: none"\n            type="file"\n            id="fileInput"\n            multiple\n            @change="selectedFiles()"\n            :accept="getInputAccept()"\n        />\n    </div>\n    <div class="uploadFilesText">\n                Selected Files <span> ({{ fileItems.length }})</span>\n            </div>\n    <div id="selectedFiles" class="selectedItems">\n        <div v-if="fileItems.length > 0">\n\n            <div v-for="fileValues in fileItems">\n                <div\n                    v-if="\n                        !fileValues.isDuplicate &&\n                        !isEntityRuleBlock(fileValues) &&\n                        fileValues.isAcceptable &&\n                        fileValues.nameValidationExceptions.length == 0\n                    "\n                    class="filesValue"\n                    style="color: #000000"\n                >\n                    <div><i :class="computedIcon(fileValues.type)"></i></div>\n                    <div class="col-10" style="margin-left: 10px; text-overflow: ellipsis; overflow: hidden">\n                        {{ fileValues.name.split(".").slice(0, -1).join(".") }}\n                    </div>\n\n                    <div class="col-1" style="text-align: end; padding-left: 30px">\n                        <i\n                            v-if="fileValues && !loadingIcon"\n                            class="mdi mdi-close removeIcon color: #212121 "\n                            :style="computedIcon(fileValues.type) ? \'\' : \'margin-left: 23px;\'"\n                            @click="removeItem(fileValues, fileItems)"\n                        ></i>\n\n                        <div v-if="loadingIcon" style="padding-top: 7px" class="loader"></div>\n                    </div>\n                </div>\n\n                <div\n                    v-if="\n                        fileValues.isDuplicate ||\n                        isEntityRuleBlock(fileValues) ||\n                        !fileValues.isAcceptable ||\n                        fileValues.nameValidationExceptions.length != 0\n                    "\n                    class="filesValue"\n                    style="color: red ; border: 1px solid red"\n                >\n                    <div><i :class="computedIcon(fileValues.type, (fileValues.isDuplicate || isEntityRuleBlock(fileValues) || !fileValues.isAcceptable ||fileValues.nameValidationExceptions.length != 0))"></i></div>\n                    <div\n                        class="col-10"\n                        data-toggle="tooltip"\n                        :title="\n                            isEntityRuleBlock(fileValues)\n                                ? \'Only one entity file is allowed\'\n                                : !fileValues.isAcceptable\n                                ? `File type is not supported.`\n                                : fileValues.nameValidationExceptions.length != 0  \n                                ? fileValues.nameValidationExceptions.at(0)!.message \n                                : \'This file is already imported\'\n                        "\n                        placement="bottom"\n                        style="margin-left: 10px; text-overflow: ellipsis; overflow: hidden"\n                    >\n                        {{ fileValues.name.split(".").slice(0, -1).join(".") }}\n                    </div>\n\n                    <div class="col-1" style="text-align: end; padding-left: 30px">\n                        <i\n                            v-if="fileValues && !loadingIcon"\n                            :class="\'mdi mdi-close removeIcon\' + (computedIcon(fileValues.type) ? \'\' : \' removeIconReposition\')"\n                            @click="removeItem(fileValues, fileItems)"\n                        ></i>\n\n                        <div\n                            v-if="!fileValues.isDuplicate && !isEntityRuleBlock(fileValues) && loadingIcon"\n                            style="padding-top: 7px"\n                            class="loader"\n                        ></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="importBtnDiv">\n        <button class="cancelBtn" @click="emit(\'close\')">Cancel</button>\n        <button\n            class="importBtn"\n            :disabled="isButtonDisabled"\n            :style="{ backgroundColor: isButtonDisabled ? \'#37373733\' : \'#151233\' }"\n            @click="importSelectedModels()"\n        >\n            UPLOAD\n        </button>\n    </div>\n</template>\n\n<style scoped>\n@import url("../../../../styles/IDE3.css");\n\n.fileInputDiv {\n    margin-left: 20px;\n    margin-top: 20px;\n    margin-right: 20px;\n}\n\n.selectedItems {\n    margin-left: 10px;\n    margin-top: 10px;\n    max-height: 199px;\n    overflow: auto;\n}\n\n/* .selectedItems::-webkit-scrollbar-thumb {\n    background-color: #d0d1e9;\n    border-radius: 16px;\n}\n\n.selectedItems::-webkit-scrollbar {\n    width: 12px;\n}\n\n.selectedItems::-webkit-scrollbar-track {\n    background: transparent;\n} */\n\n.importBtn {\n    border-radius: 4px;\n    border: none;\n    opacity: 1;\n    color: white;\n    width: 97px;\n    height: 40px;\n    font-style: normal;\n    font-size: 16px;\n    font-weight: 500;\n    letter-spacing: 0px;\n    font-family: "ROBOTO";\n}\n\n.importBtnDiv {\n    text-align: end;\n    margin: 30px 20px 30px 0px;\n    \n}\n\n.removeIcon {\n    cursor: pointer;\n    padding-right: 10px;\n    font-style: normal;\n    font-size: 18px;\n    letter-spacing: 0px;\n    opacity: 1;\n}\n\n.removeIconReposition {\n    cursor: pointer;\n    padding-right: 10px;\n    font-style: normal;\n    font-size: 18px;\n    margin-left: 23px;\n}\n\n.loading {\n    cursor: pointer;\n    color: #212121;\n    padding-right: 10px;\n    font-style: normal;\n    font-size: 18px;\n    letter-spacing: 0px;\n    opacity: 1;\n}\n\n::-webkit-file-upload-button {\n    background: #2f3160;\n    color: white;\n    border-radius: 4px;\n    width: 120px;\n    height: 48px;\n}\n\n.fileUploadDiv {\n    cursor: pointer;\n}\n\n.filesValue {\n    margin-top: 10px;\n    background-color: #f5f5f5;\n    display: flex;\n    border-radius: 4px;\n    font-style: normal;\n    font-weight: 400;\n    font-size: 16px;\n    letter-spacing: 0px;\n    opacity: 1;\n    font-family: "ROBOTO";\n    margin-left: 10px;\n    width: 561px;\n    text-align: start;\n}\n\n.uploadFilesText {\n    color: #616161;\n    font-style: normal;\n    font-weight: 400;\n    font-size: 18px;\n    letter-spacing: 0px;\n    opacity: 1;\n    margin-left: 20px;\n    margin-top: 10px;\n\n    font-family: "ROBOTO";\n}\n\n.fileTypeQjson {\n    font-size: 18px;\n    padding-left: 5px;\n}\n\n.fileTypeImage {\n    font-size: 18px;\n    padding-left: 5px;\n}\n\n.fileTypeEntity {\n    font-size: 18px;\n    padding-left: 5px;\n}\n\n.fileTypeBpmn {\n    font-size: 18px;\n    padding-left: 5px;\n}\n\n.fileTypeProcess {\n    font-size: 18px;\n    padding-left: 5px;\n}\n\n.unacceptableFileType {\n    color: red;\n    font-size: 18px;\n    padding-left: 5px;\n}\n\n.uploadArea {\n    text-align: center;\n    padding-top: 25px;\n    border: 1px dashed #a1a1a1;\n    height: 100px;\n}\n\n.cancelBtn {\n    background: none;\n    border: none;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 16px;\n    letter-spacing: 0px;\n    opacity: 1;\n    margin-left: 50px;\n    font-family: "ROBOTO";\n    margin-right: 10px;\n    color: #757575;\n    letter-spacing: 0.02px;\n}\n\n.loader {\n    border: 3px solid #f3f3f3;\n    border-radius: 70%;\n    border-top: 3px solid #3498db;\n    width: 12px;\n    height: 12px;\n    -webkit-animation: spin 1s linear infinite;\n    animation: spin 1s linear infinite;\n}\n\n.ml-6 {\n    margin-left: 6px;\n}\n\n/* Safari */\n@-webkit-keyframes spin {\n    0% {\n        -webkit-transform: rotate(0deg);\n    }\n\n    100% {\n        -webkit-transform: rotate(360deg);\n    }\n}\n\n@keyframes spin {\n    0% {\n        transform: rotate(0deg);\n    }\n\n    100% {\n        transform: rotate(360deg);\n    }\n}\n</style>\n'],sourceRoot:""}]);const c=r},51289:(e,n)=>{n.I=void 0;var t=function(){function e(){}return e.checkBinaryFile=function(e){return{entity:!1,qjson:!1,process:!1,bpmn:!1,flow:!1,gif:!0,png:!0,jpeg:!0,jpg:!0,svg:!0}[e]},e.getBase64FileContent=function(e){var n=e.indexOf(",");return e.substring(n+1)},e.getBinResource=function(e){return Buffer.from(e,"base64")},e}();n.I=t},64336:(e,n,t)=>{t.r(n),t.d(n,{default:()=>H});var i=t(71093),l=t(66190),o=t(73843),a=t(83487),s=t(5627),r=t(69292),c=t(88279),p=t(38695),d=t(88613),m=t(4150),A=t(51289);const f={class:"fileInputDiv"},u=(e=>((0,i.dD)("data-v-5e9e5939"),e=e(),(0,i.Cn)(),e))((()=>(0,i._)("div",{class:"fileUploadDiv col-12",onclick:"document.getElementById('fileInput').click()"},[(0,i._)("div",{class:"col-12 uploadArea",style:{display:"flex","padding-left":"150px","padding-top":"35px"}},[(0,i._)("div",{class:"mdi mdi-cloud-upload-outline",style:{"text-align":"center","font-size":"25px",color:"#a1a1a1","padding-right":"10px","margin-top":"-7px"}}),(0,i._)("span",{style:{"font-weight":"bold"}},"Click"),(0,i._)("span",{style:{"padding-left":"10px"}},"here to upload your files.")])],-1))),g=["accept"],y={class:"uploadFilesText"},I={id:"selectedFiles",class:"selectedItems"},x={key:0},v={key:0,class:"filesValue",style:{color:"#000000"}},B={class:"col-10",style:{"margin-left":"10px","text-overflow":"ellipsis",overflow:"hidden"}},b={class:"col-1",style:{"text-align":"end","padding-left":"30px"}},C=["onClick"],h={key:1,style:{"padding-top":"7px"},class:"loader"},k={key:1,class:"filesValue",style:{color:"red",border:"1px solid red"}},j=["title"],T={class:"col-1",style:{"text-align":"end","padding-left":"30px"}},E=["onClick"],w={key:1,style:{"padding-top":"7px"},class:"loader"},O={class:"importBtnDiv"},V=["disabled"],D=(0,i.aZ)({__name:"importModelDialog",props:{parent:null},emits:["close"],setup(e,{emit:n}){var t,D,F;const q=e,z=s.nC.resolve(a.y),U=s.nC.resolve(c.O),R=s.nC.resolve(p.T),S=s.nC.resolve(d.J),_={minAndMaxLength:{min:3,max:40},availableCharacters:!0,nonSpaceCharacter:!0},M=(0,o.iH)(S.user.selectedOrganization.applications),N=(0,o.iH)([]),P=(0,o.iH)(!1),Y=(0,o.iH)(0);let Z="application"==q.parent.objectType?["qjson"]:"module"==q.parent.objectType||"folder"==q.parent.objectType?Object.entries(M.value).filter((e=>e[1])).map((e=>"quick"==e[0]?"qjson":e[0])):[];Z=Z.concat(["gif","png","jpeg","jpg","svg","json"]),(null===(t=S.user.selectedOrganization.features)||void 0===t?void 0:t.multipleCss)&&(Z=Z.concat(["css"])),console.log(Z);const Q=(0,o.iH)(1==(null===(F=null===(D=q.parent)||void 0===D?void 0:D.children)||void 0===F?void 0:F.some((e=>"model"==e.objectType&&"entityDesigner"==e.modelType))));function $(e,n){var t,i,l,o;let a="json"==n?"lottie":n;return 1==((null===(i=null===(t=q.parent)||void 0===t?void 0:t.children)||void 0===i?void 0:i.some((n=>n.name==e.split(".").slice(0,-1).join(".")&&"model"==n.objectType&&n.modelType==a)))||(null===(o=null===(l=q.parent)||void 0===l?void 0:l.children)||void 0===o?void 0:o.some((n=>n.name.split(".").slice(0,-1).join(".")==e.split(".").slice(0,-1).join(".")&&"model"==n.objectType&&n.modelType==a))))}function H(){var e;let n="";return n="application"==q.parent.objectType?".qjson":`${Object.entries(M).filter((e=>1==e[1])).reduce(((e,n)=>e.concat("."+("quick"==n[0]?"qjson":n[0])+",")),"").slice(0,-1)}`,(null===(e=S.user.selectedOrganization.features)||void 0===e?void 0:e.multipleCss)&&(n+=", .css"),n}function W(e){return e.substring(e.lastIndexOf(".")+1,e.length)}async function L(e){const n=new FileReader;return new Promise(((t,i)=>{n.onload=()=>{t(n.result)},n.readAsDataURL(e)}))}function G(e,n){let t="red";switch(e){case"qjson":return n||(t="#449dd1"),`mdi mdi-palette fileTypeQjson color = '${t}'`;case"entity":return n||(t="rgb(233, 114, 76)"),`mdi mdi-database fileTypeEntity color = '${t}'`;case"bpmn":return n||(t="rgb(0, 124, 119)"),`mdi mdi-vector-polyline fileTypeBpmn color = '${t}'`;case"process":return n||(t="rgb(0, 124, 119)"),`mdi mdi-auto-fix fileTypeProcess color = '${t}'`;case"png":case"jpg":case"jpeg":case"svg":case"gif":case"json":return n||(t="#212121"),`mdi mdi-image-outline fileTypeImage color = '${t}'`;case"css":return"mdi mdi-music-accidental-sharp ml-6"}}function J(e,n){"entity"==e.type&&(Y.value=Y.value-1);const t=n.indexOf(e);n.splice(t,1),U.startTooltip()}function X(e){return"entity"==e.type&&(Q.value||Y.value>1)}const K=(0,o.Fl)((()=>0==N.value.length||(!N.value.some((e=>e.isAcceptable&&0==e.nameValidationExceptions.length))||(!!P.value||!(N.value.length>Y.value&&N.value.some((e=>"entity"!=e.type&&!e.isDuplicate&&e.isAcceptable)))&&(!!N.value.some((e=>"entity"!=e.type))||(Y.value>1||Q.value&&Y.value>0))))));return(e,t)=>((0,i.wg)(),(0,i.iD)(i.HY,null,[(0,i._)("div",f,[u,(0,i._)("input",{style:{display:"none"},type:"file",id:"fileInput",multiple:"",onChange:t[0]||(t[0]=e=>async function(){for(var e,n,t=document.getElementById("fileInput"),i=0;i<(null===(e=null==t?void 0:t.files)||void 0===e?void 0:e.length);i++){const e=null===(n=null==t?void 0:t.files)||void 0===n?void 0:n.item(i),l=W(e.name),o=e.name.substring(0,e.name.lastIndexOf(".")),a=N.value.some((n=>n.name==(null==e?void 0:e.name)))||N.value.some((n=>n.name.substring(0,e.name.lastIndexOf("."))==o));if(a)continue;const s=$(e.name,l)||$(o,l),r=R.validate(o,_).filter((e=>!e.isValid)),c=Z.includes(l);if(A.I.checkBinaryFile(l)){const n=await L(e);N.value.push({name:e.name,content:n,nameValidationExceptions:r,isDuplicate:s,isAcceptable:c,type:l})}else{const n=await e.text();N.value.push({name:e.name,content:n,nameValidationExceptions:r,isDuplicate:s,isAcceptable:c,type:l})}"entity"==l&&(Y.value=Y.value+1)}U.startTooltip()}()),accept:H()},null,40,g)]),(0,i._)("div",y,[(0,i.Uk)(" Selected Files "),(0,i._)("span",null," ("+(0,l.toDisplayString)((0,o.SU)(N).length)+")",1)]),(0,i._)("div",I,[(0,o.SU)(N).length>0?((0,i.wg)(),(0,i.iD)("div",x,[((0,i.wg)(!0),(0,i.iD)(i.HY,null,(0,i.Ko)((0,o.SU)(N),(e=>((0,i.wg)(),(0,i.iD)("div",null,[e.isDuplicate||X(e)||!e.isAcceptable||0!=e.nameValidationExceptions.length?(0,i.kq)("v-if",!0):((0,i.wg)(),(0,i.iD)("div",v,[(0,i._)("div",null,[(0,i._)("i",{class:(0,l.normalizeClass)(G(e.type))},null,2)]),(0,i._)("div",B,(0,l.toDisplayString)(e.name.split(".").slice(0,-1).join(".")),1),(0,i._)("div",b,[e&&!(0,o.SU)(P)?((0,i.wg)(),(0,i.iD)("i",{key:0,class:"mdi mdi-close removeIcon color: #212121",style:(0,l.normalizeStyle)(G(e.type)?"":"margin-left: 23px;"),onClick:n=>J(e,(0,o.SU)(N))},null,12,C)):(0,i.kq)("v-if",!0),(0,o.SU)(P)?((0,i.wg)(),(0,i.iD)("div",h)):(0,i.kq)("v-if",!0)])])),e.isDuplicate||X(e)||!e.isAcceptable||0!=e.nameValidationExceptions.length?((0,i.wg)(),(0,i.iD)("div",k,[(0,i._)("div",null,[(0,i._)("i",{class:(0,l.normalizeClass)(G(e.type,e.isDuplicate||X(e)||!e.isAcceptable||0!=e.nameValidationExceptions.length))},null,2)]),(0,i._)("div",{class:"col-10","data-toggle":"tooltip",title:X(e)?"Only one entity file is allowed":e.isAcceptable?0!=e.nameValidationExceptions.length?e.nameValidationExceptions.at(0).message:"This file is already imported":"File type is not supported.",placement:"bottom",style:{"margin-left":"10px","text-overflow":"ellipsis",overflow:"hidden"}},(0,l.toDisplayString)(e.name.split(".").slice(0,-1).join(".")),9,j),(0,i._)("div",T,[e&&!(0,o.SU)(P)?((0,i.wg)(),(0,i.iD)("i",{key:0,class:(0,l.normalizeClass)("mdi mdi-close removeIcon"+(G(e.type)?"":" removeIconReposition")),onClick:n=>J(e,(0,o.SU)(N))},null,10,E)):(0,i.kq)("v-if",!0),e.isDuplicate||X(e)||!(0,o.SU)(P)?(0,i.kq)("v-if",!0):((0,i.wg)(),(0,i.iD)("div",w))])])):(0,i.kq)("v-if",!0)])))),256))])):(0,i.kq)("v-if",!0)]),(0,i._)("div",O,[(0,i._)("button",{class:"cancelBtn",onClick:t[1]||(t[1]=e=>n("close"))},"Cancel"),(0,i._)("button",{class:"importBtn",disabled:(0,o.SU)(K),style:(0,l.normalizeStyle)({backgroundColor:(0,o.SU)(K)?"#37373733":"#151233"}),onClick:t[2]||(t[2]=e=>async function(){if(n("close"),K.value)return;P.value=!0;let e=[];N.value.forEach((async n=>{if(n.isDuplicate||!n.isAcceptable||0!=n.nameValidationExceptions.length)return;const t={name:n.name.split(".").slice(0,-1).join("."),parentObjectId:q.parent.ID,modelBody:[{key:n.type,model:n.content}],modelType:"qjson",modelAdditionals:{qjsonType:"qjson"}};switch(n.type){case"qjson":t.modelType="qjson",t.modelAdditionals={qjsonType:"qjson"};break;case"entity":if(X(n))return;t.modelType="entityDesigner",t.modelAdditionals={};break;case"bpmn":t.modelType="bpmn",t.modelAdditionals={isAutoGenerated:!1,isModifiedByUser:!0};break;case"process":t.modelType="process",t.modelAdditionals={};break;case"png":t.modelType="png",t.extension="png",t.modelAdditionals={};break;case"jpg":t.modelType="jpg",t.extension="jpg",t.modelAdditionals={};break;case"jpeg":t.modelType="jpeg",t.extension="jpeg",t.modelAdditionals={};break;case"svg":t.modelType="svg",t.extension="svg",t.modelAdditionals={};break;case"gif":t.modelType="gif",t.extension="gif",t.modelAdditionals={};break;case"json":t.modelType="lottie",t.extension="json";break;case"css":t.modelType="css",t.key="style",t.modelAdditionals={}}try{let l=await z.executeUseCase(r.E,t);e.push({path:(i=l.ID,`<<img:${i}>>`),name:l.name}),"css"===(null==l?void 0:l.modelType)&&n.content&&s.nC.resolve(m.U).replaceStyle("addStyle",l.ID,n.content)}catch{console.log("error")}var i;P.value=!1}))}())}," UPLOAD ",12,V)])],64))}});var F=t(17450),q=t.n(F),z=t(29530),U=t.n(z),R=t(16199),S=t.n(R),_=t(40458),M=t.n(_),N=t(62916),P=t.n(N),Y=t(92165),Z=t.n(Y),Q=t(5312),$={};$.styleTagTransform=Z(),$.setAttributes=M(),$.insert=S().bind(null,"head"),$.domAPI=U(),$.insertStyleElement=P(),q()(Q.Z,$),Q.Z&&Q.Z.locals&&Q.Z.locals;const H=(0,t(32525).Z)(D,[["__scopeId","data-v-5e9e5939"]])}}]);
//# sourceMappingURL=4336.js.map