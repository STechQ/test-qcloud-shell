{"version":3,"file":"801.js","mappings":"kNAGA,MAAMA,GAA0B,QAAiB,YAC3CC,EAAa,CAAC,SACdC,GAA0B,QAAiB,YAC3CC,EAAa,CAAC,SACdC,GAA0B,QAAiB,gBAC3CC,GAA0B,IAAAC,GAAoB,SAAU,CAAEC,MAAO,cAAgB,cAAe,GCHtG,GDsB4B,QAAiB,CAC3CC,OAAQ,uBACRC,MAAO,CACLC,cAAe,KACfC,cAAe,MAEjBC,MAAO,CAAC,SACRC,MAAMC,GAAc,KAAEC,IAExB,MAAMN,EAAQK,EAQRE,EAAW,aAAoCC,EAAA,GAC/CC,EAAuB,aAAyCC,EAAA,GAGhEC,IADO,WACU,WACjBC,GAAiB,UACjBC,GAAoB,QAAwB,cAgBlD,MAAO,CAACC,EAAUC,MACR,WAAc,QAAoB,KAAW,KAAM,EACzD,IAAAlB,GAAoB,MAAO,KAAM,CAC/BN,GACA,SAAgB,IAAAM,GAAoB,SAAU,CAC5C,sBAAuBkB,EAAO,KAAOA,EAAO,GAAMC,GAAiB,EAAiBlB,MAAQkB,IAC3F,GACA,SAAW,IAAO,QAAoB,KAAW,MAAM,QAAYhB,EAAMC,eAAgBgB,KAChF,WAAc,QAAoB,SAAU,CAClDnB,MAAOmB,EAAOnB,QACb,qBAAiBmB,EAAOC,MAAO,EAAqB1B,MACrD,OACH,KAAuB,CACxB,CAAC,eAAemB,EAAeb,YAGnC,IAAAD,GAAoB,MAAO,KAAM,CAC/BJ,GACA,SAAgB,IAAAI,GAAoB,SAAU,CAC5C,sBAAuBkB,EAAO,KAAOA,EAAO,GAAMC,GAAiB,EAAiBlB,MAAQkB,IAC3F,GACA,SAAW,IAAO,QAAoB,KAAW,MAAM,QAAYhB,EAAME,eAAgBiB,KAChF,WAAc,QAAoB,SAAU,CAClDrB,MAAOqB,EAAOrB,QACb,qBAAiBqB,EAAOD,MAAO,EAAqBxB,MACrD,OACH,KAAuB,CACxB,CAAC,eAAekB,EAAed,YAGnC,IAAAD,GAAoB,MAAO,KAAM,CAC/BF,GACA,SAAgB,IAAAE,GAAoB,SAAU,CAC5C,sBAAuBkB,EAAO,KAAOA,EAAO,GAAMC,GAAiB,EAAoBlB,MAAQkB,IAC9F,CACDpB,GACA,QAAoB,yCACnB,KAAuB,CACxB,CAAC,eAAeiB,EAAkBf,YAGtC,IAAAD,GAAoB,MAAO,KAAM,EAC/B,IAAAA,GAAoB,SAAU,CAC5BuB,QAASL,EAAO,KAAOA,EAAO,GAAMC,GAzD5CK,uBACUd,EAASe,SAAQD,UACnB,MAAME,EAAWZ,EAAeb,MAC1B0B,EAAWZ,EAAed,MAC1B2B,EAAYZ,EAAkBf,MAEhCyB,GAAaC,GAAaC,SAExBhB,EAAqBiB,qBAAqBH,EAAUC,EAAUC,GACpEnB,EAAK,UAHqCqB,MAAM,8BAIjD,CAAEC,SAAS,IA+C0C,KACnD,aAEJ","sources":["webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/superuser/attachDomainToTenant.vue?e33a","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/superuser/attachDomainToTenant.vue"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, createElementVNode as _createElementVNode, withDirectives as _withDirectives, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\" Domain \")\nconst _hoisted_2 = [\"value\"]\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\" Tenant \")\nconst _hoisted_4 = [\"value\"]\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\" Login Type \")\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"QCLOUDAUTH\" }, \"QCLOUDAUTH\", -1 /* HOISTED */)\n\nimport { ref } from \"vue\";\nimport { container } from \"../../../../../domain/core/diContainer\";\nimport { IUseCaseExecutor } from \"../../../../../domain/useCase/IUseCaseExecutor\";\nimport { ISystemUserManagement } from \"../../../../../domain/useCase/ISystemUserManagement\";\nimport { AuthenticationType } from \"@stechquick/algae/lib/qCloudTemp/quickCloud\";\n\ninterface IOptionSelect {\n    text: string;\n    value: string;\n}\n\ninterface IAttachDomainToTenantProps {\n    domainOptions: Array<IOptionSelect>;\n    tenantOptions: Array<IOptionSelect>;\n}\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'attachDomainToTenant',\n  props: {\n    domainOptions: null,\n    tenantOptions: null\n  },\n  emits: [\"close\"],\n  setup(__props: any, { emit }) {\n\nconst props = __props as {\n    domainOptions: Array<IOptionSelect>;\n    tenantOptions: Array<IOptionSelect>;\n}\n\n\n\n\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\nconst systemUserManagement = container.resolve<ISystemUserManagement>(ISystemUserManagement);\n\nconst name = ref<string>();\nconst selectedDomain = ref<string>();\nconst selectedTenant = ref<string>();\nconst selectedLoginType = ref<AuthenticationType>(\"QCLOUDAUTH\");\n\nasync function attach() {\n    await executor.execute(async () => {\n        const domainID = selectedDomain.value;\n        const tenantID = selectedTenant.value;\n        const loginType = selectedLoginType.value;\n\n        if(!domainID || !tenantID || !loginType){ alert(\"All inputs are required!\"); return; }\n\n        await systemUserManagement.attachDomainToTenant(domainID, tenantID, loginType);\n        emit(\"close\");\n    }, { loading: true });\n}\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _hoisted_1,\n      _withDirectives(_createElementVNode(\"select\", {\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((selectedDomain).value = $event))\n      }, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(props.domainOptions, (domain) => {\n          return (_openBlock(), _createElementBlock(\"option\", {\n            value: domain.value\n          }, _toDisplayString(domain.text), 9 /* TEXT, PROPS */, _hoisted_2))\n        }), 256 /* UNKEYED_FRAGMENT */))\n      ], 512 /* NEED_PATCH */), [\n        [_vModelSelect, selectedDomain.value]\n      ])\n    ]),\n    _createElementVNode(\"div\", null, [\n      _hoisted_3,\n      _withDirectives(_createElementVNode(\"select\", {\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((selectedTenant).value = $event))\n      }, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(props.tenantOptions, (tenant) => {\n          return (_openBlock(), _createElementBlock(\"option\", {\n            value: tenant.value\n          }, _toDisplayString(tenant.text), 9 /* TEXT, PROPS */, _hoisted_4))\n        }), 256 /* UNKEYED_FRAGMENT */))\n      ], 512 /* NEED_PATCH */), [\n        [_vModelSelect, selectedTenant.value]\n      ])\n    ]),\n    _createElementVNode(\"div\", null, [\n      _hoisted_5,\n      _withDirectives(_createElementVNode(\"select\", {\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((selectedLoginType).value = $event))\n      }, [\n        _hoisted_6,\n        _createCommentVNode(\" <option value=\\\"ADFS\\\">ADFS</option> \")\n      ], 512 /* NEED_PATCH */), [\n        [_vModelSelect, selectedLoginType.value]\n      ])\n    ]),\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"button\", {\n        onClick: _cache[3] || (_cache[3] = ($event: any) => (attach()))\n      }, \"Attach\")\n    ])\n  ], 64 /* STABLE_FRAGMENT */))\n}\n}\n\n})","import script from \"./attachDomainToTenant.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./attachDomainToTenant.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_","value","__name","props","domainOptions","tenantOptions","emits","setup","__props","emit","executor","IUseCaseExecutor","systemUserManagement","ISystemUserManagement","selectedDomain","selectedTenant","selectedLoginType","_ctx","_cache","$event","domain","text","tenant","onClick","async","execute","domainID","tenantID","loginType","attachDomainToTenant","alert","loading"],"sourceRoot":""}