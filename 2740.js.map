{"version":3,"file":"2740.js","mappings":"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","sources":["webpack://qcloud_shell/./src/presentation/vue3/components/customSelect.vue?3af5","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/publishDialog.vue?b498","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/publishDialog.vue?d5a6","webpack://qcloud_shell/./node_modules/@stechquick/algae/src/helpers/cryptoHelper.ts","webpack://qcloud_shell/./node_modules/@stechquick/algae/src/helpers/plateau/plateauHelper.ts","webpack://qcloud_shell/./src/domain/infrastructure/IQCloudApi.ts","webpack://qcloud_shell/./src/domain/useCase/ICreateExportJob.ts","webpack://qcloud_shell/./src/domain/useCase/IDeployJobs.ts","webpack://qcloud_shell/./src/domain/useCase/IJobUtils.ts","webpack://qcloud_shell/./src/domain/useCase/IPackJobs.ts","webpack://qcloud_shell/./src/domain/useCase/IPublish.ts","webpack://qcloud_shell/./src/presentation/vue3/components/customSelect.vue","webpack://qcloud_shell/./src/presentation/vue3/components/customSelect.vue?9303","webpack://qcloud_shell/./src/presentation/vue3/components/customSelect.vue?31a9","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/publishDialog.vue?644f","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/publishDialog.vue?9ecf","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/publishDialog.vue?19ed","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/publishDialog.vue"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n  /*You should put other CSS properties with same class names in the parent component's style tag that is not scoped.*/\\n*[data-v-237b87c3] {\\n    font-family: \\\"Roboto\\\"\\n}\\n.custom-select[data-v-237b87c3] {\\n    position: relative;\\n    width: 100%;\\n    text-align: left;\\n    outline: none;\\n}\\n.custom-select .selected[data-v-237b87c3] {\\n\\n    cursor: pointer;\\n    user-select: none;\\n}\\n.custom-select .selected i[data-v-237b87c3] {\\n    position: absolute;\\n    right: 10px;\\n    float: right;\\n}\\n.custom-select .items[data-v-237b87c3] {\\n    position: absolute;\\n    left: 0;\\n    right: 0;\\n    z-index: 1;\\n}\\n.custom-select .items .option[data-v-237b87c3] {\\n    cursor: pointer;\\n    user-select: none;\\n}\\n.custom-select .items .option.disabled div[data-v-237b87c3] {\\n    cursor: default;\\n    user-select: none;\\n    opacity: 0.4;\\n}\\n.custom-select .items .option.disabled[data-v-237b87c3]:active {\\n    pointer-events: none;\\n}\\n.selectHide[data-v-237b87c3] {\\n    display: none;\\n}\\n.button-div[data-v-237b87c3] {\\n    justify-content: center;\\n    display: grid;\\n    padding: 13px 0 19px;\\n    margin-top: 10px\\n}\\n.button[data-v-237b87c3] {\\n    cursor: pointer;\\n}\\n.custom-placeholder[data-v-237b87c3]:empty:before {\\n    content:attr(data-placeholder);\\n    color:#616161\\n}\\n.custom-placeholder[data-v-237b87c3]:focus-visible {\\n    outline: none;\\n}\\n.button-tooltip[data-v-237b87c3] {\\n    visibility: hidden;\\n    display: flex;\\n    flex-direction: row;\\n    align-items: flex-start;\\n    padding: 8px;\\n    top: 39px;\\n    left: 65px;\\n    height: 30px;\\n    position: absolute;\\n    background: #757575;\\n    color: #FFFFFF;\\n    font-size: 12px;\\n    line-height: 14px;\\n    text-align: center;\\n    border-radius: 4px;\\n    letter-spacing: 0.2px;\\n    opacity: 0;\\n    z-index: 1;\\n}\\n.custom-select .items .option:hover .button-tooltip[data-v-237b87c3] {\\n    visibility: visible;\\n    transition: opacity 0.3s ease-out 0.5s;\\n    opacity: 1;\\n}\\n  \", \"\",{\"version\":3,\"sources\":[\"webpack://./src/presentation/vue3/components/customSelect.vue\"],\"names\":[],\"mappings\":\";EAoHE,oHAAoH;AACpH;IACE;AACF;AACA;IACE,kBAAkB;IAClB,WAAW;IACX,gBAAgB;IAChB,aAAa;AACf;AAEA;;IAEE,eAAe;IACf,iBAAiB;AACnB;AAEA;IACE,kBAAkB;IAClB,WAAW;IACX,YAAY;AACd;AAEA;IACE,kBAAkB;IAClB,OAAO;IACP,QAAQ;IACR,UAAU;AACZ;AAEA;IACE,eAAe;IACf,iBAAiB;AACnB;AAEA;IACE,eAAe;IACf,iBAAiB;IACjB,YAAY;AACd;AACA;IACE,oBAAoB;AACtB;AAEA;IACE,aAAa;AACf;AACA;IACE,uBAAuB;IACvB,aAAa;IACb,oBAAoB;IACpB;AACF;AACA;IACE,eAAe;AACjB;AACA;IACE,8BAA8B;IAC9B;AACF;AACA;IACE,aAAa;AACf;AACA;IACE,kBAAkB;IAClB,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,YAAY;IACZ,SAAS;IACT,UAAU;IACV,YAAY;IACZ,kBAAkB;IAClB,mBAAmB;IACnB,cAAc;IACd,eAAe;IACf,iBAAiB;IACjB,kBAAkB;IAClB,kBAAkB;IAClB,qBAAqB;IACrB,UAAU;IACV,UAAU;AACZ;AACA;IACE,mBAAmB;IACnB,sCAAsC;IACtC,UAAU;AACZ\",\"sourcesContent\":[\"<template>\\n  <div class=\\\"custom-select\\\" :tabindex=\\\"tabindex\\\" @blur=\\\"open = false\\\">\\n    <div :class=\\\"open ? 'open selected ' + selectedClass : 'selected ' + selectedClass\\\" @click=\\\"open = !open\\\">\\n      <div v-if = \\\"selected\\\">{{ typeof selected === 'object' ? selected.name : selected }}\\n        <i class=\\\"mdi mdi-chevron-down\\\"></i>\\n      </div>\\n      <div v-else>\\n        <span contenteditable=\\\"true\\\" :data-placeholder=\\\"placeholder\\\" class=\\\"custom-placeholder\\\"></span>\\n        <i class=\\\"mdi mdi-chevron-down\\\"></i>\\n      </div>\\n    </div>\\n    <div class=\\\"items\\\" :class=\\\"{ selectHide: !open }\\\" :style=\\\"{padding: extraButton ? '10px 0 0' : '10px 0'}\\\">\\n      <div v-for=\\\"(option, i) of options\\\" :key=\\\"i\\\" @click=\\\"handleClick(option)\\\" :class=\\\"['option' , (props.disabledOptions && getDisabledOptionsText(i)) ? 'disabled' : '' ]\\\">\\n        <span v-if=\\\"props.disabledOptions && getDisabledOptionsText(i)\\\" class=\\\"button-tooltip\\\" :style=\\\"{top: (i*32) + 85 + 'px'}\\\">{{getDisabledOptionsText(i)}}</span>\\n        <div>{{typeof option === 'object' ? option.name : option }}</div>\\n      </div>\\n      <div v-if=\\\"extraButton\\\" class=\\\"button-div\\\" :style=\\\"{borderTop: extraButton ? '1px solid #EEEEEE' :  'none'}\\\" >\\n        <div v-for=\\\"(button, index) in buttons\\\" :key=\\\"index\\\">\\n            <div :id=\\\"'option-button-' + index\\\" :class=\\\"button.buttonClass + ' button'\\\" @click=\\\"open=false\\\">{{ button.buttonText }}</div>\\n        </div>\\n      </div>\\n    </div>  \\n  </div>\\n</template>\\n\\n<script setup>\\nimport { ref, watchEffect } from 'vue'\\nconst emit = defineEmits([\\\"input\\\"]);\\nconst props = defineProps({\\n  options: {\\n    type: Array,\\n    required: true,\\n  },\\n  disabledOptions: {\\n    type: Array,\\n    required: false\\n  },\\n  default: {\\n    type: String,\\n    required: false,\\n    default: '',\\n  },\\n  selectedOption: {\\n    type: String,\\n    required: false\\n  },\\n  tabindex: {\\n    type: Number,\\n    required: false,\\n    default: 0,\\n  },\\n  placeholder: {\\n    type: String,\\n    required: false,\\n    default: \\\"\\\",\\n  },\\n  selectedClass: {\\n    type: String,\\n    required: true,\\n    default: \\\"\\\",\\n  },\\n  extraButton: {\\n    type: Boolean,\\n    required: false,\\n    default: false,\\n  },\\n  buttons: {\\n    type: Array,\\n    required: false,\\n    default: () => [],\\n    validator: (value) => {\\n      return value.every(\\n        (button) =>\\n          typeof button === \\\"object\\\" &&\\n          typeof button.buttonText === \\\"string\\\" &&\\n          typeof button.buttonClass === \\\"string\\\"\\n      );\\n    },\\n  },\\n})\\n\\nconst open = ref(false);\\nconst selected = ref(props.default ? props.default : null);\\n\\nwatchEffect(() => {\\n  if(props && props.selectedOption){\\n    selected.value = props.selectedOption;\\n    open.value = false;\\n  }\\n});\\n\\nconst handleClick = (option) => {\\n    if(typeof option === 'object'){\\n      emit('input', option.id);\\n      selected.value = option;\\n      open.value = false;\\n      emit('input', selected.value.id);\\n    }\\n    else if(typeof option === 'string') {\\n      emit('input', option);\\n      selected.value = option;\\n      open.value = false;\\n      emit('input', selected.value);\\n    }\\n}\\n\\nconst getDisabledOptionsText = (index) => {\\n  const opt = props.disabledOptions.find(e => e.index == index);\\n  if(opt)\\n    return opt.cause;\\n  return undefined;\\n}\\n</script>\\n\\n  \\n  <style scoped>\\n  /*You should put other CSS properties with same class names in the parent component's style tag that is not scoped.*/\\n  * {\\n    font-family: \\\"Roboto\\\"\\n  }\\n  .custom-select {\\n    position: relative;\\n    width: 100%;\\n    text-align: left;\\n    outline: none;\\n  }\\n  \\n  .custom-select .selected {\\n\\n    cursor: pointer;\\n    user-select: none;\\n  }\\n  \\n  .custom-select .selected i {\\n    position: absolute;\\n    right: 10px;\\n    float: right;\\n  }\\n  \\n  .custom-select .items {\\n    position: absolute;\\n    left: 0;\\n    right: 0;\\n    z-index: 1;\\n  }\\n  \\n  .custom-select .items .option {\\n    cursor: pointer;\\n    user-select: none;\\n  }  \\n  \\n  .custom-select .items .option.disabled div {\\n    cursor: default;\\n    user-select: none;\\n    opacity: 0.4;\\n  } \\n  .custom-select .items .option.disabled:active {\\n    pointer-events: none;\\n  }\\n  \\n  .selectHide {\\n    display: none;\\n  }\\n  .button-div {\\n    justify-content: center;\\n    display: grid;\\n    padding: 13px 0 19px;\\n    margin-top: 10px\\n  }\\n  .button {\\n    cursor: pointer;\\n  }\\n  .custom-placeholder:empty:before {\\n    content:attr(data-placeholder);\\n    color:#616161\\n  }\\n  .custom-placeholder:focus-visible {\\n    outline: none;\\n  }\\n  .button-tooltip {\\n    visibility: hidden;\\n    display: flex;\\n    flex-direction: row;\\n    align-items: flex-start;\\n    padding: 8px;\\n    top: 39px;\\n    left: 65px;\\n    height: 30px;\\n    position: absolute;\\n    background: #757575;\\n    color: #FFFFFF;\\n    font-size: 12px;\\n    line-height: 14px;\\n    text-align: center;\\n    border-radius: 4px;\\n    letter-spacing: 0.2px;\\n    opacity: 0;\\n    z-index: 1;\\n  }\\n  .custom-select .items .option:hover .button-tooltip {\\n    visibility: visible;\\n    transition: opacity 0.3s ease-out 0.5s;\\n    opacity: 1;\\n  }\\n  </style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.container[data-v-3c5758a8] {\\n    padding: 32px 20px 20px;\\n}\\n.settings-container[data-v-3c5758a8] {\\n    position: relative;\\n    top: 0px;\\n    left: 0px;\\n}\\n.custom-text[data-v-3c5758a8] {\\n    /* position: absolute; */\\n    font-family: 'Roboto';\\n    font-style: normal;\\n    font-weight: 500;\\n    font-size: 15px;\\n    line-height: 18px;\\n    /* left: 24px; */\\n    color: #212121;\\n}\\n\\n/* .custom-text.title{\\n    top: 92px;\\n}\\n\\n.custom-text.environment{\\n    top: 174px;\\n} */\\n.radio-button[data-v-3c5758a8] {\\n    position: absolute;\\n    top: 60px;\\n    left: 20px;\\n    cursor: pointer;\\n}\\n.radio-text[data-v-3c5758a8] {\\n    position: absolute;\\n    top: 59px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n    user-select: none;\\n    cursor: pointer;\\n}\\n.existing-app-url[data-v-3c5758a8] {\\n    position: absolute;\\n    width: 760px;\\n    height: 40px;\\n    top: 114px;\\n    left: 20px;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #bcbcbc;\\n    border-radius: 4px;\\n    font: normal normal normal 14px/19px Roboto;\\n    letter-spacing: 0px;\\n    padding: 10px 0px 10px 10px;\\n}\\n.url-error[data-v-3c5758a8] {\\n    border: 1px solid red;\\n}\\n.url-disable[data-v-3c5758a8] {\\n    opacity: 0.5;\\n}\\n.existing-app-url[data-v-3c5758a8]::placeholder {\\n    color: #bcbcbc;\\n    user-select: none;\\n}\\n.modules-selected-checkbox[data-v-3c5758a8] {\\n    cursor: pointer;\\n}\\n.modules-selected-checkbox.deploy[data-v-3c5758a8] {\\n    /* top: 257px; */\\n}\\n.modules-selected-text[data-v-3c5758a8] {\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #757575;\\n    margin: 0 0 13px 30px;\\n}\\n\\n/* .modules-selected-text.deploy {\\n    top: 257px;\\n} */\\n.text-number[data-v-3c5758a8] {\\n    font: normal normal bold 14px/19px Roboto;\\n    color: #212121;\\n}\\n.modules-datatable[data-v-3c5758a8] {\\n    width: 760px;\\n    height: 288px;\\n    border: 1px solid #bcbcbc;\\n    overflow-x: hidden;\\n    overflow-y: auto;\\n    margin-bottom: 20px;\\n}\\n\\n/* .modules-datatable.deploy {\\n    top: 286px;\\n} */\\n.modules-datatable[data-v-3c5758a8]::-webkit-scrollbar {\\n    width: 4px;\\n}\\n.modules-datatable[data-v-3c5758a8]::-webkit-scrollbar-thumb {\\n    background: #bcbcbc 0% 0% no-repeat padding-box;\\n    border-radius: 10px;\\n}\\n.modules-datatable[data-v-3c5758a8]::-webkit-scrollbar-thumb:hover {\\n    background: #555;\\n}\\n.row-container[data-v-3c5758a8] {\\n    width: 100%;\\n    height: 36px;\\n    position: relative;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #e0e0e0;\\n}\\n.chevron[data-v-3c5758a8] {\\n    position: absolute;\\n    left: 4px;\\n    color: #bcbcbc;\\n    font-size: 24px;\\n}\\n.module-checkbox[data-v-3c5758a8] {\\n    position: absolute;\\n    top: 10px;\\n    left: 43px;\\n    cursor: pointer;\\n}\\n.module-name[data-v-3c5758a8] {\\n    position: absolute;\\n    top: 9px;\\n    left: 69px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n.model-checkbox[data-v-3c5758a8] {\\n    position: absolute;\\n    top: 10px;\\n    left: 59px;\\n    cursor: pointer;\\n}\\n.model-icon[data-v-3c5758a8] {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 85px;\\n}\\n.app-tier-model-icon[data-v-3c5758a8] {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 69px;\\n}\\n.app-tier-model-name[data-v-3c5758a8] {\\n    position: absolute;\\n    top: 10px;\\n    left: 87px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n.model-name[data-v-3c5758a8] {\\n    position: absolute;\\n    top: 9px;\\n    left: 103px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n.version-text[data-v-3c5758a8] {\\n    margin: 10px 7px 10px auto;\\n    display: table;\\n    font: normal normal normal 12px/16px Roboto;\\n    color: #757575;\\n    cursor: pointer;\\n    user-select: none;\\n}\\n.version-icon[data-v-3c5758a8] {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #151233;\\n}\\n.footer[data-v-3c5758a8] {\\n    position: relative;\\n    width: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: end;\\n}\\n.footer.deploy[data-v-3c5758a8] {\\n    position: relative;\\n    width: 100%;\\n}\\n.footer.export[data-v-3c5758a8] {\\n    margin-top: 102px;\\n}\\n.cancel-button[data-v-3c5758a8] {\\n    border-radius: 4px;\\n    user-select: none;\\n    font-style: normal;\\n    font-weight: 500;\\n    font-family: \\\"ROBOTO\\\";\\n    font-size: 15px;\\n    color: #757575;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n.save-button[data-v-3c5758a8] {\\n    background: #151233 0% 0% no-repeat padding-box;\\n    border-radius: 4px;\\n    user-select: none;\\n    font-weight: 500;\\n    font-size: 15px;\\n    color: #ffffff;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n.mobile-publish-text[data-v-3c5758a8],\\n.web-publish-text[data-v-3c5758a8] {\\n    padding: 5px 12px;\\n    margin-bottom: 52px;\\n    width: 100%;\\n    color: #757575;\\n    font-size: 14px;\\n    background: #F5F5FA;\\n    border-radius: 4px;\\n    display: flex;\\n    align-items: center;\\n}\\n.mobile-publish-text i[data-v-3c5758a8],\\n.web-publish-text i[data-v-3c5758a8] {\\n    font-size: 24px;\\n    color: #151233;\\n    margin-right: 4px;\\n}\\n.save-button.deploy[data-v-3c5758a8] {\\n    padding: 10px 16px;\\n}\\n.button-disable .save-button[data-v-3c5758a8] {\\n    opacity: 0.5;\\n}\\n.button-disable .save-button:hover + .button-tooltip[data-v-3c5758a8],\\n.start-screen:hover .button-tooltip[data-v-3c5758a8],\\n.publish-info:hover .button-tooltip[data-v-3c5758a8] {\\n    visibility: visible;\\n    transition: opacity 0.3s ease-out 1s;\\n    opacity: 1;\\n}\\n.button-tooltip[data-v-3c5758a8] {\\n    visibility: hidden;\\n    position: absolute;\\n    background: #757575;\\n    color: #FFFFFF;\\n    font-size: 11px;\\n    font-family: 'Roboto';\\n    text-align: center;\\n    border-radius: 4px;\\n    letter-spacing: 0.2px;\\n    padding: 6px 8px 6px 8px;\\n    top: 56px;\\n    left: 63px;\\n    opacity: 0;\\n}\\n.publish-info[data-v-3c5758a8] {\\n    color: #757575;\\n    font-size: 20px;\\n    margin-left: 10px;\\n}\\n.qjson-color[data-v-3c5758a8] {\\n    color: #449dd1;\\n}\\n.yaml-color[data-v-3c5758a8] {\\n    color: #449dd1;\\n}\\n.js-color[data-v-3c5758a8] {\\n    color: #449dd1;\\n}\\n.process-color[data-v-3c5758a8] {\\n    color: #007c77;\\n}\\n.bpmn-color[data-v-3c5758a8] {\\n    color: #007c77;\\n}\\n.entity-designer-color[data-v-3c5758a8] {\\n    color: #e9724c;\\n}\\n.select-environment[data-v-3c5758a8] {\\n    width: 100%;\\n    font-size: 15px;\\n    height: 40px;\\n    line-height: 40px;\\n    margin-top: 4px\\n}\\n\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/presentation/vue3/components/dialogs/publish/publishDialog.vue\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"<template>\\n    <div class=\\\"container\\\">\\n        <div>\\n            <CheckboxComp :class=\\\"['modules-selected-checkbox', props.screenType == 'Deploy' ? 'deploy' : '']\\\"\\n                :minus=\\\"false\\\" :check=\\\"checkedModuleCount == totalModuleCount\\\"\\n                @click=\\\"handleModuleCountCheckboxEvent(checkedModuleCount != totalModuleCount && checkedModuleCount == 0)\\\" />\\n            <div :class=\\\"['modules-selected-text', props.screenType == 'Deploy'  ? 'deploy' : '']\\\">\\n                <span class=\\\"text-number\\\">{{ checkedModuleCount }}</span> of <span class=\\\"text-number\\\">{{\\n                    totalModuleCount\\n                }}</span> modules selected\\n            </div>\\n        </div>\\n\\n        <div :class=\\\"['modules-datatable', props.screenType == 'Deploy' ? 'deploy' : '']\\\">\\n            <div v-for=\\\"item in items\\\">\\n                <div v-if=\\\"item?.type == 'module'\\\">\\n                    <div class=\\\"row-container\\\">\\n                        <i :class=\\\"'mdi mdi-menu' + (item.collapsed ? '-right' : '-down') + ' chevron'\\\"\\n                            @click=\\\"handleCollapse(item)\\\" />\\n                        <CheckboxComp class=\\\"module-checkbox\\\" :check=\\\"item.allChildChecked || item.checked\\\"\\n                            :minus=\\\"item.anyChildChecked && !item.allChildChecked\\\"\\n                            @click=\\\"handleItemCheckEvent(item)\\\" />\\n                        <span class=\\\"module-name\\\">{{ item.name }}</span>\\n                    </div>\\n                    <div class=\\\"row-container\\\" v-show=\\\"!item.collapsed\\\" v-for=\\\"child in item?.children\\\">\\n                        <CheckboxComp class=\\\"model-checkbox\\\" :check=\\\"child.checked\\\"\\n                            @click=\\\"handleItemCheckEvent(child)\\\" />\\n                        <i v-if=\\\"child.type == 'qjson'\\\" class=\\\"mdi mdi-palette qjson-color model-icon\\\" />\\n                        <i v-if=\\\"child.type == 'yaml'\\\" class=\\\"mdi mdi-cog-outline yaml-color model-icon\\\" />\\n                        <i v-if=\\\"child.type == 'js' || child?.type == 'css'\\\"\\n                            class=\\\"mdi mdi-cog-outline js-color model-icon\\\" />\\n                        <i v-if=\\\"child.type == 'process'\\\" class=\\\"mdi mdi-auto-fix process-color model-icon\\\" />\\n                        <i v-if=\\\"child.type == 'bpmn'\\\" class=\\\"mdi mdi-vector-polyline bpmn-color model-icon\\\" />\\n                        <i v-if=\\\"child.type == 'entityDesigner'\\\"\\n                            class=\\\"mdi mdi-database entity-designer-color model-icon\\\" />\\n                        <i v-if=\\\"child.type == 'flow'\\\" class=\\\"mdi mdi-step-forward bpmn-color model-icon\\\" />\\n                        <span class=\\\"model-name\\\">{{ child.name }}</span>\\n                        <div v-if=\\\"!child.usageType\\\" class=\\\"version-text\\\" @click=\\\"versionDialog(item)\\\">\\n                            {{ child.version }} <i v-if=\\\"!child.usageType\\\"\\n                                class=\\\"mdi mdi-pencil-outline version-icon\\\"></i>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div v-else>\\n                    <div class=\\\"row-container\\\">\\n                        <CheckboxComp class=\\\"module-checkbox\\\" :check=\\\"item?.checked\\\"\\n                            @click=\\\"handleItemCheckEvent(item)\\\" />\\n                        <i v-if=\\\"item?.type == 'qjson'\\\" class=\\\"mdi mdi-palette qjson-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'yaml'\\\" class=\\\"mdi mdi-cog-outline yaml-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'js' || item?.type == 'css'\\\"\\n                            class=\\\"mdi mdi-cog-outline js-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'process'\\\" class=\\\"mdi mdi-auto-fix process-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'bpmn'\\\" class=\\\"mdi mdi-vector-polyline bpmn-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'entityDesigner'\\\"\\n                            class=\\\"mdi mdi-database entity-designer-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'flow'\\\" class=\\\"mdi mdi-step-forward bpmn-color app-tier-model-icon\\\" />\\n                        <span class=\\\"app-tier-model-name\\\">{{ item?.name }}\\n                            <span class=\\\"start-screen\\\" v-if=\\\"startScreen?.ID == item.id\\\">\\n                                <i class=\\\"mdi mdi-home-outline\\\"></i>\\n                                <span class=\\\"button-tooltip\\\" style=\\\"top: -30px; left: 2px; z-index: 1; width: 80px;\\\">Start Screen</span>\\n                            </span>\\n                        </span>\\n   \\n                        <span v-if=\\\"!item.usageType\\\" class=\\\"version-text\\\" @click=\\\"versionDialog(item)\\\">\\n                            {{ item?.version }} <i v-if=\\\"!item.usageType\\\"\\n                                class=\\\"mdi mdi-pencil-outline version-icon\\\"></i>\\n                        </span>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div v-if=\\\"props.screenType == 'Deploy' && props.platformSelection.web\\\" style=\\\"margin-bottom: 102px\\\">\\n            <div style=\\\"display: flex; align-items: center;\\\">\\n                <span  class=\\\"custom-text environment\\\"> Publish To </span>\\n                <span class=\\\"publish-info\\\">\\n                    <i class=\\\"mdi mdi-information\\\"></i>\\n                    <span class=\\\"button-tooltip\\\" style=\\\"top: 460px; left: 96px; z-index: 1; width: 231px;\\\">Publish To options may change depending on the module type you choose.</span>\\n                </span>\\n            </div>\\n            \\n            <CustomSelect\\n                :options=\\\"publishTargets\\\"\\n                @input=\\\"onTargetSelect\\\"\\n                :selectedOption=\\\"selectedTarget\\\"\\n                :default=\\\"selectedTarget\\\"\\n                :disabledOptions=\\\"disabledOptions\\\"\\n                selectedClass = \\\"selected-environment\\\" \\n                placeholder=\\\"Select the publish environment of your application\\\"\\n                class=\\\"select-environment\\\">\\n            </CustomSelect>\\n        </div>\\n       <div v-if=\\\"props.screenType == 'Deploy' && !props.platformSelection.web && props.platformSelection.mobile\\\" class=\\\"mobile-publish-text\\\">\\n            <i class=\\\"mdi mdi-information\\\"></i>\\n            <span>Models and static files of your mobile application will be served from Public Cloud.</span>\\n            \\n       </div>\\n        <div :class=\\\"['footer', props.screenType == 'Deploy'  ? 'deploy' : 'export']\\\">\\n            <div :class=\\\"['cancel-button', props.screenType == 'Deploy'  ? 'deploy' : '']\\\" @click=\\\"close\\\">Cancel</div>\\n            <div v-if=\\\"props.screenType == 'Export'\\\" :class=\\\"(saveButtonDisable ? ' button-disable' : '')\\\" @click=\\\"save\\\">\\n                <div class=\\\"save-button \\\">DOWNLOAD</div>\\n            </div>\\n            <div v-if=\\\"props.screenType == 'Deploy' \\\" :class=\\\"[(saveButtonDisable ? ' button-disable' : '')]\\\" @click=\\\"save\\\">\\n                <span class=\\\"save-button deploy\\\">PUBLISH</span>\\n                <span v-if=\\\"selectedTarget\\\" class=\\\"button-tooltip\\\" style=\\\"top: -46px; left: 648px; z-index: 1; width: 120px;\\\">You need to include your start screen.</span>\\n                <span v-if=\\\"!selectedTarget\\\" class=\\\"button-tooltip\\\" style=\\\"top: -46px; left: 644px; z-index: 1; width: 123px;\\\">You need to select a publish environment.</span>\\n            </div>\\n            \\n        </div>\\n    </div>\\n</template>\\n\\n\\n<script setup lang=\\\"ts\\\">\\nimport { CryptoHelper } from \\\"@stechquick/algae/lib/helpers/cryptoHelper\\\";\\nimport { container } from \\\"../../../../../domain/core/diContainer\\\";\\nimport { IExportViewItem, IModel, IModule } from \\\"../../../../../domain/model/models\\\";\\nimport { IViewModel } from \\\"../../../../../domain/viewModel/IViewModel\\\";\\nimport CheckboxComp from \\\"../../checkboxComp.vue\\\";\\nimport { ref, computed, defineAsyncComponent, watch } from \\\"vue\\\";\\nimport { IDialog } from \\\"../../../../../domain/presentation/IDialog\\\";\\nimport { IUseCaseExecutor } from \\\"../../../../../domain/useCase/IUseCaseExecutor\\\";\\nimport { DeployType, ICreateDeployJobParam, ICreateExportJobParam, IExportItem, IExportJobData, IPlatformSelection, IProcessConfigModelItem } from \\\"@stechquick/algae/lib/qCloudTemp/exporter\\\";\\nimport { ICreateExportJob } from \\\"../../../../../domain/useCase/ICreateExportJob\\\";\\nimport { IDeployJobs } from \\\"../../../../../domain/useCase/IDeployJobs\\\";\\nimport { IQCloudApi } from \\\"../../../../../domain/infrastructure/IQCloudApi\\\";\\nimport { IPackJobs } from \\\"../../../../../domain/useCase/IPackJobs\\\";\\nimport { IJobUtils } from \\\"../../../../../domain/useCase/IJobUtils\\\";\\nimport { IQJsonAdditionals, UsageType } from \\\"@stechquick/algae/lib/qCloudTemp/quickCloud\\\";\\nimport { IPublish } from \\\"../../../../../domain/useCase/IPublish\\\";\\nimport { PlateauHelper } from \\\"@stechquick/algae/lib/helpers/plateau/plateauHelper\\\";\\nimport { IViewModelManager } from \\\"../../../../../domain/viewModel/IViewModelManager\\\";\\nimport CustomSelect from \\\"../../../components/customSelect.vue\\\"\\nimport { IOrganizationCloud } from \\\"@stechquick/algae/lib/clean/domain/useCases/ICloudProvider\\\";\\n\\ninterface ITableData {\\n    id: string;\\n    parentId?: string;\\n    collapsed?: boolean;\\n    anyChildChecked?: boolean;\\n    allChildChecked?: boolean;\\n    checked?: boolean;\\n    name: string;\\n    type: IModel[\\\"modelType\\\"] | IModule[\\\"objectType\\\"];\\n    version?: string;\\n    children?: Array<ITableData>;\\n    usageType?: UsageType;\\n}\\n\\ninterface IDeployScreenAdditionalProps {\\n    screenType: \\\"Export\\\" | \\\"Deploy\\\";\\n    platformSelection: IPlatformSelection;\\n}\\n\\ninterface IDisabledOptions {\\n    index: number\\n    cause: string;\\n}\\n\\nconst props = defineProps<IDeployScreenAdditionalProps>();\\nconst viewModel = container.resolve<IViewModel>(IViewModel);\\nconst viewModelManager = container.resolve<IViewModelManager>(IViewModelManager);\\nconst dialog = container.resolve<IDialog>(IDialog);\\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\\nconst deployJobsUseCase = container.resolve<IDeployJobs>(IDeployJobs);\\nconst qcloudApi = container.resolve<IQCloudApi>(IQCloudApi);\\nconst packJobsUseCase = container.resolve<IPackJobs>(IPackJobs);\\nconst publish = container.resolve<IPublish>(IPublish);\\nconst jobUtils = container.resolve<IJobUtils>(IJobUtils);\\nconst emit = defineEmits([\\\"close\\\"]);\\nconst items = ref<Array<ITableData>>([]);\\nconst validations = ref<boolean>(true);\\nconst selectedTarget = ref<string>(\\\"\\\");\\nconst disabledOptions = ref<Array<IDisabledOptions>>();\\nconst publishTargets = ref<Array<string>>();\\n\\nhandleItems();\\nprops.screenType == \\\"Deploy\\\" && syncPublishTargets();\\n\\nconst totalModuleCount = computed(() => items.value.filter((item) => item.type == \\\"module\\\").length);\\nconst checkedModuleCount = computed(() => items.value.filter((item) => item.type == \\\"module\\\" && item.allChildChecked).length);\\nconst saveButtonDisable = computed(() => (props.screenType == \\\"Deploy\\\" && props.platformSelection.web && selectedTarget.value == \\\"\\\") || !validations.value || !items.value.some((item) => item.checked || item.anyChildChecked));\\nconst startScreen = computed(() => (viewModel.studio.items as Array<IModel>).find(item => item.isRootPage == true));\\n\\n\\nwatch(items.value, (_new, _old) => {\\n    validations.value = validate();\\n    props.screenType == \\\"Deploy\\\" && syncPublishTargets();\\n});\\n\\n\\nfunction validate() {\\n    let result = true;\\n    const modules = items.value.filter(e => e.type == \\\"module\\\" && e.anyChildChecked);\\n    const appLayerItems = items.value.filter(e => e.type == \\\"qjson\\\" && e.checked);\\n\\n    if (props.screenType == \\\"Deploy\\\") {\\n        //FIXME: externalModules will be get from common places \\n        if (modules.length > 0)\\n            result = modules\\n                .filter(e => e.name != \\\"processmanager\\\").map(e => e.children).filter(e => !e?.find(f => f.type == \\\"entityDesigner\\\" && f.checked)).length <= 0\\n\\n        let isApplicationWillDeploy = appLayerItems.length > 0;\\n        if (isApplicationWillDeploy) {\\n            result = appLayerItems\\n                .map(e => viewModel.studio.items.find(item => item.ID == e.id) as IModel)\\n                .findIndex(e => ((e.additionals as IQJsonAdditionals).isRootPage)) != -1;\\n        }\\n    }\\n\\n    return result;\\n}\\n\\nfunction mobileFilter (model: IModel) {\\n    return props.platformSelection.web || !props.platformSelection.mobile ||\\n         !(model.modelType == \\\"bpmn\\\" || model.modelType == \\\"entityDesigner\\\" || model.modelType == \\\"process\\\");\\n} \\n\\nfunction handleItems() {\\n    items.value = viewModel.studio.items\\n        .filter((item) => item.objectType == \\\"module\\\" && item.children.length > 0)\\n        .map(\\n            (item) =>\\n            ({\\n                id: item.ID,\\n                collapsed: true,\\n                name: item.name,\\n                type: \\\"module\\\",\\n                anyChildChecked: true,\\n                allChildChecked: true,\\n                children: (item as IModule).children\\n                    .filter((child) => child.objectType == \\\"model\\\")\\n                    .filter(e => !props || props.screenType == \\\"Export\\\" || mobileFilter(e as IModel))\\n                    .map(\\n                        (child) =>\\n                        ({\\n                            id: child.ID,\\n                            parentId: item.ID,\\n                            checked: true,\\n                            name: child.name,\\n                            type: (child as IModel).modelType,\\n                            version: \\\"latest\\\",\\n                        } as ITableData)\\n                    ),\\n            } as ITableData)\\n        );\\n    viewModel.studio.items\\n        .filter((item) => item.objectType == \\\"model\\\" && item.usageType != \\\"appSettings\\\")\\n        .forEach((item) => {\\n            items.value.push({\\n                id: item.ID,\\n                checked: true,\\n                name: item.name,\\n                type: (item as IModel).modelType,\\n                version: \\\"latest\\\",\\n            });\\n        });\\n    const uiSettingsID = CryptoHelper.CreateGuid();\\n    const appSettings = viewModel.studio.items.filter((item) => item.objectType == \\\"model\\\" && item.usageType == \\\"appSettings\\\") as Array<IModel>;\\n    const uiSettings: ITableData = {\\n        id: uiSettingsID,\\n        collapsed: true,\\n        name: \\\"UI Settings\\\",\\n        type: \\\"module\\\",\\n        anyChildChecked: true,\\n        allChildChecked: true,\\n        children: appSettings.map((setting) => ({\\n            id: setting.ID,\\n            parentId: uiSettingsID,\\n            name: setting.name,\\n            type: (setting as IModel).modelType,\\n            checked: false,\\n            usageType: setting?.usageType,\\n        })) as Array<ITableData>,\\n    };\\n    items.value.unshift(uiSettings);\\n}\\n\\nfunction handleModuleCountCheckboxEvent(value: boolean) {\\n    items.value.forEach((item) => {\\n        item.checked = value;\\n        if (item.allChildChecked != undefined) item.allChildChecked = value;\\n        if (item.anyChildChecked != undefined) item.anyChildChecked = value;\\n        if (item.children) item.children.forEach((child) => (child.checked = value));\\n    });\\n}\\n\\nfunction handleCollapse(item: ITableData) {\\n    item.collapsed = !item.collapsed;\\n}\\n\\nfunction handleItemCheckEvent(item: ITableData) {\\n    if (item.type != \\\"module\\\") {\\n        item.checked = !item.checked;\\n        if (item.parentId) {\\n            const parent = items.value.find((i) => i.id == item.parentId)!;\\n            handleParentCheckedStatus(parent);\\n        }\\n    } else {\\n        if(item.children && item.children.length > 0) {\\n            if (item.anyChildChecked) {\\n                item.children?.forEach((child) => (child.checked = false));\\n                item.checked = false;\\n            } else {\\n                item.children?.forEach((child) => (child.checked = true));\\n                item.checked = true;\\n            }\\n            handleParentCheckedStatus(item);\\n        }\\n        else {\\n            item.checked = !item.checked;\\n            item.allChildChecked = false;\\n        }\\n        \\n    }\\n}\\n\\nfunction handleParentCheckedStatus(item: ITableData) {\\n    item.allChildChecked = !item.children?.some((child) => !child.checked);\\n    item.anyChildChecked = item.children?.some((child) => child.checked);\\n}\\n\\nfunction syncPublishTargets(){\\n    publishTargets.value = []; disabledOptions.value= [];\\n\\n    const targets = viewModel.user?.selectedOrganization?.actions?.publish?.targets;\\n    if(!targets)\\n        return;\\n\\n    const isSelectAnyItem = items.value.find(e => e.anyChildChecked || e.checked);\\n    if(!isSelectAnyItem){\\n        publishTargets.value = Object.entries(targets).map(e => cloudTargetMap(e[0])!);\\n        const disabledOptionList = Array<IDisabledOptions>();\\n        for(let i=0; i<publishTargets.value.length; i++){\\n            disabledOptionList.push({index:i, cause: \\\"You need to include items to publish.\\\"})\\n        }\\n        disabledOptions.value = disabledOptionList;\\n        return;\\n    }\\n\\n    const checkedPublishTargets = checkAndSetDisabledCauses(targets);\\n    const sortedTargets = checkedPublishTargets.sort((e, f) => ( !e.cause === !f.cause) ? 0 : e.cause ? 1: -1);\\n\\n    const disabledOptionList = Array<IDisabledOptions>();\\n    for(let i=0; i<sortedTargets.length; i++){\\n        const cause = sortedTargets[i].cause;\\n        if(cause) disabledOptionList.push({index:i, cause})\\n    }\\n    disabledOptions.value = disabledOptionList;\\n    publishTargets.value = sortedTargets.map(e => e.optionName);\\n\\n    selectedTarget.value = !sortedTargets[0].cause ? sortedTargets[0].optionName : \\\"\\\";\\n}\\n\\nfunction checkAndSetDisabledCauses(targets: Record<keyof IOrganizationCloud, boolean>){\\n    const list = Array<{optionName: string, cause?: string}>();\\n\\n    Object.keys(targets).forEach(e => {\\n        const key = e as keyof IOrganizationCloud;\\n        const value = targets[key];\\n        const optionName = cloudTargetMap(key)!;\\n        if(!value)\\n            return list.push({optionName, cause:  \\\"You are not authorized to publish to this target.\\\" });\\n        \\n\\n        switch (key) {\\n            case \\\"azure\\\":\\n                const traverseSelectedItems = (status: boolean, items?: Array<ITableData>) => {\\n                    if (!items || items.length == 0) { return status; }\\n                    for (const item of items) {\\n                        if(item.checked || item.anyChildChecked){\\n                            if (item.type == \\\"module\\\") {\\n                                status = traverseSelectedItems(status, item.children);\\n                            }\\n                            if(item.type == \\\"entityDesigner\\\" || item.type == \\\"bpmn\\\" || item.type == \\\"process\\\"){\\n                                status = false;\\n                                break;\\n                            }  \\n                        }\\n                        \\n                    }\\n                    return status;\\n                }\\n\\n                const status = traverseSelectedItems(true, items.value);\\n                if(!status)\\n                    return list.push({optionName, cause: \\\"Entity and process models cannot be published to this target.\\\" });\\n                break;\\n            case \\\"plateauGCP\\\":\\n                if(props.platformSelection.mobile)\\n                    return list.push({optionName, cause: \\\"This target is not available for mobile publishing.\\\" });\\n                break;\\n        }\\n\\n        list.push({optionName});\\n    })\\n\\n    return list;\\n}\\n\\nfunction versionDialog(item: ITableData) {\\n    const clickedNode = { id: item.id, state: { checked: item.checked }, text: item.name, type: item.type, version: item.version };\\n    dialog.showDialog(\\n        defineAsyncComponent(() => import(\\\"../../application/modelVersionDialog.vue\\\")),\\n        { closable: true, title: \\\"Change Version\\\", width: \\\"900px\\\", maxHeight: \\\"500px\\\", overflow: \\\"auto\\\" },\\n        { clickedNode }\\n    );\\n}\\n\\nfunction close() {\\n    emit(\\\"close\\\");\\n}\\n\\nasync function save() {\\n    executor.execute(\\n        async () => {\\n            const initAsGroup = async () => {\\n                const groupID = CryptoHelper.CreateGuid();\\n                await initHistory(groupID);\\n                await packJob(groupID);\\n                return groupID;\\n            }\\n\\n            switch (props.screenType) {\\n                case \\\"Export\\\":\\n                    const groupID = await initAsGroup();\\n                    await createExportJob(groupID);\\n                    break;\\n                case \\\"Deploy\\\":\\n                    if(props.platformSelection.mobile)\\n                        return await createAzureDeploy();\\n                    debugger;\\n                    switch (cloudTargetMap(selectedTarget.value!, true) as keyof IOrganizationCloud) {\\n                        case \\\"plateauGCP\\\":\\n                            const groupID = await initAsGroup();\\n                            await createDeployJob(groupID);\\n                            break;\\n                        case \\\"azure\\\":\\n                            await createAzureDeploy();\\n                            break;\\n                    }\\n            }\\n            emit(\\\"close\\\");\\n        },\\n        { loading: true });\\n}\\n\\nasync function createAzureDeploy() {\\n    const deployItems: Array<IExportItem> = [];\\n    const itemIdObj: Record<string, { item: IModel, path: string }> = {};\\n\\n    viewModelManager.flatMapItems(viewModel.studio.items, (item, path) => {\\n        if (item.objectType != \\\"model\\\") { return; }\\n        itemIdObj[item.ID] = { item, path };\\n        return item;\\n    });\\n\\n    const traverseSelectedItems = (items?: Array<ITableData>) => {\\n        if (!items || items.length == 0) { return; }\\n        items.forEach(item => {\\n            if (item.type == \\\"module\\\") {\\n                traverseSelectedItems(item.children);\\n                return;\\n            }\\n\\n            const itemMap = itemIdObj[item.id];\\n\\n            const deployItem: IExportItem = {\\n                id: item.id,\\n                name: jobUtils.getFileFullname(itemMap.item),\\n                path: itemMap.path,\\n                type: jobUtils.getItemType(itemMap.item),\\n                ver: item.version || \\\"latest\\\",\\n                isRootPage: itemMap.item.isRootPage,\\n                ownerType: 'application',\\n                ownerName: viewModel.studio.appName,\\n                size: itemMap.item.size,\\n            };\\n            deployItems.push(deployItem)\\n        });\\n    };\\n\\n    traverseSelectedItems(items.value);\\n\\n    await publish.createUI(deployItems, props.platformSelection);\\n}\\n\\nasync function initHistory(groupID: string) {\\n    return qcloudApi.initPublishHistory({\\n        appID: viewModel.studio.appId,\\n        ID: groupID,\\n        isMultiStep: true,\\n        type: props.screenType == \\\"Deploy\\\" ? \\\"publish\\\" : \\\"download\\\"\\n    });\\n}\\n\\nfunction isUsingPlateau() {\\n    const applications = viewModel.user!.selectedOrganization!.applications;\\n\\n    if (!applications)\\n        return false;\\n\\n    if (!applications.entity && !applications.process && !applications.bpmn)\\n        return false;\\n\\n    return true;\\n}\\n\\nfunction getItemPath(asset: ITableData, ownerName: string) {\\n    if (isUsingPlateau())\\n        return \\\"\\\";\\n    if (asset.type == \\\"qjson\\\")\\n        return ownerName;\\n    return \\\"\\\";\\n}\\n\\nfunction isUISettings(asset: ITableData) {\\n    return asset.name == \\\"UI Settings\\\";\\n}\\n\\n\\nasync function packJob(groupID: string) {\\n    let exportItemMap = new Map<string, Array<IExportItem>>();\\n\\n    items.value.forEach((asset) => {\\n        if (asset.checked) {\\n            //QUI\\n            if (asset.type == 'qjson') {\\n                const isThisrootPage = viewModel.studio.items.find(i => i.objectType == \\\"model\\\" && i.modelType == \\\"qjson\\\" && (i.additionals as IQJsonAdditionals).isRootPage && i.ID == asset.id);\\n\\n                const obj: IExportItem = {\\n                    id: asset.id,\\n                    ver: asset.version!,\\n                    type: jobUtils.getItemType({ usageType: asset.usageType, type: asset.type } as IExportViewItem),\\n                    path: \\\"\\\",\\n                    name: jobUtils.getFileFullname({ usageType: asset.usageType, type: asset.type, name: asset.name } as IExportViewItem),\\n                    ownerType: 'application',\\n                    ownerName: viewModel.studio.appName,\\n                    isRootPage: isThisrootPage ? true : undefined,\\n                };\\n\\n                let applicationModels = exportItemMap.get(viewModel.studio.appName);\\n                if (applicationModels && applicationModels.length > 0) {\\n                    applicationModels.push(obj);\\n                    exportItemMap.set(viewModel.studio.appName, applicationModels);\\n                }\\n                else\\n                    exportItemMap.set(viewModel.studio.appName, [obj]);\\n                return;\\n            }\\n        }\\n        if (asset.anyChildChecked && asset.children) {\\n            let checkedItems = Array<IExportItem>();\\n            asset.children!.forEach(child => {\\n                if (!child.checked || child.type == \\\"module\\\")\\n                    return;\\n                const exportItem: IExportItem = {\\n                    id: child.id,\\n                    ver: child.version!,\\n                    type: jobUtils.getItemType({ usageType: child.usageType, type: child.type, name: child.name } as IExportViewItem),\\n                    path: !isUISettings(asset) ? getItemPath(child, asset.name) : \\\"\\\",\\n                    name: jobUtils.getFileFullname({ usageType: child.usageType, type: child.type, name: child.name } as IExportViewItem),\\n                    ownerType: isUISettings(asset) || !isUsingPlateau() ? \\\"application\\\" : (asset.type === 'module' ? 'module' : 'application'),\\n                    ownerName: isUISettings(asset) || !isUsingPlateau() ? viewModel.studio.appName : asset.name\\n                };\\n                if (exportItem.type == \\\"entityDesigner\\\")\\n                    exportItem.entityGenerationDomain = viewModel.user!.selectedOrganization!.actions?.entityGenerationDomain;\\n                checkedItems.push(exportItem);\\n            });\\n\\n            if (checkedItems.length > 0) {\\n                if (!isUISettings(asset) && isUsingPlateau())\\n                    exportItemMap.set(asset.name, checkedItems);\\n                else {\\n                    let applicationModels = exportItemMap.get(viewModel.studio.appName);\\n                    if (applicationModels && applicationModels.length > 0) {\\n                        applicationModels.forEach(e => checkedItems.push(e));\\n                    }\\n                    exportItemMap.set(viewModel.studio.appName, checkedItems);\\n                }\\n            }\\n\\n        }\\n    })\\n\\n    let jobs = Array<ICreateExportJobParam>();\\n    exportItemMap.forEach((v, k) => {\\n        jobs.push({\\n            appID: viewModel.studio.appId,\\n            exportType: \\\"qui\\\",\\n            selectionData: v,\\n            layer: 0,\\n            groupID: groupID\\n        })\\n    })\\n\\n    await packJobsUseCase.createPackJobs(jobs);\\n}\\n\\nasync function createExportJob(groupID: string) {\\n    await executor.executeUseCase<ICreateExportJob>(ICreateExportJob, {\\n        appID: viewModel.studio.appId,\\n        exportType: \\\"qui\\\",\\n        selectionData: [],\\n        layer: 1,\\n        groupID: groupID\\n    });\\n}\\n\\nasync function createDeployJob(groupID: string) {\\n    //1-(n) L1- deployJob(build)\\n    let packages = await qcloudApi.getExportJobsByGroupId({ groupID })\\n        .then(jobs => jobs.jobs.filter(e => !isExternalModule(e.jobData as IExportJobData)).map(e => {\\n            const jobData = e.jobData as IExportJobData;\\n            return {\\n                ownerName: jobData.items[0].ownerName,\\n                jobID: e.jobID,\\n                type: jobData.items[0].ownerType,\\n                mainDir: getDeployableArchiveRoot(jobData)\\n            }\\n        }));\\n\\n    if (!packages || packages.length <= 0)\\n        return;\\n\\n    let buildJobs = Array<ICreateDeployJobParam>();\\n    packages.forEach(pack => {\\n        buildJobs.push({\\n            appID: viewModel.studio.appId,\\n            type: \\\"build\\\",\\n            package: {\\n                type: pack.type as DeployType,\\n                name: pack.ownerName!,\\n                mainDir: pack.mainDir!,\\n                zip: `${pack.jobID}.zip`,\\n            },\\n            layer: 1,\\n            groupID: groupID\\n        })\\n    })\\n\\n    await deployJobsUseCase.createBuildJobs(buildJobs);\\n\\n    //2-(1) L2- deployJob(deployment)\\n    let jobParam: ICreateDeployJobParam = {\\n        appID: viewModel.studio.appId,\\n        type: \\\"deployment\\\",\\n        deployConfig: {\\n            process: {\\n                configModelIDs: getProcessConfigList(),\\n                enabled: items.value.filter(asset => asset.checked && asset.children && asset.children.filter(child => child.checked && child.type == \\\"bpmn\\\")).length > 0\\n            }\\n        },\\n        layer: 2,\\n        groupID: groupID\\n    }\\n\\n    await deployJobsUseCase.startDeploymentJob(jobParam);\\n}\\n\\nfunction isExternalModule(jobData: IExportJobData){\\n    //FIXME: external modules may be dynamic\\n    return jobData.items[0].ownerType == \\\"module\\\" && jobData.items[0].ownerName == \\\"processmanager\\\";\\n}\\n\\nfunction getProcessConfigList() {\\n    let processConfigList = Array<IProcessConfigModelItem>();\\n    items.value.forEach((asset) => {\\n        if (asset.checked && asset.children) {\\n            const usingService = asset.children.find(c => c.type == \\\"entityDesigner\\\");\\n            if (!usingService)\\n                return;\\n\\n            const serviceName = PlateauHelper.getServiceNameFromModel(usingService.name);\\n            asset.children.forEach(child => {\\n                if (child.checked && child.type == \\\"process\\\") {\\n                    processConfigList.push({\\n                        moduleName: serviceName,\\n                        modelId: child.id,\\n                        modelName: child.name\\n                    })\\n                }\\n            })\\n        }\\n    })\\n    return processConfigList;\\n}\\n\\nfunction getDeployableArchiveRoot(jobData: IExportJobData) {\\n    //FIXME: change external modules\\n    if(jobData.items[0].ownerName == \\\"processmanager\\\")\\n        return \\\"\\\";\\n    if (jobData.items[0].ownerType == \\\"module\\\") {\\n        let edModel = jobData.items.find(e => e.type == \\\"entityDesigner\\\");\\n        if (!edModel)\\n            throw new Error(\\\"!!! this module cannot deploy. Because its have not a service\\\");\\n        return PlateauHelper.getServiceNameFromModel(edModel.name);\\n    }\\n    return PlateauHelper.getQuiPackageNameFromAppName(jobData.app.name);\\n}\\n\\nfunction cloudTargetMap(name: string, pureVal : boolean = false) {\\n    const map: Record<keyof IOrganizationCloud, string> = { azure: \\\"Public Cloud\\\", plateauGCP: \\\"Plateau Platform Playground\\\"};\\n    if(pureVal) {\\n        return Object.keys(map).find(e => {\\n            if(map[e as keyof IOrganizationCloud] === name){\\n                return true;\\n            }\\n        })\\n    }else {\\n        let key = Object.keys(map).includes(name);\\n        if(!key)\\n            return;\\n        return map[name as keyof IOrganizationCloud];\\n    }\\n}\\n\\nfunction onTargetSelect(value: string) {\\n    selectedTarget.value = value\\n}\\n\\n</script>\\n\\n\\n<style scoped>\\n.container {\\n    padding: 32px 20px 20px;\\n}\\n.settings-container {\\n    position: relative;\\n    top: 0px;\\n    left: 0px;\\n}\\n\\n.custom-text {\\n    /* position: absolute; */\\n    font-family: 'Roboto';\\n    font-style: normal;\\n    font-weight: 500;\\n    font-size: 15px;\\n    line-height: 18px;\\n    /* left: 24px; */\\n    color: #212121;\\n}\\n\\n/* .custom-text.title{\\n    top: 92px;\\n}\\n\\n.custom-text.environment{\\n    top: 174px;\\n} */\\n\\n.radio-button {\\n    position: absolute;\\n    top: 60px;\\n    left: 20px;\\n    cursor: pointer;\\n}\\n\\n.radio-text {\\n    position: absolute;\\n    top: 59px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n    user-select: none;\\n    cursor: pointer;\\n}\\n\\n.existing-app-url {\\n    position: absolute;\\n    width: 760px;\\n    height: 40px;\\n    top: 114px;\\n    left: 20px;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #bcbcbc;\\n    border-radius: 4px;\\n    font: normal normal normal 14px/19px Roboto;\\n    letter-spacing: 0px;\\n    padding: 10px 0px 10px 10px;\\n}\\n\\n.url-error {\\n    border: 1px solid red;\\n}\\n\\n.url-disable {\\n    opacity: 0.5;\\n}\\n\\n.existing-app-url::placeholder {\\n    color: #bcbcbc;\\n    user-select: none;\\n}\\n\\n.modules-selected-checkbox {\\n    cursor: pointer;\\n}\\n\\n.modules-selected-checkbox.deploy {\\n    /* top: 257px; */\\n}\\n\\n.modules-selected-text {\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #757575;\\n    margin: 0 0 13px 30px;;\\n}\\n\\n/* .modules-selected-text.deploy {\\n    top: 257px;\\n} */\\n\\n.text-number {\\n    font: normal normal bold 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.modules-datatable {\\n    width: 760px;\\n    height: 288px;\\n    border: 1px solid #bcbcbc;\\n    overflow-x: hidden;\\n    overflow-y: auto;\\n    margin-bottom: 20px;\\n}\\n\\n/* .modules-datatable.deploy {\\n    top: 286px;\\n} */\\n\\n.modules-datatable::-webkit-scrollbar {\\n    width: 4px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar-thumb {\\n    background: #bcbcbc 0% 0% no-repeat padding-box;\\n    border-radius: 10px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar-thumb:hover {\\n    background: #555;\\n}\\n\\n.row-container {\\n    width: 100%;\\n    height: 36px;\\n    position: relative;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #e0e0e0;\\n}\\n\\n.chevron {\\n    position: absolute;\\n    left: 4px;\\n    color: #bcbcbc;\\n    font-size: 24px;\\n}\\n\\n.module-checkbox {\\n    position: absolute;\\n    top: 10px;\\n    left: 43px;\\n    cursor: pointer;\\n}\\n\\n.module-name {\\n    position: absolute;\\n    top: 9px;\\n    left: 69px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.model-checkbox {\\n    position: absolute;\\n    top: 10px;\\n    left: 59px;\\n    cursor: pointer;\\n}\\n\\n.model-icon {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 85px;\\n}\\n\\n.app-tier-model-icon {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 69px;\\n}\\n\\n.app-tier-model-name {\\n    position: absolute;\\n    top: 10px;\\n    left: 87px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.model-name {\\n    position: absolute;\\n    top: 9px;\\n    left: 103px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.version-text {\\n    margin: 10px 7px 10px auto;\\n    display: table;\\n    font: normal normal normal 12px/16px Roboto;\\n    color: #757575;\\n    cursor: pointer;\\n    user-select: none;\\n}\\n\\n.version-icon {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #151233;\\n}\\n\\n.footer {\\n    position: relative;\\n    width: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: end;\\n}\\n\\n.footer.deploy {\\n    position: relative;\\n    width: 100%;\\n}\\n\\n.footer.export {\\n    margin-top: 102px;\\n}\\n.cancel-button {\\n    border-radius: 4px;\\n    user-select: none;\\n    font-style: normal;\\n    font-weight: 500;\\n    font-family: \\\"ROBOTO\\\";\\n    font-size: 15px;\\n    color: #757575;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n\\n\\n\\n.save-button {\\n    background: #151233 0% 0% no-repeat padding-box;\\n    border-radius: 4px;\\n    user-select: none;\\n    font-weight: 500;\\n    font-size: 15px;\\n    color: #ffffff;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n.mobile-publish-text,\\n.web-publish-text {\\n    padding: 5px 12px;\\n    margin-bottom: 52px;\\n    width: 100%;\\n    color: #757575;\\n    font-size: 14px;\\n    background: #F5F5FA;\\n    border-radius: 4px;\\n    display: flex;\\n    align-items: center;\\n}\\n.mobile-publish-text i,\\n.web-publish-text i {\\n    font-size: 24px;\\n    color: #151233;\\n    margin-right: 4px;\\n}\\n.save-button.deploy {\\n    padding: 10px 16px;\\n}\\n\\n.button-disable .save-button {\\n    opacity: 0.5;\\n}\\n.button-disable .save-button:hover + .button-tooltip,\\n.start-screen:hover .button-tooltip,\\n.publish-info:hover .button-tooltip {\\n    visibility: visible;\\n    transition: opacity 0.3s ease-out 1s;\\n    opacity: 1;\\n}\\n\\n.button-tooltip {\\n    visibility: hidden;\\n    position: absolute;\\n    background: #757575;\\n    color: #FFFFFF;\\n    font-size: 11px;\\n    font-family: 'Roboto';\\n    text-align: center;\\n    border-radius: 4px;\\n    letter-spacing: 0.2px;\\n    padding: 6px 8px 6px 8px;\\n    top: 56px;\\n    left: 63px;\\n    opacity: 0;\\n}\\n.publish-info {\\n    color: #757575;\\n    font-size: 20px;\\n    margin-left: 10px;\\n}\\n.qjson-color {\\n    color: #449dd1;\\n}\\n\\n.yaml-color {\\n    color: #449dd1;\\n}\\n\\n.js-color {\\n    color: #449dd1;\\n}\\n\\n.process-color {\\n    color: #007c77;\\n}\\n\\n.bpmn-color {\\n    color: #007c77;\\n}\\n\\n.entity-designer-color {\\n    color: #e9724c;\\n}\\n\\n.select-environment {\\n    width: 100%;\\n    font-size: 15px;\\n    height: 40px;\\n    line-height: 40px;\\n    margin-top: 4px\\n}\\n\\n</style>\\n\\n<style>\\n.selected-environment {\\n    background-color: transparent;\\n    border-radius: 4px;\\n    border: 1px solid #BCBCBC;\\n    color: #212121;\\n    padding-left: 12px;\\n}\\n.custom-placeholder:empty:before {\\n    color:#BCBCBC !important;\\n    font-weight: 400;\\n}\\n.custom-select .items .option {\\n    font-size: 14px;\\n    padding-left: 12px;\\n    line-height: 32px;\\n}\\n.custom-select .items .option:hover {\\n    background-color: #EEEEEE;\\n    color: #212121;\\n}\\n\\n.custom-select .items .option.disabled:hover {\\n    background-color: #FFFFFF;\\n    color: #212121;\\n}\\n\\n.custom-select.select-environment .items {\\n    margin-top: 4px;\\n    color: #212121;\\n    border-radius: 4px;\\n    border: 1px solid #E3E3E3;\\n    overflow: hidden;\\n    background-color: #FFFFFF;\\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\\n    position: static !important;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.selected-environment {\\n    background-color: transparent;\\n    border-radius: 4px;\\n    border: 1px solid #BCBCBC;\\n    color: #212121;\\n    padding-left: 12px;\\n}\\n.custom-placeholder:empty:before {\\n    color:#BCBCBC !important;\\n    font-weight: 400;\\n}\\n.custom-select .items .option {\\n    font-size: 14px;\\n    padding-left: 12px;\\n    line-height: 32px;\\n}\\n.custom-select .items .option:hover {\\n    background-color: #EEEEEE;\\n    color: #212121;\\n}\\n.custom-select .items .option.disabled:hover {\\n    background-color: #FFFFFF;\\n    color: #212121;\\n}\\n.custom-select.select-environment .items {\\n    margin-top: 4px;\\n    color: #212121;\\n    border-radius: 4px;\\n    border: 1px solid #E3E3E3;\\n    overflow: hidden;\\n    background-color: #FFFFFF;\\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\\n    position: static !important;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/presentation/vue3/components/dialogs/publish/publishDialog.vue\"],\"names\":[],\"mappings\":\";AA+hCA;IACI,6BAA6B;IAC7B,kBAAkB;IAClB,yBAAyB;IACzB,cAAc;IACd,kBAAkB;AACtB;AACA;IACI,wBAAwB;IACxB,gBAAgB;AACpB;AACA;IACI,eAAe;IACf,kBAAkB;IAClB,iBAAiB;AACrB;AACA;IACI,yBAAyB;IACzB,cAAc;AAClB;AAEA;IACI,yBAAyB;IACzB,cAAc;AAClB;AAEA;IACI,eAAe;IACf,cAAc;IACd,kBAAkB;IAClB,yBAAyB;IACzB,gBAAgB;IAChB,yBAAyB;IACzB,0CAA0C;IAC1C,2BAA2B;AAC/B\",\"sourcesContent\":[\"<template>\\n    <div class=\\\"container\\\">\\n        <div>\\n            <CheckboxComp :class=\\\"['modules-selected-checkbox', props.screenType == 'Deploy' ? 'deploy' : '']\\\"\\n                :minus=\\\"false\\\" :check=\\\"checkedModuleCount == totalModuleCount\\\"\\n                @click=\\\"handleModuleCountCheckboxEvent(checkedModuleCount != totalModuleCount && checkedModuleCount == 0)\\\" />\\n            <div :class=\\\"['modules-selected-text', props.screenType == 'Deploy'  ? 'deploy' : '']\\\">\\n                <span class=\\\"text-number\\\">{{ checkedModuleCount }}</span> of <span class=\\\"text-number\\\">{{\\n                    totalModuleCount\\n                }}</span> modules selected\\n            </div>\\n        </div>\\n\\n        <div :class=\\\"['modules-datatable', props.screenType == 'Deploy' ? 'deploy' : '']\\\">\\n            <div v-for=\\\"item in items\\\">\\n                <div v-if=\\\"item?.type == 'module'\\\">\\n                    <div class=\\\"row-container\\\">\\n                        <i :class=\\\"'mdi mdi-menu' + (item.collapsed ? '-right' : '-down') + ' chevron'\\\"\\n                            @click=\\\"handleCollapse(item)\\\" />\\n                        <CheckboxComp class=\\\"module-checkbox\\\" :check=\\\"item.allChildChecked || item.checked\\\"\\n                            :minus=\\\"item.anyChildChecked && !item.allChildChecked\\\"\\n                            @click=\\\"handleItemCheckEvent(item)\\\" />\\n                        <span class=\\\"module-name\\\">{{ item.name }}</span>\\n                    </div>\\n                    <div class=\\\"row-container\\\" v-show=\\\"!item.collapsed\\\" v-for=\\\"child in item?.children\\\">\\n                        <CheckboxComp class=\\\"model-checkbox\\\" :check=\\\"child.checked\\\"\\n                            @click=\\\"handleItemCheckEvent(child)\\\" />\\n                        <i v-if=\\\"child.type == 'qjson'\\\" class=\\\"mdi mdi-palette qjson-color model-icon\\\" />\\n                        <i v-if=\\\"child.type == 'yaml'\\\" class=\\\"mdi mdi-cog-outline yaml-color model-icon\\\" />\\n                        <i v-if=\\\"child.type == 'js' || child?.type == 'css'\\\"\\n                            class=\\\"mdi mdi-cog-outline js-color model-icon\\\" />\\n                        <i v-if=\\\"child.type == 'process'\\\" class=\\\"mdi mdi-auto-fix process-color model-icon\\\" />\\n                        <i v-if=\\\"child.type == 'bpmn'\\\" class=\\\"mdi mdi-vector-polyline bpmn-color model-icon\\\" />\\n                        <i v-if=\\\"child.type == 'entityDesigner'\\\"\\n                            class=\\\"mdi mdi-database entity-designer-color model-icon\\\" />\\n                        <i v-if=\\\"child.type == 'flow'\\\" class=\\\"mdi mdi-step-forward bpmn-color model-icon\\\" />\\n                        <span class=\\\"model-name\\\">{{ child.name }}</span>\\n                        <div v-if=\\\"!child.usageType\\\" class=\\\"version-text\\\" @click=\\\"versionDialog(item)\\\">\\n                            {{ child.version }} <i v-if=\\\"!child.usageType\\\"\\n                                class=\\\"mdi mdi-pencil-outline version-icon\\\"></i>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div v-else>\\n                    <div class=\\\"row-container\\\">\\n                        <CheckboxComp class=\\\"module-checkbox\\\" :check=\\\"item?.checked\\\"\\n                            @click=\\\"handleItemCheckEvent(item)\\\" />\\n                        <i v-if=\\\"item?.type == 'qjson'\\\" class=\\\"mdi mdi-palette qjson-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'yaml'\\\" class=\\\"mdi mdi-cog-outline yaml-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'js' || item?.type == 'css'\\\"\\n                            class=\\\"mdi mdi-cog-outline js-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'process'\\\" class=\\\"mdi mdi-auto-fix process-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'bpmn'\\\" class=\\\"mdi mdi-vector-polyline bpmn-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'entityDesigner'\\\"\\n                            class=\\\"mdi mdi-database entity-designer-color app-tier-model-icon\\\" />\\n                        <i v-if=\\\"item?.type == 'flow'\\\" class=\\\"mdi mdi-step-forward bpmn-color app-tier-model-icon\\\" />\\n                        <span class=\\\"app-tier-model-name\\\">{{ item?.name }}\\n                            <span class=\\\"start-screen\\\" v-if=\\\"startScreen?.ID == item.id\\\">\\n                                <i class=\\\"mdi mdi-home-outline\\\"></i>\\n                                <span class=\\\"button-tooltip\\\" style=\\\"top: -30px; left: 2px; z-index: 1; width: 80px;\\\">Start Screen</span>\\n                            </span>\\n                        </span>\\n   \\n                        <span v-if=\\\"!item.usageType\\\" class=\\\"version-text\\\" @click=\\\"versionDialog(item)\\\">\\n                            {{ item?.version }} <i v-if=\\\"!item.usageType\\\"\\n                                class=\\\"mdi mdi-pencil-outline version-icon\\\"></i>\\n                        </span>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div v-if=\\\"props.screenType == 'Deploy' && props.platformSelection.web\\\" style=\\\"margin-bottom: 102px\\\">\\n            <div style=\\\"display: flex; align-items: center;\\\">\\n                <span  class=\\\"custom-text environment\\\"> Publish To </span>\\n                <span class=\\\"publish-info\\\">\\n                    <i class=\\\"mdi mdi-information\\\"></i>\\n                    <span class=\\\"button-tooltip\\\" style=\\\"top: 460px; left: 96px; z-index: 1; width: 231px;\\\">Publish To options may change depending on the module type you choose.</span>\\n                </span>\\n            </div>\\n            \\n            <CustomSelect\\n                :options=\\\"publishTargets\\\"\\n                @input=\\\"onTargetSelect\\\"\\n                :selectedOption=\\\"selectedTarget\\\"\\n                :default=\\\"selectedTarget\\\"\\n                :disabledOptions=\\\"disabledOptions\\\"\\n                selectedClass = \\\"selected-environment\\\" \\n                placeholder=\\\"Select the publish environment of your application\\\"\\n                class=\\\"select-environment\\\">\\n            </CustomSelect>\\n        </div>\\n       <div v-if=\\\"props.screenType == 'Deploy' && !props.platformSelection.web && props.platformSelection.mobile\\\" class=\\\"mobile-publish-text\\\">\\n            <i class=\\\"mdi mdi-information\\\"></i>\\n            <span>Models and static files of your mobile application will be served from Public Cloud.</span>\\n            \\n       </div>\\n        <div :class=\\\"['footer', props.screenType == 'Deploy'  ? 'deploy' : 'export']\\\">\\n            <div :class=\\\"['cancel-button', props.screenType == 'Deploy'  ? 'deploy' : '']\\\" @click=\\\"close\\\">Cancel</div>\\n            <div v-if=\\\"props.screenType == 'Export'\\\" :class=\\\"(saveButtonDisable ? ' button-disable' : '')\\\" @click=\\\"save\\\">\\n                <div class=\\\"save-button \\\">DOWNLOAD</div>\\n            </div>\\n            <div v-if=\\\"props.screenType == 'Deploy' \\\" :class=\\\"[(saveButtonDisable ? ' button-disable' : '')]\\\" @click=\\\"save\\\">\\n                <span class=\\\"save-button deploy\\\">PUBLISH</span>\\n                <span v-if=\\\"selectedTarget\\\" class=\\\"button-tooltip\\\" style=\\\"top: -46px; left: 648px; z-index: 1; width: 120px;\\\">You need to include your start screen.</span>\\n                <span v-if=\\\"!selectedTarget\\\" class=\\\"button-tooltip\\\" style=\\\"top: -46px; left: 644px; z-index: 1; width: 123px;\\\">You need to select a publish environment.</span>\\n            </div>\\n            \\n        </div>\\n    </div>\\n</template>\\n\\n\\n<script setup lang=\\\"ts\\\">\\nimport { CryptoHelper } from \\\"@stechquick/algae/lib/helpers/cryptoHelper\\\";\\nimport { container } from \\\"../../../../../domain/core/diContainer\\\";\\nimport { IExportViewItem, IModel, IModule } from \\\"../../../../../domain/model/models\\\";\\nimport { IViewModel } from \\\"../../../../../domain/viewModel/IViewModel\\\";\\nimport CheckboxComp from \\\"../../checkboxComp.vue\\\";\\nimport { ref, computed, defineAsyncComponent, watch } from \\\"vue\\\";\\nimport { IDialog } from \\\"../../../../../domain/presentation/IDialog\\\";\\nimport { IUseCaseExecutor } from \\\"../../../../../domain/useCase/IUseCaseExecutor\\\";\\nimport { DeployType, ICreateDeployJobParam, ICreateExportJobParam, IExportItem, IExportJobData, IPlatformSelection, IProcessConfigModelItem } from \\\"@stechquick/algae/lib/qCloudTemp/exporter\\\";\\nimport { ICreateExportJob } from \\\"../../../../../domain/useCase/ICreateExportJob\\\";\\nimport { IDeployJobs } from \\\"../../../../../domain/useCase/IDeployJobs\\\";\\nimport { IQCloudApi } from \\\"../../../../../domain/infrastructure/IQCloudApi\\\";\\nimport { IPackJobs } from \\\"../../../../../domain/useCase/IPackJobs\\\";\\nimport { IJobUtils } from \\\"../../../../../domain/useCase/IJobUtils\\\";\\nimport { IQJsonAdditionals, UsageType } from \\\"@stechquick/algae/lib/qCloudTemp/quickCloud\\\";\\nimport { IPublish } from \\\"../../../../../domain/useCase/IPublish\\\";\\nimport { PlateauHelper } from \\\"@stechquick/algae/lib/helpers/plateau/plateauHelper\\\";\\nimport { IViewModelManager } from \\\"../../../../../domain/viewModel/IViewModelManager\\\";\\nimport CustomSelect from \\\"../../../components/customSelect.vue\\\"\\nimport { IOrganizationCloud } from \\\"@stechquick/algae/lib/clean/domain/useCases/ICloudProvider\\\";\\n\\ninterface ITableData {\\n    id: string;\\n    parentId?: string;\\n    collapsed?: boolean;\\n    anyChildChecked?: boolean;\\n    allChildChecked?: boolean;\\n    checked?: boolean;\\n    name: string;\\n    type: IModel[\\\"modelType\\\"] | IModule[\\\"objectType\\\"];\\n    version?: string;\\n    children?: Array<ITableData>;\\n    usageType?: UsageType;\\n}\\n\\ninterface IDeployScreenAdditionalProps {\\n    screenType: \\\"Export\\\" | \\\"Deploy\\\";\\n    platformSelection: IPlatformSelection;\\n}\\n\\ninterface IDisabledOptions {\\n    index: number\\n    cause: string;\\n}\\n\\nconst props = defineProps<IDeployScreenAdditionalProps>();\\nconst viewModel = container.resolve<IViewModel>(IViewModel);\\nconst viewModelManager = container.resolve<IViewModelManager>(IViewModelManager);\\nconst dialog = container.resolve<IDialog>(IDialog);\\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\\nconst deployJobsUseCase = container.resolve<IDeployJobs>(IDeployJobs);\\nconst qcloudApi = container.resolve<IQCloudApi>(IQCloudApi);\\nconst packJobsUseCase = container.resolve<IPackJobs>(IPackJobs);\\nconst publish = container.resolve<IPublish>(IPublish);\\nconst jobUtils = container.resolve<IJobUtils>(IJobUtils);\\nconst emit = defineEmits([\\\"close\\\"]);\\nconst items = ref<Array<ITableData>>([]);\\nconst validations = ref<boolean>(true);\\nconst selectedTarget = ref<string>(\\\"\\\");\\nconst disabledOptions = ref<Array<IDisabledOptions>>();\\nconst publishTargets = ref<Array<string>>();\\n\\nhandleItems();\\nprops.screenType == \\\"Deploy\\\" && syncPublishTargets();\\n\\nconst totalModuleCount = computed(() => items.value.filter((item) => item.type == \\\"module\\\").length);\\nconst checkedModuleCount = computed(() => items.value.filter((item) => item.type == \\\"module\\\" && item.allChildChecked).length);\\nconst saveButtonDisable = computed(() => (props.screenType == \\\"Deploy\\\" && props.platformSelection.web && selectedTarget.value == \\\"\\\") || !validations.value || !items.value.some((item) => item.checked || item.anyChildChecked));\\nconst startScreen = computed(() => (viewModel.studio.items as Array<IModel>).find(item => item.isRootPage == true));\\n\\n\\nwatch(items.value, (_new, _old) => {\\n    validations.value = validate();\\n    props.screenType == \\\"Deploy\\\" && syncPublishTargets();\\n});\\n\\n\\nfunction validate() {\\n    let result = true;\\n    const modules = items.value.filter(e => e.type == \\\"module\\\" && e.anyChildChecked);\\n    const appLayerItems = items.value.filter(e => e.type == \\\"qjson\\\" && e.checked);\\n\\n    if (props.screenType == \\\"Deploy\\\") {\\n        //FIXME: externalModules will be get from common places \\n        if (modules.length > 0)\\n            result = modules\\n                .filter(e => e.name != \\\"processmanager\\\").map(e => e.children).filter(e => !e?.find(f => f.type == \\\"entityDesigner\\\" && f.checked)).length <= 0\\n\\n        let isApplicationWillDeploy = appLayerItems.length > 0;\\n        if (isApplicationWillDeploy) {\\n            result = appLayerItems\\n                .map(e => viewModel.studio.items.find(item => item.ID == e.id) as IModel)\\n                .findIndex(e => ((e.additionals as IQJsonAdditionals).isRootPage)) != -1;\\n        }\\n    }\\n\\n    return result;\\n}\\n\\nfunction mobileFilter (model: IModel) {\\n    return props.platformSelection.web || !props.platformSelection.mobile ||\\n         !(model.modelType == \\\"bpmn\\\" || model.modelType == \\\"entityDesigner\\\" || model.modelType == \\\"process\\\");\\n} \\n\\nfunction handleItems() {\\n    items.value = viewModel.studio.items\\n        .filter((item) => item.objectType == \\\"module\\\" && item.children.length > 0)\\n        .map(\\n            (item) =>\\n            ({\\n                id: item.ID,\\n                collapsed: true,\\n                name: item.name,\\n                type: \\\"module\\\",\\n                anyChildChecked: true,\\n                allChildChecked: true,\\n                children: (item as IModule).children\\n                    .filter((child) => child.objectType == \\\"model\\\")\\n                    .filter(e => !props || props.screenType == \\\"Export\\\" || mobileFilter(e as IModel))\\n                    .map(\\n                        (child) =>\\n                        ({\\n                            id: child.ID,\\n                            parentId: item.ID,\\n                            checked: true,\\n                            name: child.name,\\n                            type: (child as IModel).modelType,\\n                            version: \\\"latest\\\",\\n                        } as ITableData)\\n                    ),\\n            } as ITableData)\\n        );\\n    viewModel.studio.items\\n        .filter((item) => item.objectType == \\\"model\\\" && item.usageType != \\\"appSettings\\\")\\n        .forEach((item) => {\\n            items.value.push({\\n                id: item.ID,\\n                checked: true,\\n                name: item.name,\\n                type: (item as IModel).modelType,\\n                version: \\\"latest\\\",\\n            });\\n        });\\n    const uiSettingsID = CryptoHelper.CreateGuid();\\n    const appSettings = viewModel.studio.items.filter((item) => item.objectType == \\\"model\\\" && item.usageType == \\\"appSettings\\\") as Array<IModel>;\\n    const uiSettings: ITableData = {\\n        id: uiSettingsID,\\n        collapsed: true,\\n        name: \\\"UI Settings\\\",\\n        type: \\\"module\\\",\\n        anyChildChecked: true,\\n        allChildChecked: true,\\n        children: appSettings.map((setting) => ({\\n            id: setting.ID,\\n            parentId: uiSettingsID,\\n            name: setting.name,\\n            type: (setting as IModel).modelType,\\n            checked: false,\\n            usageType: setting?.usageType,\\n        })) as Array<ITableData>,\\n    };\\n    items.value.unshift(uiSettings);\\n}\\n\\nfunction handleModuleCountCheckboxEvent(value: boolean) {\\n    items.value.forEach((item) => {\\n        item.checked = value;\\n        if (item.allChildChecked != undefined) item.allChildChecked = value;\\n        if (item.anyChildChecked != undefined) item.anyChildChecked = value;\\n        if (item.children) item.children.forEach((child) => (child.checked = value));\\n    });\\n}\\n\\nfunction handleCollapse(item: ITableData) {\\n    item.collapsed = !item.collapsed;\\n}\\n\\nfunction handleItemCheckEvent(item: ITableData) {\\n    if (item.type != \\\"module\\\") {\\n        item.checked = !item.checked;\\n        if (item.parentId) {\\n            const parent = items.value.find((i) => i.id == item.parentId)!;\\n            handleParentCheckedStatus(parent);\\n        }\\n    } else {\\n        if(item.children && item.children.length > 0) {\\n            if (item.anyChildChecked) {\\n                item.children?.forEach((child) => (child.checked = false));\\n                item.checked = false;\\n            } else {\\n                item.children?.forEach((child) => (child.checked = true));\\n                item.checked = true;\\n            }\\n            handleParentCheckedStatus(item);\\n        }\\n        else {\\n            item.checked = !item.checked;\\n            item.allChildChecked = false;\\n        }\\n        \\n    }\\n}\\n\\nfunction handleParentCheckedStatus(item: ITableData) {\\n    item.allChildChecked = !item.children?.some((child) => !child.checked);\\n    item.anyChildChecked = item.children?.some((child) => child.checked);\\n}\\n\\nfunction syncPublishTargets(){\\n    publishTargets.value = []; disabledOptions.value= [];\\n\\n    const targets = viewModel.user?.selectedOrganization?.actions?.publish?.targets;\\n    if(!targets)\\n        return;\\n\\n    const isSelectAnyItem = items.value.find(e => e.anyChildChecked || e.checked);\\n    if(!isSelectAnyItem){\\n        publishTargets.value = Object.entries(targets).map(e => cloudTargetMap(e[0])!);\\n        const disabledOptionList = Array<IDisabledOptions>();\\n        for(let i=0; i<publishTargets.value.length; i++){\\n            disabledOptionList.push({index:i, cause: \\\"You need to include items to publish.\\\"})\\n        }\\n        disabledOptions.value = disabledOptionList;\\n        return;\\n    }\\n\\n    const checkedPublishTargets = checkAndSetDisabledCauses(targets);\\n    const sortedTargets = checkedPublishTargets.sort((e, f) => ( !e.cause === !f.cause) ? 0 : e.cause ? 1: -1);\\n\\n    const disabledOptionList = Array<IDisabledOptions>();\\n    for(let i=0; i<sortedTargets.length; i++){\\n        const cause = sortedTargets[i].cause;\\n        if(cause) disabledOptionList.push({index:i, cause})\\n    }\\n    disabledOptions.value = disabledOptionList;\\n    publishTargets.value = sortedTargets.map(e => e.optionName);\\n\\n    selectedTarget.value = !sortedTargets[0].cause ? sortedTargets[0].optionName : \\\"\\\";\\n}\\n\\nfunction checkAndSetDisabledCauses(targets: Record<keyof IOrganizationCloud, boolean>){\\n    const list = Array<{optionName: string, cause?: string}>();\\n\\n    Object.keys(targets).forEach(e => {\\n        const key = e as keyof IOrganizationCloud;\\n        const value = targets[key];\\n        const optionName = cloudTargetMap(key)!;\\n        if(!value)\\n            return list.push({optionName, cause:  \\\"You are not authorized to publish to this target.\\\" });\\n        \\n\\n        switch (key) {\\n            case \\\"azure\\\":\\n                const traverseSelectedItems = (status: boolean, items?: Array<ITableData>) => {\\n                    if (!items || items.length == 0) { return status; }\\n                    for (const item of items) {\\n                        if(item.checked || item.anyChildChecked){\\n                            if (item.type == \\\"module\\\") {\\n                                status = traverseSelectedItems(status, item.children);\\n                            }\\n                            if(item.type == \\\"entityDesigner\\\" || item.type == \\\"bpmn\\\" || item.type == \\\"process\\\"){\\n                                status = false;\\n                                break;\\n                            }  \\n                        }\\n                        \\n                    }\\n                    return status;\\n                }\\n\\n                const status = traverseSelectedItems(true, items.value);\\n                if(!status)\\n                    return list.push({optionName, cause: \\\"Entity and process models cannot be published to this target.\\\" });\\n                break;\\n            case \\\"plateauGCP\\\":\\n                if(props.platformSelection.mobile)\\n                    return list.push({optionName, cause: \\\"This target is not available for mobile publishing.\\\" });\\n                break;\\n        }\\n\\n        list.push({optionName});\\n    })\\n\\n    return list;\\n}\\n\\nfunction versionDialog(item: ITableData) {\\n    const clickedNode = { id: item.id, state: { checked: item.checked }, text: item.name, type: item.type, version: item.version };\\n    dialog.showDialog(\\n        defineAsyncComponent(() => import(\\\"../../application/modelVersionDialog.vue\\\")),\\n        { closable: true, title: \\\"Change Version\\\", width: \\\"900px\\\", maxHeight: \\\"500px\\\", overflow: \\\"auto\\\" },\\n        { clickedNode }\\n    );\\n}\\n\\nfunction close() {\\n    emit(\\\"close\\\");\\n}\\n\\nasync function save() {\\n    executor.execute(\\n        async () => {\\n            const initAsGroup = async () => {\\n                const groupID = CryptoHelper.CreateGuid();\\n                await initHistory(groupID);\\n                await packJob(groupID);\\n                return groupID;\\n            }\\n\\n            switch (props.screenType) {\\n                case \\\"Export\\\":\\n                    const groupID = await initAsGroup();\\n                    await createExportJob(groupID);\\n                    break;\\n                case \\\"Deploy\\\":\\n                    if(props.platformSelection.mobile)\\n                        return await createAzureDeploy();\\n                    debugger;\\n                    switch (cloudTargetMap(selectedTarget.value!, true) as keyof IOrganizationCloud) {\\n                        case \\\"plateauGCP\\\":\\n                            const groupID = await initAsGroup();\\n                            await createDeployJob(groupID);\\n                            break;\\n                        case \\\"azure\\\":\\n                            await createAzureDeploy();\\n                            break;\\n                    }\\n            }\\n            emit(\\\"close\\\");\\n        },\\n        { loading: true });\\n}\\n\\nasync function createAzureDeploy() {\\n    const deployItems: Array<IExportItem> = [];\\n    const itemIdObj: Record<string, { item: IModel, path: string }> = {};\\n\\n    viewModelManager.flatMapItems(viewModel.studio.items, (item, path) => {\\n        if (item.objectType != \\\"model\\\") { return; }\\n        itemIdObj[item.ID] = { item, path };\\n        return item;\\n    });\\n\\n    const traverseSelectedItems = (items?: Array<ITableData>) => {\\n        if (!items || items.length == 0) { return; }\\n        items.forEach(item => {\\n            if (item.type == \\\"module\\\") {\\n                traverseSelectedItems(item.children);\\n                return;\\n            }\\n\\n            const itemMap = itemIdObj[item.id];\\n\\n            const deployItem: IExportItem = {\\n                id: item.id,\\n                name: jobUtils.getFileFullname(itemMap.item),\\n                path: itemMap.path,\\n                type: jobUtils.getItemType(itemMap.item),\\n                ver: item.version || \\\"latest\\\",\\n                isRootPage: itemMap.item.isRootPage,\\n                ownerType: 'application',\\n                ownerName: viewModel.studio.appName,\\n                size: itemMap.item.size,\\n            };\\n            deployItems.push(deployItem)\\n        });\\n    };\\n\\n    traverseSelectedItems(items.value);\\n\\n    await publish.createUI(deployItems, props.platformSelection);\\n}\\n\\nasync function initHistory(groupID: string) {\\n    return qcloudApi.initPublishHistory({\\n        appID: viewModel.studio.appId,\\n        ID: groupID,\\n        isMultiStep: true,\\n        type: props.screenType == \\\"Deploy\\\" ? \\\"publish\\\" : \\\"download\\\"\\n    });\\n}\\n\\nfunction isUsingPlateau() {\\n    const applications = viewModel.user!.selectedOrganization!.applications;\\n\\n    if (!applications)\\n        return false;\\n\\n    if (!applications.entity && !applications.process && !applications.bpmn)\\n        return false;\\n\\n    return true;\\n}\\n\\nfunction getItemPath(asset: ITableData, ownerName: string) {\\n    if (isUsingPlateau())\\n        return \\\"\\\";\\n    if (asset.type == \\\"qjson\\\")\\n        return ownerName;\\n    return \\\"\\\";\\n}\\n\\nfunction isUISettings(asset: ITableData) {\\n    return asset.name == \\\"UI Settings\\\";\\n}\\n\\n\\nasync function packJob(groupID: string) {\\n    let exportItemMap = new Map<string, Array<IExportItem>>();\\n\\n    items.value.forEach((asset) => {\\n        if (asset.checked) {\\n            //QUI\\n            if (asset.type == 'qjson') {\\n                const isThisrootPage = viewModel.studio.items.find(i => i.objectType == \\\"model\\\" && i.modelType == \\\"qjson\\\" && (i.additionals as IQJsonAdditionals).isRootPage && i.ID == asset.id);\\n\\n                const obj: IExportItem = {\\n                    id: asset.id,\\n                    ver: asset.version!,\\n                    type: jobUtils.getItemType({ usageType: asset.usageType, type: asset.type } as IExportViewItem),\\n                    path: \\\"\\\",\\n                    name: jobUtils.getFileFullname({ usageType: asset.usageType, type: asset.type, name: asset.name } as IExportViewItem),\\n                    ownerType: 'application',\\n                    ownerName: viewModel.studio.appName,\\n                    isRootPage: isThisrootPage ? true : undefined,\\n                };\\n\\n                let applicationModels = exportItemMap.get(viewModel.studio.appName);\\n                if (applicationModels && applicationModels.length > 0) {\\n                    applicationModels.push(obj);\\n                    exportItemMap.set(viewModel.studio.appName, applicationModels);\\n                }\\n                else\\n                    exportItemMap.set(viewModel.studio.appName, [obj]);\\n                return;\\n            }\\n        }\\n        if (asset.anyChildChecked && asset.children) {\\n            let checkedItems = Array<IExportItem>();\\n            asset.children!.forEach(child => {\\n                if (!child.checked || child.type == \\\"module\\\")\\n                    return;\\n                const exportItem: IExportItem = {\\n                    id: child.id,\\n                    ver: child.version!,\\n                    type: jobUtils.getItemType({ usageType: child.usageType, type: child.type, name: child.name } as IExportViewItem),\\n                    path: !isUISettings(asset) ? getItemPath(child, asset.name) : \\\"\\\",\\n                    name: jobUtils.getFileFullname({ usageType: child.usageType, type: child.type, name: child.name } as IExportViewItem),\\n                    ownerType: isUISettings(asset) || !isUsingPlateau() ? \\\"application\\\" : (asset.type === 'module' ? 'module' : 'application'),\\n                    ownerName: isUISettings(asset) || !isUsingPlateau() ? viewModel.studio.appName : asset.name\\n                };\\n                if (exportItem.type == \\\"entityDesigner\\\")\\n                    exportItem.entityGenerationDomain = viewModel.user!.selectedOrganization!.actions?.entityGenerationDomain;\\n                checkedItems.push(exportItem);\\n            });\\n\\n            if (checkedItems.length > 0) {\\n                if (!isUISettings(asset) && isUsingPlateau())\\n                    exportItemMap.set(asset.name, checkedItems);\\n                else {\\n                    let applicationModels = exportItemMap.get(viewModel.studio.appName);\\n                    if (applicationModels && applicationModels.length > 0) {\\n                        applicationModels.forEach(e => checkedItems.push(e));\\n                    }\\n                    exportItemMap.set(viewModel.studio.appName, checkedItems);\\n                }\\n            }\\n\\n        }\\n    })\\n\\n    let jobs = Array<ICreateExportJobParam>();\\n    exportItemMap.forEach((v, k) => {\\n        jobs.push({\\n            appID: viewModel.studio.appId,\\n            exportType: \\\"qui\\\",\\n            selectionData: v,\\n            layer: 0,\\n            groupID: groupID\\n        })\\n    })\\n\\n    await packJobsUseCase.createPackJobs(jobs);\\n}\\n\\nasync function createExportJob(groupID: string) {\\n    await executor.executeUseCase<ICreateExportJob>(ICreateExportJob, {\\n        appID: viewModel.studio.appId,\\n        exportType: \\\"qui\\\",\\n        selectionData: [],\\n        layer: 1,\\n        groupID: groupID\\n    });\\n}\\n\\nasync function createDeployJob(groupID: string) {\\n    //1-(n) L1- deployJob(build)\\n    let packages = await qcloudApi.getExportJobsByGroupId({ groupID })\\n        .then(jobs => jobs.jobs.filter(e => !isExternalModule(e.jobData as IExportJobData)).map(e => {\\n            const jobData = e.jobData as IExportJobData;\\n            return {\\n                ownerName: jobData.items[0].ownerName,\\n                jobID: e.jobID,\\n                type: jobData.items[0].ownerType,\\n                mainDir: getDeployableArchiveRoot(jobData)\\n            }\\n        }));\\n\\n    if (!packages || packages.length <= 0)\\n        return;\\n\\n    let buildJobs = Array<ICreateDeployJobParam>();\\n    packages.forEach(pack => {\\n        buildJobs.push({\\n            appID: viewModel.studio.appId,\\n            type: \\\"build\\\",\\n            package: {\\n                type: pack.type as DeployType,\\n                name: pack.ownerName!,\\n                mainDir: pack.mainDir!,\\n                zip: `${pack.jobID}.zip`,\\n            },\\n            layer: 1,\\n            groupID: groupID\\n        })\\n    })\\n\\n    await deployJobsUseCase.createBuildJobs(buildJobs);\\n\\n    //2-(1) L2- deployJob(deployment)\\n    let jobParam: ICreateDeployJobParam = {\\n        appID: viewModel.studio.appId,\\n        type: \\\"deployment\\\",\\n        deployConfig: {\\n            process: {\\n                configModelIDs: getProcessConfigList(),\\n                enabled: items.value.filter(asset => asset.checked && asset.children && asset.children.filter(child => child.checked && child.type == \\\"bpmn\\\")).length > 0\\n            }\\n        },\\n        layer: 2,\\n        groupID: groupID\\n    }\\n\\n    await deployJobsUseCase.startDeploymentJob(jobParam);\\n}\\n\\nfunction isExternalModule(jobData: IExportJobData){\\n    //FIXME: external modules may be dynamic\\n    return jobData.items[0].ownerType == \\\"module\\\" && jobData.items[0].ownerName == \\\"processmanager\\\";\\n}\\n\\nfunction getProcessConfigList() {\\n    let processConfigList = Array<IProcessConfigModelItem>();\\n    items.value.forEach((asset) => {\\n        if (asset.checked && asset.children) {\\n            const usingService = asset.children.find(c => c.type == \\\"entityDesigner\\\");\\n            if (!usingService)\\n                return;\\n\\n            const serviceName = PlateauHelper.getServiceNameFromModel(usingService.name);\\n            asset.children.forEach(child => {\\n                if (child.checked && child.type == \\\"process\\\") {\\n                    processConfigList.push({\\n                        moduleName: serviceName,\\n                        modelId: child.id,\\n                        modelName: child.name\\n                    })\\n                }\\n            })\\n        }\\n    })\\n    return processConfigList;\\n}\\n\\nfunction getDeployableArchiveRoot(jobData: IExportJobData) {\\n    //FIXME: change external modules\\n    if(jobData.items[0].ownerName == \\\"processmanager\\\")\\n        return \\\"\\\";\\n    if (jobData.items[0].ownerType == \\\"module\\\") {\\n        let edModel = jobData.items.find(e => e.type == \\\"entityDesigner\\\");\\n        if (!edModel)\\n            throw new Error(\\\"!!! this module cannot deploy. Because its have not a service\\\");\\n        return PlateauHelper.getServiceNameFromModel(edModel.name);\\n    }\\n    return PlateauHelper.getQuiPackageNameFromAppName(jobData.app.name);\\n}\\n\\nfunction cloudTargetMap(name: string, pureVal : boolean = false) {\\n    const map: Record<keyof IOrganizationCloud, string> = { azure: \\\"Public Cloud\\\", plateauGCP: \\\"Plateau Platform Playground\\\"};\\n    if(pureVal) {\\n        return Object.keys(map).find(e => {\\n            if(map[e as keyof IOrganizationCloud] === name){\\n                return true;\\n            }\\n        })\\n    }else {\\n        let key = Object.keys(map).includes(name);\\n        if(!key)\\n            return;\\n        return map[name as keyof IOrganizationCloud];\\n    }\\n}\\n\\nfunction onTargetSelect(value: string) {\\n    selectedTarget.value = value\\n}\\n\\n</script>\\n\\n\\n<style scoped>\\n.container {\\n    padding: 32px 20px 20px;\\n}\\n.settings-container {\\n    position: relative;\\n    top: 0px;\\n    left: 0px;\\n}\\n\\n.custom-text {\\n    /* position: absolute; */\\n    font-family: 'Roboto';\\n    font-style: normal;\\n    font-weight: 500;\\n    font-size: 15px;\\n    line-height: 18px;\\n    /* left: 24px; */\\n    color: #212121;\\n}\\n\\n/* .custom-text.title{\\n    top: 92px;\\n}\\n\\n.custom-text.environment{\\n    top: 174px;\\n} */\\n\\n.radio-button {\\n    position: absolute;\\n    top: 60px;\\n    left: 20px;\\n    cursor: pointer;\\n}\\n\\n.radio-text {\\n    position: absolute;\\n    top: 59px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n    user-select: none;\\n    cursor: pointer;\\n}\\n\\n.existing-app-url {\\n    position: absolute;\\n    width: 760px;\\n    height: 40px;\\n    top: 114px;\\n    left: 20px;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #bcbcbc;\\n    border-radius: 4px;\\n    font: normal normal normal 14px/19px Roboto;\\n    letter-spacing: 0px;\\n    padding: 10px 0px 10px 10px;\\n}\\n\\n.url-error {\\n    border: 1px solid red;\\n}\\n\\n.url-disable {\\n    opacity: 0.5;\\n}\\n\\n.existing-app-url::placeholder {\\n    color: #bcbcbc;\\n    user-select: none;\\n}\\n\\n.modules-selected-checkbox {\\n    cursor: pointer;\\n}\\n\\n.modules-selected-checkbox.deploy {\\n    /* top: 257px; */\\n}\\n\\n.modules-selected-text {\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #757575;\\n    margin: 0 0 13px 30px;;\\n}\\n\\n/* .modules-selected-text.deploy {\\n    top: 257px;\\n} */\\n\\n.text-number {\\n    font: normal normal bold 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.modules-datatable {\\n    width: 760px;\\n    height: 288px;\\n    border: 1px solid #bcbcbc;\\n    overflow-x: hidden;\\n    overflow-y: auto;\\n    margin-bottom: 20px;\\n}\\n\\n/* .modules-datatable.deploy {\\n    top: 286px;\\n} */\\n\\n.modules-datatable::-webkit-scrollbar {\\n    width: 4px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar-thumb {\\n    background: #bcbcbc 0% 0% no-repeat padding-box;\\n    border-radius: 10px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar-thumb:hover {\\n    background: #555;\\n}\\n\\n.row-container {\\n    width: 100%;\\n    height: 36px;\\n    position: relative;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #e0e0e0;\\n}\\n\\n.chevron {\\n    position: absolute;\\n    left: 4px;\\n    color: #bcbcbc;\\n    font-size: 24px;\\n}\\n\\n.module-checkbox {\\n    position: absolute;\\n    top: 10px;\\n    left: 43px;\\n    cursor: pointer;\\n}\\n\\n.module-name {\\n    position: absolute;\\n    top: 9px;\\n    left: 69px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.model-checkbox {\\n    position: absolute;\\n    top: 10px;\\n    left: 59px;\\n    cursor: pointer;\\n}\\n\\n.model-icon {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 85px;\\n}\\n\\n.app-tier-model-icon {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 69px;\\n}\\n\\n.app-tier-model-name {\\n    position: absolute;\\n    top: 10px;\\n    left: 87px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.model-name {\\n    position: absolute;\\n    top: 9px;\\n    left: 103px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.version-text {\\n    margin: 10px 7px 10px auto;\\n    display: table;\\n    font: normal normal normal 12px/16px Roboto;\\n    color: #757575;\\n    cursor: pointer;\\n    user-select: none;\\n}\\n\\n.version-icon {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #151233;\\n}\\n\\n.footer {\\n    position: relative;\\n    width: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: end;\\n}\\n\\n.footer.deploy {\\n    position: relative;\\n    width: 100%;\\n}\\n\\n.footer.export {\\n    margin-top: 102px;\\n}\\n.cancel-button {\\n    border-radius: 4px;\\n    user-select: none;\\n    font-style: normal;\\n    font-weight: 500;\\n    font-family: \\\"ROBOTO\\\";\\n    font-size: 15px;\\n    color: #757575;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n\\n\\n\\n.save-button {\\n    background: #151233 0% 0% no-repeat padding-box;\\n    border-radius: 4px;\\n    user-select: none;\\n    font-weight: 500;\\n    font-size: 15px;\\n    color: #ffffff;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n.mobile-publish-text,\\n.web-publish-text {\\n    padding: 5px 12px;\\n    margin-bottom: 52px;\\n    width: 100%;\\n    color: #757575;\\n    font-size: 14px;\\n    background: #F5F5FA;\\n    border-radius: 4px;\\n    display: flex;\\n    align-items: center;\\n}\\n.mobile-publish-text i,\\n.web-publish-text i {\\n    font-size: 24px;\\n    color: #151233;\\n    margin-right: 4px;\\n}\\n.save-button.deploy {\\n    padding: 10px 16px;\\n}\\n\\n.button-disable .save-button {\\n    opacity: 0.5;\\n}\\n.button-disable .save-button:hover + .button-tooltip,\\n.start-screen:hover .button-tooltip,\\n.publish-info:hover .button-tooltip {\\n    visibility: visible;\\n    transition: opacity 0.3s ease-out 1s;\\n    opacity: 1;\\n}\\n\\n.button-tooltip {\\n    visibility: hidden;\\n    position: absolute;\\n    background: #757575;\\n    color: #FFFFFF;\\n    font-size: 11px;\\n    font-family: 'Roboto';\\n    text-align: center;\\n    border-radius: 4px;\\n    letter-spacing: 0.2px;\\n    padding: 6px 8px 6px 8px;\\n    top: 56px;\\n    left: 63px;\\n    opacity: 0;\\n}\\n.publish-info {\\n    color: #757575;\\n    font-size: 20px;\\n    margin-left: 10px;\\n}\\n.qjson-color {\\n    color: #449dd1;\\n}\\n\\n.yaml-color {\\n    color: #449dd1;\\n}\\n\\n.js-color {\\n    color: #449dd1;\\n}\\n\\n.process-color {\\n    color: #007c77;\\n}\\n\\n.bpmn-color {\\n    color: #007c77;\\n}\\n\\n.entity-designer-color {\\n    color: #e9724c;\\n}\\n\\n.select-environment {\\n    width: 100%;\\n    font-size: 15px;\\n    height: 40px;\\n    line-height: 40px;\\n    margin-top: 4px\\n}\\n\\n</style>\\n\\n<style>\\n.selected-environment {\\n    background-color: transparent;\\n    border-radius: 4px;\\n    border: 1px solid #BCBCBC;\\n    color: #212121;\\n    padding-left: 12px;\\n}\\n.custom-placeholder:empty:before {\\n    color:#BCBCBC !important;\\n    font-weight: 400;\\n}\\n.custom-select .items .option {\\n    font-size: 14px;\\n    padding-left: 12px;\\n    line-height: 32px;\\n}\\n.custom-select .items .option:hover {\\n    background-color: #EEEEEE;\\n    color: #212121;\\n}\\n\\n.custom-select .items .option.disabled:hover {\\n    background-color: #FFFFFF;\\n    color: #212121;\\n}\\n\\n.custom-select.select-environment .items {\\n    margin-top: 4px;\\n    color: #212121;\\n    border-radius: 4px;\\n    border: 1px solid #E3E3E3;\\n    overflow: hidden;\\n    background-color: #FFFFFF;\\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\\n    position: static !important;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","export class CryptoHelper {\n    private static guidCounter = 0;\n\n    /**\n     * \n     * @param base number layout (number of distinct digits) (10'luk sayı düzeni, 16'lık sayı düzeni)\n     * @param length length of word. Max value: 16\n     */\n    public static GetRandomWord(base: number, length: number) {\n        return Math.random().toString(base).substring(2, length + 2);\n    }\n\n    /**\n     * Ex: be945482-jf10-40d1-a50d-rzxa2c41fdcu\n     */\n    public static CreateGuid() {\n        return [8, 4, 4, 4, 6].map(length => this.GetRandomWord(36, length)).join(\"-\") + ((++CryptoHelper.guidCounter) % 2150000000).toString(36);\n    }\n}","import { IOrganization } from \"../../qCloudTemp/membership\";\n\nexport class PlateauHelper {\n    public static getPlateauEnvironmentName = (tenant: IOrganization, appName: string) => {\n        let envPrefix = tenant.cloud?.plateauGCP?.environmentPrefix;\n        if(!envPrefix || !appName)\n            throw new Error(\"Environment name prefix or application name not found!!!\" );\n\n        envPrefix = (envPrefix.endsWith(\"-\") ? envPrefix : (envPrefix + \"-\")).toLowerCase();\n        appName = PlateauHelper.purify(appName);\n        return `${envPrefix}${appName}`;\n    }\n\n    public static purify = (str: string) => str.replace(/[^a-zA-Z0-9]/g, \"\").toLowerCase();\n\n    public static getQuiPackageNameFromAppName = (appName: string) => `${PlateauHelper.purify(appName)}-qui`;\n\n    public static getApplicationUINameFromQuiPkg = (quiPackageName: string) => PlateauHelper.purify(quiPackageName.replace(\"-qui\", \"ui\"));\n    \n    public static getApplicationHostNamePrefix = (appName: string) => `${PlateauHelper.purify(appName)}ui`;\n\n    public static getServiceNameFromModel = (modelName: string) => PlateauHelper.purify(modelName.replace(\".dm\", \"\"));\n}","import { ExportType, ICreateDeployJobParam, ICreateExportJobParam, IDeployJobItem, IExportItem, IExportJobData, IExportJobDbItem, IExportJobHistoryDbItem, IExportJobHistoryRequest, IGetExportJobsByGroupIDRequest, IInitJobHistoryRequest, IListExportJobsResponse, JobType } from \"@stechquick/algae/lib/qCloudTemp/exporter\";\nimport { AppSettingsModelKeys, AuthenticationType, IAppDeployParameters, IModelBody, IModelBodyObject, IModelInfo, IQCloudLogItem, ISystemUser, ITenantDefinitions, ModelType, UsageType, IApplicationExportSettings } from \"@stechquick/algae/lib/qCloudTemp/quickCloud\";\nimport { IModuleProduct, IModuleProductVer } from \"@stechquick/algae/lib/qCloudTemp/store\";\nimport { ICustomLivePreview, IDefaultLivePreview, ILivePreview, ILivePreviewSettingsRetval } from \"@stechquick/algae/lib/qCloudTemp/livePreview\";\nimport { IApplication, IFolder, IModel, IModule, IExportViewItem, ILoggedInUser, ModelAdditionals, IExportJobItem, ModelHistoryType, IModelHistoryInfo, IExportJobStepItem, ITreeviewItem, IExportJobArtifactInfoItem, IModuleSettingsItem, IApplicationSettingsItem } from \"../model/models\";\nimport { TemplateType, ITemplateInfo } from '@stechquick/algae/lib/qCloudTemp/template';\nimport { IOrganization } from \"@stechquick/algae/lib/qCloudTemp/membership\";\nimport { IAddFeedbackRequest, IAddFeedbackResponse, IAddOrUpdatePreferencesResponse, ICreateOrganizationResponse, IDeleteInvitationRequest, IGetOrganizationUsersRequest, IGetOrganizationUsersResponse, IGetPreferencesResponse, IGetProfileResponse, IInvitationRequest, IListInvitationsResponse, IListOrganizationsResponse, IRemoveUserFromOrganizationRequest, ISignInResponse, IUpdateInvitationRequest, IUpdateProfileResponse } from \"@stechquick/algae/lib/qCloudTemp/symDtoObjects\";\n\nexport interface IGetModelResponse {\n    ID: IModel[\"ID\"];\n    name: IModel[\"name\"];\n    checkouts?: Array<{ user: string, date: string }>;\n    modelType: IModel[\"modelType\"];\n    modelAdditionals: IModel[\"additionals\"];\n    model?: Array<IModelBodyObject>;\n    size?: number;\n}\n\nexport interface IGetModelHistoryResponse extends IGetModelResponse {\n    modelID: string;\n    historyType: string;\n    ownerItem: string;\n    version: string\n}\nexport interface IlistExportJobStepLogsResponse {\n    logs: Array<string>;\n}\nexport interface IDublicateModelResponse {\n    modelInfo: IModelInfo;\n    modelBody: Array<IModelBody>;\n}\n\nexport interface IUpdateLivePreviewRequest {\n    links?: ICustomLivePreview[\"links\"];\n    deepLinkParam?: ICustomLivePreview[\"deepLinkParam\"];\n    models?: ICustomLivePreview[\"models\"];\n    expiryDate?: ICustomLivePreview[\"expiryDate\"];\n    password?: ICustomLivePreview[\"password\"];\n    selected?: ICustomLivePreview[\"selected\"];\n}\n\nexport interface ICreateLivePreviewRequest {\n    appID: string;\n    type: ILivePreview[\"type\"];\n    links?: ICustomLivePreview[\"links\"];\n    deepLinkParam?: ICustomLivePreview[\"deepLinkParam\"];\n    models?: ICustomLivePreview[\"models\"];\n    expiryDate?: ICustomLivePreview[\"expiryDate\"];\n    password?: ICustomLivePreview[\"password\"];\n    selected: ICustomLivePreview[\"selected\"];\n}\n\nexport interface ICreateModelFromTemplateParam {\n    name: string;\n    parentObjectId: string;\n    modelInfoID: string;\n    modelType: ModelType;\n    modelAdditionals: ModelAdditionals;\n}\n\nexport interface IListModelsRequest {\n    applicationID: string;\n    getModelBodies?: boolean;\n    usageType?: UsageType;\n}\n\nexport interface ICreateUserRequest { \n    name: string;\n    mailAddress: string;\n    password: string;\n}\n\nexport interface IUpdateApplicationRequestParams {\n    name?: string;\n    description?: string;\n    logo?: string;\n    color?: string;\n    ownerUser?: ILoggedInUser;\n    deployParameters?: IAppDeployParameters;\n    shortID24?: string;\n    exportSettings?: IApplicationExportSettings;\n}\n\nexport interface IQCloudApi {\n    signIn(invitationId?: string): Promise<ISignInResponse>;\n    signOut(): Promise<void>;\n    getProfile(): Promise<IGetProfileResponse>;\n    updateProfile(properties: { name: string, lastName: string, role: string, }): Promise<IUpdateProfileResponse>;\n    getPreferences(): Promise<IGetPreferencesResponse>;\n    updatePreferences(preferences: { emailConsent: boolean; }): Promise<IAddOrUpdatePreferencesResponse>\n    listOrganizations(): Promise<Array<IListOrganizationsResponse>>;\n    getOrganization(organizationId: IOrganization[\"id\"]): Promise<IOrganization>;\n    listUserInvitations(): Promise<IListInvitationsResponse>;\n    createOrganization(name: IOrganization[\"name\"]): Promise<ICreateOrganizationResponse>;\n\n\n\n    createModel(params: { name: string, parentObject: IApplication | IModule | IFolder, modelBody: Array<IModelBodyObject> | undefined, modelType: ModelType, modelAdditionals?: ModelAdditionals, usageType?: UsageType, key?: AppSettingsModelKeys }): PromiseLike<IModel>;\n    createModule(name: string, options: { description?: string; applicationID?: string }): Promise<IModule>;\n    createApplication(params: { name: string, description?: string, logo?: string, color?: string, deployParameters?: IAppDeployParameters }): PromiseLike<{ application: IApplication, organization: IOrganization }>;\n    createLog(logItem: IQCloudLogItem): Promise<{ ID: string; }>;\n    getModelInfo(ID: string, params?: { checkoutControl?: boolean; createCheckout?: boolean; }): Promise<IGetModelResponse>;\n    getModel(ID: string, params?: { checkoutControl?: boolean, createCheckout?: boolean, retrieveBody?: boolean }): Promise<IGetModelResponse>;\n    getModelBody(ID: string): Promise<{ ID: string, model: IGetModelResponse[\"model\"] }>;\n    updateModel(ID: string, params: {\n        name?: string, model?: Array<IModelBodyObject>, checkin?: boolean, release?: boolean, publish?: boolean, shortComment?: string, comment?: string,\n        parentObject?: IApplication | IModule | IFolder, modelType?: ModelType, modelAdditionals?: ModelAdditionals, ownerUser?: ILoggedInUser\n    }): PromiseLike<void>;\n    updateModule(ID: string, params: { name?: string, description?: string, ownerUser?: ILoggedInUser, }): PromiseLike<{ module: IModule }>;\n    updateFolder(ID: string, params: { name: string }): Promise<void>;\n    updateApplication(ID: string, params: IUpdateApplicationRequestParams): PromiseLike<{ app: IApplication }>;\n    deleteModel(ID: string, addHistory?: boolean): PromiseLike<void>;\n    deleteModule(ID: string, addHistory?: boolean): PromiseLike<void>;\n    deleteFolder(ID: string, addHistory?: boolean): PromiseLike<void>;\n    deleteApplication(ID: string, addHistory?: boolean): PromiseLike<void>;\n    duplicateModel(sourceModel: IModel, name: string): Promise<IModel>;\n    listApplications(getDetails?: boolean): PromiseLike<Array<IApplication>>;\n    listModules(applicationID?: string): Promise<Array<IModule>>;\n    listModels(options: IListModelsRequest): Promise<Array<IGetModelResponse>>;\n    getLPSettings(appID: string): Promise<Record<AppSettingsModelKeys, ILivePreviewSettingsRetval>>;\n    listModuleChildItems(module: IModule): Promise<Array<IModel>>;\n    listModelBodies(modelIDs: Array<string>): Promise<Array<IModelBody>>;\n    getApplicationDetails(appID: string): PromiseLike<IApplication[\"details\"]>;\n    getApplication(appID: string): Promise<IApplication>;\n    getExportTypes(): Promise<Array<{ name: ExportType; text: string; }>>;\n    getExportSelectionData(applicationID: string, exportType: ExportType): Promise<Array<IExportViewItem>>;\n    listModelHistories(modelID: string, historyType?: ModelHistoryType | undefined): Promise<IModelHistoryInfo[]>;\n    getModelHistory(historyID: string): Promise<IGetModelHistoryResponse>;\n    createExportJob(appID: string, exportType: ExportType, exportItems: Array<IExportItem>, groupID: string, layer: number): Promise<IExportJobItem>;\n    createDeployJobs(deployJobs: Array<IDeployJobItem>, isGroup: boolean): Promise<void>;\n    createBuildJobs(jobs: Array<ICreateDeployJobParam>): Promise<Array<IExportJobDbItem>>;\n    startDeploymentJob(param: ICreateDeployJobParam): Promise<IExportJobDbItem>;\n    createPackJobs(jobs: Array<ICreateExportJobParam>): Promise<Array<IExportJobDbItem>>;\n    getExportJobsByGroupId(req: IGetExportJobsByGroupIDRequest): Promise<IListExportJobsResponse>;\n    listExportJobs(jobType: JobType, options?: { appID?: string }): Promise<Array<IExportJobItem>>;\n    initPublishHistory(request: IInitJobHistoryRequest): Promise<IExportJobHistoryDbItem>;\n    listApplicationJobHistory(request: IExportJobHistoryRequest): Promise<Array<IExportJobHistoryDbItem>>;\n    listExportJobSteps(ID: string, isMultiStep?: boolean): Promise<Array<IExportJobStepItem>>;\n    listExportJobStepLogs(stepID: string): Promise<IlistExportJobStepLogsResponse>;\n    listExportJobArtifacts(ID: string): Promise<Array<IExportJobArtifactInfoItem>>;\n    listTreeviewItems(applicationID: string): Promise<Array<ITreeviewItem>>;\n    updateApplicationSettings(settings: { modulesSettings?: Array<IModuleSettingsItem>, applicationSettings?: IApplicationSettingsItem }): Promise<void>;\n    attachModuletoApplication(appID: string, moduleID: string): Promise<void>;\n    detachModuleFromApplication(appID: string, moduleID: string): Promise<void>;\n    getApplicationUISettings(applicationID?: string): Promise<Array<ITenantDefinitions>>;\n    getApplicationDeploySettings(applicationID: string): Promise<ITenantDefinitions[]>;\n    getTenantDefinition(ID: string): Promise<ITenantDefinitions>;\n    setRootScreen(ID: string): Promise<void>;\n    putModuleInStore(objectID: string): Promise<{ product: IModuleProduct; productVer: IModuleProductVer }>;\n    createLivePreview(options?: ICreateLivePreviewRequest): Promise<ILivePreview>;\n    updateLivePreview(ID: string, options?: IUpdateLivePreviewRequest): PromiseLike<void>;\n    updateSelectedLivePreview(appID: string): PromiseLike<void>;\n    getLivePreviewInfo(appID: string, options?: { selected?: boolean; type?: ILivePreview[\"type\"]; }): Promise<ICustomLivePreview | IDefaultLivePreview>;\n    listLivePreviewInfo(appID: string): Promise<Array<ICustomLivePreview | IDefaultLivePreview>>;\n    listTemplateInfos(type?: TemplateType): Promise<Array<ITemplateInfo>>;\n    createModelFromTemplate(params: {modelInfoID: ITemplateInfo[\"ID\"], modelType: ModelType, name: string, parentObject: IApplication | IModule | IFolder, modelAdditionals?: ModelAdditionals }): Promise<IModel>;\n\n    createInvitation(request: IInvitationRequest): Promise<void>;\n    listOrganizationUsers(request: IGetOrganizationUsersRequest): Promise<IGetOrganizationUsersResponse>;\n    listOrganizationInvitations(): Promise<IListInvitationsResponse>;\n    deleteInvitation(request: IDeleteInvitationRequest): Promise<void>;\n    removeUserFromOrganization(request: IRemoveUserFromOrganizationRequest): Promise<void>;\n    updateInvitation(request: IUpdateInvitationRequest): Promise<void>;\n\n    createFeedback(request: IAddFeedbackRequest): Promise<IAddFeedbackResponse>\n}\n\nexport const IQCloudApi = Symbol.for(\"IQCloudApi\");","import { ICreateExportJobParam } from \"@stechquick/algae/lib/qCloudTemp/exporter\";\nimport { IUseCase } from \"./IUseCase\";\n\nexport interface ICreateExportJob extends IUseCase<void, ICreateExportJobParam> {}\n\nexport const ICreateExportJob = Symbol.for(\"ICreateExportJob\");","import { ICreateDeployJobParam, IDeployJobItem } from \"@stechquick/algae/lib/qCloudTemp/exporter\";\nimport { IProviderGetLastBuildStatusResponse } from \"../infrastructure/IProviderApi\";\n\nexport interface IDeployJobs {\n    createDeployJobs(deployJobs: Array<IDeployJobItem>, isGroup: boolean): Promise<void>;\n    startDeploymentJob(deployJobs: ICreateDeployJobParam): Promise<void>;\n    createBuildJobs(deployJobs: Array<ICreateDeployJobParam>): Promise<void>;\n    checkRepoHasService(repoIds: Array<number>): Promise<Array<{ repoId: number; exist: boolean }>>;\n    getRepoNameById(repoId: number): Promise<string>;\n    getProductConfigInfo(productRepoId: number, quiRepoId?: number): Promise<{ domain: string; quiName?: string }>;\n    getLastBuildStatus(jobName: string): Promise<IProviderGetLastBuildStatusResponse>;\n}\n\nexport const IDeployJobs = Symbol.for(\"IDeployJobs\");","import { IExportItem } from \"@stechquick/algae/lib/qCloudTemp/exporter\";\nimport { IExportViewItem, IModel } from \"../model/models\";\n\nexport interface IJobUtils {\n    //settingTypeMapper(fileName: string): IExportItem[\"type\"];\n    getItemType(item: IExportViewItem | IModel): IExportItem[\"type\"];\n    getFileFullname(item: IExportViewItem | IModel): string;\n}\n\nexport const IJobUtils = Symbol.for(\"IJobUtils\");","import { ICreateExportJobParam, IExportJobDbItem } from \"@stechquick/algae/lib/qCloudTemp/exporter\";\nexport interface IPackJobs {\n    createPackJobs(jobs: Array<ICreateExportJobParam>): Promise<Array<IExportJobDbItem>>;\n}\n\nexport const IPackJobs = Symbol.for(\"IPackJobs\");","import { IExportItem, IPlatformSelection } from \"@stechquick/algae/lib/qCloudTemp/exporter\";\n\nexport interface IPublish {\n    createUI(deployItems: Array<IExportItem>, platformSelection?: IPlatformSelection ): Promise<void>;\n}\nexport const IPublish = Symbol.for(\"IPublish\");","<template>\n  <div class=\"custom-select\" :tabindex=\"tabindex\" @blur=\"open = false\">\n    <div :class=\"open ? 'open selected ' + selectedClass : 'selected ' + selectedClass\" @click=\"open = !open\">\n      <div v-if = \"selected\">{{ typeof selected === 'object' ? selected.name : selected }}\n        <i class=\"mdi mdi-chevron-down\"></i>\n      </div>\n      <div v-else>\n        <span contenteditable=\"true\" :data-placeholder=\"placeholder\" class=\"custom-placeholder\"></span>\n        <i class=\"mdi mdi-chevron-down\"></i>\n      </div>\n    </div>\n    <div class=\"items\" :class=\"{ selectHide: !open }\" :style=\"{padding: extraButton ? '10px 0 0' : '10px 0'}\">\n      <div v-for=\"(option, i) of options\" :key=\"i\" @click=\"handleClick(option)\" :class=\"['option' , (props.disabledOptions && getDisabledOptionsText(i)) ? 'disabled' : '' ]\">\n        <span v-if=\"props.disabledOptions && getDisabledOptionsText(i)\" class=\"button-tooltip\" :style=\"{top: (i*32) + 85 + 'px'}\">{{getDisabledOptionsText(i)}}</span>\n        <div>{{typeof option === 'object' ? option.name : option }}</div>\n      </div>\n      <div v-if=\"extraButton\" class=\"button-div\" :style=\"{borderTop: extraButton ? '1px solid #EEEEEE' :  'none'}\" >\n        <div v-for=\"(button, index) in buttons\" :key=\"index\">\n            <div :id=\"'option-button-' + index\" :class=\"button.buttonClass + ' button'\" @click=\"open=false\">{{ button.buttonText }}</div>\n        </div>\n      </div>\n    </div>  \n  </div>\n</template>\n\n<script setup>\nimport { ref, watchEffect } from 'vue'\nconst emit = defineEmits([\"input\"]);\nconst props = defineProps({\n  options: {\n    type: Array,\n    required: true,\n  },\n  disabledOptions: {\n    type: Array,\n    required: false\n  },\n  default: {\n    type: String,\n    required: false,\n    default: '',\n  },\n  selectedOption: {\n    type: String,\n    required: false\n  },\n  tabindex: {\n    type: Number,\n    required: false,\n    default: 0,\n  },\n  placeholder: {\n    type: String,\n    required: false,\n    default: \"\",\n  },\n  selectedClass: {\n    type: String,\n    required: true,\n    default: \"\",\n  },\n  extraButton: {\n    type: Boolean,\n    required: false,\n    default: false,\n  },\n  buttons: {\n    type: Array,\n    required: false,\n    default: () => [],\n    validator: (value) => {\n      return value.every(\n        (button) =>\n          typeof button === \"object\" &&\n          typeof button.buttonText === \"string\" &&\n          typeof button.buttonClass === \"string\"\n      );\n    },\n  },\n})\n\nconst open = ref(false);\nconst selected = ref(props.default ? props.default : null);\n\nwatchEffect(() => {\n  if(props && props.selectedOption){\n    selected.value = props.selectedOption;\n    open.value = false;\n  }\n});\n\nconst handleClick = (option) => {\n    if(typeof option === 'object'){\n      emit('input', option.id);\n      selected.value = option;\n      open.value = false;\n      emit('input', selected.value.id);\n    }\n    else if(typeof option === 'string') {\n      emit('input', option);\n      selected.value = option;\n      open.value = false;\n      emit('input', selected.value);\n    }\n}\n\nconst getDisabledOptionsText = (index) => {\n  const opt = props.disabledOptions.find(e => e.index == index);\n  if(opt)\n    return opt.cause;\n  return undefined;\n}\n</script>\n\n  \n  <style scoped>\n  /*You should put other CSS properties with same class names in the parent component's style tag that is not scoped.*/\n  * {\n    font-family: \"Roboto\"\n  }\n  .custom-select {\n    position: relative;\n    width: 100%;\n    text-align: left;\n    outline: none;\n  }\n  \n  .custom-select .selected {\n\n    cursor: pointer;\n    user-select: none;\n  }\n  \n  .custom-select .selected i {\n    position: absolute;\n    right: 10px;\n    float: right;\n  }\n  \n  .custom-select .items {\n    position: absolute;\n    left: 0;\n    right: 0;\n    z-index: 1;\n  }\n  \n  .custom-select .items .option {\n    cursor: pointer;\n    user-select: none;\n  }  \n  \n  .custom-select .items .option.disabled div {\n    cursor: default;\n    user-select: none;\n    opacity: 0.4;\n  } \n  .custom-select .items .option.disabled:active {\n    pointer-events: none;\n  }\n  \n  .selectHide {\n    display: none;\n  }\n  .button-div {\n    justify-content: center;\n    display: grid;\n    padding: 13px 0 19px;\n    margin-top: 10px\n  }\n  .button {\n    cursor: pointer;\n  }\n  .custom-placeholder:empty:before {\n    content:attr(data-placeholder);\n    color:#616161\n  }\n  .custom-placeholder:focus-visible {\n    outline: none;\n  }\n  .button-tooltip {\n    visibility: hidden;\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n    padding: 8px;\n    top: 39px;\n    left: 65px;\n    height: 30px;\n    position: absolute;\n    background: #757575;\n    color: #FFFFFF;\n    font-size: 12px;\n    line-height: 14px;\n    text-align: center;\n    border-radius: 4px;\n    letter-spacing: 0.2px;\n    opacity: 0;\n    z-index: 1;\n  }\n  .custom-select .items .option:hover .button-tooltip {\n    visibility: visible;\n    transition: opacity 0.3s ease-out 0.5s;\n    opacity: 1;\n  }\n  </style>","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./customSelect.vue?vue&type=style&index=0&id=237b87c3&scoped=true&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./customSelect.vue?vue&type=style&index=0&id=237b87c3&scoped=true&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","import script from \"./customSelect.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./customSelect.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./customSelect.vue?vue&type=style&index=0&id=237b87c3&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/QCloud-Shell/QCloud-Shell/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-237b87c3\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, normalizeClass as _normalizeClass, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vShow as _vShow, withDirectives as _withDirectives, createStaticVNode as _createStaticVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-3c5758a8\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"container\" }\nconst _hoisted_2 = { class: \"text-number\" }\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\" of \")\nconst _hoisted_4 = { class: \"text-number\" }\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\" modules selected \")\nconst _hoisted_6 = { key: 0 }\nconst _hoisted_7 = { class: \"row-container\" }\nconst _hoisted_8 = [\"onClick\"]\nconst _hoisted_9 = { class: \"module-name\" }\nconst _hoisted_10 = { class: \"row-container\" }\nconst _hoisted_11 = {\n  key: 0,\n  class: \"mdi mdi-palette qjson-color model-icon\"\n}\nconst _hoisted_12 = {\n  key: 1,\n  class: \"mdi mdi-cog-outline yaml-color model-icon\"\n}\nconst _hoisted_13 = {\n  key: 2,\n  class: \"mdi mdi-cog-outline js-color model-icon\"\n}\nconst _hoisted_14 = {\n  key: 3,\n  class: \"mdi mdi-auto-fix process-color model-icon\"\n}\nconst _hoisted_15 = {\n  key: 4,\n  class: \"mdi mdi-vector-polyline bpmn-color model-icon\"\n}\nconst _hoisted_16 = {\n  key: 5,\n  class: \"mdi mdi-database entity-designer-color model-icon\"\n}\nconst _hoisted_17 = {\n  key: 6,\n  class: \"mdi mdi-step-forward bpmn-color model-icon\"\n}\nconst _hoisted_18 = { class: \"model-name\" }\nconst _hoisted_19 = [\"onClick\"]\nconst _hoisted_20 = {\n  key: 0,\n  class: \"mdi mdi-pencil-outline version-icon\"\n}\nconst _hoisted_21 = { key: 1 }\nconst _hoisted_22 = { class: \"row-container\" }\nconst _hoisted_23 = {\n  key: 0,\n  class: \"mdi mdi-palette qjson-color app-tier-model-icon\"\n}\nconst _hoisted_24 = {\n  key: 1,\n  class: \"mdi mdi-cog-outline yaml-color app-tier-model-icon\"\n}\nconst _hoisted_25 = {\n  key: 2,\n  class: \"mdi mdi-cog-outline js-color app-tier-model-icon\"\n}\nconst _hoisted_26 = {\n  key: 3,\n  class: \"mdi mdi-auto-fix process-color app-tier-model-icon\"\n}\nconst _hoisted_27 = {\n  key: 4,\n  class: \"mdi mdi-vector-polyline bpmn-color app-tier-model-icon\"\n}\nconst _hoisted_28 = {\n  key: 5,\n  class: \"mdi mdi-database entity-designer-color app-tier-model-icon\"\n}\nconst _hoisted_29 = {\n  key: 6,\n  class: \"mdi mdi-step-forward bpmn-color app-tier-model-icon\"\n}\nconst _hoisted_30 = { class: \"app-tier-model-name\" }\nconst _hoisted_31 = {\n  key: 0,\n  class: \"start-screen\"\n}\nconst _hoisted_32 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"mdi mdi-home-outline\" }, null, -1 /* HOISTED */))\nconst _hoisted_33 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"button-tooltip\",\n  style: {\"top\":\"-30px\",\"left\":\"2px\",\"z-index\":\"1\",\"width\":\"80px\"}\n}, \"Start Screen\", -1 /* HOISTED */))\nconst _hoisted_34 = [\n  _hoisted_32,\n  _hoisted_33\n]\nconst _hoisted_35 = [\"onClick\"]\nconst _hoisted_36 = {\n  key: 0,\n  class: \"mdi mdi-pencil-outline version-icon\"\n}\nconst _hoisted_37 = {\n  key: 0,\n  style: {\"margin-bottom\":\"102px\"}\n}\nconst _hoisted_38 = /*#__PURE__*/_createStaticVNode(\"<div style=\\\"display:flex;align-items:center;\\\" data-v-3c5758a8><span class=\\\"custom-text environment\\\" data-v-3c5758a8> Publish To </span><span class=\\\"publish-info\\\" data-v-3c5758a8><i class=\\\"mdi mdi-information\\\" data-v-3c5758a8></i><span class=\\\"button-tooltip\\\" style=\\\"top:460px;left:96px;z-index:1;width:231px;\\\" data-v-3c5758a8>Publish To options may change depending on the module type you choose.</span></span></div>\", 1)\nconst _hoisted_39 = {\n  key: 1,\n  class: \"mobile-publish-text\"\n}\nconst _hoisted_40 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"mdi mdi-information\" }, null, -1 /* HOISTED */))\nconst _hoisted_41 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Models and static files of your mobile application will be served from Public Cloud.\", -1 /* HOISTED */))\nconst _hoisted_42 = [\n  _hoisted_40,\n  _hoisted_41\n]\nconst _hoisted_43 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"save-button\" }, \"DOWNLOAD\", -1 /* HOISTED */))\nconst _hoisted_44 = [\n  _hoisted_43\n]\nconst _hoisted_45 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"save-button deploy\" }, \"PUBLISH\", -1 /* HOISTED */))\nconst _hoisted_46 = {\n  key: 0,\n  class: \"button-tooltip\",\n  style: {\"top\":\"-46px\",\"left\":\"648px\",\"z-index\":\"1\",\"width\":\"120px\"}\n}\nconst _hoisted_47 = {\n  key: 1,\n  class: \"button-tooltip\",\n  style: {\"top\":\"-46px\",\"left\":\"644px\",\"z-index\":\"1\",\"width\":\"123px\"}\n}\n\nimport { CryptoHelper } from \"@stechquick/algae/lib/helpers/cryptoHelper\";\nimport { container } from \"../../../../../domain/core/diContainer\";\nimport { IExportViewItem, IModel, IModule } from \"../../../../../domain/model/models\";\nimport { IViewModel } from \"../../../../../domain/viewModel/IViewModel\";\nimport CheckboxComp from \"../../checkboxComp.vue\";\nimport { ref, computed, defineAsyncComponent, watch } from \"vue\";\nimport { IDialog } from \"../../../../../domain/presentation/IDialog\";\nimport { IUseCaseExecutor } from \"../../../../../domain/useCase/IUseCaseExecutor\";\nimport { DeployType, ICreateDeployJobParam, ICreateExportJobParam, IExportItem, IExportJobData, IPlatformSelection, IProcessConfigModelItem } from \"@stechquick/algae/lib/qCloudTemp/exporter\";\nimport { ICreateExportJob } from \"../../../../../domain/useCase/ICreateExportJob\";\nimport { IDeployJobs } from \"../../../../../domain/useCase/IDeployJobs\";\nimport { IQCloudApi } from \"../../../../../domain/infrastructure/IQCloudApi\";\nimport { IPackJobs } from \"../../../../../domain/useCase/IPackJobs\";\nimport { IJobUtils } from \"../../../../../domain/useCase/IJobUtils\";\nimport { IQJsonAdditionals, UsageType } from \"@stechquick/algae/lib/qCloudTemp/quickCloud\";\nimport { IPublish } from \"../../../../../domain/useCase/IPublish\";\nimport { PlateauHelper } from \"@stechquick/algae/lib/helpers/plateau/plateauHelper\";\nimport { IViewModelManager } from \"../../../../../domain/viewModel/IViewModelManager\";\nimport CustomSelect from \"../../../components/customSelect.vue\"\nimport { IOrganizationCloud } from \"@stechquick/algae/lib/clean/domain/useCases/ICloudProvider\";\n\ninterface ITableData {\n    id: string;\n    parentId?: string;\n    collapsed?: boolean;\n    anyChildChecked?: boolean;\n    allChildChecked?: boolean;\n    checked?: boolean;\n    name: string;\n    type: IModel[\"modelType\"] | IModule[\"objectType\"];\n    version?: string;\n    children?: Array<ITableData>;\n    usageType?: UsageType;\n}\n\ninterface IDeployScreenAdditionalProps {\n    screenType: \"Export\" | \"Deploy\";\n    platformSelection: IPlatformSelection;\n}\n\ninterface IDisabledOptions {\n    index: number\n    cause: string;\n}\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'publishDialog',\n  props: {\n    screenType: null,\n    platformSelection: null\n  },\n  emits: [\"close\"],\n  setup(__props: any, { emit }) {\n\nconst props = __props as {\n    screenType: \"Export\" | \"Deploy\";\n    platformSelection: IPlatformSelection;\n}\n\n\nconst viewModel = container.resolve<IViewModel>(IViewModel);\nconst viewModelManager = container.resolve<IViewModelManager>(IViewModelManager);\nconst dialog = container.resolve<IDialog>(IDialog);\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\nconst deployJobsUseCase = container.resolve<IDeployJobs>(IDeployJobs);\nconst qcloudApi = container.resolve<IQCloudApi>(IQCloudApi);\nconst packJobsUseCase = container.resolve<IPackJobs>(IPackJobs);\nconst publish = container.resolve<IPublish>(IPublish);\nconst jobUtils = container.resolve<IJobUtils>(IJobUtils);\n\nconst items = ref<Array<ITableData>>([]);\nconst validations = ref<boolean>(true);\nconst selectedTarget = ref<string>(\"\");\nconst disabledOptions = ref<Array<IDisabledOptions>>();\nconst publishTargets = ref<Array<string>>();\n\nhandleItems();\nprops.screenType == \"Deploy\" && syncPublishTargets();\n\nconst totalModuleCount = computed(() => items.value.filter((item) => item.type == \"module\").length);\nconst checkedModuleCount = computed(() => items.value.filter((item) => item.type == \"module\" && item.allChildChecked).length);\nconst saveButtonDisable = computed(() => (props.screenType == \"Deploy\" && props.platformSelection.web && selectedTarget.value == \"\") || !validations.value || !items.value.some((item) => item.checked || item.anyChildChecked));\nconst startScreen = computed(() => (viewModel.studio.items as Array<IModel>).find(item => item.isRootPage == true));\n\n\nwatch(items.value, (_new, _old) => {\n    validations.value = validate();\n    props.screenType == \"Deploy\" && syncPublishTargets();\n});\n\n\nfunction validate() {\n    let result = true;\n    const modules = items.value.filter(e => e.type == \"module\" && e.anyChildChecked);\n    const appLayerItems = items.value.filter(e => e.type == \"qjson\" && e.checked);\n\n    if (props.screenType == \"Deploy\") {\n        //FIXME: externalModules will be get from common places \n        if (modules.length > 0)\n            result = modules\n                .filter(e => e.name != \"processmanager\").map(e => e.children).filter(e => !e?.find(f => f.type == \"entityDesigner\" && f.checked)).length <= 0\n\n        let isApplicationWillDeploy = appLayerItems.length > 0;\n        if (isApplicationWillDeploy) {\n            result = appLayerItems\n                .map(e => viewModel.studio.items.find(item => item.ID == e.id) as IModel)\n                .findIndex(e => ((e.additionals as IQJsonAdditionals).isRootPage)) != -1;\n        }\n    }\n\n    return result;\n}\n\nfunction mobileFilter (model: IModel) {\n    return props.platformSelection.web || !props.platformSelection.mobile ||\n         !(model.modelType == \"bpmn\" || model.modelType == \"entityDesigner\" || model.modelType == \"process\");\n} \n\nfunction handleItems() {\n    items.value = viewModel.studio.items\n        .filter((item) => item.objectType == \"module\" && item.children.length > 0)\n        .map(\n            (item) =>\n            ({\n                id: item.ID,\n                collapsed: true,\n                name: item.name,\n                type: \"module\",\n                anyChildChecked: true,\n                allChildChecked: true,\n                children: (item as IModule).children\n                    .filter((child) => child.objectType == \"model\")\n                    .filter(e => !props || props.screenType == \"Export\" || mobileFilter(e as IModel))\n                    .map(\n                        (child) =>\n                        ({\n                            id: child.ID,\n                            parentId: item.ID,\n                            checked: true,\n                            name: child.name,\n                            type: (child as IModel).modelType,\n                            version: \"latest\",\n                        } as ITableData)\n                    ),\n            } as ITableData)\n        );\n    viewModel.studio.items\n        .filter((item) => item.objectType == \"model\" && item.usageType != \"appSettings\")\n        .forEach((item) => {\n            items.value.push({\n                id: item.ID,\n                checked: true,\n                name: item.name,\n                type: (item as IModel).modelType,\n                version: \"latest\",\n            });\n        });\n    const uiSettingsID = CryptoHelper.CreateGuid();\n    const appSettings = viewModel.studio.items.filter((item) => item.objectType == \"model\" && item.usageType == \"appSettings\") as Array<IModel>;\n    const uiSettings: ITableData = {\n        id: uiSettingsID,\n        collapsed: true,\n        name: \"UI Settings\",\n        type: \"module\",\n        anyChildChecked: true,\n        allChildChecked: true,\n        children: appSettings.map((setting) => ({\n            id: setting.ID,\n            parentId: uiSettingsID,\n            name: setting.name,\n            type: (setting as IModel).modelType,\n            checked: false,\n            usageType: setting?.usageType,\n        })) as Array<ITableData>,\n    };\n    items.value.unshift(uiSettings);\n}\n\nfunction handleModuleCountCheckboxEvent(value: boolean) {\n    items.value.forEach((item) => {\n        item.checked = value;\n        if (item.allChildChecked != undefined) item.allChildChecked = value;\n        if (item.anyChildChecked != undefined) item.anyChildChecked = value;\n        if (item.children) item.children.forEach((child) => (child.checked = value));\n    });\n}\n\nfunction handleCollapse(item: ITableData) {\n    item.collapsed = !item.collapsed;\n}\n\nfunction handleItemCheckEvent(item: ITableData) {\n    if (item.type != \"module\") {\n        item.checked = !item.checked;\n        if (item.parentId) {\n            const parent = items.value.find((i) => i.id == item.parentId)!;\n            handleParentCheckedStatus(parent);\n        }\n    } else {\n        if(item.children && item.children.length > 0) {\n            if (item.anyChildChecked) {\n                item.children?.forEach((child) => (child.checked = false));\n                item.checked = false;\n            } else {\n                item.children?.forEach((child) => (child.checked = true));\n                item.checked = true;\n            }\n            handleParentCheckedStatus(item);\n        }\n        else {\n            item.checked = !item.checked;\n            item.allChildChecked = false;\n        }\n        \n    }\n}\n\nfunction handleParentCheckedStatus(item: ITableData) {\n    item.allChildChecked = !item.children?.some((child) => !child.checked);\n    item.anyChildChecked = item.children?.some((child) => child.checked);\n}\n\nfunction syncPublishTargets(){\n    publishTargets.value = []; disabledOptions.value= [];\n\n    const targets = viewModel.user?.selectedOrganization?.actions?.publish?.targets;\n    if(!targets)\n        return;\n\n    const isSelectAnyItem = items.value.find(e => e.anyChildChecked || e.checked);\n    if(!isSelectAnyItem){\n        publishTargets.value = Object.entries(targets).map(e => cloudTargetMap(e[0])!);\n        const disabledOptionList = Array<IDisabledOptions>();\n        for(let i=0; i<publishTargets.value.length; i++){\n            disabledOptionList.push({index:i, cause: \"You need to include items to publish.\"})\n        }\n        disabledOptions.value = disabledOptionList;\n        return;\n    }\n\n    const checkedPublishTargets = checkAndSetDisabledCauses(targets);\n    const sortedTargets = checkedPublishTargets.sort((e, f) => ( !e.cause === !f.cause) ? 0 : e.cause ? 1: -1);\n\n    const disabledOptionList = Array<IDisabledOptions>();\n    for(let i=0; i<sortedTargets.length; i++){\n        const cause = sortedTargets[i].cause;\n        if(cause) disabledOptionList.push({index:i, cause})\n    }\n    disabledOptions.value = disabledOptionList;\n    publishTargets.value = sortedTargets.map(e => e.optionName);\n\n    selectedTarget.value = !sortedTargets[0].cause ? sortedTargets[0].optionName : \"\";\n}\n\nfunction checkAndSetDisabledCauses(targets: Record<keyof IOrganizationCloud, boolean>){\n    const list = Array<{optionName: string, cause?: string}>();\n\n    Object.keys(targets).forEach(e => {\n        const key = e as keyof IOrganizationCloud;\n        const value = targets[key];\n        const optionName = cloudTargetMap(key)!;\n        if(!value)\n            return list.push({optionName, cause:  \"You are not authorized to publish to this target.\" });\n        \n\n        switch (key) {\n            case \"azure\":\n                const traverseSelectedItems = (status: boolean, items?: Array<ITableData>) => {\n                    if (!items || items.length == 0) { return status; }\n                    for (const item of items) {\n                        if(item.checked || item.anyChildChecked){\n                            if (item.type == \"module\") {\n                                status = traverseSelectedItems(status, item.children);\n                            }\n                            if(item.type == \"entityDesigner\" || item.type == \"bpmn\" || item.type == \"process\"){\n                                status = false;\n                                break;\n                            }  \n                        }\n                        \n                    }\n                    return status;\n                }\n\n                const status = traverseSelectedItems(true, items.value);\n                if(!status)\n                    return list.push({optionName, cause: \"Entity and process models cannot be published to this target.\" });\n                break;\n            case \"plateauGCP\":\n                if(props.platformSelection.mobile)\n                    return list.push({optionName, cause: \"This target is not available for mobile publishing.\" });\n                break;\n        }\n\n        list.push({optionName});\n    })\n\n    return list;\n}\n\nfunction versionDialog(item: ITableData) {\n    const clickedNode = { id: item.id, state: { checked: item.checked }, text: item.name, type: item.type, version: item.version };\n    dialog.showDialog(\n        defineAsyncComponent(() => import(\"../../application/modelVersionDialog.vue\")),\n        { closable: true, title: \"Change Version\", width: \"900px\", maxHeight: \"500px\", overflow: \"auto\" },\n        { clickedNode }\n    );\n}\n\nfunction close() {\n    emit(\"close\");\n}\n\nasync function save() {\n    executor.execute(\n        async () => {\n            const initAsGroup = async () => {\n                const groupID = CryptoHelper.CreateGuid();\n                await initHistory(groupID);\n                await packJob(groupID);\n                return groupID;\n            }\n\n            switch (props.screenType) {\n                case \"Export\":\n                    const groupID = await initAsGroup();\n                    await createExportJob(groupID);\n                    break;\n                case \"Deploy\":\n                    if(props.platformSelection.mobile)\n                        return await createAzureDeploy();\n                    debugger;\n                    switch (cloudTargetMap(selectedTarget.value!, true) as keyof IOrganizationCloud) {\n                        case \"plateauGCP\":\n                            const groupID = await initAsGroup();\n                            await createDeployJob(groupID);\n                            break;\n                        case \"azure\":\n                            await createAzureDeploy();\n                            break;\n                    }\n            }\n            emit(\"close\");\n        },\n        { loading: true });\n}\n\nasync function createAzureDeploy() {\n    const deployItems: Array<IExportItem> = [];\n    const itemIdObj: Record<string, { item: IModel, path: string }> = {};\n\n    viewModelManager.flatMapItems(viewModel.studio.items, (item, path) => {\n        if (item.objectType != \"model\") { return; }\n        itemIdObj[item.ID] = { item, path };\n        return item;\n    });\n\n    const traverseSelectedItems = (items?: Array<ITableData>) => {\n        if (!items || items.length == 0) { return; }\n        items.forEach(item => {\n            if (item.type == \"module\") {\n                traverseSelectedItems(item.children);\n                return;\n            }\n\n            const itemMap = itemIdObj[item.id];\n\n            const deployItem: IExportItem = {\n                id: item.id,\n                name: jobUtils.getFileFullname(itemMap.item),\n                path: itemMap.path,\n                type: jobUtils.getItemType(itemMap.item),\n                ver: item.version || \"latest\",\n                isRootPage: itemMap.item.isRootPage,\n                ownerType: 'application',\n                ownerName: viewModel.studio.appName,\n                size: itemMap.item.size,\n            };\n            deployItems.push(deployItem)\n        });\n    };\n\n    traverseSelectedItems(items.value);\n\n    await publish.createUI(deployItems, props.platformSelection);\n}\n\nasync function initHistory(groupID: string) {\n    return qcloudApi.initPublishHistory({\n        appID: viewModel.studio.appId,\n        ID: groupID,\n        isMultiStep: true,\n        type: props.screenType == \"Deploy\" ? \"publish\" : \"download\"\n    });\n}\n\nfunction isUsingPlateau() {\n    const applications = viewModel.user!.selectedOrganization!.applications;\n\n    if (!applications)\n        return false;\n\n    if (!applications.entity && !applications.process && !applications.bpmn)\n        return false;\n\n    return true;\n}\n\nfunction getItemPath(asset: ITableData, ownerName: string) {\n    if (isUsingPlateau())\n        return \"\";\n    if (asset.type == \"qjson\")\n        return ownerName;\n    return \"\";\n}\n\nfunction isUISettings(asset: ITableData) {\n    return asset.name == \"UI Settings\";\n}\n\n\nasync function packJob(groupID: string) {\n    let exportItemMap = new Map<string, Array<IExportItem>>();\n\n    items.value.forEach((asset) => {\n        if (asset.checked) {\n            //QUI\n            if (asset.type == 'qjson') {\n                const isThisrootPage = viewModel.studio.items.find(i => i.objectType == \"model\" && i.modelType == \"qjson\" && (i.additionals as IQJsonAdditionals).isRootPage && i.ID == asset.id);\n\n                const obj: IExportItem = {\n                    id: asset.id,\n                    ver: asset.version!,\n                    type: jobUtils.getItemType({ usageType: asset.usageType, type: asset.type } as IExportViewItem),\n                    path: \"\",\n                    name: jobUtils.getFileFullname({ usageType: asset.usageType, type: asset.type, name: asset.name } as IExportViewItem),\n                    ownerType: 'application',\n                    ownerName: viewModel.studio.appName,\n                    isRootPage: isThisrootPage ? true : undefined,\n                };\n\n                let applicationModels = exportItemMap.get(viewModel.studio.appName);\n                if (applicationModels && applicationModels.length > 0) {\n                    applicationModels.push(obj);\n                    exportItemMap.set(viewModel.studio.appName, applicationModels);\n                }\n                else\n                    exportItemMap.set(viewModel.studio.appName, [obj]);\n                return;\n            }\n        }\n        if (asset.anyChildChecked && asset.children) {\n            let checkedItems = Array<IExportItem>();\n            asset.children!.forEach(child => {\n                if (!child.checked || child.type == \"module\")\n                    return;\n                const exportItem: IExportItem = {\n                    id: child.id,\n                    ver: child.version!,\n                    type: jobUtils.getItemType({ usageType: child.usageType, type: child.type, name: child.name } as IExportViewItem),\n                    path: !isUISettings(asset) ? getItemPath(child, asset.name) : \"\",\n                    name: jobUtils.getFileFullname({ usageType: child.usageType, type: child.type, name: child.name } as IExportViewItem),\n                    ownerType: isUISettings(asset) || !isUsingPlateau() ? \"application\" : (asset.type === 'module' ? 'module' : 'application'),\n                    ownerName: isUISettings(asset) || !isUsingPlateau() ? viewModel.studio.appName : asset.name\n                };\n                if (exportItem.type == \"entityDesigner\")\n                    exportItem.entityGenerationDomain = viewModel.user!.selectedOrganization!.actions?.entityGenerationDomain;\n                checkedItems.push(exportItem);\n            });\n\n            if (checkedItems.length > 0) {\n                if (!isUISettings(asset) && isUsingPlateau())\n                    exportItemMap.set(asset.name, checkedItems);\n                else {\n                    let applicationModels = exportItemMap.get(viewModel.studio.appName);\n                    if (applicationModels && applicationModels.length > 0) {\n                        applicationModels.forEach(e => checkedItems.push(e));\n                    }\n                    exportItemMap.set(viewModel.studio.appName, checkedItems);\n                }\n            }\n\n        }\n    })\n\n    let jobs = Array<ICreateExportJobParam>();\n    exportItemMap.forEach((v, k) => {\n        jobs.push({\n            appID: viewModel.studio.appId,\n            exportType: \"qui\",\n            selectionData: v,\n            layer: 0,\n            groupID: groupID\n        })\n    })\n\n    await packJobsUseCase.createPackJobs(jobs);\n}\n\nasync function createExportJob(groupID: string) {\n    await executor.executeUseCase<ICreateExportJob>(ICreateExportJob, {\n        appID: viewModel.studio.appId,\n        exportType: \"qui\",\n        selectionData: [],\n        layer: 1,\n        groupID: groupID\n    });\n}\n\nasync function createDeployJob(groupID: string) {\n    //1-(n) L1- deployJob(build)\n    let packages = await qcloudApi.getExportJobsByGroupId({ groupID })\n        .then(jobs => jobs.jobs.filter(e => !isExternalModule(e.jobData as IExportJobData)).map(e => {\n            const jobData = e.jobData as IExportJobData;\n            return {\n                ownerName: jobData.items[0].ownerName,\n                jobID: e.jobID,\n                type: jobData.items[0].ownerType,\n                mainDir: getDeployableArchiveRoot(jobData)\n            }\n        }));\n\n    if (!packages || packages.length <= 0)\n        return;\n\n    let buildJobs = Array<ICreateDeployJobParam>();\n    packages.forEach(pack => {\n        buildJobs.push({\n            appID: viewModel.studio.appId,\n            type: \"build\",\n            package: {\n                type: pack.type as DeployType,\n                name: pack.ownerName!,\n                mainDir: pack.mainDir!,\n                zip: `${pack.jobID}.zip`,\n            },\n            layer: 1,\n            groupID: groupID\n        })\n    })\n\n    await deployJobsUseCase.createBuildJobs(buildJobs);\n\n    //2-(1) L2- deployJob(deployment)\n    let jobParam: ICreateDeployJobParam = {\n        appID: viewModel.studio.appId,\n        type: \"deployment\",\n        deployConfig: {\n            process: {\n                configModelIDs: getProcessConfigList(),\n                enabled: items.value.filter(asset => asset.checked && asset.children && asset.children.filter(child => child.checked && child.type == \"bpmn\")).length > 0\n            }\n        },\n        layer: 2,\n        groupID: groupID\n    }\n\n    await deployJobsUseCase.startDeploymentJob(jobParam);\n}\n\nfunction isExternalModule(jobData: IExportJobData){\n    //FIXME: external modules may be dynamic\n    return jobData.items[0].ownerType == \"module\" && jobData.items[0].ownerName == \"processmanager\";\n}\n\nfunction getProcessConfigList() {\n    let processConfigList = Array<IProcessConfigModelItem>();\n    items.value.forEach((asset) => {\n        if (asset.checked && asset.children) {\n            const usingService = asset.children.find(c => c.type == \"entityDesigner\");\n            if (!usingService)\n                return;\n\n            const serviceName = PlateauHelper.getServiceNameFromModel(usingService.name);\n            asset.children.forEach(child => {\n                if (child.checked && child.type == \"process\") {\n                    processConfigList.push({\n                        moduleName: serviceName,\n                        modelId: child.id,\n                        modelName: child.name\n                    })\n                }\n            })\n        }\n    })\n    return processConfigList;\n}\n\nfunction getDeployableArchiveRoot(jobData: IExportJobData) {\n    //FIXME: change external modules\n    if(jobData.items[0].ownerName == \"processmanager\")\n        return \"\";\n    if (jobData.items[0].ownerType == \"module\") {\n        let edModel = jobData.items.find(e => e.type == \"entityDesigner\");\n        if (!edModel)\n            throw new Error(\"!!! this module cannot deploy. Because its have not a service\");\n        return PlateauHelper.getServiceNameFromModel(edModel.name);\n    }\n    return PlateauHelper.getQuiPackageNameFromAppName(jobData.app.name);\n}\n\nfunction cloudTargetMap(name: string, pureVal : boolean = false) {\n    const map: Record<keyof IOrganizationCloud, string> = { azure: \"Public Cloud\", plateauGCP: \"Plateau Platform Playground\"};\n    if(pureVal) {\n        return Object.keys(map).find(e => {\n            if(map[e as keyof IOrganizationCloud] === name){\n                return true;\n            }\n        })\n    }else {\n        let key = Object.keys(map).includes(name);\n        if(!key)\n            return;\n        return map[name as keyof IOrganizationCloud];\n    }\n}\n\nfunction onTargetSelect(value: string) {\n    selectedTarget.value = value\n}\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", null, [\n      _createVNode(CheckboxComp, {\n        class: _normalizeClass(['modules-selected-checkbox', props.screenType == 'Deploy' ? 'deploy' : '']),\n        minus: false,\n        check: _unref(checkedModuleCount) == _unref(totalModuleCount),\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (handleModuleCountCheckboxEvent(_unref(checkedModuleCount) != _unref(totalModuleCount) && _unref(checkedModuleCount) == 0)))\n      }, null, 8 /* PROPS */, [\"class\", \"check\"]),\n      _createElementVNode(\"div\", {\n        class: _normalizeClass(['modules-selected-text', props.screenType == 'Deploy'  ? 'deploy' : ''])\n      }, [\n        _createElementVNode(\"span\", _hoisted_2, _toDisplayString(_unref(checkedModuleCount)), 1 /* TEXT */),\n        _hoisted_3,\n        _createElementVNode(\"span\", _hoisted_4, _toDisplayString(_unref(totalModuleCount)), 1 /* TEXT */),\n        _hoisted_5\n      ], 2 /* CLASS */)\n    ]),\n    _createElementVNode(\"div\", {\n      class: _normalizeClass(['modules-datatable', props.screenType == 'Deploy' ? 'deploy' : ''])\n    }, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(items.value, (item) => {\n        return (_openBlock(), _createElementBlock(\"div\", null, [\n          (item?.type == 'module')\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n                _createElementVNode(\"div\", _hoisted_7, [\n                  _createElementVNode(\"i\", {\n                    class: _normalizeClass('mdi mdi-menu' + (item.collapsed ? '-right' : '-down') + ' chevron'),\n                    onClick: ($event: any) => (handleCollapse(item))\n                  }, null, 10 /* CLASS, PROPS */, _hoisted_8),\n                  _createVNode(CheckboxComp, {\n                    class: \"module-checkbox\",\n                    check: item.allChildChecked || item.checked,\n                    minus: item.anyChildChecked && !item.allChildChecked,\n                    onClick: ($event: any) => (handleItemCheckEvent(item))\n                  }, null, 8 /* PROPS */, [\"check\", \"minus\", \"onClick\"]),\n                  _createElementVNode(\"span\", _hoisted_9, _toDisplayString(item.name), 1 /* TEXT */)\n                ]),\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item?.children, (child) => {\n                  return _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_10, [\n                    _createVNode(CheckboxComp, {\n                      class: \"model-checkbox\",\n                      check: child.checked,\n                      onClick: ($event: any) => (handleItemCheckEvent(child))\n                    }, null, 8 /* PROPS */, [\"check\", \"onClick\"]),\n                    (child.type == 'qjson')\n                      ? (_openBlock(), _createElementBlock(\"i\", _hoisted_11))\n                      : _createCommentVNode(\"v-if\", true),\n                    (child.type == 'yaml')\n                      ? (_openBlock(), _createElementBlock(\"i\", _hoisted_12))\n                      : _createCommentVNode(\"v-if\", true),\n                    (child.type == 'js' || child?.type == 'css')\n                      ? (_openBlock(), _createElementBlock(\"i\", _hoisted_13))\n                      : _createCommentVNode(\"v-if\", true),\n                    (child.type == 'process')\n                      ? (_openBlock(), _createElementBlock(\"i\", _hoisted_14))\n                      : _createCommentVNode(\"v-if\", true),\n                    (child.type == 'bpmn')\n                      ? (_openBlock(), _createElementBlock(\"i\", _hoisted_15))\n                      : _createCommentVNode(\"v-if\", true),\n                    (child.type == 'entityDesigner')\n                      ? (_openBlock(), _createElementBlock(\"i\", _hoisted_16))\n                      : _createCommentVNode(\"v-if\", true),\n                    (child.type == 'flow')\n                      ? (_openBlock(), _createElementBlock(\"i\", _hoisted_17))\n                      : _createCommentVNode(\"v-if\", true),\n                    _createElementVNode(\"span\", _hoisted_18, _toDisplayString(child.name), 1 /* TEXT */),\n                    (!child.usageType)\n                      ? (_openBlock(), _createElementBlock(\"div\", {\n                          key: 7,\n                          class: \"version-text\",\n                          onClick: ($event: any) => (versionDialog(item))\n                        }, [\n                          _createTextVNode(_toDisplayString(child.version) + \" \", 1 /* TEXT */),\n                          (!child.usageType)\n                            ? (_openBlock(), _createElementBlock(\"i\", _hoisted_20))\n                            : _createCommentVNode(\"v-if\", true)\n                        ], 8 /* PROPS */, _hoisted_19))\n                      : _createCommentVNode(\"v-if\", true)\n                  ], 512 /* NEED_PATCH */)), [\n                    [_vShow, !item.collapsed]\n                  ])\n                }), 256 /* UNKEYED_FRAGMENT */))\n              ]))\n            : (_openBlock(), _createElementBlock(\"div\", _hoisted_21, [\n                _createElementVNode(\"div\", _hoisted_22, [\n                  _createVNode(CheckboxComp, {\n                    class: \"module-checkbox\",\n                    check: item?.checked,\n                    onClick: ($event: any) => (handleItemCheckEvent(item))\n                  }, null, 8 /* PROPS */, [\"check\", \"onClick\"]),\n                  (item?.type == 'qjson')\n                    ? (_openBlock(), _createElementBlock(\"i\", _hoisted_23))\n                    : _createCommentVNode(\"v-if\", true),\n                  (item?.type == 'yaml')\n                    ? (_openBlock(), _createElementBlock(\"i\", _hoisted_24))\n                    : _createCommentVNode(\"v-if\", true),\n                  (item?.type == 'js' || item?.type == 'css')\n                    ? (_openBlock(), _createElementBlock(\"i\", _hoisted_25))\n                    : _createCommentVNode(\"v-if\", true),\n                  (item?.type == 'process')\n                    ? (_openBlock(), _createElementBlock(\"i\", _hoisted_26))\n                    : _createCommentVNode(\"v-if\", true),\n                  (item?.type == 'bpmn')\n                    ? (_openBlock(), _createElementBlock(\"i\", _hoisted_27))\n                    : _createCommentVNode(\"v-if\", true),\n                  (item?.type == 'entityDesigner')\n                    ? (_openBlock(), _createElementBlock(\"i\", _hoisted_28))\n                    : _createCommentVNode(\"v-if\", true),\n                  (item?.type == 'flow')\n                    ? (_openBlock(), _createElementBlock(\"i\", _hoisted_29))\n                    : _createCommentVNode(\"v-if\", true),\n                  _createElementVNode(\"span\", _hoisted_30, [\n                    _createTextVNode(_toDisplayString(item?.name) + \" \", 1 /* TEXT */),\n                    (_unref(startScreen)?.ID == item.id)\n                      ? (_openBlock(), _createElementBlock(\"span\", _hoisted_31, _hoisted_34))\n                      : _createCommentVNode(\"v-if\", true)\n                  ]),\n                  (!item.usageType)\n                    ? (_openBlock(), _createElementBlock(\"span\", {\n                        key: 7,\n                        class: \"version-text\",\n                        onClick: ($event: any) => (versionDialog(item))\n                      }, [\n                        _createTextVNode(_toDisplayString(item?.version) + \" \", 1 /* TEXT */),\n                        (!item.usageType)\n                          ? (_openBlock(), _createElementBlock(\"i\", _hoisted_36))\n                          : _createCommentVNode(\"v-if\", true)\n                      ], 8 /* PROPS */, _hoisted_35))\n                    : _createCommentVNode(\"v-if\", true)\n                ])\n              ]))\n        ]))\n      }), 256 /* UNKEYED_FRAGMENT */))\n    ], 2 /* CLASS */),\n    (props.screenType == 'Deploy' && props.platformSelection.web)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_37, [\n          _hoisted_38,\n          _createVNode(CustomSelect, {\n            options: publishTargets.value,\n            onInput: onTargetSelect,\n            selectedOption: selectedTarget.value,\n            default: selectedTarget.value,\n            disabledOptions: disabledOptions.value,\n            selectedClass: \"selected-environment\",\n            placeholder: \"Select the publish environment of your application\",\n            class: \"select-environment\"\n          }, null, 8 /* PROPS */, [\"options\", \"selectedOption\", \"default\", \"disabledOptions\"])\n        ]))\n      : _createCommentVNode(\"v-if\", true),\n    (props.screenType == 'Deploy' && !props.platformSelection.web && props.platformSelection.mobile)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_39, _hoisted_42))\n      : _createCommentVNode(\"v-if\", true),\n    _createElementVNode(\"div\", {\n      class: _normalizeClass(['footer', props.screenType == 'Deploy'  ? 'deploy' : 'export'])\n    }, [\n      _createElementVNode(\"div\", {\n        class: _normalizeClass(['cancel-button', props.screenType == 'Deploy'  ? 'deploy' : '']),\n        onClick: close\n      }, \"Cancel\", 2 /* CLASS */),\n      (props.screenType == 'Export')\n        ? (_openBlock(), _createElementBlock(\"div\", {\n            key: 0,\n            class: _normalizeClass((_unref(saveButtonDisable) ? ' button-disable' : '')),\n            onClick: save\n          }, _hoisted_44, 2 /* CLASS */))\n        : _createCommentVNode(\"v-if\", true),\n      (props.screenType == 'Deploy' )\n        ? (_openBlock(), _createElementBlock(\"div\", {\n            key: 1,\n            class: _normalizeClass([(_unref(saveButtonDisable) ? ' button-disable' : '')]),\n            onClick: save\n          }, [\n            _hoisted_45,\n            (selectedTarget.value)\n              ? (_openBlock(), _createElementBlock(\"span\", _hoisted_46, \"You need to include your start screen.\"))\n              : _createCommentVNode(\"v-if\", true),\n            (!selectedTarget.value)\n              ? (_openBlock(), _createElementBlock(\"span\", _hoisted_47, \"You need to select a publish environment.\"))\n              : _createCommentVNode(\"v-if\", true)\n          ], 2 /* CLASS */))\n        : _createCommentVNode(\"v-if\", true)\n    ], 2 /* CLASS */)\n  ]))\n}\n}\n\n})","\n      import API from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./publishDialog.vue?vue&type=style&index=0&id=3c5758a8&scoped=true&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./publishDialog.vue?vue&type=style&index=0&id=3c5758a8&scoped=true&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./publishDialog.vue?vue&type=style&index=1&id=3c5758a8&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./publishDialog.vue?vue&type=style&index=1&id=3c5758a8&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","import script from \"./publishDialog.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./publishDialog.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./publishDialog.vue?vue&type=style&index=0&id=3c5758a8&scoped=true&lang=css\"\nimport \"./publishDialog.vue?vue&type=style&index=1&id=3c5758a8&lang=css\"\n\nimport exportComponent from \"/home/runner/work/QCloud-Shell/QCloud-Shell/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3c5758a8\"]])\n\nexport default __exports__"],"names":["___CSS_LOADER_EXPORT___","push","module","id","GetRandomWord","base","length","Math","random","toString","substring","CreateGuid","map","join","CryptoHelper","guidCounter","getPlateauEnvironmentName","tenant","appName","envPrefix","cloud","plateauGCP","environmentPrefix","Error","endsWith","toLowerCase","PlateauHelper","purify","str","replace","getQuiPackageNameFromAppName","getApplicationUINameFromQuiPkg","quiPackageName","getApplicationHostNamePrefix","getServiceNameFromModel","modelName","IQCloudApi","Symbol","for","ICreateExportJob","IDeployJobs","IJobUtils","IPackJobs","IPublish","open","selected","props","default","selectedOption","value","getDisabledOptionsText","index","opt","disabledOptions","find","e","cause","option","emit","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","_withScopeId","n","_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","key","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_34","_","style","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_42","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","__name","screenType","platformSelection","emits","setup","__props","viewModel","IViewModel","viewModelManager","IViewModelManager","dialog","IDialog","executor","IUseCaseExecutor","deployJobsUseCase","qcloudApi","packJobsUseCase","publish","jobUtils","items","validations","selectedTarget","publishTargets","studio","filter","item","objectType","children","ID","collapsed","name","type","anyChildChecked","allChildChecked","child","model","web","mobile","modelType","parentId","checked","version","usageType","forEach","uiSettingsID","appSettings","uiSettings","setting","unshift","handleItems","syncPublishTargets","totalModuleCount","checkedModuleCount","saveButtonDisable","some","startScreen","isRootPage","handleItemCheckEvent","handleParentCheckedStatus","i","targets","user","selectedOrganization","actions","Object","entries","cloudTargetMap","disabledOptionList","Array","checkedPublishTargets","list","keys","optionName","traverseSelectedItems","status","checkAndSetDisabledCauses","sortedTargets","sort","f","versionDialog","clickedNode","state","text","showDialog","closable","title","width","maxHeight","overflow","close","async","save","execute","initAsGroup","groupID","initPublishHistory","appID","appId","isMultiStep","initHistory","exportItemMap","Map","asset","isThisrootPage","additionals","obj","ver","getItemType","path","getFileFullname","ownerType","ownerName","undefined","applicationModels","get","set","checkedItems","exportItem","isUISettings","getItemPath","isUsingPlateau","entityGenerationDomain","jobs","v","k","exportType","selectionData","layer","createPackJobs","packJob","executeUseCase","createExportJob","createAzureDeploy","packages","getExportJobsByGroupId","then","jobData","jobID","mainDir","getDeployableArchiveRoot","buildJobs","pack","package","zip","createBuildJobs","jobParam","deployConfig","process","configModelIDs","getProcessConfigList","enabled","startDeploymentJob","createDeployJob","loading","deployItems","itemIdObj","flatMapItems","itemMap","deployItem","size","createUI","applications","entity","bpmn","processConfigList","usingService","c","serviceName","moduleName","modelId","edModel","app","pureVal","azure","includes","onTargetSelect","_new","_old","result","modules","appLayerItems","findIndex","validate","_ctx","_cache","minus","check","onClick","$event","onInput","selectedClass","placeholder"],"sourceRoot":""}