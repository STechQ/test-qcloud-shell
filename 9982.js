"use strict";(this.webpackChunkqcloud_shell=this.webpackChunkqcloud_shell||[]).push([[9982],{10402:(e,n,t)=>{t.d(n,{Z:()=>r});var o=t(34663),i=t.n(o),l=t(7638),d=t.n(l)()(i());d.push([e.id,"\n.container[data-v-f472d490] {\n    padding: 32px 20px 20px;\n}\n.settings-container[data-v-f472d490] {\n    position: relative;\n    top: 0px;\n    left: 0px;\n}\n.custom-text[data-v-f472d490] {\n    /* position: absolute; */\n    font-family: 'Roboto';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 15px;\n    line-height: 18px;\n    /* left: 24px; */\n    color: #212121;\n}\n\n/* .custom-text.title{\n    top: 92px;\n}\n\n.custom-text.environment{\n    top: 174px;\n} */\n.radio-button[data-v-f472d490] {\n    position: absolute;\n    top: 60px;\n    left: 20px;\n    cursor: pointer;\n}\n.radio-text[data-v-f472d490] {\n    position: absolute;\n    top: 59px;\n    font: normal normal normal 14px/19px Roboto;\n    color: #212121;\n    user-select: none;\n    cursor: pointer;\n}\n.existing-app-url[data-v-f472d490] {\n    position: absolute;\n    width: 760px;\n    height: 40px;\n    top: 114px;\n    left: 20px;\n    background: #ffffff 0% 0% no-repeat padding-box;\n    border: 1px solid #bcbcbc;\n    border-radius: 4px;\n    font: normal normal normal 14px/19px Roboto;\n    letter-spacing: 0px;\n    padding: 10px 0px 10px 10px;\n}\n.url-error[data-v-f472d490] {\n    border: 1px solid red;\n}\n.url-disable[data-v-f472d490] {\n    opacity: 0.5;\n}\n.existing-app-url[data-v-f472d490]::placeholder {\n    color: #bcbcbc;\n    user-select: none;\n}\n.modules-selected-checkbox[data-v-f472d490] {\n    cursor: pointer;\n}\n.modules-selected-text[data-v-f472d490] {\n    font: normal normal normal 14px/19px Roboto;\n    color: #757575;\n    margin: 0 0 13px 30px;\n}\n\n/* .modules-selected-text.deploy {\n    top: 257px;\n} */\n.text-number[data-v-f472d490] {\n    font: normal normal bold 14px/19px Roboto;\n    color: #212121;\n}\n.modules-datatable[data-v-f472d490] {\n    width: 760px;\n    height: 288px;\n    border: 1px solid #bcbcbc;\n    overflow-x: hidden;\n    overflow-y: auto;\n    margin-bottom: 20px;\n}\n\n/* .modules-datatable.deploy {\n    top: 286px;\n} */\n.modules-datatable[data-v-f472d490]::-webkit-scrollbar {\n    width: 4px;\n}\n.modules-datatable[data-v-f472d490]::-webkit-scrollbar-thumb {\n    background: #bcbcbc 0% 0% no-repeat padding-box;\n    border-radius: 10px;\n}\n.modules-datatable[data-v-f472d490]::-webkit-scrollbar-thumb:hover {\n    background: #555;\n}\n.row-container[data-v-f472d490] {\n    width: 100%;\n    height: 36px;\n    position: relative;\n    background: #ffffff 0% 0% no-repeat padding-box;\n    border: 1px solid #e0e0e0;\n}\n.chevron[data-v-f472d490] {\n    position: absolute;\n    left: 4px;\n    color: #757575;\n    font-size: 24px;\n}\n.chevron.disabled[data-v-f472d490] {\n    pointer-events: none;\n    color: #D5D5D5;\n}\n.module-checkbox[data-v-f472d490] {\n    position: absolute;\n    top: 10px;\n    left: 43px;\n    cursor: pointer;\n}\n.module-name[data-v-f472d490] {\n    position: absolute;\n    top: 9px;\n    left: 69px;\n    font: normal normal normal 14px/19px Roboto;\n    color: #212121;\n}\n.module-name.imported[data-v-f472d490] {\n    top: 10px;\n    left: 87px;\n}\n.module-name.disabled[data-v-f472d490] {\n    color: #D5D5D5;\n}\n.model-checkbox[data-v-f472d490] {\n    position: absolute;\n    top: 10px;\n    left: 59px;\n    cursor: pointer;\n}\n.model-icon[data-v-f472d490] {\n    position: absolute;\n    width: 16px;\n    height: 16px;\n    top: 6px;\n    left: 85px;\n}\n.app-tier-model-icon[data-v-f472d490] {\n    position: absolute;\n    width: 16px;\n    height: 16px;\n    top: 6px;\n    left: 69px\n}\n.app-tier-model-name[data-v-f472d490] {\n    position: absolute;\n    top: 10px;\n    left: 87px;\n    font: normal normal normal 14px/19px Roboto;\n    color: #212121;\n}\n.app-tier-model-name.disabled[data-v-f472d490] {\n    color: #D5D5D5;\n}\n.model-name[data-v-f472d490] {\n    position: absolute;\n    top: 9px;\n    left: 103px;\n    font: normal normal normal 14px/19px Roboto;\n    color: #212121;\n}\n.model-name.disabled[data-v-f472d490] {\n    color: #D5D5D5;\n}\n.version-text[data-v-f472d490] {\n    margin: 10px 7px 10px auto;\n    display: table;\n    font: normal normal normal 12px/16px Roboto;\n    color: #757575;\n    cursor: pointer;\n    user-select: none;\n}\n.version-text.disabled[data-v-f472d490] {\n    pointer-events: none;\n    cursor: pointer;\n}\n.version-icon[data-v-f472d490] {\n    font: normal normal normal 16px/19px Material Design Icons;\n    color: #D5D5D5;\n}\n.version-icon.disabled[data-v-f472d490] {\n    font: normal normal normal 16px/19px Material Design Icons;\n    color: #EEEEEE;\n    pointer-events: none;\n    cursor: pointer;\n}\n.footer[data-v-f472d490] {\n    position: relative;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: end;\n}\n.footer.deploy[data-v-f472d490] {\n    position: relative;\n    width: 100%;\n}\n.footer.export[data-v-f472d490] {\n    margin-top: 102px;\n}\n.cancel-button[data-v-f472d490] {\n    border-radius: 4px;\n    user-select: none;\n    font-style: normal;\n    font-weight: 500;\n    font-family: \"ROBOTO\";\n    font-size: 15px;\n    color: #757575;\n    padding: 10px 16px;\n    cursor: pointer;\n}\n.save-button[data-v-f472d490] {\n    background: #151233 0% 0% no-repeat padding-box;\n    border-radius: 4px;\n    user-select: none;\n    font-weight: 500;\n    font-size: 15px;\n    color: #ffffff;\n    padding: 10px 16px;\n    cursor: pointer;\n}\n.mobile-publish-text[data-v-f472d490],\n.web-publish-text[data-v-f472d490] {\n    padding: 5px 12px;\n    margin-bottom: 52px;\n    width: 100%;\n    color: #757575;\n    font-size: 14px;\n    background: #F5F5FA;\n    border-radius: 4px;\n    display: flex;\n    align-items: center;\n}\n.mobile-publish-text i[data-v-f472d490],\n.web-publish-text i[data-v-f472d490] {\n    font-size: 24px;\n    color: #151233;\n    margin-right: 4px;\n}\n.save-button.deploy[data-v-f472d490] {\n    padding: 10px 16px;\n}\n.button-disable .save-button[data-v-f472d490] {\n    color: #757575;\n    cursor: default;\n}\n.button-disable .save-button:hover+.button-tooltip[data-v-f472d490],\n.start-screen:hover .button-tooltip[data-v-f472d490],\n.row-container:hover .button-tooltip[data-v-f472d490],\n.publish-info:hover .button-tooltip[data-v-f472d490] {\n    visibility: visible;\n    transition: opacity 0.3s ease-out 1s;\n    opacity: 1;\n}\n.button-tooltip[data-v-f472d490] {\n    visibility: hidden;\n    position: absolute;\n    background: #757575;\n    color: #FFFFFF;\n    font-size: 11px;\n    font-family: 'Roboto';\n    text-align: center;\n    border-radius: 4px;\n    letter-spacing: 0.2px;\n    padding: 6px 8px 6px 8px;\n    top: 56px;\n    left: 63px;\n    opacity: 0;\n}\n.publish-info[data-v-f472d490] {\n    color: #757575;\n    font-size: 20px;\n    margin-left: 10px;\n}\n.select-environment[data-v-f472d490] {\n    width: 100%;\n    font-size: 15px;\n    height: 40px;\n    line-height: 40px;\n    margin-top: 4px\n}\n","",{version:3,sources:["webpack://./src/presentation/vue3/components/dialogs/publish/workflowExportDialog.vue"],names:[],mappings:";AA2gBA;IACI,uBAAuB;AAC3B;AAEA;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;AACb;AAEA;IACI,wBAAwB;IACxB,qBAAqB;IACrB,kBAAkB;IAClB,gBAAgB;IAChB,eAAe;IACf,iBAAiB;IACjB,gBAAgB;IAChB,cAAc;AAClB;;AAEA;;;;;;GAMG;AAEH;IACI,kBAAkB;IAClB,SAAS;IACT,UAAU;IACV,eAAe;AACnB;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,2CAA2C;IAC3C,cAAc;IACd,iBAAiB;IACjB,eAAe;AACnB;AAEA;IACI,kBAAkB;IAClB,YAAY;IACZ,YAAY;IACZ,UAAU;IACV,UAAU;IACV,+CAA+C;IAC/C,yBAAyB;IACzB,kBAAkB;IAClB,2CAA2C;IAC3C,mBAAmB;IACnB,2BAA2B;AAC/B;AAEA;IACI,qBAAqB;AACzB;AAEA;IACI,YAAY;AAChB;AAEA;IACI,cAAc;IACd,iBAAiB;AACrB;AAEA;IACI,eAAe;AACnB;AAEA;IACI,2CAA2C;IAC3C,cAAc;IACd,qBAAqB;AAEzB;;AAEA;;GAEG;AAEH;IACI,yCAAyC;IACzC,cAAc;AAClB;AAEA;IACI,YAAY;IACZ,aAAa;IACb,yBAAyB;IACzB,kBAAkB;IAClB,gBAAgB;IAChB,mBAAmB;AACvB;;AAEA;;GAEG;AAEH;IACI,UAAU;AACd;AAEA;IACI,+CAA+C;IAC/C,mBAAmB;AACvB;AAEA;IACI,gBAAgB;AACpB;AAEA;IACI,WAAW;IACX,YAAY;IACZ,kBAAkB;IAClB,+CAA+C;IAC/C,yBAAyB;AAC7B;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,cAAc;IACd,eAAe;AACnB;AAEA;IACI,oBAAoB;IACpB,cAAc;AAClB;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,UAAU;IACV,eAAe;AACnB;AAEA;IACI,kBAAkB;IAClB,QAAQ;IACR,UAAU;IACV,2CAA2C;IAC3C,cAAc;AAClB;AAEA;IACI,SAAS;IACT,UAAU;AACd;AAEA;IACI,cAAc;AAClB;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,UAAU;IACV,eAAe;AACnB;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,QAAQ;IACR,UAAU;AACd;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,QAAQ;IACR;AACJ;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,UAAU;IACV,2CAA2C;IAC3C,cAAc;AAClB;AAEA;IACI,cAAc;AAClB;AAEA;IACI,kBAAkB;IAClB,QAAQ;IACR,WAAW;IACX,2CAA2C;IAC3C,cAAc;AAClB;AAEA;IACI,cAAc;AAClB;AAEA;IACI,0BAA0B;IAC1B,cAAc;IACd,2CAA2C;IAC3C,cAAc;IACd,eAAe;IACf,iBAAiB;AACrB;AAEA;IACI,oBAAoB;IACpB,eAAe;AACnB;AAEA;IACI,0DAA0D;IAC1D,cAAc;AAClB;AAEA;IACI,0DAA0D;IAC1D,cAAc;IACd,oBAAoB;IACpB,eAAe;AACnB;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,aAAa;IACb,mBAAmB;IACnB,oBAAoB;AACxB;AAEA;IACI,kBAAkB;IAClB,WAAW;AACf;AAEA;IACI,iBAAiB;AACrB;AAEA;IACI,kBAAkB;IAClB,iBAAiB;IACjB,kBAAkB;IAClB,gBAAgB;IAChB,qBAAqB;IACrB,eAAe;IACf,cAAc;IACd,kBAAkB;IAClB,eAAe;AACnB;AAIA;IACI,+CAA+C;IAC/C,kBAAkB;IAClB,iBAAiB;IACjB,gBAAgB;IAChB,eAAe;IACf,cAAc;IACd,kBAAkB;IAClB,eAAe;AACnB;AAEA;;IAEI,iBAAiB;IACjB,mBAAmB;IACnB,WAAW;IACX,cAAc;IACd,eAAe;IACf,mBAAmB;IACnB,kBAAkB;IAClB,aAAa;IACb,mBAAmB;AACvB;AAEA;;IAEI,eAAe;IACf,cAAc;IACd,iBAAiB;AACrB;AAEA;IACI,kBAAkB;AACtB;AAEA;IACI,cAAc;IACd,eAAe;AACnB;AAEA;;;;IAII,mBAAmB;IACnB,oCAAoC;IACpC,UAAU;AACd;AAEA;IACI,kBAAkB;IAClB,kBAAkB;IAClB,mBAAmB;IACnB,cAAc;IACd,eAAe;IACf,qBAAqB;IACrB,kBAAkB;IAClB,kBAAkB;IAClB,qBAAqB;IACrB,wBAAwB;IACxB,SAAS;IACT,UAAU;IACV,UAAU;AACd;AAEA;IACI,cAAc;IACd,eAAe;IACf,iBAAiB;AACrB;AAEA;IACI,WAAW;IACX,eAAe;IACf,YAAY;IACZ,iBAAiB;IACjB;AACJ",sourcesContent:['<template>\n    <div class="container">\n        <div>\n            <CheckboxComp :class="[\'modules-selected-checkbox\']"\n                :minus="mainCheckboxState == false" :check="mainCheckboxState == true"\n                @click="handleModuleCountCheckboxEvent(mainCheckboxState == undefined)" />\n            <div :class="[\'modules-selected-text\']">\n                <span class="text-number">{{ allChildCheckedModulesCount + anyChildCheckedModulesCount +\n                    checkedRootLevelModelsCount }}</span>\n                of <span class="text-number">{{ totalRootLevelCount }}</span> items selected\n            </div>\n        </div>\n        <div :class="[\'modules-datatable\']" id="module-container-div"> </div>\n\n        <div :class="[\'footer\',\'export\']">\n            <div :class="[\'cancel-button\', ]" @click="emit(\'close\')">Cancel</div>\n            <div :class="(isDownloadBtnDisable ? \' button-disable\' : \'\')"\n                @click="!isDownloadBtnDisable && downloadBtnClicked()">\n                <span class="save-button ">DOWNLOAD</span>\n                <span v-if="!isThereVersion" class="button-tooltip"\n                    style="top: -80px; left: 626px; z-index: 1; width: 145px;">There are no items ready to publish. At least\n                    one of your items must be ready to publish.</span>\n                <span v-else-if="!isAllDependenciesOK" class="button-tooltip"\n                    style="top: -95px; left: 644px; z-index: 1; width: 135px;">{{ dependencyErrorStr }}</span>\n            </div>\n        </div>\n    </div>\n</template>\n\n\n<script setup lang="ts">\nimport { CryptoHelper } from "@stechquick/algae/lib/helpers/cryptoHelper";\nimport { computed,createApp,defineAsyncComponent,onMounted,ref } from "vue";\nimport { ITableData } from "../../../../../../../common/qCloudTemp/exporter";\nimport { IModuleRelatedModelItem } from "../../../../../../../common/qCloudTemp/quickCloud";\nimport { container } from "../../../../../domain/core/diContainer";\nimport { IQCloudApi } from "../../../../../domain/infrastructure/IQCloudApi";\nimport { IModel,IModelHistoryInfo,IModule,IModuleVersion, IWorkflowExportItem } from "../../../../../domain/model/models";\nimport { IDialog } from "../../../../../domain/presentation/IDialog";\nimport { ITreeItem } from "../../../../../domain/presentation/ITreeView";\nimport { ICreateWorkflowExportJob } from "../../../../../domain/useCase/ICreateWorkflowExportJob";\nimport { FileDisplayerExternalData,IFileDisplayerUseCase } from "../../../../../domain/useCase/IFileDisplayerUseCase";\nimport { FileExplorerConstants } from "../../../../../domain/useCase/IFileExplorer";\nimport { IListMultiModelVersions } from "../../../../../domain/useCase/IListMultiModelVersions";\nimport { IListMultiModuleVersions } from "../../../../../domain/useCase/IListMultiModuleVersions";\nimport { IObjectUseCase } from "../../../../../domain/useCase/IObjectUseCase";\nimport { IUseCaseExecutor } from "../../../../../domain/useCase/IUseCaseExecutor";\nimport { IViewModel } from "../../../../../domain/viewModel/IViewModel";\nimport { IViewModelManager } from "../../../../../domain/viewModel/IViewModelManager";\nimport CheckboxComp from "../../checkboxComp.vue";\nimport ExportDialogItem from "./components/exportDialogItem.vue";\n\nconst viewModel = container.resolve<IViewModel>(IViewModel);\nconst viewModelManager = container.resolve<IViewModelManager>(IViewModelManager);\nconst dialog = container.resolve<IDialog>(IDialog);\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\nconst fileDisplayerUseCase = container.resolve<IFileDisplayerUseCase>(IFileDisplayerUseCase);\nconst objectUseCase = container.resolve<IObjectUseCase>(IObjectUseCase);\n\n\nconst emit = defineEmits(["close"]);\nconst items = ref<Array<ITableData>>([]);\nconst modelHistories = ref<Map<string, Array<IModelHistoryInfo>>>();\nconst importedModuleVersions = ref<Map<string, Array<IModuleVersion>>>();\nconst startScreen = ref<IModel>();\nconst dependencyMap = ref<Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>>();\nconst dependencyErrorStr = ref<string>(\'\');\n\n\n\n\nonMounted(async () => {\n    await executor.execute(async () => {\n        const excludedTypes: Array<IModel["modelType"]> = [\'bpmn\', \'process\', \'entityDesigner\', \'process\'];\n        await Promise.all([\n            executor.executeUseCase<IListMultiModelVersions>(IListMultiModelVersions, { excludedTypes }).then(res => modelHistories.value = res),\n            executor.executeUseCase<IListMultiModuleVersions>(IListMultiModuleVersions, {}).then(res => importedModuleVersions.value = res)\n        ])\n        initDependencies();\n        handleItems();\n    }, { loading: true });\n})\n\nconst allChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == "module" && e.allChildChecked).length);\nconst anyChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == "module" && !e.allChildChecked && e.anyChildChecked).length);\nconst checkedRootLevelModelsCount = computed(() => items.value.filter(e => e.type != "module" && e.checked).length);\nconst totalRootLevelCount = computed(() => items.value.length);\nconst isDownloadBtnDisable = computed(validate);\nconst mainCheckboxState = computed(() => items.value.length == allChildCheckedModulesCount.value ? true\n    : (anyChildCheckedModulesCount.value + checkedRootLevelModelsCount.value > 0 ? false : undefined));\nconst isThereVersion = computed(() => checkMaxVersionOfAllItems());\nconst isAllDependenciesOK = computed(validateDependencies)\n\nfunction validate() {\n    return !items.value.some((item) => item.checked || item.anyChildChecked) || !validateDependencies();\n}\n\nfunction validateDependencies() {\n    const checkMap = new Map<string, boolean>();\n    items.value.forEach(item => {\n        if (item.type == \'module\' && item.children && item.children.length > 0)\n            item.children.forEach(child => checkMap.set(child.id, child.checked == true))\n        else\n            checkMap.set(item.id, item.checked == true)\n    })\n\n    const mustBeCheckedMap = new Map<string, Array<string>>();\n    dependencyMap.value?.forEach((deps, id) => {\n        if (!checkMap.get(id))\n            return;\n\n        deps.dependedTo.forEach(dependedId => {\n            if (checkMap.get(dependedId))\n                return;\n\n            if (mustBeCheckedMap.has(id)) {\n                const vals = mustBeCheckedMap.get(id)!\n                vals.push(dependedId)\n                mustBeCheckedMap.set(id, vals)\n            } else {\n                mustBeCheckedMap.set(id, [dependedId])\n            }\n\n        });\n    })\n\n    //set deps error text\n    const [firstItemID] = mustBeCheckedMap.keys();\n    if (firstItemID) {\n        const firstItemDeps = mustBeCheckedMap.get(firstItemID);\n        const firstItemDepStr = firstItemDeps ? firstItemDeps.map(findItem).map(e => e?.name).join(\', \') : \'\';\n        dependencyErrorStr.value = `Select ${firstItemDepStr} first. ${findItem(firstItemID)?.name} depends on ${firstItemDepStr}.`\n    }\n\n    return mustBeCheckedMap.size == 0\n}\n\n\nfunction findItem(ID: string) {\n    for (const item of items.value) {\n        if (item.type != \'module\' && item.id == ID)\n            return item;\n        if (item.type == \'module\' && item.children && item.children.length > 0) {\n            const f = item.children.find(e => e.id == ID)\n            if (f) return f\n        }\n    }\n}\n\nfunction initDependencies() {\n    const map = new Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>();\n    const depMap = new Map<string, Array<string>>();\n\n    viewModelManager.flatMapItems(viewModel.studio.items, (item) => {\n        if (item.objectType != "model") { return; }\n\n        const isImportedModule = item.owner.objectType == "module" && objectUseCase.isModuleImported(item.owner);\n\n        let version: string | undefined;\n        if (!isImportedModule) {\n            const maxVersion = getItemMaxVersion(item)\n            if (!maxVersion)\n                return depMap.set(item.ID, item.dependentModels ? item.dependentModels.map(e => e.modelId) : Array<string>());\n            version = maxVersion;\n        }\n        else {\n            const moduleVersions = importedModuleVersions.value?.get(item.owner.ID)\n            const moduleVersion = (item.owner as IModule).relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion\n\n            const importedModuleModel = moduleVersions?.filter(e => e.version == moduleVersion).flatMap(e => e.relatedModelHistories).find(e => e.modelID == item.ID)\n            version = importedModuleModel?.version\n        }\n\n        const historyItem = modelHistories.value?.get(item.ID)?.find(e => e.version == version);\n\n        depMap.set(item.ID, historyItem?.dependentModels ? historyItem?.dependentModels.map(e => e.modelId) : Array<string>())\n    });\n\n\n    depMap.forEach((dependedTo, modelId) => {\n        const dependedBy = Array<string>();\n        depMap.forEach((dependencies, depModelId) => {\n            if (dependencies.some(depId => depId == modelId))\n                dependedBy.push(depModelId)\n        })\n        map.set(modelId, { dependedBy, dependedTo });\n    })\n    dependencyMap.value = map;\n}\n\nfunction isModelDepended(item: ITableData) {\n    const deps = dependencyMap.value?.get(item.id)?.dependedBy\n    if (!deps) return false;\n\n    return deps.some(dep => items.value.some(item => {\n        if (item.type == \'module\' && item.anyChildChecked) {\n            return item.children?.some(child => child.checked && child.id == dep)\n        }\n        return item.id == dep && item.checked\n    }));\n}\nfunction createDialogComp(item: ITableData) {\n    const newChild = createApp(ExportDialogItem, {\n        handleItemCheckEvent,\n        startScreen,\n        versionDialog,\n        handleCollapse,\n        item: item,\n        moduleVersionDialog\n    });\n    const mountEl = document.createElement(\'div\');\n    newChild.mount(mountEl);\n    const parentEl = document.getElementById(\'module-container-div\');\n    parentEl?.appendChild(mountEl);\n}\nfunction createAndAppendItem({ newItem }: { newItem: ITableData }) {\n    createDialogComp(newItem);\n    if ((newItem).type != "module") {\n        items.value.push(newItem);\n    }\n}\n\nfunction handleItems() {\n    const treeItems = fileDisplayerUseCase.cloneFileExplorerTreeView({\n        displayFilterer: (item, hasChildren) => {\n            switch (item.ID) { case FileExplorerConstants.uiAssetListID: case FileExplorerConstants.uiSettingsID: return false; default: break; }\n            switch (item.objectType) {\n                case "application": return false;\n                case "module": return true;\n                case "folder": return hasChildren;\n                case "model": return true;\n            }\n        },\n    });\n\n    const converter = (treeItem: ITreeItem<FileDisplayerExternalData>, options: {ownerModule?: {isImportedModule: boolean;moduleVersion: string | undefined;relatedModelHistories: IModuleRelatedModelItem[] | undefined}}): ITableData => {\n        const item = treeItem.externalData;\n        if (item.objectType == "application") { throw new Error("unexpected item type"); }\n\n        const fullPath = objectUseCase.getFullPath(item, "self");\n        let level = fullPath.split("/").length - 1;\n\n        let tableData: ITableData;\n        switch(item.objectType) {\n            case "folder":\n                tableData = {\n                    id: item.ID, name: item.name, type: "folder", collapsed: true, level,\n                    children: treeItem.children?.map((item) => converter(item, { ownerModule: options.ownerModule })),\n                };\n                tableData.children?.forEach(child => child.parent = tableData);\n                handleParentCheckedStatus(tableData, false);\n                break;\n            case "model":\n                if (options.ownerModule) {\n                    tableData = { id: item.ID, name: item.name, type: item.modelType, level };\n                    if (!options.ownerModule.isImportedModule || item.isUnmodifiable) {\n                        const maxVersion = getItemMaxVersion(item);\n                        tableData = {\n                            ...tableData,\n                            checked: maxVersion ? true : item.isUnmodifiable,\n                            disabled: maxVersion ? false : !item.isUnmodifiable,\n                            version: item.isUnmodifiable ? \'latest\' : maxVersion,\n                        };\n                    } else {\n                        const importedModulesModel = options.ownerModule.relatedModelHistories?.find(e => e.modelID == item.ID)\n                        tableData = { ...tableData, checked: true, disabled: false, version: importedModulesModel?.version };\n                    }\n                } else {\n                    const maxVersion = getItemMaxVersion(item);\n                    tableData = {\n                        id: item.ID,\n                        name: item.name,\n                        checked: maxVersion ? true : item.isUnmodifiable,\n                        disabled: maxVersion ? false : !item.isUnmodifiable,\n                        type: item.modelType,\n                        version: item.isUnmodifiable ? \'latest\' : maxVersion,\n                        level,\n                    };\n                }\n                break;\n            case "module":\n                const isImportedModule = objectUseCase.isModuleImported(item);\n                const moduleVersion = item.relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion;\n                const relatedModelHistories = isImportedModule ? importedModuleVersions.value?.get(item.ID)?.find(module => module.version == moduleVersion)?.relatedModelHistories : undefined\n                \n                tableData = {\n                    id: item.ID,\n                    collapsed: true,\n                    name: item.name,\n                    type: "module",\n                    imported: isImportedModule,\n                    version: moduleVersion,\n                    children: treeItem.children?.map((item) => converter(item, {ownerModule: {isImportedModule, moduleVersion, relatedModelHistories}})),\n                }\n                tableData.children?.forEach(child => child.parent = tableData);\n                handleParentCheckedStatus(tableData, false);\n                break;\n        }\n        return tableData;\n    };\n    const tableDatas = treeItems.map(item => converter(item, {}));\n\n    const traverser = (tableData: ITableData) => {\n        createAndAppendItem({ newItem: tableData });\n        tableData.children?.forEach(traverser);\n    };\n    \n    tableDatas.forEach(traverser);\n}\n\nfunction getItemMaxVersion(item: IModel): string | undefined {\n    if (!modelHistories.value?.has(item.ID))\n        return undefined;\n\n    const versions = modelHistories.value.get(item.ID);\n    if (!versions)\n        return undefined;\n\n    const findMaxVersion = (versions: Array<string>) => {\n        const versionNumbers = versions.map(v => {\n            const parts: Array<string> = v.split(".");\n            return parseInt(parts[0]) * 10 + parseInt(parts[1]) * 1;\n        })\n\n        versionNumbers.sort((a, b) => b - a);\n\n        const maxVersion = versionNumbers[0];\n        return `${Math.floor(maxVersion / 10)}.${maxVersion % 10}`;\n    }\n\n    return findMaxVersion(versions.map(e => e.version!));\n\n}\n\nfunction checkMaxVersionOfAllItems() {\n    let isThereVersion: boolean = false;\n    items.value.forEach(item => {\n        if (item.type == "module") {\n            item.children?.forEach(child => {\n                if (child.version) {\n                    isThereVersion = true;\n                }\n\n            })\n        }\n        else {\n            if (item.version) {\n                isThereVersion = true;\n            }\n        }\n    })\n    return isThereVersion;\n}\n\nfunction handleModuleCountCheckboxEvent(value: boolean) {\n    items.value.filter(e => !e.disabled).forEach((item) => {\n        item.checked = value;\n        const allItemsCheckable = item.allChildChecked != undefined && item.children && item.children.length > 0 && !item.children.some(c => c.disabled);\n        if (allItemsCheckable) item.allChildChecked = value;\n        if (item.anyChildChecked != undefined) item.anyChildChecked = value;\n        if (item.children) item.children.filter(c => !c.disabled).forEach((child) => (child.checked = value));\n    });\n}\n\nfunction handleCollapse(item: ITableData, childIterate?: boolean, collapsed?: boolean) {\n    item.collapsed = collapsed !== undefined ? collapsed : !item.collapsed;\n    if (childIterate) {\n        item.children?.forEach(child => {\n            const childEl = document.getElementById(child.id);\n            childEl!.style.display = item.collapsed ? "none" : "block";\n            handleCollapse(child, childIterate, item.collapsed);\n        })\n    }\n}\n\nfunction checkAllDependents(item: ITableData, recurseParent: boolean) {\n    if (item.disabled || item.checked) return;\n\n    item.checked = true\n    item.parent && handleParentCheckedStatus(item.parent, recurseParent);\n\n    const deps = dependencyMap.value?.get(item.id)?.dependedTo\n    if (!deps) return;\n\n    deps.forEach(dep => {\n        items.value.forEach(item => {\n            if (item.type == \'module\' && !item.allChildChecked) {\n                const willCheckItem = item.children?.find(child => !child.checked && child.id == dep)\n                willCheckItem && checkAllDependents(willCheckItem, recurseParent);\n                handleParentCheckedStatus(item, recurseParent);\n                return;\n            }\n\n            if (!item.checked && item.id == dep) {\n                checkAllDependents(item, recurseParent);\n                item.parent && handleParentCheckedStatus(item.parent, recurseParent);\n            }\n        })\n    });\n}\n\nfunction handleItemCheckEvent(item: ITableData) {\n    if (item.disabled || isModelDepended(item) || item.name == \'App Settings\')\n        return;\n\n    if (item.type != "module" && item.type != "folder") {\n        if (item.checked) {\n            item.checked = false;\n            item.parent && handleParentCheckedStatus(item.parent, true);\n        } else {\n            checkAllDependents(item, true);\n        }\n    } else {\n        if (item.children && item.children.filter(c => !c.disabled).length > 0) {\n            if (item.anyChildChecked) {\n                item.children.filter(c => !c.disabled).forEach(child => child.checked = false);\n                item.checked = false;\n                handleParentCheckedStatus(item, true);\n            } else {\n                item.children.forEach(child => checkAllDependents(child, true));\n                item.checked = true;\n            }\n        }\n        else {\n            item.checked = !item.checked;\n            item.allChildChecked = false;\n        }\n    }\n\n}\n\nfunction handleParentCheckedStatus(item: ITableData, recurseParent: boolean) {\n    item.disabled = item.children && (item.children.length == 0 || !item.children?.some(child => !child.disabled))\n    item.allChildChecked = item.children && item.children.length > 0 && !item.children.some((child) => !child.checked || child.disabled);\n    item.anyChildChecked = item.children?.some((child) => child.checked && !child.disabled);\n    if (recurseParent && item.parent) {\n        handleParentCheckedStatus(item.parent, true);\n    }\n}\n\nfunction updateDependencyMap(newVersion: string, item: ITableData) {\n    const deps = dependencyMap.value?.get(item.id);\n    dependencyMap.value?.set(item.id, {\n        dependedBy: deps?.dependedBy || Array<string>(),\n        dependedTo: modelHistories.value?.get(item.id)?.find(e => e.version == newVersion)?.dependentModels?.map(e => e.modelId) || Array<string>()\n    })\n}\n\nfunction versionDialog(item: ITableData) {\n    const clickedNode = { id: item.id, state: { checked: item.checked }, text: item.name, type: item.type, version: item.version };\n    const hasAnyVersion = modelHistories.value?.has(item.id);\n    const options = {\n        clickedNode, cb: (version: string) => {\n            item.version = version;\n            updateDependencyMap(version, item);\n        }\n    } as any;\n\n    if (hasAnyVersion) {\n        options.versions = modelHistories.value?.get(item.id)\n    }\n    dialog.showDialog(\n        defineAsyncComponent(() => import("../../application/modelVersionDialog.vue")),\n        { closable: true, title: "Change Version", width: "1080px", maxHeight: "500px", overflow: "auto" }, options\n    );\n}\n\nfunction moduleVersionDialog(item: ITableData) {\n    dialog.showDialog(\n        defineAsyncComponent(() => import("../../application/moduleVersionDialog.vue")),\n        { closable: true, title: "Change Version", width: "1080px", maxHeight: "500px", overflow: "auto" },\n        {\n            module: { ID: item.id }, versions: importedModuleVersions.value?.get(item.id), cb: (moduleVersion: IModuleVersion) => {\n                item.version = moduleVersion.version;\n                item.children?.forEach(child => {\n                    const modulesModel = moduleVersion.relatedModelHistories.find(e => e.modelID == child.id)\n                    child.version = modulesModel?.version\n                    updateDependencyMap(modulesModel?.version!, child);\n                })\n            }\n        }\n    );\n}\n\nasync function downloadBtnClicked() {\n    executor.execute(\n        async () => {\n            const items = getJobItems();\n            await executor.executeUseCase<ICreateWorkflowExportJob>(ICreateWorkflowExportJob, { items });\n            emit("close");\n    },{ loading: true });\n}\n\nfunction getJobItems(): Array<IWorkflowExportItem> {\n    const findCheckedItems = (item: ITableData): Array<IWorkflowExportItem> | undefined => {\n        if(!item.version || !item.checked) return;\n\n        if(item.type != \'module\' && item.type != \'folder\')\n            return [{ ID: item.id, version: item.version }];\n        \n        if(!item.anyChildChecked) return;\n\n        const children = Array<IWorkflowExportItem>();\n        item.children?.forEach(ch => {\n            const childList = findCheckedItems(ch);\n            if(childList && childList.length > 0) Array.prototype.push.apply(children, childList);\n        });\n        return children;\n    }\n\n    const jobItems = Array<IWorkflowExportItem>();\n    items.value.forEach(e => {\n        const itemList = findCheckedItems(e);\n        if(itemList && itemList.length > 0) Array.prototype.push.apply(jobItems, itemList);\n    });\n    return jobItems;\n\n}\n\n<\/script>\n\n\n<style scoped>\n.container {\n    padding: 32px 20px 20px;\n}\n\n.settings-container {\n    position: relative;\n    top: 0px;\n    left: 0px;\n}\n\n.custom-text {\n    /* position: absolute; */\n    font-family: \'Roboto\';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 15px;\n    line-height: 18px;\n    /* left: 24px; */\n    color: #212121;\n}\n\n/* .custom-text.title{\n    top: 92px;\n}\n\n.custom-text.environment{\n    top: 174px;\n} */\n\n.radio-button {\n    position: absolute;\n    top: 60px;\n    left: 20px;\n    cursor: pointer;\n}\n\n.radio-text {\n    position: absolute;\n    top: 59px;\n    font: normal normal normal 14px/19px Roboto;\n    color: #212121;\n    user-select: none;\n    cursor: pointer;\n}\n\n.existing-app-url {\n    position: absolute;\n    width: 760px;\n    height: 40px;\n    top: 114px;\n    left: 20px;\n    background: #ffffff 0% 0% no-repeat padding-box;\n    border: 1px solid #bcbcbc;\n    border-radius: 4px;\n    font: normal normal normal 14px/19px Roboto;\n    letter-spacing: 0px;\n    padding: 10px 0px 10px 10px;\n}\n\n.url-error {\n    border: 1px solid red;\n}\n\n.url-disable {\n    opacity: 0.5;\n}\n\n.existing-app-url::placeholder {\n    color: #bcbcbc;\n    user-select: none;\n}\n\n.modules-selected-checkbox {\n    cursor: pointer;\n}\n\n.modules-selected-text {\n    font: normal normal normal 14px/19px Roboto;\n    color: #757575;\n    margin: 0 0 13px 30px;\n    ;\n}\n\n/* .modules-selected-text.deploy {\n    top: 257px;\n} */\n\n.text-number {\n    font: normal normal bold 14px/19px Roboto;\n    color: #212121;\n}\n\n.modules-datatable {\n    width: 760px;\n    height: 288px;\n    border: 1px solid #bcbcbc;\n    overflow-x: hidden;\n    overflow-y: auto;\n    margin-bottom: 20px;\n}\n\n/* .modules-datatable.deploy {\n    top: 286px;\n} */\n\n.modules-datatable::-webkit-scrollbar {\n    width: 4px;\n}\n\n.modules-datatable::-webkit-scrollbar-thumb {\n    background: #bcbcbc 0% 0% no-repeat padding-box;\n    border-radius: 10px;\n}\n\n.modules-datatable::-webkit-scrollbar-thumb:hover {\n    background: #555;\n}\n\n.row-container {\n    width: 100%;\n    height: 36px;\n    position: relative;\n    background: #ffffff 0% 0% no-repeat padding-box;\n    border: 1px solid #e0e0e0;\n}\n\n.chevron {\n    position: absolute;\n    left: 4px;\n    color: #757575;\n    font-size: 24px;\n}\n\n.chevron.disabled {\n    pointer-events: none;\n    color: #D5D5D5;\n}\n\n.module-checkbox {\n    position: absolute;\n    top: 10px;\n    left: 43px;\n    cursor: pointer;\n}\n\n.module-name {\n    position: absolute;\n    top: 9px;\n    left: 69px;\n    font: normal normal normal 14px/19px Roboto;\n    color: #212121;\n}\n\n.module-name.imported {\n    top: 10px;\n    left: 87px;\n}\n\n.module-name.disabled {\n    color: #D5D5D5;\n}\n\n.model-checkbox {\n    position: absolute;\n    top: 10px;\n    left: 59px;\n    cursor: pointer;\n}\n\n.model-icon {\n    position: absolute;\n    width: 16px;\n    height: 16px;\n    top: 6px;\n    left: 85px;\n}\n\n.app-tier-model-icon {\n    position: absolute;\n    width: 16px;\n    height: 16px;\n    top: 6px;\n    left: 69px\n}\n\n.app-tier-model-name {\n    position: absolute;\n    top: 10px;\n    left: 87px;\n    font: normal normal normal 14px/19px Roboto;\n    color: #212121;\n}\n\n.app-tier-model-name.disabled {\n    color: #D5D5D5;\n}\n\n.model-name {\n    position: absolute;\n    top: 9px;\n    left: 103px;\n    font: normal normal normal 14px/19px Roboto;\n    color: #212121;\n}\n\n.model-name.disabled {\n    color: #D5D5D5;\n}\n\n.version-text {\n    margin: 10px 7px 10px auto;\n    display: table;\n    font: normal normal normal 12px/16px Roboto;\n    color: #757575;\n    cursor: pointer;\n    user-select: none;\n}\n\n.version-text.disabled {\n    pointer-events: none;\n    cursor: pointer;\n}\n\n.version-icon {\n    font: normal normal normal 16px/19px Material Design Icons;\n    color: #D5D5D5;\n}\n\n.version-icon.disabled {\n    font: normal normal normal 16px/19px Material Design Icons;\n    color: #EEEEEE;\n    pointer-events: none;\n    cursor: pointer;\n}\n\n.footer {\n    position: relative;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: end;\n}\n\n.footer.deploy {\n    position: relative;\n    width: 100%;\n}\n\n.footer.export {\n    margin-top: 102px;\n}\n\n.cancel-button {\n    border-radius: 4px;\n    user-select: none;\n    font-style: normal;\n    font-weight: 500;\n    font-family: "ROBOTO";\n    font-size: 15px;\n    color: #757575;\n    padding: 10px 16px;\n    cursor: pointer;\n}\n\n\n\n.save-button {\n    background: #151233 0% 0% no-repeat padding-box;\n    border-radius: 4px;\n    user-select: none;\n    font-weight: 500;\n    font-size: 15px;\n    color: #ffffff;\n    padding: 10px 16px;\n    cursor: pointer;\n}\n\n.mobile-publish-text,\n.web-publish-text {\n    padding: 5px 12px;\n    margin-bottom: 52px;\n    width: 100%;\n    color: #757575;\n    font-size: 14px;\n    background: #F5F5FA;\n    border-radius: 4px;\n    display: flex;\n    align-items: center;\n}\n\n.mobile-publish-text i,\n.web-publish-text i {\n    font-size: 24px;\n    color: #151233;\n    margin-right: 4px;\n}\n\n.save-button.deploy {\n    padding: 10px 16px;\n}\n\n.button-disable .save-button {\n    color: #757575;\n    cursor: default;\n}\n\n.button-disable .save-button:hover+.button-tooltip,\n.start-screen:hover .button-tooltip,\n.row-container:hover .button-tooltip,\n.publish-info:hover .button-tooltip {\n    visibility: visible;\n    transition: opacity 0.3s ease-out 1s;\n    opacity: 1;\n}\n\n.button-tooltip {\n    visibility: hidden;\n    position: absolute;\n    background: #757575;\n    color: #FFFFFF;\n    font-size: 11px;\n    font-family: \'Roboto\';\n    text-align: center;\n    border-radius: 4px;\n    letter-spacing: 0.2px;\n    padding: 6px 8px 6px 8px;\n    top: 56px;\n    left: 63px;\n    opacity: 0;\n}\n\n.publish-info {\n    color: #757575;\n    font-size: 20px;\n    margin-left: 10px;\n}\n\n.select-environment {\n    width: 100%;\n    font-size: 15px;\n    height: 40px;\n    line-height: 40px;\n    margin-top: 4px\n}\n</style>\n\n<style>\n.selected-environment {\n    background-color: transparent;\n    border-radius: 4px;\n    border: 1px solid #BCBCBC;\n    color: #212121;\n    padding-left: 12px;\n}\n\n.custom-placeholder:empty:before {\n    color: #BCBCBC !important;\n    font-weight: 400;\n}\n\n.custom-select .items .option {\n    font-size: 14px;\n    padding-left: 12px;\n    line-height: 32px;\n}\n\n.custom-select .items .option:hover {\n    background-color: #EEEEEE;\n    color: #212121;\n}\n\n.custom-select .items .option.disabled:hover {\n    background-color: #FFFFFF;\n    color: #212121;\n}\n\n.custom-select.select-environment .items {\n    margin-top: 4px;\n    color: #212121;\n    border-radius: 4px;\n    border: 1px solid #E3E3E3;\n    overflow: hidden;\n    background-color: #FFFFFF;\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\n    position: static !important;\n}\n</style>\n'],sourceRoot:""}]);const r=d},74594:(e,n,t)=>{t.d(n,{Z:()=>r});var o=t(34663),i=t.n(o),l=t(7638),d=t.n(l)()(i());d.push([e.id,"\n.selected-environment {\n    background-color: transparent;\n    border-radius: 4px;\n    border: 1px solid #BCBCBC;\n    color: #212121;\n    padding-left: 12px;\n}\n.custom-placeholder:empty:before {\n    color: #BCBCBC !important;\n    font-weight: 400;\n}\n.custom-select .items .option {\n    font-size: 14px;\n    padding-left: 12px;\n    line-height: 32px;\n}\n.custom-select .items .option:hover {\n    background-color: #EEEEEE;\n    color: #212121;\n}\n.custom-select .items .option.disabled:hover {\n    background-color: #FFFFFF;\n    color: #212121;\n}\n.custom-select.select-environment .items {\n    margin-top: 4px;\n    color: #212121;\n    border-radius: 4px;\n    border: 1px solid #E3E3E3;\n    overflow: hidden;\n    background-color: #FFFFFF;\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\n    position: static !important;\n}\n","",{version:3,sources:["webpack://./src/presentation/vue3/components/dialogs/publish/workflowExportDialog.vue"],names:[],mappings:";AAs2BA;IACI,6BAA6B;IAC7B,kBAAkB;IAClB,yBAAyB;IACzB,cAAc;IACd,kBAAkB;AACtB;AAEA;IACI,yBAAyB;IACzB,gBAAgB;AACpB;AAEA;IACI,eAAe;IACf,kBAAkB;IAClB,iBAAiB;AACrB;AAEA;IACI,yBAAyB;IACzB,cAAc;AAClB;AAEA;IACI,yBAAyB;IACzB,cAAc;AAClB;AAEA;IACI,eAAe;IACf,cAAc;IACd,kBAAkB;IAClB,yBAAyB;IACzB,gBAAgB;IAChB,yBAAyB;IACzB,0CAA0C;IAC1C,2BAA2B;AAC/B",sourcesContent:['<template>\n    <div class="container">\n        <div>\n            <CheckboxComp :class="[\'modules-selected-checkbox\']"\n                :minus="mainCheckboxState == false" :check="mainCheckboxState == true"\n                @click="handleModuleCountCheckboxEvent(mainCheckboxState == undefined)" />\n            <div :class="[\'modules-selected-text\']">\n                <span class="text-number">{{ allChildCheckedModulesCount + anyChildCheckedModulesCount +\n                    checkedRootLevelModelsCount }}</span>\n                of <span class="text-number">{{ totalRootLevelCount }}</span> items selected\n            </div>\n        </div>\n        <div :class="[\'modules-datatable\']" id="module-container-div"> </div>\n\n        <div :class="[\'footer\',\'export\']">\n            <div :class="[\'cancel-button\', ]" @click="emit(\'close\')">Cancel</div>\n            <div :class="(isDownloadBtnDisable ? \' button-disable\' : \'\')"\n                @click="!isDownloadBtnDisable && downloadBtnClicked()">\n                <span class="save-button ">DOWNLOAD</span>\n                <span v-if="!isThereVersion" class="button-tooltip"\n                    style="top: -80px; left: 626px; z-index: 1; width: 145px;">There are no items ready to publish. At least\n                    one of your items must be ready to publish.</span>\n                <span v-else-if="!isAllDependenciesOK" class="button-tooltip"\n                    style="top: -95px; left: 644px; z-index: 1; width: 135px;">{{ dependencyErrorStr }}</span>\n            </div>\n        </div>\n    </div>\n</template>\n\n\n<script setup lang="ts">\nimport { CryptoHelper } from "@stechquick/algae/lib/helpers/cryptoHelper";\nimport { computed,createApp,defineAsyncComponent,onMounted,ref } from "vue";\nimport { ITableData } from "../../../../../../../common/qCloudTemp/exporter";\nimport { IModuleRelatedModelItem } from "../../../../../../../common/qCloudTemp/quickCloud";\nimport { container } from "../../../../../domain/core/diContainer";\nimport { IQCloudApi } from "../../../../../domain/infrastructure/IQCloudApi";\nimport { IModel,IModelHistoryInfo,IModule,IModuleVersion, IWorkflowExportItem } from "../../../../../domain/model/models";\nimport { IDialog } from "../../../../../domain/presentation/IDialog";\nimport { ITreeItem } from "../../../../../domain/presentation/ITreeView";\nimport { ICreateWorkflowExportJob } from "../../../../../domain/useCase/ICreateWorkflowExportJob";\nimport { FileDisplayerExternalData,IFileDisplayerUseCase } from "../../../../../domain/useCase/IFileDisplayerUseCase";\nimport { FileExplorerConstants } from "../../../../../domain/useCase/IFileExplorer";\nimport { IListMultiModelVersions } from "../../../../../domain/useCase/IListMultiModelVersions";\nimport { IListMultiModuleVersions } from "../../../../../domain/useCase/IListMultiModuleVersions";\nimport { IObjectUseCase } from "../../../../../domain/useCase/IObjectUseCase";\nimport { IUseCaseExecutor } from "../../../../../domain/useCase/IUseCaseExecutor";\nimport { IViewModel } from "../../../../../domain/viewModel/IViewModel";\nimport { IViewModelManager } from "../../../../../domain/viewModel/IViewModelManager";\nimport CheckboxComp from "../../checkboxComp.vue";\nimport ExportDialogItem from "./components/exportDialogItem.vue";\n\nconst viewModel = container.resolve<IViewModel>(IViewModel);\nconst viewModelManager = container.resolve<IViewModelManager>(IViewModelManager);\nconst dialog = container.resolve<IDialog>(IDialog);\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\nconst fileDisplayerUseCase = container.resolve<IFileDisplayerUseCase>(IFileDisplayerUseCase);\nconst objectUseCase = container.resolve<IObjectUseCase>(IObjectUseCase);\n\n\nconst emit = defineEmits(["close"]);\nconst items = ref<Array<ITableData>>([]);\nconst modelHistories = ref<Map<string, Array<IModelHistoryInfo>>>();\nconst importedModuleVersions = ref<Map<string, Array<IModuleVersion>>>();\nconst startScreen = ref<IModel>();\nconst dependencyMap = ref<Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>>();\nconst dependencyErrorStr = ref<string>(\'\');\n\n\n\n\nonMounted(async () => {\n    await executor.execute(async () => {\n        const excludedTypes: Array<IModel["modelType"]> = [\'bpmn\', \'process\', \'entityDesigner\', \'process\'];\n        await Promise.all([\n            executor.executeUseCase<IListMultiModelVersions>(IListMultiModelVersions, { excludedTypes }).then(res => modelHistories.value = res),\n            executor.executeUseCase<IListMultiModuleVersions>(IListMultiModuleVersions, {}).then(res => importedModuleVersions.value = res)\n        ])\n        initDependencies();\n        handleItems();\n    }, { loading: true });\n})\n\nconst allChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == "module" && e.allChildChecked).length);\nconst anyChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == "module" && !e.allChildChecked && e.anyChildChecked).length);\nconst checkedRootLevelModelsCount = computed(() => items.value.filter(e => e.type != "module" && e.checked).length);\nconst totalRootLevelCount = computed(() => items.value.length);\nconst isDownloadBtnDisable = computed(validate);\nconst mainCheckboxState = computed(() => items.value.length == allChildCheckedModulesCount.value ? true\n    : (anyChildCheckedModulesCount.value + checkedRootLevelModelsCount.value > 0 ? false : undefined));\nconst isThereVersion = computed(() => checkMaxVersionOfAllItems());\nconst isAllDependenciesOK = computed(validateDependencies)\n\nfunction validate() {\n    return !items.value.some((item) => item.checked || item.anyChildChecked) || !validateDependencies();\n}\n\nfunction validateDependencies() {\n    const checkMap = new Map<string, boolean>();\n    items.value.forEach(item => {\n        if (item.type == \'module\' && item.children && item.children.length > 0)\n            item.children.forEach(child => checkMap.set(child.id, child.checked == true))\n        else\n            checkMap.set(item.id, item.checked == true)\n    })\n\n    const mustBeCheckedMap = new Map<string, Array<string>>();\n    dependencyMap.value?.forEach((deps, id) => {\n        if (!checkMap.get(id))\n            return;\n\n        deps.dependedTo.forEach(dependedId => {\n            if (checkMap.get(dependedId))\n                return;\n\n            if (mustBeCheckedMap.has(id)) {\n                const vals = mustBeCheckedMap.get(id)!\n                vals.push(dependedId)\n                mustBeCheckedMap.set(id, vals)\n            } else {\n                mustBeCheckedMap.set(id, [dependedId])\n            }\n\n        });\n    })\n\n    //set deps error text\n    const [firstItemID] = mustBeCheckedMap.keys();\n    if (firstItemID) {\n        const firstItemDeps = mustBeCheckedMap.get(firstItemID);\n        const firstItemDepStr = firstItemDeps ? firstItemDeps.map(findItem).map(e => e?.name).join(\', \') : \'\';\n        dependencyErrorStr.value = `Select ${firstItemDepStr} first. ${findItem(firstItemID)?.name} depends on ${firstItemDepStr}.`\n    }\n\n    return mustBeCheckedMap.size == 0\n}\n\n\nfunction findItem(ID: string) {\n    for (const item of items.value) {\n        if (item.type != \'module\' && item.id == ID)\n            return item;\n        if (item.type == \'module\' && item.children && item.children.length > 0) {\n            const f = item.children.find(e => e.id == ID)\n            if (f) return f\n        }\n    }\n}\n\nfunction initDependencies() {\n    const map = new Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>();\n    const depMap = new Map<string, Array<string>>();\n\n    viewModelManager.flatMapItems(viewModel.studio.items, (item) => {\n        if (item.objectType != "model") { return; }\n\n        const isImportedModule = item.owner.objectType == "module" && objectUseCase.isModuleImported(item.owner);\n\n        let version: string | undefined;\n        if (!isImportedModule) {\n            const maxVersion = getItemMaxVersion(item)\n            if (!maxVersion)\n                return depMap.set(item.ID, item.dependentModels ? item.dependentModels.map(e => e.modelId) : Array<string>());\n            version = maxVersion;\n        }\n        else {\n            const moduleVersions = importedModuleVersions.value?.get(item.owner.ID)\n            const moduleVersion = (item.owner as IModule).relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion\n\n            const importedModuleModel = moduleVersions?.filter(e => e.version == moduleVersion).flatMap(e => e.relatedModelHistories).find(e => e.modelID == item.ID)\n            version = importedModuleModel?.version\n        }\n\n        const historyItem = modelHistories.value?.get(item.ID)?.find(e => e.version == version);\n\n        depMap.set(item.ID, historyItem?.dependentModels ? historyItem?.dependentModels.map(e => e.modelId) : Array<string>())\n    });\n\n\n    depMap.forEach((dependedTo, modelId) => {\n        const dependedBy = Array<string>();\n        depMap.forEach((dependencies, depModelId) => {\n            if (dependencies.some(depId => depId == modelId))\n                dependedBy.push(depModelId)\n        })\n        map.set(modelId, { dependedBy, dependedTo });\n    })\n    dependencyMap.value = map;\n}\n\nfunction isModelDepended(item: ITableData) {\n    const deps = dependencyMap.value?.get(item.id)?.dependedBy\n    if (!deps) return false;\n\n    return deps.some(dep => items.value.some(item => {\n        if (item.type == \'module\' && item.anyChildChecked) {\n            return item.children?.some(child => child.checked && child.id == dep)\n        }\n        return item.id == dep && item.checked\n    }));\n}\nfunction createDialogComp(item: ITableData) {\n    const newChild = createApp(ExportDialogItem, {\n        handleItemCheckEvent,\n        startScreen,\n        versionDialog,\n        handleCollapse,\n        item: item,\n        moduleVersionDialog\n    });\n    const mountEl = document.createElement(\'div\');\n    newChild.mount(mountEl);\n    const parentEl = document.getElementById(\'module-container-div\');\n    parentEl?.appendChild(mountEl);\n}\nfunction createAndAppendItem({ newItem }: { newItem: ITableData }) {\n    createDialogComp(newItem);\n    if ((newItem).type != "module") {\n        items.value.push(newItem);\n    }\n}\n\nfunction handleItems() {\n    const treeItems = fileDisplayerUseCase.cloneFileExplorerTreeView({\n        displayFilterer: (item, hasChildren) => {\n            switch (item.ID) { case FileExplorerConstants.uiAssetListID: case FileExplorerConstants.uiSettingsID: return false; default: break; }\n            switch (item.objectType) {\n                case "application": return false;\n                case "module": return true;\n                case "folder": return hasChildren;\n                case "model": return true;\n            }\n        },\n    });\n\n    const converter = (treeItem: ITreeItem<FileDisplayerExternalData>, options: {ownerModule?: {isImportedModule: boolean;moduleVersion: string | undefined;relatedModelHistories: IModuleRelatedModelItem[] | undefined}}): ITableData => {\n        const item = treeItem.externalData;\n        if (item.objectType == "application") { throw new Error("unexpected item type"); }\n\n        const fullPath = objectUseCase.getFullPath(item, "self");\n        let level = fullPath.split("/").length - 1;\n\n        let tableData: ITableData;\n        switch(item.objectType) {\n            case "folder":\n                tableData = {\n                    id: item.ID, name: item.name, type: "folder", collapsed: true, level,\n                    children: treeItem.children?.map((item) => converter(item, { ownerModule: options.ownerModule })),\n                };\n                tableData.children?.forEach(child => child.parent = tableData);\n                handleParentCheckedStatus(tableData, false);\n                break;\n            case "model":\n                if (options.ownerModule) {\n                    tableData = { id: item.ID, name: item.name, type: item.modelType, level };\n                    if (!options.ownerModule.isImportedModule || item.isUnmodifiable) {\n                        const maxVersion = getItemMaxVersion(item);\n                        tableData = {\n                            ...tableData,\n                            checked: maxVersion ? true : item.isUnmodifiable,\n                            disabled: maxVersion ? false : !item.isUnmodifiable,\n                            version: item.isUnmodifiable ? \'latest\' : maxVersion,\n                        };\n                    } else {\n                        const importedModulesModel = options.ownerModule.relatedModelHistories?.find(e => e.modelID == item.ID)\n                        tableData = { ...tableData, checked: true, disabled: false, version: importedModulesModel?.version };\n                    }\n                } else {\n                    const maxVersion = getItemMaxVersion(item);\n                    tableData = {\n                        id: item.ID,\n                        name: item.name,\n                        checked: maxVersion ? true : item.isUnmodifiable,\n                        disabled: maxVersion ? false : !item.isUnmodifiable,\n                        type: item.modelType,\n                        version: item.isUnmodifiable ? \'latest\' : maxVersion,\n                        level,\n                    };\n                }\n                break;\n            case "module":\n                const isImportedModule = objectUseCase.isModuleImported(item);\n                const moduleVersion = item.relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion;\n                const relatedModelHistories = isImportedModule ? importedModuleVersions.value?.get(item.ID)?.find(module => module.version == moduleVersion)?.relatedModelHistories : undefined\n                \n                tableData = {\n                    id: item.ID,\n                    collapsed: true,\n                    name: item.name,\n                    type: "module",\n                    imported: isImportedModule,\n                    version: moduleVersion,\n                    children: treeItem.children?.map((item) => converter(item, {ownerModule: {isImportedModule, moduleVersion, relatedModelHistories}})),\n                }\n                tableData.children?.forEach(child => child.parent = tableData);\n                handleParentCheckedStatus(tableData, false);\n                break;\n        }\n        return tableData;\n    };\n    const tableDatas = treeItems.map(item => converter(item, {}));\n\n    const traverser = (tableData: ITableData) => {\n        createAndAppendItem({ newItem: tableData });\n        tableData.children?.forEach(traverser);\n    };\n    \n    tableDatas.forEach(traverser);\n}\n\nfunction getItemMaxVersion(item: IModel): string | undefined {\n    if (!modelHistories.value?.has(item.ID))\n        return undefined;\n\n    const versions = modelHistories.value.get(item.ID);\n    if (!versions)\n        return undefined;\n\n    const findMaxVersion = (versions: Array<string>) => {\n        const versionNumbers = versions.map(v => {\n            const parts: Array<string> = v.split(".");\n            return parseInt(parts[0]) * 10 + parseInt(parts[1]) * 1;\n        })\n\n        versionNumbers.sort((a, b) => b - a);\n\n        const maxVersion = versionNumbers[0];\n        return `${Math.floor(maxVersion / 10)}.${maxVersion % 10}`;\n    }\n\n    return findMaxVersion(versions.map(e => e.version!));\n\n}\n\nfunction checkMaxVersionOfAllItems() {\n    let isThereVersion: boolean = false;\n    items.value.forEach(item => {\n        if (item.type == "module") {\n            item.children?.forEach(child => {\n                if (child.version) {\n                    isThereVersion = true;\n                }\n\n            })\n        }\n        else {\n            if (item.version) {\n                isThereVersion = true;\n            }\n        }\n    })\n    return isThereVersion;\n}\n\nfunction handleModuleCountCheckboxEvent(value: boolean) {\n    items.value.filter(e => !e.disabled).forEach((item) => {\n        item.checked = value;\n        const allItemsCheckable = item.allChildChecked != undefined && item.children && item.children.length > 0 && !item.children.some(c => c.disabled);\n        if (allItemsCheckable) item.allChildChecked = value;\n        if (item.anyChildChecked != undefined) item.anyChildChecked = value;\n        if (item.children) item.children.filter(c => !c.disabled).forEach((child) => (child.checked = value));\n    });\n}\n\nfunction handleCollapse(item: ITableData, childIterate?: boolean, collapsed?: boolean) {\n    item.collapsed = collapsed !== undefined ? collapsed : !item.collapsed;\n    if (childIterate) {\n        item.children?.forEach(child => {\n            const childEl = document.getElementById(child.id);\n            childEl!.style.display = item.collapsed ? "none" : "block";\n            handleCollapse(child, childIterate, item.collapsed);\n        })\n    }\n}\n\nfunction checkAllDependents(item: ITableData, recurseParent: boolean) {\n    if (item.disabled || item.checked) return;\n\n    item.checked = true\n    item.parent && handleParentCheckedStatus(item.parent, recurseParent);\n\n    const deps = dependencyMap.value?.get(item.id)?.dependedTo\n    if (!deps) return;\n\n    deps.forEach(dep => {\n        items.value.forEach(item => {\n            if (item.type == \'module\' && !item.allChildChecked) {\n                const willCheckItem = item.children?.find(child => !child.checked && child.id == dep)\n                willCheckItem && checkAllDependents(willCheckItem, recurseParent);\n                handleParentCheckedStatus(item, recurseParent);\n                return;\n            }\n\n            if (!item.checked && item.id == dep) {\n                checkAllDependents(item, recurseParent);\n                item.parent && handleParentCheckedStatus(item.parent, recurseParent);\n            }\n        })\n    });\n}\n\nfunction handleItemCheckEvent(item: ITableData) {\n    if (item.disabled || isModelDepended(item) || item.name == \'App Settings\')\n        return;\n\n    if (item.type != "module" && item.type != "folder") {\n        if (item.checked) {\n            item.checked = false;\n            item.parent && handleParentCheckedStatus(item.parent, true);\n        } else {\n            checkAllDependents(item, true);\n        }\n    } else {\n        if (item.children && item.children.filter(c => !c.disabled).length > 0) {\n            if (item.anyChildChecked) {\n                item.children.filter(c => !c.disabled).forEach(child => child.checked = false);\n                item.checked = false;\n                handleParentCheckedStatus(item, true);\n            } else {\n                item.children.forEach(child => checkAllDependents(child, true));\n                item.checked = true;\n            }\n        }\n        else {\n            item.checked = !item.checked;\n            item.allChildChecked = false;\n        }\n    }\n\n}\n\nfunction handleParentCheckedStatus(item: ITableData, recurseParent: boolean) {\n    item.disabled = item.children && (item.children.length == 0 || !item.children?.some(child => !child.disabled))\n    item.allChildChecked = item.children && item.children.length > 0 && !item.children.some((child) => !child.checked || child.disabled);\n    item.anyChildChecked = item.children?.some((child) => child.checked && !child.disabled);\n    if (recurseParent && item.parent) {\n        handleParentCheckedStatus(item.parent, true);\n    }\n}\n\nfunction updateDependencyMap(newVersion: string, item: ITableData) {\n    const deps = dependencyMap.value?.get(item.id);\n    dependencyMap.value?.set(item.id, {\n        dependedBy: deps?.dependedBy || Array<string>(),\n        dependedTo: modelHistories.value?.get(item.id)?.find(e => e.version == newVersion)?.dependentModels?.map(e => e.modelId) || Array<string>()\n    })\n}\n\nfunction versionDialog(item: ITableData) {\n    const clickedNode = { id: item.id, state: { checked: item.checked }, text: item.name, type: item.type, version: item.version };\n    const hasAnyVersion = modelHistories.value?.has(item.id);\n    const options = {\n        clickedNode, cb: (version: string) => {\n            item.version = version;\n            updateDependencyMap(version, item);\n        }\n    } as any;\n\n    if (hasAnyVersion) {\n        options.versions = modelHistories.value?.get(item.id)\n    }\n    dialog.showDialog(\n        defineAsyncComponent(() => import("../../application/modelVersionDialog.vue")),\n        { closable: true, title: "Change Version", width: "1080px", maxHeight: "500px", overflow: "auto" }, options\n    );\n}\n\nfunction moduleVersionDialog(item: ITableData) {\n    dialog.showDialog(\n        defineAsyncComponent(() => import("../../application/moduleVersionDialog.vue")),\n        { closable: true, title: "Change Version", width: "1080px", maxHeight: "500px", overflow: "auto" },\n        {\n            module: { ID: item.id }, versions: importedModuleVersions.value?.get(item.id), cb: (moduleVersion: IModuleVersion) => {\n                item.version = moduleVersion.version;\n                item.children?.forEach(child => {\n                    const modulesModel = moduleVersion.relatedModelHistories.find(e => e.modelID == child.id)\n                    child.version = modulesModel?.version\n                    updateDependencyMap(modulesModel?.version!, child);\n                })\n            }\n        }\n    );\n}\n\nasync function downloadBtnClicked() {\n    executor.execute(\n        async () => {\n            const items = getJobItems();\n            await executor.executeUseCase<ICreateWorkflowExportJob>(ICreateWorkflowExportJob, { items });\n            emit("close");\n    },{ loading: true });\n}\n\nfunction getJobItems(): Array<IWorkflowExportItem> {\n    const findCheckedItems = (item: ITableData): Array<IWorkflowExportItem> | undefined => {\n        if(!item.version || !item.checked) return;\n\n        if(item.type != \'module\' && item.type != \'folder\')\n            return [{ ID: item.id, version: item.version }];\n        \n        if(!item.anyChildChecked) return;\n\n        const children = Array<IWorkflowExportItem>();\n        item.children?.forEach(ch => {\n            const childList = findCheckedItems(ch);\n            if(childList && childList.length > 0) Array.prototype.push.apply(children, childList);\n        });\n        return children;\n    }\n\n    const jobItems = Array<IWorkflowExportItem>();\n    items.value.forEach(e => {\n        const itemList = findCheckedItems(e);\n        if(itemList && itemList.length > 0) Array.prototype.push.apply(jobItems, itemList);\n    });\n    return jobItems;\n\n}\n\n<\/script>\n\n\n<style scoped>\n.container {\n    padding: 32px 20px 20px;\n}\n\n.settings-container {\n    position: relative;\n    top: 0px;\n    left: 0px;\n}\n\n.custom-text {\n    /* position: absolute; */\n    font-family: \'Roboto\';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 15px;\n    line-height: 18px;\n    /* left: 24px; */\n    color: #212121;\n}\n\n/* .custom-text.title{\n    top: 92px;\n}\n\n.custom-text.environment{\n    top: 174px;\n} */\n\n.radio-button {\n    position: absolute;\n    top: 60px;\n    left: 20px;\n    cursor: pointer;\n}\n\n.radio-text {\n    position: absolute;\n    top: 59px;\n    font: normal normal normal 14px/19px Roboto;\n    color: #212121;\n    user-select: none;\n    cursor: pointer;\n}\n\n.existing-app-url {\n    position: absolute;\n    width: 760px;\n    height: 40px;\n    top: 114px;\n    left: 20px;\n    background: #ffffff 0% 0% no-repeat padding-box;\n    border: 1px solid #bcbcbc;\n    border-radius: 4px;\n    font: normal normal normal 14px/19px Roboto;\n    letter-spacing: 0px;\n    padding: 10px 0px 10px 10px;\n}\n\n.url-error {\n    border: 1px solid red;\n}\n\n.url-disable {\n    opacity: 0.5;\n}\n\n.existing-app-url::placeholder {\n    color: #bcbcbc;\n    user-select: none;\n}\n\n.modules-selected-checkbox {\n    cursor: pointer;\n}\n\n.modules-selected-text {\n    font: normal normal normal 14px/19px Roboto;\n    color: #757575;\n    margin: 0 0 13px 30px;\n    ;\n}\n\n/* .modules-selected-text.deploy {\n    top: 257px;\n} */\n\n.text-number {\n    font: normal normal bold 14px/19px Roboto;\n    color: #212121;\n}\n\n.modules-datatable {\n    width: 760px;\n    height: 288px;\n    border: 1px solid #bcbcbc;\n    overflow-x: hidden;\n    overflow-y: auto;\n    margin-bottom: 20px;\n}\n\n/* .modules-datatable.deploy {\n    top: 286px;\n} */\n\n.modules-datatable::-webkit-scrollbar {\n    width: 4px;\n}\n\n.modules-datatable::-webkit-scrollbar-thumb {\n    background: #bcbcbc 0% 0% no-repeat padding-box;\n    border-radius: 10px;\n}\n\n.modules-datatable::-webkit-scrollbar-thumb:hover {\n    background: #555;\n}\n\n.row-container {\n    width: 100%;\n    height: 36px;\n    position: relative;\n    background: #ffffff 0% 0% no-repeat padding-box;\n    border: 1px solid #e0e0e0;\n}\n\n.chevron {\n    position: absolute;\n    left: 4px;\n    color: #757575;\n    font-size: 24px;\n}\n\n.chevron.disabled {\n    pointer-events: none;\n    color: #D5D5D5;\n}\n\n.module-checkbox {\n    position: absolute;\n    top: 10px;\n    left: 43px;\n    cursor: pointer;\n}\n\n.module-name {\n    position: absolute;\n    top: 9px;\n    left: 69px;\n    font: normal normal normal 14px/19px Roboto;\n    color: #212121;\n}\n\n.module-name.imported {\n    top: 10px;\n    left: 87px;\n}\n\n.module-name.disabled {\n    color: #D5D5D5;\n}\n\n.model-checkbox {\n    position: absolute;\n    top: 10px;\n    left: 59px;\n    cursor: pointer;\n}\n\n.model-icon {\n    position: absolute;\n    width: 16px;\n    height: 16px;\n    top: 6px;\n    left: 85px;\n}\n\n.app-tier-model-icon {\n    position: absolute;\n    width: 16px;\n    height: 16px;\n    top: 6px;\n    left: 69px\n}\n\n.app-tier-model-name {\n    position: absolute;\n    top: 10px;\n    left: 87px;\n    font: normal normal normal 14px/19px Roboto;\n    color: #212121;\n}\n\n.app-tier-model-name.disabled {\n    color: #D5D5D5;\n}\n\n.model-name {\n    position: absolute;\n    top: 9px;\n    left: 103px;\n    font: normal normal normal 14px/19px Roboto;\n    color: #212121;\n}\n\n.model-name.disabled {\n    color: #D5D5D5;\n}\n\n.version-text {\n    margin: 10px 7px 10px auto;\n    display: table;\n    font: normal normal normal 12px/16px Roboto;\n    color: #757575;\n    cursor: pointer;\n    user-select: none;\n}\n\n.version-text.disabled {\n    pointer-events: none;\n    cursor: pointer;\n}\n\n.version-icon {\n    font: normal normal normal 16px/19px Material Design Icons;\n    color: #D5D5D5;\n}\n\n.version-icon.disabled {\n    font: normal normal normal 16px/19px Material Design Icons;\n    color: #EEEEEE;\n    pointer-events: none;\n    cursor: pointer;\n}\n\n.footer {\n    position: relative;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: end;\n}\n\n.footer.deploy {\n    position: relative;\n    width: 100%;\n}\n\n.footer.export {\n    margin-top: 102px;\n}\n\n.cancel-button {\n    border-radius: 4px;\n    user-select: none;\n    font-style: normal;\n    font-weight: 500;\n    font-family: "ROBOTO";\n    font-size: 15px;\n    color: #757575;\n    padding: 10px 16px;\n    cursor: pointer;\n}\n\n\n\n.save-button {\n    background: #151233 0% 0% no-repeat padding-box;\n    border-radius: 4px;\n    user-select: none;\n    font-weight: 500;\n    font-size: 15px;\n    color: #ffffff;\n    padding: 10px 16px;\n    cursor: pointer;\n}\n\n.mobile-publish-text,\n.web-publish-text {\n    padding: 5px 12px;\n    margin-bottom: 52px;\n    width: 100%;\n    color: #757575;\n    font-size: 14px;\n    background: #F5F5FA;\n    border-radius: 4px;\n    display: flex;\n    align-items: center;\n}\n\n.mobile-publish-text i,\n.web-publish-text i {\n    font-size: 24px;\n    color: #151233;\n    margin-right: 4px;\n}\n\n.save-button.deploy {\n    padding: 10px 16px;\n}\n\n.button-disable .save-button {\n    color: #757575;\n    cursor: default;\n}\n\n.button-disable .save-button:hover+.button-tooltip,\n.start-screen:hover .button-tooltip,\n.row-container:hover .button-tooltip,\n.publish-info:hover .button-tooltip {\n    visibility: visible;\n    transition: opacity 0.3s ease-out 1s;\n    opacity: 1;\n}\n\n.button-tooltip {\n    visibility: hidden;\n    position: absolute;\n    background: #757575;\n    color: #FFFFFF;\n    font-size: 11px;\n    font-family: \'Roboto\';\n    text-align: center;\n    border-radius: 4px;\n    letter-spacing: 0.2px;\n    padding: 6px 8px 6px 8px;\n    top: 56px;\n    left: 63px;\n    opacity: 0;\n}\n\n.publish-info {\n    color: #757575;\n    font-size: 20px;\n    margin-left: 10px;\n}\n\n.select-environment {\n    width: 100%;\n    font-size: 15px;\n    height: 40px;\n    line-height: 40px;\n    margin-top: 4px\n}\n</style>\n\n<style>\n.selected-environment {\n    background-color: transparent;\n    border-radius: 4px;\n    border: 1px solid #BCBCBC;\n    color: #212121;\n    padding-left: 12px;\n}\n\n.custom-placeholder:empty:before {\n    color: #BCBCBC !important;\n    font-weight: 400;\n}\n\n.custom-select .items .option {\n    font-size: 14px;\n    padding-left: 12px;\n    line-height: 32px;\n}\n\n.custom-select .items .option:hover {\n    background-color: #EEEEEE;\n    color: #212121;\n}\n\n.custom-select .items .option.disabled:hover {\n    background-color: #FFFFFF;\n    color: #212121;\n}\n\n.custom-select.select-environment .items {\n    margin-top: 4px;\n    color: #212121;\n    border-radius: 4px;\n    border: 1px solid #E3E3E3;\n    overflow: hidden;\n    background-color: #FFFFFF;\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\n    position: static !important;\n}\n</style>\n'],sourceRoot:""}]);const r=d},55287:(e,n,t)=>{t.d(n,{P:()=>o});const o=Symbol.for("ICreateWorkflowExportJob")},29307:(e,n,t)=>{t.d(n,{w:()=>o});const o=Symbol.for("IFileDisplayerUseCase")},62376:(e,n,t)=>{t.d(n,{q:()=>o});const o=Symbol.for("IListMultiModelVersions")},17379:(e,n,t)=>{t.d(n,{y:()=>o});const o=Symbol.for("IListMultiModuleVersions")},49982:(e,n,t)=>{t.r(n),t.d(n,{default:()=>_});var o=t(71093),i=t(66190),l=t(73843),d=t(46233),r=t(5627),a=t(91056),s=t(55287),c=t(29307),p=t(3329),m=t(62376),u=t(17379),A=t(29633),h=t(83487),f=t(88613),I=t(54848),b=t(83843),x=t(28155);const C=e=>((0,o.dD)("data-v-f472d490"),e=e(),(0,o.Cn)(),e),v={class:"container"},g={class:(0,i.normalizeClass)(["modules-selected-text"])},k={class:"text-number"},y={class:"text-number"},B=C((()=>(0,o._)("div",{class:(0,i.normalizeClass)(["modules-datatable"]),id:"module-container-div"},null,-1))),M={class:(0,i.normalizeClass)(["footer","export"])},D=C((()=>(0,o._)("span",{class:"save-button"},"DOWNLOAD",-1))),w={key:0,class:"button-tooltip",style:{top:"-80px",left:"626px","z-index":"1",width:"145px"}},E={key:1,class:"button-tooltip",style:{top:"-95px",left:"644px","z-index":"1",width:"135px"}},V=(0,o.aZ)({__name:"workflowExportDialog",emits:["close"],setup(e,{emit:n}){const C=r.nC.resolve(f.J),V=r.nC.resolve(I.B),T=r.nC.resolve(a.u),U=r.nC.resolve(h.y),F=r.nC.resolve(c.w),S=r.nC.resolve(A._),H=(0,l.iH)([]),z=(0,l.iH)(),R=(0,l.iH)(),L=(0,l.iH)(),j=(0,l.iH)(),P=(0,l.iH)("");(0,o.bv)((async()=>{await U.execute((async()=>{await Promise.all([U.executeUseCase(m.q,{excludedTypes:["bpmn","process","entityDesigner","process"]}).then((e=>z.value=e)),U.executeUseCase(u.y,{}).then((e=>R.value=e))]),function(){const e=new Map,n=new Map;V.flatMapItems(C.studio.items,(e=>{var t,o,i,l;if("model"!=e.objectType)return;let d;if("module"==e.owner.objectType&&S.isModuleImported(e.owner)){const n=null===(t=R.value)||void 0===t?void 0:t.get(e.owner.ID),i=null===(o=e.owner.relatedApplications.find((e=>e.applicationID==C.studio.appId)))||void 0===o?void 0:o.importedVersion,l=null==n?void 0:n.filter((e=>e.version==i)).flatMap((e=>e.relatedModelHistories)).find((n=>n.modelID==e.ID));d=null==l?void 0:l.version}else{const t=X(e);if(!t)return n.set(e.ID,e.dependentModels?e.dependentModels.map((e=>e.modelId)):Array());d=t}const r=null===(l=null===(i=z.value)||void 0===i?void 0:i.get(e.ID))||void 0===l?void 0:l.find((e=>e.version==d));n.set(e.ID,(null==r?void 0:r.dependentModels)?null==r?void 0:r.dependentModels.map((e=>e.modelId)):Array())})),n.forEach(((t,o)=>{const i=Array();n.forEach(((e,n)=>{e.some((e=>e==o))&&i.push(n)})),e.set(o,{dependedBy:i,dependedTo:t})})),j.value=e}(),function(){const e=F.cloneFileExplorerTreeView({displayFilterer:(e,n)=>{switch(e.ID){case p.oA.uiAssetListID:case p.oA.uiSettingsID:return!1}switch(e.objectType){case"application":return!1;case"module":case"model":return!0;case"folder":return n}}}),n=(e,t)=>{var o,i,l,d,r,a,s,c,p;const m=e.externalData;if("application"==m.objectType)throw new Error("unexpected item type");let u,A=S.getFullPath(m,"self").split("/").length-1;switch(m.objectType){case"folder":u={id:m.ID,name:m.name,type:"folder",collapsed:!0,level:A,children:null===(o=e.children)||void 0===o?void 0:o.map((e=>n(e,{ownerModule:t.ownerModule})))},null===(i=u.children)||void 0===i||i.forEach((e=>e.parent=u)),ne(u,!1);break;case"model":if(t.ownerModule)if(u={id:m.ID,name:m.name,type:m.modelType,level:A},!t.ownerModule.isImportedModule||m.isUnmodifiable){const e=X(m);u={...u,checked:!!e||m.isUnmodifiable,disabled:!e&&!m.isUnmodifiable,version:m.isUnmodifiable?"latest":e}}else{const e=null===(l=t.ownerModule.relatedModelHistories)||void 0===l?void 0:l.find((e=>e.modelID==m.ID));u={...u,checked:!0,disabled:!1,version:null==e?void 0:e.version}}else{const e=X(m);u={id:m.ID,name:m.name,checked:!!e||m.isUnmodifiable,disabled:!e&&!m.isUnmodifiable,type:m.modelType,version:m.isUnmodifiable?"latest":e,level:A}}break;case"module":const h=S.isModuleImported(m),f=null===(d=m.relatedApplications.find((e=>e.applicationID==C.studio.appId)))||void 0===d?void 0:d.importedVersion,I=h?null===(s=null===(a=null===(r=R.value)||void 0===r?void 0:r.get(m.ID))||void 0===a?void 0:a.find((e=>e.version==f)))||void 0===s?void 0:s.relatedModelHistories:void 0;u={id:m.ID,collapsed:!0,name:m.name,type:"module",imported:h,version:f,children:null===(c=e.children)||void 0===c?void 0:c.map((e=>n(e,{ownerModule:{isImportedModule:h,moduleVersion:f,relatedModelHistories:I}})))},null===(p=u.children)||void 0===p||p.forEach((e=>e.parent=u)),ne(u,!1)}return u},t=e.map((e=>n(e,{}))),o=e=>{var n;!function({newItem:e}){(function(e){const n=(0,d.createApp)(x.Z,{handleItemCheckEvent:ee,startScreen:L,versionDialog:oe,handleCollapse:G,item:e,moduleVersionDialog:ie}),t=document.createElement("div");n.mount(t);const o=document.getElementById("module-container-div");null==o||o.appendChild(t)})(e),"module"!=e.type&&H.value.push(e)}({newItem:e}),null===(n=e.children)||void 0===n||n.forEach(o)};t.forEach(o)}()}),{loading:!0})}));const W=(0,o.Fl)((()=>H.value.filter((e=>"module"==e.type&&e.allChildChecked)).length)),O=(0,o.Fl)((()=>H.value.filter((e=>"module"==e.type&&!e.allChildChecked&&e.anyChildChecked)).length)),q=(0,o.Fl)((()=>H.value.filter((e=>"module"!=e.type&&e.checked)).length)),Z=(0,o.Fl)((()=>H.value.length)),J=(0,o.Fl)((function(){return!H.value.some((e=>e.checked||e.anyChildChecked))||!N()})),Y=(0,o.Fl)((()=>H.value.length==W.value||!(O.value+q.value>0)&&void 0)),_=(0,o.Fl)((()=>function(){let e=!1;return H.value.forEach((n=>{var t;"module"==n.type?null===(t=n.children)||void 0===t||t.forEach((n=>{n.version&&(e=!0)})):n.version&&(e=!0)})),e}())),$=(0,o.Fl)(N);function N(){var e,n;const t=new Map;H.value.forEach((e=>{"module"==e.type&&e.children&&e.children.length>0?e.children.forEach((e=>t.set(e.id,1==e.checked))):t.set(e.id,1==e.checked)}));const o=new Map;null===(e=j.value)||void 0===e||e.forEach(((e,n)=>{t.get(n)&&e.dependedTo.forEach((e=>{if(!t.get(e))if(o.has(n)){const t=o.get(n);t.push(e),o.set(n,t)}else o.set(n,[e])}))}));const[i]=o.keys();if(i){const e=o.get(i),t=e?e.map(Q).map((e=>null==e?void 0:e.name)).join(", "):"";P.value=`Select ${t} first. ${null===(n=Q(i))||void 0===n?void 0:n.name} depends on ${t}.`}return 0==o.size}function Q(e){for(const n of H.value){if("module"!=n.type&&n.id==e)return n;if("module"==n.type&&n.children&&n.children.length>0){const t=n.children.find((n=>n.id==e));if(t)return t}}}function X(e){var n;if(!(null===(n=z.value)||void 0===n?void 0:n.has(e.ID)))return;const t=z.value.get(e.ID);return t?(e=>{const n=e.map((e=>{const n=e.split(".");return 10*parseInt(n[0])+1*parseInt(n[1])}));n.sort(((e,n)=>n-e));const t=n[0];return`${Math.floor(t/10)}.${t%10}`})(t.map((e=>e.version))):void 0}function G(e,n,t){var o;e.collapsed=void 0!==t?t:!e.collapsed,n&&(null===(o=e.children)||void 0===o||o.forEach((t=>{document.getElementById(t.id).style.display=e.collapsed?"none":"block",G(t,n,e.collapsed)})))}function K(e,n){var t,o;if(e.disabled||e.checked)return;e.checked=!0,e.parent&&ne(e.parent,n);const i=null===(o=null===(t=j.value)||void 0===t?void 0:t.get(e.id))||void 0===o?void 0:o.dependedTo;i&&i.forEach((e=>{H.value.forEach((t=>{var o;if("module"==t.type&&!t.allChildChecked){const i=null===(o=t.children)||void 0===o?void 0:o.find((n=>!n.checked&&n.id==e));return i&&K(i,n),void ne(t,n)}t.checked||t.id!=e||(K(t,n),t.parent&&ne(t.parent,n))}))}))}function ee(e){e.disabled||function(e){var n,t;const o=null===(t=null===(n=j.value)||void 0===n?void 0:n.get(e.id))||void 0===t?void 0:t.dependedBy;return!!o&&o.some((e=>H.value.some((n=>{var t;return"module"==n.type&&n.anyChildChecked?null===(t=n.children)||void 0===t?void 0:t.some((n=>n.checked&&n.id==e)):n.id==e&&n.checked}))))}(e)||"App Settings"==e.name||("module"!=e.type&&"folder"!=e.type?e.checked?(e.checked=!1,e.parent&&ne(e.parent,!0)):K(e,!0):e.children&&e.children.filter((e=>!e.disabled)).length>0?e.anyChildChecked?(e.children.filter((e=>!e.disabled)).forEach((e=>e.checked=!1)),e.checked=!1,ne(e,!0)):(e.children.forEach((e=>K(e,!0))),e.checked=!0):(e.checked=!e.checked,e.allChildChecked=!1))}function ne(e,n){var t,o;e.disabled=e.children&&(0==e.children.length||!(null===(t=e.children)||void 0===t?void 0:t.some((e=>!e.disabled)))),e.allChildChecked=e.children&&e.children.length>0&&!e.children.some((e=>!e.checked||e.disabled)),e.anyChildChecked=null===(o=e.children)||void 0===o?void 0:o.some((e=>e.checked&&!e.disabled)),n&&e.parent&&ne(e.parent,!0)}function te(e,n){var t,o,i,l,d,r;const a=null===(t=j.value)||void 0===t?void 0:t.get(n.id);null===(o=j.value)||void 0===o||o.set(n.id,{dependedBy:(null==a?void 0:a.dependedBy)||Array(),dependedTo:(null===(r=null===(d=null===(l=null===(i=z.value)||void 0===i?void 0:i.get(n.id))||void 0===l?void 0:l.find((n=>n.version==e)))||void 0===d?void 0:d.dependentModels)||void 0===r?void 0:r.map((e=>e.modelId)))||Array()})}function oe(e){var n,i;const l={clickedNode:{id:e.id,state:{checked:e.checked},text:e.name,type:e.type,version:e.version},cb:n=>{e.version=n,te(n,e)}};(null===(n=z.value)||void 0===n?void 0:n.has(e.id))&&(l.versions=null===(i=z.value)||void 0===i?void 0:i.get(e.id)),T.showDialog((0,o.RC)((()=>t.e(245).then(t.bind(t,60801)))),{closable:!0,title:"Change Version",width:"1080px",maxHeight:"500px",overflow:"auto"},l)}function ie(e){var n;T.showDialog((0,o.RC)((()=>t.e(5872).then(t.bind(t,45872)))),{closable:!0,title:"Change Version",width:"1080px",maxHeight:"500px",overflow:"auto"},{module:{ID:e.id},versions:null===(n=R.value)||void 0===n?void 0:n.get(e.id),cb:n=>{var t;e.version=n.version,null===(t=e.children)||void 0===t||t.forEach((e=>{const t=n.relatedModelHistories.find((n=>n.modelID==e.id));e.version=null==t?void 0:t.version,te(null==t?void 0:t.version,e)}))}})}function le(){const e=n=>{var t;if(!n.version||!n.checked)return;if("module"!=n.type&&"folder"!=n.type)return[{ID:n.id,version:n.version}];if(!n.anyChildChecked)return;const o=Array();return null===(t=n.children)||void 0===t||t.forEach((n=>{const t=e(n);t&&t.length>0&&Array.prototype.push.apply(o,t)})),o},n=Array();return H.value.forEach((t=>{const o=e(t);o&&o.length>0&&Array.prototype.push.apply(n,o)})),n}return(e,t)=>((0,o.wg)(),(0,o.iD)("div",v,[(0,o._)("div",null,[(0,o.Wm)(b.Z,{class:(0,i.normalizeClass)(["modules-selected-checkbox"]),minus:0==(0,l.SU)(Y),check:1==(0,l.SU)(Y),onClick:t[0]||(t[0]=e=>{return n=null==(0,l.SU)(Y),void H.value.filter((e=>!e.disabled)).forEach((e=>{e.checked=n,null!=e.allChildChecked&&e.children&&e.children.length>0&&!e.children.some((e=>e.disabled))&&(e.allChildChecked=n),null!=e.anyChildChecked&&(e.anyChildChecked=n),e.children&&e.children.filter((e=>!e.disabled)).forEach((e=>e.checked=n))}));var n})},null,8,["minus","check"]),(0,o._)("div",g,[(0,o._)("span",k,(0,i.toDisplayString)((0,l.SU)(W)+(0,l.SU)(O)+(0,l.SU)(q)),1),(0,o.Uk)(" of "),(0,o._)("span",y,(0,i.toDisplayString)((0,l.SU)(Z)),1),(0,o.Uk)(" items selected ")])]),B,(0,o._)("div",M,[(0,o._)("div",{class:(0,i.normalizeClass)(["cancel-button"]),onClick:t[1]||(t[1]=e=>n("close"))},"Cancel"),(0,o._)("div",{class:(0,i.normalizeClass)((0,l.SU)(J)?" button-disable":""),onClick:t[2]||(t[2]=e=>!(0,l.SU)(J)&&async function(){U.execute((async()=>{const e=le();await U.executeUseCase(s.P,{items:e}),n("close")}),{loading:!0})}())},[D,(0,l.SU)(_)?(0,l.SU)($)?(0,o.kq)("v-if",!0):((0,o.wg)(),(0,o.iD)("span",E,(0,i.toDisplayString)(P.value),1)):((0,o.wg)(),(0,o.iD)("span",w,"There are no items ready to publish. At least one of your items must be ready to publish."))],2)])]))}});var T=t(17450),U=t.n(T),F=t(29530),S=t.n(F),H=t(16199),z=t.n(H),R=t(40458),L=t.n(R),j=t(62916),P=t.n(j),W=t(92165),O=t.n(W),q=t(10402),Z={};Z.styleTagTransform=O(),Z.setAttributes=L(),Z.insert=z().bind(null,"head"),Z.domAPI=S(),Z.insertStyleElement=P(),U()(q.Z,Z),q.Z&&q.Z.locals&&q.Z.locals;var J=t(74594),Y={};Y.styleTagTransform=O(),Y.setAttributes=L(),Y.insert=z().bind(null,"head"),Y.domAPI=S(),Y.insertStyleElement=P(),U()(J.Z,Y),J.Z&&J.Z.locals&&J.Z.locals;const _=(0,t(32525).Z)(V,[["__scopeId","data-v-f472d490"]])}}]);
//# sourceMappingURL=9982.js.map?ver=0.0.320_1718284989702