{"version":3,"file":"4771.js?ver=0.0.290_1703081143698","mappings":"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","sources":["webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/organization/invitePeopleDialog.vue?66b0","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/organization/invitePeopleDialog.vue?9756","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/organization/invitePeopleDialog.vue?45a1","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/organization/invitePeopleDialog.vue"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n*[data-v-7dd753ca] {\\n        font-family: 'Roboto';\\n}\\n.container[data-v-7dd753ca] {\\n        padding: 32px 20px 20px;\\n}\\n.name-label[data-v-7dd753ca] {\\n        font-weight: 500;\\n        font-size: 15px;\\n        line-height: 18px;\\n        color: #151233;\\n        margin-bottom: 4px;\\n}\\n.e-mail-input[data-v-7dd753ca] {\\n        border: 1px solid #BCBCBC;\\n        border-radius: 4px;\\n        display: flex;\\n        flex-direction: row;\\n        align-items: center;\\n        padding: 8px 8px 8px 12px;\\n        width: 95%;\\n        font-size: 15px;\\n        color: #212121;\\n        outline: none;\\n}\\n.e-mail-input[data-v-7dd753ca]::placeholder {\\n        color: #BCBCBC\\n}\\n.buttons-div[data-v-7dd753ca] {\\n        display: flex;\\n        justify-content: end;\\n}\\n.cancel-button[data-v-7dd753ca] {\\n        font-weight: 500;\\n        font-size: 16px;\\n        text-align: center;\\n        color: #757575;\\n        display: flex;\\n        align-items: center;\\n        padding: 8px 16px;\\n        border-radius: 4px;\\n        margin-right: 4px;\\n        border: none;\\n        background: transparent;\\n}\\n.send-invite-button[data-v-7dd753ca] {\\n        font-weight: 500;\\n        font-size: 16px;\\n        text-align: center;\\n        color: #FFFFFF;\\n        background: #151233;\\n        display: flex;\\n        align-items: center;\\n        padding: 8px 16px;\\n        border-radius: 4px;\\n        border: none;\\n}\\n.send-invite-button[data-v-7dd753ca]:disabled {\\n        color: #757575\\n}\\n.button-tooltip[data-v-7dd753ca] {\\n        visibility: hidden;\\n        position: absolute;\\n        background: #757575;\\n        color: #FFFFFF;\\n        font-size: 11px;\\n        font-family: 'Roboto';\\n        text-align: center;\\n        border-radius: 4px;\\n        letter-spacing: 0.2px;\\n        padding: 6px 8px 6px 8px;\\n        top: 56px;\\n        left: 63px;\\n        opacity: 0;\\n}\\n.send-invite-button:disabled:hover + .button-tooltip[data-v-7dd753ca] {\\n        visibility: visible;\\n        transition: opacity 0.3s ease-out 0.5s;\\n        opacity: 1;\\n}\\n.remove-field[data-v-7dd753ca] {\\n        display: none;\\n        padding: 0 5px;\\n        width: 5%;\\n}\\n.e-mail-addresses[data-v-7dd753ca] {\\n        display: flex;\\n        margin-bottom: 10px;\\n}\\n.e-mail-input:hover + .remove-field[data-v-7dd753ca],\\n    .remove-field[data-v-7dd753ca]:hover {\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n        font-size: 24px;\\n        cursor: pointer;\\n}\\n.multiple-address-info[data-v-7dd753ca] {\\n        font-size: 14px;\\n        line-height: 16px;\\n        display: flex;\\n        align-items: center;\\n        padding: 12px;\\n        margin: 20px 0 52px;\\n        background: #F5F5FA;\\n        border-radius: 4px;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/presentation/vue3/components/dialogs/organization/invitePeopleDialog.vue\"],\"names\":[],\"mappings\":\";AA+HI;QACI,qBAAqB;AACzB;AACA;QACI,uBAAuB;AAC3B;AACA;QACI,gBAAgB;QAChB,eAAe;QACf,iBAAiB;QACjB,cAAc;QACd,kBAAkB;AACtB;AACA;QACI,yBAAyB;QACzB,kBAAkB;QAClB,aAAa;QACb,mBAAmB;QACnB,mBAAmB;QACnB,yBAAyB;QACzB,UAAU;QACV,eAAe;QACf,cAAc;QACd,aAAa;AACjB;AACA;QACI;AACJ;AACA;QACI,aAAa;QACb,oBAAoB;AACxB;AACA;QACI,gBAAgB;QAChB,eAAe;QACf,kBAAkB;QAClB,cAAc;QACd,aAAa;QACb,mBAAmB;QACnB,iBAAiB;QACjB,kBAAkB;QAClB,iBAAiB;QACjB,YAAY;QACZ,uBAAuB;AAC3B;AACA;QACI,gBAAgB;QAChB,eAAe;QACf,kBAAkB;QAClB,cAAc;QACd,mBAAmB;QACnB,aAAa;QACb,mBAAmB;QACnB,iBAAiB;QACjB,kBAAkB;QAClB,YAAY;AAChB;AACA;QACI;AACJ;AACA;QACI,kBAAkB;QAClB,kBAAkB;QAClB,mBAAmB;QACnB,cAAc;QACd,eAAe;QACf,qBAAqB;QACrB,kBAAkB;QAClB,kBAAkB;QAClB,qBAAqB;QACrB,wBAAwB;QACxB,SAAS;QACT,UAAU;QACV,UAAU;AACd;AACA;QACI,mBAAmB;QACnB,sCAAsC;QACtC,UAAU;AACd;AACA;QACI,aAAa;QACb,cAAc;QACd,SAAS;AACb;AACA;QACI,aAAa;QACb,mBAAmB;AACvB;AACA;;QAEI,aAAa;QACb,mBAAmB;QACnB,uBAAuB;QACvB,eAAe;QACf,eAAe;AACnB;AACA;QACI,eAAe;QACf,iBAAiB;QACjB,aAAa;QACb,mBAAmB;QACnB,aAAa;QACb,mBAAmB;QACnB,mBAAmB;QACnB,kBAAkB;AACtB\",\"sourcesContent\":[\"<template>\\n    <div class=\\\"container\\\">\\n        <div class=\\\"label-div\\\">\\n            <label class=\\\"name-label\\\">Email Adresses</label>\\n        </div>\\n        <div style=\\\"overflow: auto; max-height: 470px;\\\">\\n            <div v-for=\\\"(field, index) in invitations\\\" :key=\\\"index\\\" class=\\\"e-mail-addresses\\\">\\n                <input class=\\\"e-mail-input\\\" :ref=\\\"'field-' + index\\\" v-model=\\\"field.mail\\\" @paste=\\\"handlePaste($event, index)\\\" size=\\\"50\\\" @input=\\\"addField(); field.mail = field.mail.toLowerCase()\\\"\\n                    placeholder=\\\"name@example.com\\\" />\\n                <span class=\\\"remove-field\\\" @click=\\\"removeField(index)\\\"><i class=\\\"mdi mdi-close\\\"></i></span>\\n             </div>\\n        </div>\\n       \\n        <div class=\\\"multiple-address-info\\\">\\n            <i class=\\\"mdi mdi-information\\\" style=\\\"font-size: 24px; color: #151233; margin-right: 4px;\\\"></i>\\n            <span>You can copy and paste multiple email addresses at once by using ';' between items.</span>\\n        </div>\\n        <div class=\\\"buttons-div\\\">\\n            <button class=\\\"cancel-button\\\" @click=\\\"close()\\\">Cancel</button>\\n            <button id=\\\"sendButton\\\" class=\\\"send-invite-button\\\" :disabled=\\\"!checkEmailValidation() || checkDuplicateEmails()\\\" @click=\\\"inviteMember\\\">SEND INVITATION</button>\\n            <span v-if=\\\"!checkEmailValidation()\\\" class=\\\"button-tooltip\\\" style=\\\"top: 340px; left: 470px; z-index: 1; width: 174px;\\\">Email addresses must be valid.</span>\\n            <span v-if=\\\"checkDuplicateEmails()\\\" class=\\\"button-tooltip\\\" style=\\\"top: 340px; left: 470px; z-index: 1; width: 174px;\\\">There are duplicate mails.</span>\\n        </div>\\n    </div>\\n</template>\\n<script setup lang=\\\"ts\\\">\\n    import { ref } from \\\"vue\\\";\\n    import { container } from \\\"../../../../../domain/core/diContainer\\\";\\n    import { IOrganizationUseCase } from \\\"../../../../../domain/useCase/IOrganizationUseCase\\\";\\n    import { IUseCaseExecutor } from \\\"../../../../../domain/useCase/IUseCaseExecutor\\\";\\n    import { IViewModel } from \\\"../../../../../domain/viewModel/IViewModel\\\";\\n    import { IRouter } from \\\"../../../../../domain/presentation/IRouter\\\";\\n    import { INotification } from \\\"../../../../../domain/presentation/INotification\\\";\\n    \\n    interface IInvitationItem {\\n        mail: string;\\n        name?: string;\\n        id?: string;\\n    }\\n    type InvitationList = Array<IInvitationItem>;\\n    const viewModel = container.resolve<IViewModel>(IViewModel);\\n    const organization = container.resolve<IOrganizationUseCase>(IOrganizationUseCase);\\n    const executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\\n    const router = container.resolve<IRouter>(IRouter);\\n    const selectedOrganizationId = ref(viewModel.user?.selectedOrganization?.id);\\n    const emit = defineEmits([\\\"close\\\"]);\\n    const invitations = ref<InvitationList>([{ mail: \\\"\\\" }, { mail: \\\"\\\" },{ mail: \\\"\\\" }]);\\n    const addField = (value?: IInvitationItem) => {\\n        let emptyInputCount: number = 0;\\n        invitations.value.forEach(element => {\\n            if(element.mail == \\\"\\\") {\\n                emptyInputCount++\\n            }\\n        });\\n        if(emptyInputCount == 0) {\\n            invitations.value.push(value || { mail: \\\"\\\" });\\n        }\\n    };\\n    function close() {\\n        emit(\\\"close\\\");\\n    }\\n    const removeField = (index: number) => {\\n        if (invitations.value.length <= 1) { insertField(0, undefined, true); return false; }\\n        invitations.value.splice(index, 1); return true;\\n    };\\n    const checkEmailValidation = () => {\\n        let isAllEmailsValid = true;\\n        let emptyMailCount = 0;\\n        invitations.value.forEach(invite => {\\n            if(invite.mail != '' && !validateMail(invite.mail)) {\\n                isAllEmailsValid = false;\\n                return isAllEmailsValid;\\n            }\\n        });\\n        invitations.value.forEach(invite => {\\n            if(invite.mail == '') {\\n                emptyMailCount++;\\n            }\\n        })\\n        if(emptyMailCount == invitations.value.length) {\\n            isAllEmailsValid = false;\\n        }\\n        return isAllEmailsValid;\\n    }\\n    function checkDuplicateEmails () {\\n        const emailAddresses = invitations.value.filter(item => item.mail != '').map(function(item){ return item.mail; })\\n        const isDuplicate = emailAddresses.some(function(item, idx){ return emailAddresses.indexOf(item) != idx;} );\\n        return isDuplicate;\\n    }\\n    const insertField = (index: number, value: IInvitationItem | undefined, override: boolean) => {\\n        value = value || { mail: \\\"\\\" };\\n        if (override) {\\n            invitations.value.splice(index, 1, value);\\n        } else {\\n            invitations.value.splice(index, 0, value);\\n        }\\n    };\\n    const handlePaste = (event: ClipboardEvent, index: number) => {\\n        const { clipboardData } = event;\\n        if (!clipboardData) { return; }\\n\\n        event.preventDefault();\\n        const text = clipboardData.getData('text');\\n        const values = text.split(/[\\\\s;]+/);\\n\\n        const override = invitations.value[index].mail == \\\"\\\";\\n\\n        insertField(index, { mail: values[0] }, override);\\n        values.slice(1).forEach((value, curIndex) => insertField(index + curIndex + 1, { mail: value }, false));\\n    }\\n    function onManageOrganization() {\\n        router.push(`/organization/manage/${selectedOrganizationId.value}`);\\n    }\\n    const inviteMember = async () => {\\n        executor.execute(async () => {\\n            const invProm = organization.createInvitation({ invitations: invitations.value.map(inv => ({ email: inv.mail })) });\\n            await invProm;\\n            while (removeField(0));\\n            await close();\\n            await onManageOrganization();\\n        }, { loading: true });\\n    };\\n    const validateMail = (email: string) => !email ? true : /^(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(\\\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9-]+(\\\\.[a-zA-Z0-9-]+)*(\\\\.[a-zA-Z]{2,})$/.test(email); //RFC 5322-compliant 🤔\\n    // /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\\\"(?:[\\\\x01-\\\\x08\\\\x0b\\\\x0c\\\\x0e-\\\\x1f\\\\x21\\\\x23-\\\\x5b\\\\x5d-\\\\x7f]|\\\\\\\\[\\\\x01-\\\\x09\\\\x0b\\\\x0c\\\\x0e-\\\\x7f])*\\\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\\\x01-\\\\x08\\\\x0b\\\\x0c\\\\x0e-\\\\x1f\\\\x21-\\\\x5a\\\\x53-\\\\x7f]|\\\\\\\\[\\\\x01-\\\\x09\\\\x0b\\\\x0c\\\\x0e-\\\\x7f])+)\\\\])/.test(email); // 🤯 https://www.w3resource.com/javascript/form/email-validation.php // ne halt ettiğini anlamadım, isterseniz içinde 1 @ ve 1 . var mı diye de bakabiliriz. 😂\\n\\n</script>\\n<style scoped>\\n    * {\\n        font-family: 'Roboto';\\n    }\\n    .container {\\n        padding: 32px 20px 20px;\\n    }\\n    .name-label {\\n        font-weight: 500;\\n        font-size: 15px;\\n        line-height: 18px;\\n        color: #151233;\\n        margin-bottom: 4px;\\n    }\\n    .e-mail-input {\\n        border: 1px solid #BCBCBC;\\n        border-radius: 4px;\\n        display: flex;\\n        flex-direction: row;\\n        align-items: center;\\n        padding: 8px 8px 8px 12px;\\n        width: 95%;\\n        font-size: 15px;\\n        color: #212121;\\n        outline: none;\\n    }\\n    .e-mail-input::placeholder {\\n        color: #BCBCBC\\n    }   \\n    .buttons-div {\\n        display: flex;\\n        justify-content: end;\\n    }\\n    .cancel-button {\\n        font-weight: 500;\\n        font-size: 16px;\\n        text-align: center;\\n        color: #757575;\\n        display: flex;\\n        align-items: center;\\n        padding: 8px 16px;\\n        border-radius: 4px;\\n        margin-right: 4px;\\n        border: none;\\n        background: transparent;\\n    }\\n    .send-invite-button {\\n        font-weight: 500;\\n        font-size: 16px;\\n        text-align: center;\\n        color: #FFFFFF;\\n        background: #151233;\\n        display: flex;\\n        align-items: center;\\n        padding: 8px 16px;\\n        border-radius: 4px;\\n        border: none;\\n    }\\n    .send-invite-button:disabled {\\n        color: #757575\\n    }\\n    .button-tooltip {\\n        visibility: hidden;\\n        position: absolute;\\n        background: #757575;\\n        color: #FFFFFF;\\n        font-size: 11px;\\n        font-family: 'Roboto';\\n        text-align: center;\\n        border-radius: 4px;\\n        letter-spacing: 0.2px;\\n        padding: 6px 8px 6px 8px;\\n        top: 56px;\\n        left: 63px;\\n        opacity: 0;\\n    }\\n    .send-invite-button:disabled:hover + .button-tooltip {\\n        visibility: visible;\\n        transition: opacity 0.3s ease-out 0.5s;\\n        opacity: 1;\\n    } \\n    .remove-field {\\n        display: none;\\n        padding: 0 5px;\\n        width: 5%;\\n    }\\n    .e-mail-addresses {\\n        display: flex;\\n        margin-bottom: 10px;\\n    }\\n    .e-mail-input:hover + .remove-field,\\n    .remove-field:hover {\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n        font-size: 24px;\\n        cursor: pointer;\\n    }\\n    .multiple-address-info {\\n        font-size: 14px;\\n        line-height: 16px;\\n        display: flex;\\n        align-items: center;\\n        padding: 12px;\\n        margin: 20px 0 52px;\\n        background: #F5F5FA;\\n        border-radius: 4px;\\n    }\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-7dd753ca\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"container\" }\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"label-div\" }, [\n  /*#__PURE__*/_createElementVNode(\"label\", { class: \"name-label\" }, \"Email Adresses\")\n], -1 /* HOISTED */))\nconst _hoisted_3 = { style: {\"overflow\":\"auto\",\"max-height\":\"470px\"} }\nconst _hoisted_4 = [\"onUpdate:modelValue\", \"onPaste\", \"onInput\"]\nconst _hoisted_5 = [\"onClick\"]\nconst _hoisted_6 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"mdi mdi-close\" }, null, -1 /* HOISTED */))\nconst _hoisted_7 = [\n  _hoisted_6\n]\nconst _hoisted_8 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"multiple-address-info\" }, [\n  /*#__PURE__*/_createElementVNode(\"i\", {\n    class: \"mdi mdi-information\",\n    style: {\"font-size\":\"24px\",\"color\":\"#151233\",\"margin-right\":\"4px\"}\n  }),\n  /*#__PURE__*/_createElementVNode(\"span\", null, \"You can copy and paste multiple email addresses at once by using ';' between items.\")\n], -1 /* HOISTED */))\nconst _hoisted_9 = { class: \"buttons-div\" }\nconst _hoisted_10 = [\"disabled\"]\nconst _hoisted_11 = {\n  key: 0,\n  class: \"button-tooltip\",\n  style: {\"top\":\"340px\",\"left\":\"470px\",\"z-index\":\"1\",\"width\":\"174px\"}\n}\nconst _hoisted_12 = {\n  key: 1,\n  class: \"button-tooltip\",\n  style: {\"top\":\"340px\",\"left\":\"470px\",\"z-index\":\"1\",\"width\":\"174px\"}\n}\n\nimport { ref } from \"vue\";\n    import { container } from \"../../../../../domain/core/diContainer\";\n    import { IOrganizationUseCase } from \"../../../../../domain/useCase/IOrganizationUseCase\";\n    import { IUseCaseExecutor } from \"../../../../../domain/useCase/IUseCaseExecutor\";\n    import { IViewModel } from \"../../../../../domain/viewModel/IViewModel\";\n    import { IRouter } from \"../../../../../domain/presentation/IRouter\";\n    import { INotification } from \"../../../../../domain/presentation/INotification\";\n    \n    interface IInvitationItem {\n        mail: string;\n        name?: string;\n        id?: string;\n    }\n    type InvitationList = Array<IInvitationItem>;\n    \nexport default /*#__PURE__*/_defineComponent({\n  __name: 'invitePeopleDialog',\n  emits: [\"close\"],\n  setup(__props, { emit }) {\n\n    const viewModel = container.resolve<IViewModel>(IViewModel);\n    const organization = container.resolve<IOrganizationUseCase>(IOrganizationUseCase);\n    const executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\n    const router = container.resolve<IRouter>(IRouter);\n    const selectedOrganizationId = ref(viewModel.user?.selectedOrganization?.id);\n    \n    const invitations = ref<InvitationList>([{ mail: \"\" }, { mail: \"\" },{ mail: \"\" }]);\n    const addField = (value?: IInvitationItem) => {\n        let emptyInputCount: number = 0;\n        invitations.value.forEach(element => {\n            if(element.mail == \"\") {\n                emptyInputCount++\n            }\n        });\n        if(emptyInputCount == 0) {\n            invitations.value.push(value || { mail: \"\" });\n        }\n    };\n    function close() {\n        emit(\"close\");\n    }\n    const removeField = (index: number) => {\n        if (invitations.value.length <= 1) { insertField(0, undefined, true); return false; }\n        invitations.value.splice(index, 1); return true;\n    };\n    const checkEmailValidation = () => {\n        let isAllEmailsValid = true;\n        let emptyMailCount = 0;\n        invitations.value.forEach(invite => {\n            if(invite.mail != '' && !validateMail(invite.mail)) {\n                isAllEmailsValid = false;\n                return isAllEmailsValid;\n            }\n        });\n        invitations.value.forEach(invite => {\n            if(invite.mail == '') {\n                emptyMailCount++;\n            }\n        })\n        if(emptyMailCount == invitations.value.length) {\n            isAllEmailsValid = false;\n        }\n        return isAllEmailsValid;\n    }\n    function checkDuplicateEmails () {\n        const emailAddresses = invitations.value.filter(item => item.mail != '').map(function(item){ return item.mail; })\n        const isDuplicate = emailAddresses.some(function(item, idx){ return emailAddresses.indexOf(item) != idx;} );\n        return isDuplicate;\n    }\n    const insertField = (index: number, value: IInvitationItem | undefined, override: boolean) => {\n        value = value || { mail: \"\" };\n        if (override) {\n            invitations.value.splice(index, 1, value);\n        } else {\n            invitations.value.splice(index, 0, value);\n        }\n    };\n    const handlePaste = (event: ClipboardEvent, index: number) => {\n        const { clipboardData } = event;\n        if (!clipboardData) { return; }\n\n        event.preventDefault();\n        const text = clipboardData.getData('text');\n        const values = text.split(/[\\s;]+/);\n\n        const override = invitations.value[index].mail == \"\";\n\n        insertField(index, { mail: values[0] }, override);\n        values.slice(1).forEach((value, curIndex) => insertField(index + curIndex + 1, { mail: value }, false));\n    }\n    function onManageOrganization() {\n        router.push(`/organization/manage/${selectedOrganizationId.value}`);\n    }\n    const inviteMember = async () => {\n        executor.execute(async () => {\n            const invProm = organization.createInvitation({ invitations: invitations.value.map(inv => ({ email: inv.mail })) });\n            await invProm;\n            while (removeField(0));\n            await close();\n            await onManageOrganization();\n        }, { loading: true });\n    };\n    const validateMail = (email: string) => !email ? true : /^(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*(\\.[a-zA-Z]{2,})$/.test(email); //RFC 5322-compliant 🤔\n    // /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/.test(email); // 🤯 https://www.w3resource.com/javascript/form/email-validation.php // ne halt ettiğini anlamadım, isterseniz içinde 1 @ ve 1 . var mı diye de bakabiliriz. 😂\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _createElementVNode(\"div\", _hoisted_3, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(invitations.value, (field, index) => {\n        return (_openBlock(), _createElementBlock(\"div\", {\n          key: index,\n          class: \"e-mail-addresses\"\n        }, [\n          _withDirectives(_createElementVNode(\"input\", {\n            class: \"e-mail-input\",\n            ref_for: true,\n            ref: 'field-' + index,\n            \"onUpdate:modelValue\": ($event: any) => ((field.mail) = $event),\n            onPaste: ($event: any) => (handlePaste($event, index)),\n            size: \"50\",\n            onInput: ($event: any) => {addField(); field.mail = field.mail.toLowerCase()},\n            placeholder: \"name@example.com\"\n          }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_4), [\n            [_vModelText, field.mail]\n          ]),\n          _createElementVNode(\"span\", {\n            class: \"remove-field\",\n            onClick: ($event: any) => (removeField(index))\n          }, _hoisted_7, 8 /* PROPS */, _hoisted_5)\n        ]))\n      }), 128 /* KEYED_FRAGMENT */))\n    ]),\n    _hoisted_8,\n    _createElementVNode(\"div\", _hoisted_9, [\n      _createElementVNode(\"button\", {\n        class: \"cancel-button\",\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (close()))\n      }, \"Cancel\"),\n      _createElementVNode(\"button\", {\n        id: \"sendButton\",\n        class: \"send-invite-button\",\n        disabled: !checkEmailValidation() || checkDuplicateEmails(),\n        onClick: inviteMember\n      }, \"SEND INVITATION\", 8 /* PROPS */, _hoisted_10),\n      (!checkEmailValidation())\n        ? (_openBlock(), _createElementBlock(\"span\", _hoisted_11, \"Email addresses must be valid.\"))\n        : _createCommentVNode(\"v-if\", true),\n      (checkDuplicateEmails())\n        ? (_openBlock(), _createElementBlock(\"span\", _hoisted_12, \"There are duplicate mails.\"))\n        : _createCommentVNode(\"v-if\", true)\n    ])\n  ]))\n}\n}\n\n})","\n      import API from \"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./invitePeopleDialog.vue?vue&type=style&index=0&id=7dd753ca&scoped=true&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./invitePeopleDialog.vue?vue&type=style&index=0&id=7dd753ca&scoped=true&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","import script from \"./invitePeopleDialog.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./invitePeopleDialog.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./invitePeopleDialog.vue?vue&type=style&index=0&id=7dd753ca&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/studio/studio/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7dd753ca\"]])\n\nexport default __exports__"],"names":["___CSS_LOADER_EXPORT___","push","module","id","_withScopeId","n","_hoisted_1","class","_hoisted_2","_","_hoisted_3","style","_hoisted_4","_hoisted_5","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","key","_hoisted_12","__name","emits","setup","__props","emit","viewModel","IViewModel","organization","IOrganizationUseCase","executor","IUseCaseExecutor","router","IRouter","selectedOrganizationId","user","selectedOrganization","invitations","mail","close","removeField","index","value","length","insertField","undefined","splice","checkEmailValidation","isAllEmailsValid","emptyMailCount","forEach","invite","validateMail","checkDuplicateEmails","emailAddresses","filter","item","map","some","idx","indexOf","override","inviteMember","async","execute","invProm","createInvitation","inv","email","loading","test","_ctx","_cache","field","ref_for","ref","$event","onPaste","event","clipboardData","preventDefault","values","getData","split","slice","curIndex","size","onInput","emptyInputCount","element","addField","toLowerCase","placeholder","onClick","disabled","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement"],"sourceRoot":""}