{"version":3,"file":"4096.js","mappings":"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","sources":["webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/moveItem.vue?f4cf","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/moveItem.vue?cade","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/moveItem.vue?d26f","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/moveItem.vue?1c62","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/moveItem.vue?8bc3","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/moveItem.vue"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\nul[data-v-b375636e] {\\n    list-style-type: none;\\n}\\n.new-module-text .mdi[data-v-b375636e] {\\n    font-size: 24px; \\n    margin-right: 10px;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/presentation/vue3/components/dialogs/moveItem.vue\"],\"names\":[],\"mappings\":\";AAyJA;IACI,qBAAqB;AACzB;AAEA;IACI,eAAe;IACf,kBAAkB;AACtB\",\"sourcesContent\":[\"<script setup lang=\\\"ts\\\">\\nimport { container } from '../../../../domain/core/diContainer';\\nimport { IUseCaseExecutor } from '../../../../domain/useCase/IUseCaseExecutor';\\nimport { IViewModel } from '../../../../domain/viewModel/IViewModel';\\nimport { IMoveItemProps } from '../../../../domain/presentation/dialogs/IMoveItemProps';\\nimport { IObjectUseCase } from '../../../../domain/useCase/IObjectUseCase';\\nimport { ITreeItem } from '../../../../domain/presentation/ITreeView';\\nimport { ITreeView } from '../../../../domain/presentation/ITreeView';\\nimport { IModel, IModule } from '../../../../domain/model/models';\\nimport { IFileExplorer } from '../../../../domain/useCase/IFileExplorer';\\nimport { IViewModelManager } from '../../../../domain/viewModel/IViewModelManager';\\n\\ninterface IMoveItemInline extends IMoveItemProps {\\n    id: string;\\n    name: string;\\n    description?: string;\\n    type:  \\\"module\\\" | \\\"model\\\";\\n    prefix?: string;\\n    treeItems: Array<ITreeItem>;\\n}\\n\\nasync function refreshTreeItems(itemId: string, itemPath: Array<String>) {\\n  const fileExplorer = await executor.resolveUseCase<IFileExplorer>(IFileExplorer);\\n  let item = viewModel.studio.items.find(item => item.ID == props.id);\\n  if(!item) return;\\n  fileExplorer.removeItem(props.id)\\n  fileExplorer.addNewItem(item, itemId);\\n  let children = getChildren(props.id);\\n  children.forEach(async child => {\\n    fileExplorer.removeItem(child.ID)\\n    fileExplorer.addNewItem(child, child.path ? child.path[child.path.length - 1].toString() : undefined);\\n  });\\n}\\n\\nasync function updateChildrenPaths(itemId: string, itemPath: Array<String>, objectUseCase: IObjectUseCase){\\n  let children = getChildren(props.id);  \\n  children.forEach(async child => {\\n    let updatedPath = updatePath(props.id, child.path ?? [], itemPath);\\n    await objectUseCase.updateObject(props.id, {name: props.name, path: updatedPath});\\n  });\\n}\\n\\nfunction updatePath(updatedItemId: string, existingItemPath: Array<String>, updatedPath: Array<String>) {\\n    const index = existingItemPath.indexOf(updatedItemId);\\n    if (index !== -1) {\\n        return [...updatedPath, ...existingItemPath.slice(index + 1)];\\n    }\\n    return existingItemPath;\\n}\\nconst viewModelManager = container.resolve<IViewModelManager>(IViewModelManager);\\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\\nconst treeview = container.resolve<ITreeView>(ITreeView);\\nconst props = defineProps<IMoveItemInline>();\\nconst viewModel = container.resolve<IViewModel>(IViewModel);\\nconst emit = defineEmits([\\\"close\\\"]);\\nfunction move(itemPath: Array<String>, itemId: String) {\\nconsole.log(\\\"move\\\")\\n    executor.execute(async () => {\\n        itemPath.push(itemId.toString());\\n        const objectUseCase = container.resolve<IObjectUseCase>(IObjectUseCase);\\n        await objectUseCase.updateObject(props.id, {name: props.name, path: itemPath});\\n        //await updateChildrenPaths(itemId.toString(), itemPath, objectUseCase);\\n        await refreshTreeItems(itemId.toString(), itemPath);\\n        emit(\\\"close\\\");\\n    }, { loading: true });\\n}\\nlet actions: { path: Array<String>; icon: string; label: string; indent: number; id: String }[] = []\\nactions.push({ path: [], icon: \\\"mdi mdi-vector-polyline\\\", label: viewModel.studio.appName, indent: 0, id: viewModel.studio.appId })\\nlet treeItems = viewModel.studio.items;\\nconst modelItems = treeItems.filter(item => item.objectType === \\\"model\\\") as IModel[];\\nconst moduleItems = treeItems.filter(item => item.objectType === \\\"module\\\") as IModule[];\\n\\nconsole.log(\\\"ooops\\\", treeItems)\\n\\n\\nfunction getChildren(parentId: string) {\\n    return modelItems.filter(item => (item.path ? item.path[item.path.length - 1] === parentId.toString() : false) || (item.parent ? item.parent.ID == parentId : false));\\n  }\\n\\nfunction getSortedItems(modelItems: IModel[]) {\\n  modelItems.sort((a, b) => {\\n  let aPath = a.path ?? [];\\n  let bPath = b.path ?? [];\\n    if (aPath.length !== bPath.length) {\\n        return aPath.length - bPath.length;\\n    }\\n    \\n    return 0;\\n  });\\n  \\n\\n  function sortItems(parentId: string) {\\n    const result :IModel [] = [];\\n\\n    const directChildren = getChildren(parentId);\\n    for (const child of directChildren) {\\n      result.push(child);\\n      result.push(...sortItems(child.ID));\\n    }\\n\\n    return result;\\n  }\\n\\n  return modelItems.filter(item => item.path ? item.path.length === 0 : true)\\n    .reduce<IModel[]>((acc, rootItem) => {\\n      acc.push(rootItem);\\n      acc.push(...sortItems(rootItem.ID));\\n      return acc;\\n    }, []);\\n}\\nconsole.log(\\\"ooops1\\\", getSortedItems(modelItems))\\nconst sortedItems = getSortedItems(modelItems);\\n\\n\\n\\n\\n\\nfor (let modelItem of sortedItems) {\\n    if (modelItem.modelType == \\\"placeholder\\\") {\\n        let indentCalculated = modelItem.path ? (modelItem.path.length * 20 + 20) : 20;\\n        actions.push({ path: modelItem.path ?? [], icon: \\\"mdi mdi-folder-open\\\", label: modelItem.name, indent: indentCalculated, id: modelItem.ID })\\n    }\\n}\\nfor (let moduleItem of moduleItems){\\n    actions.push({ path: moduleItem.path ?? [], icon: \\\"mdi mdi-puzzle\\\", label: moduleItem.name, indent: 20, id: moduleItem.ID })\\n}\\n\\n</script> \\n\\n<template>\\n    <div class=\\\"moveDiv\\\">\\n        <div id=\\\"content-area\\\" class=\\\"popover__content\\\">\\n            <div style=\\\"height: 100%\\\" class=\\\"errorDiv\\\">\\n                <ul style=\\\"padding-left: 0px; margin-bottom: 0px\\\">\\n                    <li v-for=\\\"action in actions\\\" \\n                        :key=\\\"action.label\\\" \\n                        @click=\\\"move(action.path, action.id)\\\" \\n                        style=\\\"padding-top: 1px\\\" \\n                        :style=\\\"{ 'padding-left': action.indent + 'px' }\\\">\\n                        <div class=\\\"createLi\\\">\\n                            <p class=\\\"new-module-text\\\">\\n                                <i :class=\\\"action.icon\\\" style=\\\"margin-right: 10px;\\\"></i>{{ action.label }}\\n                            </p>\\n                        </div>\\n                    </li>\\n                </ul>\\n            </div>\\n        </div>\\n    </div>\\n</template>\\n\\n\\n<style scoped>\\nul {\\n    list-style-type: none;\\n}\\n\\n.new-module-text .mdi {\\n    font-size: 24px; \\n    margin-right: 10px; \\n}\\n</style>\\n\\n\\n \\n\\n<style scoped>\\n.new-module-text {\\n  margin: 0;\\n  color: #151233;\\n  font-weight: 400;\\n  font-size: 14px;\\n  letter-spacing: 0px;\\n  opacity: 1;\\n  font-family: \\\"ROBOTO\\\";\\n}\\n\\n.createLi {\\n  cursor: pointer;\\n}\\n.moveDiv {\\n    margin-top: 5px;\\n    margin-left: 20px;\\n    margin-right: 20px;\\n    margin-bottom: 10px;\\n}\\n\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.new-module-text[data-v-b375636e] {\\n  margin: 0;\\n  color: #151233;\\n  font-weight: 400;\\n  font-size: 14px;\\n  letter-spacing: 0px;\\n  opacity: 1;\\n  font-family: \\\"ROBOTO\\\";\\n}\\n.createLi[data-v-b375636e] {\\n  cursor: pointer;\\n}\\n.moveDiv[data-v-b375636e] {\\n    margin-top: 5px;\\n    margin-left: 20px;\\n    margin-right: 20px;\\n    margin-bottom: 10px;\\n}\\n\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/presentation/vue3/components/dialogs/moveItem.vue\"],\"names\":[],\"mappings\":\";AAuKA;EACE,SAAS;EACT,cAAc;EACd,gBAAgB;EAChB,eAAe;EACf,mBAAmB;EACnB,UAAU;EACV,qBAAqB;AACvB;AAEA;EACE,eAAe;AACjB;AACA;IACI,eAAe;IACf,iBAAiB;IACjB,kBAAkB;IAClB,mBAAmB;AACvB\",\"sourcesContent\":[\"<script setup lang=\\\"ts\\\">\\nimport { container } from '../../../../domain/core/diContainer';\\nimport { IUseCaseExecutor } from '../../../../domain/useCase/IUseCaseExecutor';\\nimport { IViewModel } from '../../../../domain/viewModel/IViewModel';\\nimport { IMoveItemProps } from '../../../../domain/presentation/dialogs/IMoveItemProps';\\nimport { IObjectUseCase } from '../../../../domain/useCase/IObjectUseCase';\\nimport { ITreeItem } from '../../../../domain/presentation/ITreeView';\\nimport { ITreeView } from '../../../../domain/presentation/ITreeView';\\nimport { IModel, IModule } from '../../../../domain/model/models';\\nimport { IFileExplorer } from '../../../../domain/useCase/IFileExplorer';\\nimport { IViewModelManager } from '../../../../domain/viewModel/IViewModelManager';\\n\\ninterface IMoveItemInline extends IMoveItemProps {\\n    id: string;\\n    name: string;\\n    description?: string;\\n    type:  \\\"module\\\" | \\\"model\\\";\\n    prefix?: string;\\n    treeItems: Array<ITreeItem>;\\n}\\n\\nasync function refreshTreeItems(itemId: string, itemPath: Array<String>) {\\n  const fileExplorer = await executor.resolveUseCase<IFileExplorer>(IFileExplorer);\\n  let item = viewModel.studio.items.find(item => item.ID == props.id);\\n  if(!item) return;\\n  fileExplorer.removeItem(props.id)\\n  fileExplorer.addNewItem(item, itemId);\\n  let children = getChildren(props.id);\\n  children.forEach(async child => {\\n    fileExplorer.removeItem(child.ID)\\n    fileExplorer.addNewItem(child, child.path ? child.path[child.path.length - 1].toString() : undefined);\\n  });\\n}\\n\\nasync function updateChildrenPaths(itemId: string, itemPath: Array<String>, objectUseCase: IObjectUseCase){\\n  let children = getChildren(props.id);  \\n  children.forEach(async child => {\\n    let updatedPath = updatePath(props.id, child.path ?? [], itemPath);\\n    await objectUseCase.updateObject(props.id, {name: props.name, path: updatedPath});\\n  });\\n}\\n\\nfunction updatePath(updatedItemId: string, existingItemPath: Array<String>, updatedPath: Array<String>) {\\n    const index = existingItemPath.indexOf(updatedItemId);\\n    if (index !== -1) {\\n        return [...updatedPath, ...existingItemPath.slice(index + 1)];\\n    }\\n    return existingItemPath;\\n}\\nconst viewModelManager = container.resolve<IViewModelManager>(IViewModelManager);\\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\\nconst treeview = container.resolve<ITreeView>(ITreeView);\\nconst props = defineProps<IMoveItemInline>();\\nconst viewModel = container.resolve<IViewModel>(IViewModel);\\nconst emit = defineEmits([\\\"close\\\"]);\\nfunction move(itemPath: Array<String>, itemId: String) {\\nconsole.log(\\\"move\\\")\\n    executor.execute(async () => {\\n        itemPath.push(itemId.toString());\\n        const objectUseCase = container.resolve<IObjectUseCase>(IObjectUseCase);\\n        await objectUseCase.updateObject(props.id, {name: props.name, path: itemPath});\\n        //await updateChildrenPaths(itemId.toString(), itemPath, objectUseCase);\\n        await refreshTreeItems(itemId.toString(), itemPath);\\n        emit(\\\"close\\\");\\n    }, { loading: true });\\n}\\nlet actions: { path: Array<String>; icon: string; label: string; indent: number; id: String }[] = []\\nactions.push({ path: [], icon: \\\"mdi mdi-vector-polyline\\\", label: viewModel.studio.appName, indent: 0, id: viewModel.studio.appId })\\nlet treeItems = viewModel.studio.items;\\nconst modelItems = treeItems.filter(item => item.objectType === \\\"model\\\") as IModel[];\\nconst moduleItems = treeItems.filter(item => item.objectType === \\\"module\\\") as IModule[];\\n\\nconsole.log(\\\"ooops\\\", treeItems)\\n\\n\\nfunction getChildren(parentId: string) {\\n    return modelItems.filter(item => (item.path ? item.path[item.path.length - 1] === parentId.toString() : false) || (item.parent ? item.parent.ID == parentId : false));\\n  }\\n\\nfunction getSortedItems(modelItems: IModel[]) {\\n  modelItems.sort((a, b) => {\\n  let aPath = a.path ?? [];\\n  let bPath = b.path ?? [];\\n    if (aPath.length !== bPath.length) {\\n        return aPath.length - bPath.length;\\n    }\\n    \\n    return 0;\\n  });\\n  \\n\\n  function sortItems(parentId: string) {\\n    const result :IModel [] = [];\\n\\n    const directChildren = getChildren(parentId);\\n    for (const child of directChildren) {\\n      result.push(child);\\n      result.push(...sortItems(child.ID));\\n    }\\n\\n    return result;\\n  }\\n\\n  return modelItems.filter(item => item.path ? item.path.length === 0 : true)\\n    .reduce<IModel[]>((acc, rootItem) => {\\n      acc.push(rootItem);\\n      acc.push(...sortItems(rootItem.ID));\\n      return acc;\\n    }, []);\\n}\\nconsole.log(\\\"ooops1\\\", getSortedItems(modelItems))\\nconst sortedItems = getSortedItems(modelItems);\\n\\n\\n\\n\\n\\nfor (let modelItem of sortedItems) {\\n    if (modelItem.modelType == \\\"placeholder\\\") {\\n        let indentCalculated = modelItem.path ? (modelItem.path.length * 20 + 20) : 20;\\n        actions.push({ path: modelItem.path ?? [], icon: \\\"mdi mdi-folder-open\\\", label: modelItem.name, indent: indentCalculated, id: modelItem.ID })\\n    }\\n}\\nfor (let moduleItem of moduleItems){\\n    actions.push({ path: moduleItem.path ?? [], icon: \\\"mdi mdi-puzzle\\\", label: moduleItem.name, indent: 20, id: moduleItem.ID })\\n}\\n\\n</script> \\n\\n<template>\\n    <div class=\\\"moveDiv\\\">\\n        <div id=\\\"content-area\\\" class=\\\"popover__content\\\">\\n            <div style=\\\"height: 100%\\\" class=\\\"errorDiv\\\">\\n                <ul style=\\\"padding-left: 0px; margin-bottom: 0px\\\">\\n                    <li v-for=\\\"action in actions\\\" \\n                        :key=\\\"action.label\\\" \\n                        @click=\\\"move(action.path, action.id)\\\" \\n                        style=\\\"padding-top: 1px\\\" \\n                        :style=\\\"{ 'padding-left': action.indent + 'px' }\\\">\\n                        <div class=\\\"createLi\\\">\\n                            <p class=\\\"new-module-text\\\">\\n                                <i :class=\\\"action.icon\\\" style=\\\"margin-right: 10px;\\\"></i>{{ action.label }}\\n                            </p>\\n                        </div>\\n                    </li>\\n                </ul>\\n            </div>\\n        </div>\\n    </div>\\n</template>\\n\\n\\n<style scoped>\\nul {\\n    list-style-type: none;\\n}\\n\\n.new-module-text .mdi {\\n    font-size: 24px; \\n    margin-right: 10px; \\n}\\n</style>\\n\\n\\n \\n\\n<style scoped>\\n.new-module-text {\\n  margin: 0;\\n  color: #151233;\\n  font-weight: 400;\\n  font-size: 14px;\\n  letter-spacing: 0px;\\n  opacity: 1;\\n  font-family: \\\"ROBOTO\\\";\\n}\\n\\n.createLi {\\n  cursor: pointer;\\n}\\n.moveDiv {\\n    margin-top: 5px;\\n    margin-left: 20px;\\n    margin-right: 20px;\\n    margin-bottom: 10px;\\n}\\n\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-b375636e\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"moveDiv\" }\nconst _hoisted_2 = {\n  id: \"content-area\",\n  class: \"popover__content\"\n}\nconst _hoisted_3 = {\n  style: {\"height\":\"100%\"},\n  class: \"errorDiv\"\n}\nconst _hoisted_4 = { style: {\"padding-left\":\"0px\",\"margin-bottom\":\"0px\"} }\nconst _hoisted_5 = [\"onClick\"]\nconst _hoisted_6 = { class: \"createLi\" }\nconst _hoisted_7 = { class: \"new-module-text\" }\n\nimport { container } from '../../../../domain/core/diContainer';\nimport { IUseCaseExecutor } from '../../../../domain/useCase/IUseCaseExecutor';\nimport { IViewModel } from '../../../../domain/viewModel/IViewModel';\nimport { IMoveItemProps } from '../../../../domain/presentation/dialogs/IMoveItemProps';\nimport { IObjectUseCase } from '../../../../domain/useCase/IObjectUseCase';\nimport { ITreeItem } from '../../../../domain/presentation/ITreeView';\nimport { ITreeView } from '../../../../domain/presentation/ITreeView';\nimport { IModel, IModule } from '../../../../domain/model/models';\nimport { IFileExplorer } from '../../../../domain/useCase/IFileExplorer';\nimport { IViewModelManager } from '../../../../domain/viewModel/IViewModelManager';\n\ninterface IMoveItemInline extends IMoveItemProps {\n    id: string;\n    name: string;\n    description?: string;\n    type:  \"module\" | \"model\";\n    prefix?: string;\n    treeItems: Array<ITreeItem>;\n}\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'moveItem',\n  props: {\n    id: null,\n    name: null,\n    description: null,\n    type: null,\n    prefix: null,\n    treeItems: null\n  },\n  emits: [\"close\"],\n  setup(__props: any, { emit }) {\n\nconst props = __props as {\n    id: string;\n    name: string;\n    description?: string;\n    type:  \"module\" | \"model\";\n    prefix?: string;\n    treeItems: Array<ITreeItem>;\n};\n\nasync function refreshTreeItems(itemId: string, itemPath: Array<String>) {\n  const fileExplorer = await executor.resolveUseCase<IFileExplorer>(IFileExplorer);\n  let item = viewModel.studio.items.find(item => item.ID == props.id);\n  if(!item) return;\n  fileExplorer.removeItem(props.id)\n  fileExplorer.addNewItem(item, itemId);\n  let children = getChildren(props.id);\n  children.forEach(async child => {\n    fileExplorer.removeItem(child.ID)\n    fileExplorer.addNewItem(child, child.path ? child.path[child.path.length - 1].toString() : undefined);\n  });\n}\n\nasync function updateChildrenPaths(itemId: string, itemPath: Array<String>, objectUseCase: IObjectUseCase){\n  let children = getChildren(props.id);  \n  children.forEach(async child => {\n    let updatedPath = updatePath(props.id, child.path ?? [], itemPath);\n    await objectUseCase.updateObject(props.id, {name: props.name, path: updatedPath});\n  });\n}\n\nfunction updatePath(updatedItemId: string, existingItemPath: Array<String>, updatedPath: Array<String>) {\n    const index = existingItemPath.indexOf(updatedItemId);\n    if (index !== -1) {\n        return [...updatedPath, ...existingItemPath.slice(index + 1)];\n    }\n    return existingItemPath;\n}\nconst viewModelManager = container.resolve<IViewModelManager>(IViewModelManager);\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\nconst treeview = container.resolve<ITreeView>(ITreeView);\n\nconst viewModel = container.resolve<IViewModel>(IViewModel);\n\nfunction move(itemPath: Array<String>, itemId: String) {\nconsole.log(\"move\")\n    executor.execute(async () => {\n        itemPath.push(itemId.toString());\n        const objectUseCase = container.resolve<IObjectUseCase>(IObjectUseCase);\n        await objectUseCase.updateObject(props.id, {name: props.name, path: itemPath});\n        //await updateChildrenPaths(itemId.toString(), itemPath, objectUseCase);\n        await refreshTreeItems(itemId.toString(), itemPath);\n        emit(\"close\");\n    }, { loading: true });\n}\nlet actions: { path: Array<String>; icon: string; label: string; indent: number; id: String }[] = []\nactions.push({ path: [], icon: \"mdi mdi-vector-polyline\", label: viewModel.studio.appName, indent: 0, id: viewModel.studio.appId })\nlet treeItems = viewModel.studio.items;\nconst modelItems = treeItems.filter(item => item.objectType === \"model\") as IModel[];\nconst moduleItems = treeItems.filter(item => item.objectType === \"module\") as IModule[];\n\nconsole.log(\"ooops\", treeItems)\n\n\nfunction getChildren(parentId: string) {\n    return modelItems.filter(item => (item.path ? item.path[item.path.length - 1] === parentId.toString() : false) || (item.parent ? item.parent.ID == parentId : false));\n  }\n\nfunction getSortedItems(modelItems: IModel[]) {\n  modelItems.sort((a, b) => {\n  let aPath = a.path ?? [];\n  let bPath = b.path ?? [];\n    if (aPath.length !== bPath.length) {\n        return aPath.length - bPath.length;\n    }\n    \n    return 0;\n  });\n  \n\n  function sortItems(parentId: string) {\n    const result :IModel [] = [];\n\n    const directChildren = getChildren(parentId);\n    for (const child of directChildren) {\n      result.push(child);\n      result.push(...sortItems(child.ID));\n    }\n\n    return result;\n  }\n\n  return modelItems.filter(item => item.path ? item.path.length === 0 : true)\n    .reduce<IModel[]>((acc, rootItem) => {\n      acc.push(rootItem);\n      acc.push(...sortItems(rootItem.ID));\n      return acc;\n    }, []);\n}\nconsole.log(\"ooops1\", getSortedItems(modelItems))\nconst sortedItems = getSortedItems(modelItems);\n\n\n\n\n\nfor (let modelItem of sortedItems) {\n    if (modelItem.modelType == \"placeholder\") {\n        let indentCalculated = modelItem.path ? (modelItem.path.length * 20 + 20) : 20;\n        actions.push({ path: modelItem.path ?? [], icon: \"mdi mdi-folder-open\", label: modelItem.name, indent: indentCalculated, id: modelItem.ID })\n    }\n}\nfor (let moduleItem of moduleItems){\n    actions.push({ path: moduleItem.path ?? [], icon: \"mdi mdi-puzzle\", label: moduleItem.name, indent: 20, id: moduleItem.ID })\n}\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"ul\", _hoisted_4, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(actions), (action) => {\n            return (_openBlock(), _createElementBlock(\"li\", {\n              key: action.label,\n              onClick: ($event: any) => (move(action.path, action.id)),\n              style: _normalizeStyle([{\"padding-top\":\"1px\"}, { 'padding-left': action.indent + 'px' }])\n            }, [\n              _createElementVNode(\"div\", _hoisted_6, [\n                _createElementVNode(\"p\", _hoisted_7, [\n                  _createElementVNode(\"i\", {\n                    class: _normalizeClass(action.icon),\n                    style: {\"margin-right\":\"10px\"}\n                  }, null, 2 /* CLASS */),\n                  _createTextVNode(_toDisplayString(action.label), 1 /* TEXT */)\n                ])\n              ])\n            ], 12 /* STYLE, PROPS */, _hoisted_5))\n          }), 128 /* KEYED_FRAGMENT */))\n        ])\n      ])\n    ])\n  ]))\n}\n}\n\n})","\n      import API from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./moveItem.vue?vue&type=style&index=0&id=b375636e&scoped=true&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./moveItem.vue?vue&type=style&index=0&id=b375636e&scoped=true&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./moveItem.vue?vue&type=style&index=1&id=b375636e&scoped=true&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./moveItem.vue?vue&type=style&index=1&id=b375636e&scoped=true&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","import script from \"./moveItem.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./moveItem.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./moveItem.vue?vue&type=style&index=0&id=b375636e&scoped=true&lang=css\"\nimport \"./moveItem.vue?vue&type=style&index=1&id=b375636e&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/studio/studio/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-b375636e\"]])\n\nexport default __exports__"],"names":["___CSS_LOADER_EXPORT___","push","module","id","_hoisted_1","class","_hoisted_2","_hoisted_3","style","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","__name","props","name","description","type","prefix","treeItems","emits","setup","__props","emit","resolve","IViewModelManager","executor","IUseCaseExecutor","viewModel","ITreeView","IViewModel","actions","path","icon","label","studio","appName","indent","appId","items","modelItems","filter","item","objectType","moduleItems","getChildren","parentId","length","toString","parent","ID","getSortedItems","sortItems","result","directChildren","child","sort","a","b","aPath","bPath","reduce","acc","rootItem","console","log","sortedItems","modelItem","modelType","indentCalculated","moduleItem","_ctx","_cache","_","action","key","onClick","$event","itemPath","itemId","execute","async","objectUseCase","IObjectUseCase","updateObject","fileExplorer","resolveUseCase","IFileExplorer","find","removeItem","addNewItem","forEach","undefined","refreshTreeItems","loading","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals"],"sourceRoot":""}