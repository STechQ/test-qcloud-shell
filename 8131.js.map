{"version":3,"file":"8131.js?ver=0.0.311_1710506587776","mappings":"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","sources":["webpack://qcloud_shell/./src/presentation/vue3/components/application/appItemsTable.vue?f88f","webpack://qcloud_shell/./src/presentation/vue3/components/application/appItemsTable.vue?0030","webpack://qcloud_shell/./src/presentation/vue3/components/application/createAppVersion.vue?c492","webpack://qcloud_shell/./src/presentation/vue3/components/application/createAppVersion.vue?8672","webpack://qcloud_shell/./src/presentation/vue3/components/application/appItemsTable.vue?9b18","webpack://qcloud_shell/./src/presentation/vue3/components/application/appItemsTable.vue?b08c","webpack://qcloud_shell/./src/presentation/vue3/components/application/appItemsTable.vue?b182","webpack://qcloud_shell/./src/presentation/vue3/components/application/appItemsTable.vue","webpack://qcloud_shell/./src/presentation/vue3/components/application/createAppVersion.vue?2498","webpack://qcloud_shell/./src/presentation/vue3/components/application/createAppVersion.vue?2344","webpack://qcloud_shell/./src/presentation/vue3/components/application/createAppVersion.vue?40c7","webpack://qcloud_shell/./src/presentation/vue3/components/application/createAppVersion.vue"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.container[data-v-437385e0] {\\n    padding: 32px 20px 20px;\\n}\\n.settings-container[data-v-437385e0] {\\n    position: relative;\\n    top: 0px;\\n    left: 0px;\\n}\\n.custom-text[data-v-437385e0] {\\n    /* position: absolute; */\\n    font-family: 'Roboto';\\n    font-style: normal;\\n    font-weight: 500;\\n    font-size: 15px;\\n    line-height: 18px;\\n    /* left: 24px; */\\n    color: #212121;\\n}\\n\\n/* .custom-text.title{\\n    top: 92px;\\n}\\n\\n.custom-text.environment{\\n    top: 174px;\\n} */\\n.radio-button[data-v-437385e0] {\\n    position: absolute;\\n    top: 60px;\\n    left: 20px;\\n    cursor: pointer;\\n}\\n.radio-text[data-v-437385e0] {\\n    position: absolute;\\n    top: 59px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n    user-select: none;\\n    cursor: pointer;\\n}\\n.existing-app-url[data-v-437385e0] {\\n    position: absolute;\\n    width: 760px;\\n    height: 40px;\\n    top: 114px;\\n    left: 20px;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #bcbcbc;\\n    border-radius: 4px;\\n    font: normal normal normal 14px/19px Roboto;\\n    letter-spacing: 0px;\\n    padding: 10px 0px 10px 10px;\\n}\\n.url-error[data-v-437385e0] {\\n    border: 1px solid red;\\n}\\n.url-disable[data-v-437385e0] {\\n    opacity: 0.5;\\n}\\n.existing-app-url[data-v-437385e0]::placeholder {\\n    color: #bcbcbc;\\n    user-select: none;\\n}\\n.modules-selected-checkbox[data-v-437385e0] {\\n    cursor: pointer;\\n}\\n.modules-selected-text[data-v-437385e0] {\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #757575;\\n    margin: 0 0 13px 30px;\\n}\\n\\n/* .modules-selected-text.deploy {\\n    top: 257px;\\n} */\\n.text-number[data-v-437385e0] {\\n    font: normal normal bold 14px/19px Roboto;\\n    color: #212121;\\n}\\n.modules-datatable[data-v-437385e0] {\\n    width: 760px;\\n    height: 288px;\\n    /* border: 1px solid #bcbcbc;\\n    overflow-x: hidden;\\n    overflow-y: auto; */\\n    margin-bottom: 20px;\\n}\\n\\n/* .modules-datatable.deploy {\\n    top: 286px;\\n} */\\n.modules-datatable[data-v-437385e0]::-webkit-scrollbar {\\n    width: 4px;\\n}\\n.modules-datatable[data-v-437385e0]::-webkit-scrollbar-thumb {\\n    background: #bcbcbc 0% 0% no-repeat padding-box;\\n    border-radius: 10px;\\n}\\n.modules-datatable[data-v-437385e0]::-webkit-scrollbar-thumb:hover {\\n    background: #555;\\n}\\n.row-container[data-v-437385e0] {\\n    width: 100%;\\n    height: 36px;\\n    position: relative;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #e0e0e0;\\n}\\n.chevron[data-v-437385e0] {\\n    position: absolute;\\n    left: 4px;\\n    color: #757575;\\n    font-size: 24px;\\n}\\n.chevron.disabled[data-v-437385e0] {\\n    pointer-events: none;\\n    color: #D5D5D5;\\n}\\n.module-checkbox[data-v-437385e0] {\\n    position: absolute;\\n    top: 10px;\\n    left: 43px;\\n    cursor: pointer;\\n}\\n.module-name[data-v-437385e0] {\\n    position: absolute;\\n    top: 9px;\\n    left: 69px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n.module-name.imported[data-v-437385e0] {\\n    top: 10px;\\n    left: 87px;\\n}\\n.module-name.disabled[data-v-437385e0] {\\n    color: #D5D5D5;\\n}\\n.model-checkbox[data-v-437385e0] {\\n    position: absolute;\\n    top: 10px;\\n    left: 59px;\\n    cursor: pointer;\\n}\\n.model-icon[data-v-437385e0] {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 85px;\\n}\\n.app-tier-model-icon[data-v-437385e0] {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 69px\\n}\\n.app-tier-model-name[data-v-437385e0] {\\n    position: absolute;\\n    top: 10px;\\n    left: 87px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n.app-tier-model-name.disabled[data-v-437385e0] {\\n    color: #D5D5D5;\\n}\\n.model-name[data-v-437385e0] {\\n    position: absolute;\\n    top: 9px;\\n    left: 103px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n.model-name.disabled[data-v-437385e0] {\\n    color: #D5D5D5;\\n}\\n.version-text[data-v-437385e0] {\\n    margin: 10px 7px 10px auto;\\n    display: table;\\n    font: normal normal normal 12px/16px Roboto;\\n    color: #757575;\\n    cursor: pointer;\\n    user-select: none;\\n}\\n.version-text.disabled[data-v-437385e0] {\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n.version-icon[data-v-437385e0] {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #D5D5D5;\\n}\\n.version-icon.disabled[data-v-437385e0] {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #EEEEEE;\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n.footer[data-v-437385e0] {\\n    position: relative;\\n    width: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: end;\\n}\\n.footer.deploy[data-v-437385e0] {\\n    position: relative;\\n    width: 100%;\\n}\\n.footer.export[data-v-437385e0] {\\n    margin-top: 102px;\\n}\\n.cancel-button[data-v-437385e0] {\\n    border-radius: 4px;\\n    user-select: none;\\n    font-style: normal;\\n    font-weight: 500;\\n    font-family: \\\"ROBOTO\\\";\\n    font-size: 15px;\\n    color: #757575;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n.save-button[data-v-437385e0] {\\n    background: #151233 0% 0% no-repeat padding-box;\\n    border-radius: 4px;\\n    user-select: none;\\n    font-weight: 500;\\n    font-size: 15px;\\n    color: #ffffff;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n.mobile-publish-text[data-v-437385e0],\\n.web-publish-text[data-v-437385e0] {\\n    padding: 5px 12px;\\n    margin-bottom: 52px;\\n    width: 100%;\\n    color: #757575;\\n    font-size: 14px;\\n    background: #F5F5FA;\\n    border-radius: 4px;\\n    display: flex;\\n    align-items: center;\\n}\\n.mobile-publish-text i[data-v-437385e0],\\n.web-publish-text i[data-v-437385e0] {\\n    font-size: 24px;\\n    color: #151233;\\n    margin-right: 4px;\\n}\\n.save-button.deploy[data-v-437385e0] {\\n    padding: 10px 16px;\\n}\\n.button-disable .save-button[data-v-437385e0] {\\n    color: #757575;\\n    cursor: default;\\n}\\n.button-disable .save-button:hover+.button-tooltip[data-v-437385e0],\\n.start-screen:hover .button-tooltip[data-v-437385e0],\\n.row-container:hover .button-tooltip[data-v-437385e0],\\n.publish-info:hover .button-tooltip[data-v-437385e0] {\\n    visibility: visible;\\n    transition: opacity 0.3s ease-out 1s;\\n    opacity: 1;\\n}\\n.button-tooltip[data-v-437385e0] {\\n    visibility: hidden;\\n    position: absolute;\\n    background: #757575;\\n    color: #FFFFFF;\\n    font-size: 11px;\\n    font-family: 'Roboto';\\n    text-align: center;\\n    border-radius: 4px;\\n    letter-spacing: 0.2px;\\n    padding: 6px 8px 6px 8px;\\n    top: 56px;\\n    left: 63px;\\n    opacity: 0;\\n}\\n.publish-info[data-v-437385e0] {\\n    color: #757575;\\n    font-size: 20px;\\n    margin-left: 10px;\\n}\\n.select-environment[data-v-437385e0] {\\n    width: 100%;\\n    font-size: 15px;\\n    height: 40px;\\n    line-height: 40px;\\n    margin-top: 4px\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/presentation/vue3/components/application/appItemsTable.vue\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"<template>\\n    <div>\\n        <div>\\n            <CheckboxComp :class=\\\"['modules-selected-checkbox', props.screenType == 'Deploy' ? 'deploy' : '']\\\"\\n                :minus=\\\"mainCheckboxState == false\\\" :check=\\\"mainCheckboxState == true\\\"\\n                @click=\\\"handleModuleCountCheckboxEvent(mainCheckboxState == undefined)\\\" />\\n            <div :class=\\\"['modules-selected-text', props.screenType == 'Deploy' ? 'deploy' : '']\\\">\\n                <span class=\\\"text-number\\\">{{ allChildCheckedModulesCount + anyChildCheckedModulesCount + checkedRootLevelModelsCount }}</span>\\n                of <span class=\\\"text-number\\\">{{ totalRootLevelCount }}</span> items selected\\n            </div>\\n        </div>\\n\\n        <!-- <div :class=\\\"['modules-datatable', props.screenType == 'Deploy' ? 'deploy' : '']\\\" id=\\\"module-container-div\\\" ></div> -->\\n         <div :class=\\\"['modules-datatable', props.screenType == 'Deploy' ? 'deploy' : '']\\\">\\n            <div v-for=\\\"item in items\\\" :key=\\\"item.id\\\">\\n                <div v-if=\\\"item?.type == 'module'\\\">\\n                    <div class=\\\"row-container\\\">\\n                        <i v-if=\\\"!item.imported\\\" :class=\\\"'mdi mdi-menu' + (item.collapsed ? '-right' : '-down') + ' chevron' + (!item.children || item.children.length == 0 ? ' disabled': '')\\\"\\n                            @click=\\\"handleCollapse(item)\\\" />\\n                        <CheckboxComp class=\\\"module-checkbox\\\" :check=\\\"item.allChildChecked\\\"\\n                            :minus=\\\"!item.allChildChecked && item.anyChildChecked\\\" :disabled=\\\"item.disabled\\\"\\n                            @click=\\\"handleItemCheckEvent(item)\\\" />\\n                        <i v-if=\\\"item.imported\\\" class=\\\"app-tier-model-icon mdi mdi-puzzle\\\" />\\n                        <span :class=\\\"['module-name', item.imported ? ` imported` : (item.disabled ? ' disabled': '')]\\\">{{ item.name }}</span>\\n                        <div v-if=\\\"item.imported\\\" class='version-text' @click=\\\"moduleVersionDialog(item)\\\">\\n                            {{ item.version ? item.version : 'No version' }}\\n                            <i :class=\\\"['mdi mdi-pencil-outline version-icon']\\\"></i>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row-container\\\" v-show=\\\"!item.imported && !item.collapsed\\\" v-for=\\\"child in item?.children\\\" :key=\\\"child.id\\\">\\n                        <CheckboxComp class=\\\"model-checkbox\\\" :check=\\\"child.checked\\\" :disabled=\\\"child.disabled\\\"\\n                            @click=\\\"handleItemCheckEvent(child)\\\" />\\n                        <i v-if=\\\"child.type != 'module'\\\" :class=\\\"'model-icon ' + ModelContants.getModelVisualInfo(child.type, undefined).icon\\\" \\n                            :style=\\\"{ color: ModelContants.getModelVisualInfo(child.type, undefined).color }\\\" />\\n                        \\n                        <span :class=\\\"['model-name', child.disabled ? ' disabled' : '']\\\">{{ child.name }}</span>\\n                        <div v-if=\\\"!child.usageType || child.usageType == 'appSettings'\\\" :class=\\\"['version-text', child.disabled ? 'disabled' : '']\\\" @click=\\\"versionDialog(child)\\\">\\n                            {{ child.version ? child.version : 'No version' }} <i v-if=\\\"!child.usageType || child.usageType == 'appSettings'\\\" :class=\\\"['mdi mdi-pencil-outline version-icon', child.disabled ? 'disabled' : '']\\\"></i>\\n                        </div>\\n                        <span v-if=\\\"child.disabled && !child.version\\\" class=\\\"button-tooltip\\\" \\n                            style=\\\"z-index: 1; width: 300px;\\\">No version available for publishing. <b>Stop Working</b> on this item and choose the <b>Ready to Publish</b> option.\\n                        </span>\\n                    </div>\\n                </div>\\n                <div v-else>\\n                    <div class=\\\"row-container\\\">\\n                        <CheckboxComp class=\\\"module-checkbox\\\" :check=\\\"item?.checked\\\" :disabled=\\\"item.disabled\\\"\\n                            @click=\\\"handleItemCheckEvent(item)\\\" />\\n                        <i :class=\\\"'app-tier-model-icon ' + ModelContants.getModelVisualInfo(item.type, undefined).icon\\\" \\n                        :style=\\\"{ color: ModelContants.getModelVisualInfo(item.type, undefined).color }\\\" />\\n                        <span class=\\\"app-tier-model-name\\\">{{ item?.name }}\\n                            <span class=\\\"start-screen\\\" v-if=\\\"startScreen?.ID == item.id\\\">\\n                                <i class=\\\"mdi mdi-home-outline\\\"></i>\\n                                <span class=\\\"button-tooltip\\\" style=\\\"top: -30px; left: 2px; z-index: 1; width: 80px;\\\">Start\\n                                    Screen</span>\\n                            </span>\\n                        </span>\\n\\n                        <span v-if=\\\"!item.usageType\\\" :class=\\\"['version-text', item.disabled ? 'disabled' : '']\\\" @click=\\\"versionDialog(item)\\\">\\n                            {{ item.version ? item.version : 'No version' }} <i v-if=\\\"!item.usageType\\\" :class=\\\"['mdi mdi-pencil-outline version-icon', item.disabled ? 'disabled' : '']\\\"></i>\\n                        </span>\\n                        <span v-if=\\\"item.disabled && !item.version\\\" class=\\\"button-tooltip\\\"\\n                            style=\\\"z-index: 1; width: 300px;\\\">No version available for publishing. <b>Stop Working</b> on this item and choose the <b>Ready to Publish</b> option.\\n                        </span>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div v-if=\\\"props.screenType == 'Deploy'\\\" style=\\\"margin-bottom: 102px\\\">\\n            <div style=\\\"display: flex; align-items: center;\\\">\\n                <span class=\\\"custom-text environment\\\"> Publish To </span>\\n                <span class=\\\"publish-info\\\">\\n                    <i class=\\\"mdi mdi-information\\\"></i>\\n                    <span class=\\\"button-tooltip\\\" style=\\\"top: 460px; left: 96px; z-index: 1; width: 231px;\\\">Publish To\\n                        options may change depending on the module type you choose.</span>\\n                </span>\\n            </div>\\n\\n            <CustomSelect :options=\\\"publishTargets\\\" @input=\\\"onTargetSelect\\\" :selectedOption=\\\"selectedTarget\\\"\\n                :default=\\\"selectedTarget\\\" :disabledOptions=\\\"disabledOptions\\\" selectedClass=\\\"selected-environment\\\"\\n                placeholder=\\\"Select the publish environment of your application\\\" class=\\\"select-environment\\\">\\n            </CustomSelect>\\n        </div>\\n        <div :class=\\\"['footer', props.screenType == 'Deploy' ? 'deploy' : 'export']\\\">\\n            <div :class=\\\"['cancel-button', props.screenType == 'Deploy' ? 'deploy' : '']\\\" @click=\\\"close\\\">Cancel</div>\\n            <div :class=\\\"[(saveButtonDisable ? ' button-disable' : '')]\\\"\\n                @click=\\\"!saveButtonDisable && props.buttonCb()\\\">\\n                <span class=\\\"save-button deploy\\\">{{ buttonNameDict[props.screenType] }}</span>\\n                <span v-if=\\\"!isStartScreenOK\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -46px; left: 652px; z-index: 1; width: 120px;\\\">You need to include your start screen.</span>\\n                <span v-else-if=\\\"props.screenType == 'Deploy' && !selectedTarget\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -46px; left: 644px; z-index: 1; width: 123px;\\\">You need to select a publish\\n                    environment.</span>\\n                <span v-else-if=\\\"!isThereVersion\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -95px; left: 644px; z-index: 1; width: 135px;\\\">There are no items ready to publish. At least\\n                    one of your items must be ready to publish.</span>\\n                <span v-else-if=\\\"!isAllDependenciesOK\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -95px; left: 644px; z-index: 1; width: 135px;\\\">{{ dependencyErrorStr }}</span>\\n            </div>\\n\\n        </div>\\n    </div>\\n</template>\\n\\n\\n<script setup lang=\\\"ts\\\">\\nimport { CryptoHelper } from \\\"@stechquick/algae/lib/helpers/cryptoHelper\\\";\\nimport { ModelContants } from \\\"../../../../../../common/qCloudTemp/modelContants\\\";\\nimport { computed, createApp, defineAsyncComponent, onMounted, ref } from \\\"vue\\\";\\nimport { IOrganizationCloud } from \\\"../../../../../../common/clean/domain/useCases/ICloudProvider\\\";\\nimport { IPlatformSelection, ITableData } from \\\"../../../../../../common/qCloudTemp/exporter\\\";\\nimport { IModuleRelatedModelItem, IQJsonAdditionals } from \\\"../../../../../../common/qCloudTemp/quickCloud\\\";\\nimport { container } from \\\"../../../../domain/core/diContainer\\\";\\nimport { IQCloudApi } from \\\"../../../../domain/infrastructure/IQCloudApi\\\";\\nimport { IModel, IModelHistoryInfo, IModule, IModuleVersion } from \\\"../../../../domain/model/models\\\";\\nimport { IDialog } from \\\"../../../../domain/presentation/IDialog\\\";\\nimport { IDeployJobs } from \\\"../../../../domain/useCase/IDeployJobs\\\";\\nimport { IJobUtils } from \\\"../../../../domain/useCase/IJobUtils\\\";\\nimport { IListMultiModelVersions } from \\\"../../../../domain/useCase/IListMultiModelVersions\\\";\\nimport { IListMultiModuleVersions } from \\\"../../../../domain/useCase/IListMultiModuleVersions\\\";\\nimport { IPackJobs } from \\\"../../../../domain/useCase/IPackJobs\\\";\\nimport { IUseCaseExecutor } from \\\"../../../../domain/useCase/IUseCaseExecutor\\\";\\nimport { IViewModel } from \\\"../../../../domain/viewModel/IViewModel\\\";\\nimport { IViewModelManager } from \\\"../../../../domain/viewModel/IViewModelManager\\\";\\nimport { IBackofficeUseCase } from \\\"../../../../domain/useCase/IBackofficeUseCase\\\";\\nimport { IApplicationUseCase } from \\\"../../../../domain/useCase/IApplicationUseCase\\\";\\nimport CustomSelect from \\\"../customSelect.vue\\\";\\nimport CheckboxComp from \\\"../checkboxComp.vue\\\";\\nimport { FileDisplayerExternalData, IFileDisplayerUseCase } from \\\"../../../../domain/useCase/IFileDisplayerUseCase\\\";\\nimport { ITreeItem } from \\\"../../../../domain/presentation/ITreeView\\\";\\nimport { FileExplorerConstants } from \\\"../../../../domain/useCase/IFileExplorer\\\";\\nimport { IObjectUseCase } from \\\"../../../../domain/useCase/IObjectUseCase\\\";\\n\\ninterface IDeployScreenAdditionalProps {\\n    screenType: \\\"Export\\\" | \\\"Deploy\\\" | \\\"Release\\\" | \\\"Create\\\" | \\\"Save\\\" | \\\"Update\\\";\\n    platformSelection: IPlatformSelection;\\n    buttonCb: () => void;\\n    buttonDisableCond: boolean;\\n}\\n\\ninterface IDisabledOptions {\\n    index: number\\n    cause: string;\\n}\\n\\nconst props = defineProps<IDeployScreenAdditionalProps>();\\nconst viewModel = container.resolve<IViewModel>(IViewModel);\\nconst viewModelManager = container.resolve<IViewModelManager>(IViewModelManager);\\nconst dialog = container.resolve<IDialog>(IDialog);\\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\\nconst fileDisplayerUseCase = container.resolve<IFileDisplayerUseCase>(IFileDisplayerUseCase);\\nconst objectUseCase = container.resolve<IObjectUseCase>(IObjectUseCase);\\n\\n\\nconst emit = defineEmits([\\\"close\\\", \\\"getItem\\\"]);\\nconst items = ref<Array<ITableData>>([]);\\nconst validations = ref<boolean>(true);\\nconst selectedTarget = ref<string>(\\\"\\\");\\nconst disabledOptions = ref<Array<IDisabledOptions>>();\\nconst publishTargets = ref<Array<string>>();\\nconst modelHistories = ref<Map<string, Array<IModelHistoryInfo>>>();\\nconst importedModuleVersions = ref<Map<string, Array<IModuleVersion>>>();\\nconst startScreen = ref<IModel>();\\nconst dependencyMap = ref<Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>>();\\nconst dependencyErrorStr = ref<string>('');\\nconst currentApp = computed(() => viewModel.apps.find((app) => app.ID == viewModel.studio.appId));\\nconst buttonNameDict = {\\n    \\\"Export\\\" : \\\"DOWNLOAD\\\",\\n    \\\"Deploy\\\": \\\"PUBLISH\\\",\\n    \\\"Release\\\": \\\"RELEASE\\\",\\n    \\\"Create\\\": \\\"CREATE\\\",\\n    \\\"Save\\\": \\\"SAVE\\\",\\n    \\\"Update\\\": \\\"UPDATE\\\"\\n} \\n\\n\\nonMounted(async () => {\\n    await executor.execute(async () => {\\n        await Promise.all([\\n            executor.executeUseCase<IListMultiModelVersions>(IListMultiModelVersions, {}).then(res => modelHistories.value = res),\\n            executor.executeUseCase<IListMultiModuleVersions>(IListMultiModuleVersions, {}).then(res => importedModuleVersions.value = res)\\n        ])\\n        initDependencies();\\n        handleItems();\\n        props.screenType == \\\"Deploy\\\" && syncPublishTargets();\\n        validations.value = validate();\\n        sendItems();\\n    }, { loading: true });\\n})\\n\\nconst allChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == \\\"module\\\" && e.allChildChecked).length);\\nconst anyChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == \\\"module\\\" && !e.allChildChecked && e.anyChildChecked).length);\\nconst checkedRootLevelModelsCount = computed(() => items.value.filter(e => e.type != \\\"module\\\" && e.checked).length)\\nconst totalRootLevelCount = computed(() => items.value.length);\\nconst saveButtonDisable = computed(() => (props.screenType == \\\"Deploy\\\" && props.platformSelection.web && selectedTarget.value == \\\"\\\") || !validations.value || !items.value.some((item) => item.checked || item.anyChildChecked) || !validateStartScreen() || !validateDependencies() || props.buttonDisableCond);\\nconst mainCheckboxState = computed(() => items.value.length == allChildCheckedModulesCount.value ? true\\n    : (anyChildCheckedModulesCount.value + checkedRootLevelModelsCount.value > 0 ? false : undefined));\\nconst isThereVersion = computed(() => checkMaxVersionOfAllItems());\\nconst isAllDependenciesOK = computed(validateDependencies)\\nconst isStartScreenOK = computed(validateStartScreen)\\n\\nfunction validate() {\\n    let result = true;\\n    const modules = items.value.filter(e => e.type == \\\"module\\\" && e.anyChildChecked);\\n    const appLayerItems = items.value.filter(e => e.type == \\\"qjson\\\" && e.checked);\\n\\n    startScreen.value = (viewModel.studio.items as Array<IModel>).find(item => (item.additionals as IQJsonAdditionals | undefined)?.isRootPage);\\n    if (!startScreen.value)\\n        return false;\\n\\n    if (props.screenType == \\\"Deploy\\\") {\\n        if (modules.length > 0)\\n            result = modules.map(e => e.children).filter(e => !e?.find(f => f.type == \\\"entityDesigner\\\" && f.checked)).length <= 0\\n\\n        let isApplicationWillDeploy = appLayerItems.length > 0;\\n        if (isApplicationWillDeploy) {\\n            result = appLayerItems\\n                .map(e => viewModel.studio.items.find(item => item.ID == e.id) as IModel)\\n                .findIndex(e => ((e.additionals as IQJsonAdditionals).isRootPage)) != -1;\\n        }\\n    }\\n\\n    return result;\\n}\\n\\nfunction validateDependencies() {\\n    const checkMap = new Map<string, boolean>();\\n    items.value.forEach(item => {\\n        if (item.type == 'module' && item.children && item.children.length > 0)\\n            item.children.forEach(child => checkMap.set(child.id, child.checked == true))\\n        else\\n            checkMap.set(item.id, item.checked == true)\\n    })\\n\\n    const mustBeCheckedMap = new Map<string, Array<string>>();\\n    dependencyMap.value?.forEach((deps, id) => {\\n        if (!checkMap.get(id))\\n            return;\\n\\n        deps.dependedTo.forEach(dependedId => {\\n            if (checkMap.get(dependedId))\\n                return;\\n\\n            if (mustBeCheckedMap.has(id)) {\\n                const vals = mustBeCheckedMap.get(id)!\\n                vals.push(dependedId)\\n                mustBeCheckedMap.set(id, vals)\\n            } else {\\n                mustBeCheckedMap.set(id, [dependedId])\\n            }\\n\\n        });\\n    })\\n\\n    //set deps error text\\n    const [firstItemID] = mustBeCheckedMap.keys();\\n    if (firstItemID) {\\n        const firstItemDeps = mustBeCheckedMap.get(firstItemID);\\n        const firstItemDepStr = firstItemDeps ? firstItemDeps.map(findItem).map(e => e?.name).join(', ') : '';\\n        dependencyErrorStr.value = `Select ${firstItemDepStr} first. ${findItem(firstItemID)?.name} depends on ${firstItemDepStr}.`\\n    }\\n\\n    return mustBeCheckedMap.size == 0\\n}\\n\\nfunction validateStartScreen() {\\n    return (items.value.find((item) => item.id == startScreen.value?.ID))?.checked\\n}\\n\\nfunction findItem(ID: string) {\\n    for (const item of items.value) {\\n        if (item.type != 'module' && item.id == ID)\\n            return item;\\n        if (item.type == 'module' && item.children && item.children.length > 0) {\\n            const f = item.children.find(e => e.id == ID)\\n            if (f) return f\\n        }\\n    }\\n}\\nfunction sendItems() {\\n    items.value.forEach(item => {\\n            if(item.type != \\\"appSettings\\\" && item.type != \\\"module\\\" && item.type != \\\"folder\\\" && item.usageType != \\\"appSettings\\\" && item.usageType != \\\"appAssetList\\\")  {\\n                item.checked && getItem(item);\\n            }\\n            else {\\n                item.children?.forEach(child => {\\n                    child.checked && getItem(child);\\n                 })\\n            }\\n        })\\n}\\nfunction initDependencies() {\\n    const map = new Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>();\\n    const depMap = new Map<string, Array<string>>();\\n\\n    viewModelManager.flatMapItems(viewModel.studio.items, (item) => {\\n        if (item.objectType != \\\"model\\\") { return; }\\n\\n        const isImportedModule = item.owner.objectType == \\\"module\\\" && isModuleImported(item.owner as IModule);\\n\\n        let version: string | undefined;\\n        if (!isImportedModule) {\\n            const maxVersion = getItemMaxVersion(item)\\n            if (!maxVersion)\\n                return depMap.set(item.ID, item.dependentModels ? item.dependentModels.map(e => e.modelId) : Array<string>());\\n            version = maxVersion;\\n        }\\n        else {\\n            const moduleVersions = importedModuleVersions.value?.get(item.owner.ID)\\n            const moduleVersion = (item.owner as IModule).relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion\\n\\n            const importedModuleModel = moduleVersions?.filter(e => e.version == moduleVersion).flatMap(e => e.relatedModelHistories).find(e => e.modelID == item.ID)\\n            version = importedModuleModel?.version\\n        }\\n\\n        const historyItem = modelHistories.value?.get(item.ID)?.find(e => e.version == version);\\n\\n        depMap.set(item.ID, historyItem?.dependentModels ? historyItem?.dependentModels.map(e => e.modelId) : Array<string>())\\n    });\\n\\n\\n    depMap.forEach((dependedTo, modelId) => {\\n        const dependedBy = Array<string>();\\n        depMap.forEach((dependencies, depModelId) => {\\n            if (dependencies.some(depId => depId == modelId))\\n                dependedBy.push(depModelId)\\n        })\\n        map.set(modelId, { dependedBy, dependedTo });\\n    })\\n    dependencyMap.value = map;\\n}\\n\\nfunction isModelDepended(item: ITableData) {\\n    const deps = dependencyMap.value?.get(item.id)?.dependedBy\\n    if (!deps) return false;\\n\\n    return deps.some(dep => items.value.some(item => {\\n        if (item.type == 'module' && item.anyChildChecked) {\\n            return item.children?.some(child => child.checked && child.id == dep)\\n        }\\n        return item.id == dep && item.checked\\n    }));\\n}\\n// function createDialogComp(item: ITableData) {\\n//     const newChild = createApp(ExportDialogItem, {\\n//         handleItemCheckEvent,\\n//         startScreen,\\n//         versionDialog,\\n//         handleCollapse,\\n//         item: item,\\n//         moduleVersionDialog\\n//     });\\n//     const mountEl = document.createElement('div');\\n//     newChild.mount(mountEl);\\n//     const parentEl = document.getElementById('module-container-div');\\n//     parentEl?.appendChild(mountEl);\\n// }\\nfunction createAndAppendItem({ newItem }: { newItem: ITableData }) {\\n    // createDialogComp(newItem);\\n    if (newItem.parent) {\\n        return;\\n    }\\n    items.value.push(newItem);\\n}\\n// function assignItemRowRefs(itemName: string, element: any) {\\n//     itemRowRefs.value[itemName] = element;\\n// }\\nfunction handleItems() {\\n    // - App Settings\\n    const appSettings = viewModel.studio.items.find(e => e.name == 'App Settings');\\n    const maxVersion = getItemMaxVersion(appSettings as IModel)\\n    const settingsData = appSettings && {\\n        id: appSettings.ID,\\n        name: appSettings.name,\\n        checked: true,\\n        disabled: false,\\n        type: (appSettings as IModel).modelType,\\n        version: !maxVersion ? 'latest' : maxVersion\\n    };\\n    appSettings && settingsData && createAndAppendItem({ newItem: settingsData });\\n\\n\\n    // - UI Settings\\n    const uiSettingsID = CryptoHelper.CreateGuid();\\n    const uiSettingsModels = viewModel.studio.items.filter((item) => item.objectType == \\\"model\\\" && item.usageType == \\\"appSettings\\\") as Array<IModel>;\\n    const uiSettings: ITableData = {\\n        id: uiSettingsID,\\n        collapsed: true,\\n        name: \\\"UI Settings\\\",\\n        type: \\\"module\\\",\\n        imported: false,\\n        checked: true,\\n        children: [{} as ITableData]\\n    };\\n    uiSettings && createAndAppendItem({ newItem: uiSettings });\\n    uiSettings.children = uiSettingsModels.map(settings => {\\n        const maxVersion = getItemMaxVersion(settings)\\n        const childData = {\\n            id: settings.ID,\\n            parent: uiSettings,\\n            name: settings.name,\\n            type: settings.modelType,\\n            checked: maxVersion != undefined,\\n            usageType: settings?.usageType,\\n            disabled: !maxVersion,\\n            version: maxVersion,\\n            level: 2\\n        }\\n        createAndAppendItem({ newItem: childData });\\n        return childData;\\n    })\\n    handleParentCheckedStatus(uiSettings, false);\\n\\n\\n    // - Styled Components\\n    const uiAssetID = CryptoHelper.CreateGuid();\\n    const appAssetList = viewModel.studio.items.filter((item) => item.objectType == \\\"model\\\" && item.usageType == \\\"appAssetList\\\") as Array<IModel>;\\n    const uiAssetList: ITableData = {\\n        id: uiAssetID,\\n        collapsed: true,\\n        name: \\\"Styled Components\\\",\\n        type: \\\"module\\\",\\n        imported: false,\\n        anyChildChecked: true,\\n        allChildChecked: true,\\n        children: [{} as ITableData]\\n    };\\n    uiAssetList && createAndAppendItem({ newItem: uiAssetList });\\n    uiAssetList.children = appAssetList.map((asset) => {\\n        const childAsset = {\\n            id: asset.ID,\\n            parent: uiAssetList,\\n            name: asset.name,\\n            type: asset.modelType,\\n            checked: true,\\n            usageType: asset?.usageType,\\n            level: 2\\n        }\\n        createAndAppendItem({ newItem: childAsset });\\n        return childAsset;\\n    }) as Array<ITableData>;\\n    handleParentCheckedStatus(uiAssetList, false);\\n\\n    \\n    const treeItems = fileDisplayerUseCase.cloneFileExplorerTreeView({\\n        displayFilterer: (item, hasChildren) => {\\n            switch (item.ID) { case FileExplorerConstants.uiAssetListID: case FileExplorerConstants.uiSettingsID: return false; default: break; }\\n            switch (item.objectType) {\\n                case \\\"application\\\": return false;\\n                case \\\"module\\\": return true;\\n                case \\\"folder\\\": return hasChildren;\\n                case \\\"model\\\": return true;\\n            }\\n        },\\n    });\\n\\n    const converter = (treeItem: ITreeItem<FileDisplayerExternalData>, options: {ownerModule?: {isImportedModule: boolean;moduleVersion: string | undefined;relatedModelHistories: IModuleRelatedModelItem[] | undefined}}): ITableData => {\\n        const item = treeItem.externalData;\\n        if (item.objectType == \\\"application\\\") { throw new Error(\\\"unexpected item type\\\"); }\\n\\n        const fullPath = objectUseCase.getFullPath(item, \\\"self\\\");\\n        let level = fullPath.split(\\\"/\\\").length - 1;\\n\\n        let tableData: ITableData;\\n        switch(item.objectType) {\\n            case \\\"folder\\\":\\n                tableData = {\\n                    id: item.ID, name: item.name, type: \\\"folder\\\", collapsed: true, level,\\n                    children: treeItem.children?.map((item) => converter(item, { ownerModule: options.ownerModule })),\\n                };\\n                tableData.children?.forEach(child => child.parent = tableData);\\n                handleParentCheckedStatus(tableData, false);\\n                break;\\n            case \\\"model\\\":\\n                if (options.ownerModule) {\\n                    tableData = { id: item.ID, name: item.name, type: item.modelType, level };\\n                    if (!options.ownerModule.isImportedModule || item.isUnmodifiable) {\\n                        const maxVersion = getItemMaxVersion(item);\\n                        tableData = {\\n                            ...tableData,\\n                            checked: maxVersion ? true : item.isUnmodifiable,\\n                            disabled: maxVersion ? false : !item.isUnmodifiable,\\n                            version: item.isUnmodifiable ? 'latest' : maxVersion,\\n                        };\\n                    } else {\\n                        const importedModulesModel = options.ownerModule.relatedModelHistories?.find(e => e.modelID == item.ID)\\n                        tableData = { ...tableData, checked: true, disabled: false, version: importedModulesModel?.version };\\n                    }\\n                } else {\\n                    const maxVersion = getItemMaxVersion(item);\\n                    tableData = {\\n                        id: item.ID,\\n                        name: item.name,\\n                        checked: maxVersion ? true : item.isUnmodifiable,\\n                        disabled: maxVersion ? false : !item.isUnmodifiable,\\n                        type: item.modelType,\\n                        version: item.isUnmodifiable ? 'latest' : maxVersion,\\n                        level,\\n                    };\\n                }\\n                break;\\n            case \\\"module\\\":\\n                const isImportedModule = isModuleImported(item);\\n                const moduleVersion = item.relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion;\\n                const relatedModelHistories = isImportedModule ? importedModuleVersions.value?.get(item.ID)?.find(module => module.version == moduleVersion)?.relatedModelHistories : undefined\\n                \\n                tableData = {\\n                    id: item.ID,\\n                    collapsed: true,\\n                    name: item.name,\\n                    type: \\\"module\\\",\\n                    imported: isImportedModule,\\n                    version: moduleVersion,\\n                    children: treeItem.children?.map((item) => converter(item, {ownerModule: {isImportedModule, moduleVersion, relatedModelHistories}})),\\n                }\\n                tableData.children?.forEach(child => child.parent = tableData);\\n                handleParentCheckedStatus(tableData, false);\\n                break;\\n        }\\n        return tableData;\\n    };\\n    const tableDatas = treeItems.map(item => converter(item, {}));\\n\\n    const traverser = (tableData: ITableData) => {\\n        createAndAppendItem({ newItem: tableData });\\n        tableData.children?.forEach(traverser);\\n    };\\n    \\n    tableDatas.forEach(traverser);\\n}\\n\\nfunction getItemMaxVersion(item: IModel): string | undefined {\\n    if (!modelHistories.value?.has(item.ID))\\n        return undefined;\\n\\n    const versions = modelHistories.value.get(item.ID);\\n    if (!versions)\\n        return undefined;\\n\\n    const findMaxVersion = (versions: Array<string>) => {\\n        const versionNumbers = versions.map(v => {\\n            const parts: Array<string> = v.split(\\\".\\\");\\n            return parseInt(parts[0]) * 10 + parseInt(parts[1]) * 1;\\n        })\\n\\n        versionNumbers.sort((a, b) => b - a);\\n\\n        const maxVersion = versionNumbers[0];\\n        return `${Math.floor(maxVersion / 10)}.${maxVersion % 10}`;\\n    }\\n\\n    return findMaxVersion(versions.map(e => e.version!));\\n\\n}\\nfunction checkMaxVersionOfAllItems() {\\n    let isThereVersion: boolean = false;\\n    items.value.forEach(item => {\\n        if (item.type == \\\"module\\\") {\\n            item.children?.forEach(child => {\\n                if (child.version) {\\n                    isThereVersion = true;\\n                }\\n\\n            })\\n        }\\n        else {\\n            if (item.version) {\\n                isThereVersion = true;\\n            }\\n        }\\n    })\\n    return isThereVersion;\\n}\\nfunction handleModuleCountCheckboxEvent(value: boolean) {\\n    items.value.filter(e => !e.disabled).forEach((item) => {\\n        item.checked = value;\\n        const allItemsCheckable = item.allChildChecked != undefined && item.children && item.children.length > 0 && !item.children.some(c => c.disabled);\\n        if (allItemsCheckable) item.allChildChecked = value;\\n        if (item.anyChildChecked != undefined) item.anyChildChecked = value;\\n        if (item.children) item.children.filter(c => !c.disabled).forEach((child) => (child.checked = value));\\n    });\\n    \\n    validations.value = validate();\\n    props.screenType == \\\"Deploy\\\" && syncPublishTargets();\\n}\\n\\nfunction handleCollapse(item: ITableData, childIterate?: boolean, collapsed?: boolean) {\\n    item.collapsed = collapsed !== undefined ? collapsed : !item.collapsed;\\n    if (childIterate) {\\n        item.children?.forEach(child => {\\n            const childEl = document.getElementById(child.id);\\n            childEl!.style.display = item.collapsed ? \\\"none\\\" : \\\"block\\\";\\n            handleCollapse(child, childIterate, item.collapsed);\\n        })\\n    }\\n}\\n\\nfunction checkAllDependents(item: ITableData, recurseParent: boolean) {\\n    if (item.disabled || item.checked) return;\\n\\n    item.checked = true\\n    item.parent && handleParentCheckedStatus(item.parent, recurseParent);\\n\\n    const deps = dependencyMap.value?.get(item.id)?.dependedTo\\n    if (!deps) return;\\n\\n    deps.forEach(dep => {\\n        items.value.forEach(item => {\\n            if (item.type == 'module' && !item.allChildChecked) {\\n                const willCheckItem = item.children?.find(child => !child.checked && child.id == dep)\\n                willCheckItem && checkAllDependents(willCheckItem, recurseParent);\\n                handleParentCheckedStatus(item, recurseParent);\\n                return;\\n            }\\n\\n            if (!item.checked && item.id == dep) {\\n                checkAllDependents(item, recurseParent);\\n                item.parent && handleParentCheckedStatus(item.parent, recurseParent);\\n            }\\n        })\\n    });\\n}\\n\\nfunction handleItemCheckEvent(item: ITableData) {\\n    if (item.disabled || isModelDepended(item) || item.name == 'App Settings')\\n        return;\\n\\n    if (item.type != \\\"module\\\" && item.type != \\\"folder\\\") {\\n        if (item.checked) {\\n            item.checked = false;\\n            item.parent && handleParentCheckedStatus(item.parent, true);\\n        } else {\\n            checkAllDependents(item, true);\\n        }\\n    } else {\\n        if (item.children && item.children.filter(c => !c.disabled).length > 0) {\\n            if (item.anyChildChecked) {\\n                item.children.filter(c => !c.disabled).forEach(child => child.checked = false);\\n                item.checked = false;\\n                handleParentCheckedStatus(item, true);\\n            } else {\\n                item.children.forEach(child => checkAllDependents(child, true));\\n                item.checked = true;\\n            }\\n        }\\n        else {\\n            item.checked = !item.checked;\\n            item.allChildChecked = false;\\n        }\\n    }\\n    getItem(item);\\n    validations.value = validate();\\n    props.screenType == \\\"Deploy\\\" && syncPublishTargets();\\n}\\n\\nfunction handleParentCheckedStatus(item: ITableData, recurseParent: boolean) {\\n    item.disabled = item.children && (item.children.length == 0 || !item.children?.some(child => !child.disabled))\\n    item.allChildChecked = item.children && item.children.length > 0 && !item.children.some((child) => !child.checked || child.disabled);\\n    item.anyChildChecked = item.children?.some((child) => child.checked && !child.disabled);\\n    if (recurseParent && item.parent) {\\n        handleParentCheckedStatus(item.parent, true);\\n    }\\n}\\n\\nfunction syncPublishTargets() {\\n    publishTargets.value = []; disabledOptions.value = [];\\n\\n    const targets = viewModel.user?.selectedOrganization?.actions?.publish?.targets;\\n    if (!targets)\\n        return;\\n\\n    const isSelectAnyItem = items.value.find(e => e.anyChildChecked || e.checked);\\n    if (!isSelectAnyItem) {\\n        publishTargets.value = Object.entries(targets).map(e => cloudTargetMap(e[0])!);\\n        const disabledOptionList = Array<IDisabledOptions>();\\n        for (let i = 0; i < publishTargets.value.length; i++) {\\n            disabledOptionList.push({ index: i, cause: \\\"You need to include items to publish.\\\" })\\n        }\\n        disabledOptions.value = disabledOptionList;\\n        return;\\n    }\\n\\n    const checkedPublishTargets = checkAndSetDisabledCauses(targets);\\n    const sortedTargets = checkedPublishTargets.sort((e, f) => (!e.cause === !f.cause) ? 0 : e.cause ? 1 : -1);\\n\\n    const disabledOptionList = Array<IDisabledOptions>();\\n    for (let i = 0; i < sortedTargets.length; i++) {\\n        const cause = sortedTargets[i].cause;\\n        if (cause) disabledOptionList.push({ index: i, cause })\\n    }\\n    disabledOptions.value = disabledOptionList;\\n    publishTargets.value = sortedTargets.map(e => e.optionName);\\n\\n    selectedTarget.value = !sortedTargets[0].cause ? sortedTargets[0].optionName : \\\"\\\";\\n}\\n\\nfunction checkAndSetDisabledCauses(targets: Record<keyof IOrganizationCloud, boolean>) {\\n    const list = Array<{ optionName: string, cause?: string }>();\\n\\n    Object.keys(targets).forEach(e => {\\n        const key = e as keyof IOrganizationCloud;\\n        const value = targets[key];\\n        const optionName = cloudTargetMap(key)!;\\n        if (!value)\\n            return list.push({ optionName, cause: \\\"You are not authorized to publish to this target.\\\" });\\n\\n\\n        switch (key) {\\n            case \\\"azure\\\":\\n                const traverseSelectedItems = (status: boolean, items?: Array<ITableData>) => {\\n                    if (!items || items.length == 0) { return status; }\\n                    for (const item of items) {\\n                        if (item.checked || item.anyChildChecked) {\\n                            if (item.type == \\\"module\\\") {\\n                                status = traverseSelectedItems(status, item.children);\\n                            }\\n                            if (item.type == \\\"entityDesigner\\\" || item.type == \\\"bpmn\\\" || item.type == \\\"process\\\") {\\n                                status = false;\\n                                break;\\n                            }\\n                        }\\n\\n                    }\\n                    return status;\\n                }\\n\\n                const status = traverseSelectedItems(true, items.value);\\n                if (!status)\\n                    return list.push({ optionName, cause: \\\"Entity and process models cannot be published to this target.\\\" });\\n                break;\\n            case \\\"plateauGCP\\\":\\n                const modulesHasNotAnEDModel = items.value.filter(e => e.name != \\\"UI Settings\\\").find(e => e.type == \\\"module\\\" && e.anyChildChecked && e.children?.some(c => c.checked && (c.type == \\\"bpmn\\\" || c.type == \\\"process\\\")) && !e.children?.some(c => c.type == \\\"entityDesigner\\\" && c.checked))\\n                if (modulesHasNotAnEDModel)\\n                    return list.push({ optionName, cause: `This target not available. Selected module '${modulesHasNotAnEDModel.name}' has not any Data Model.` })\\n                break;\\n        }\\n\\n        list.push({ optionName });\\n    })\\n\\n    return list;\\n}\\n\\nfunction updateDependencyMap(newVersion: string, item: ITableData) {\\n    const deps = dependencyMap.value?.get(item.id);\\n    dependencyMap.value?.set(item.id, {\\n        dependedBy: deps?.dependedBy || Array<string>(),\\n        dependedTo: modelHistories.value?.get(item.id)?.find(e => e.version == newVersion)?.dependentModels?.map(e => e.modelId) || Array<string>()\\n    })\\n}\\n\\nfunction versionDialog(item: ITableData) {\\n    const clickedNode = { id: item.id, state: { checked: item.checked }, text: item.name, type: item.type, version: item.version };\\n    const hasAnyVersion = modelHistories.value?.has(item.id);\\n    const options = {\\n        clickedNode, cb: (version: string) => {\\n            item.version = version;\\n            updateDependencyMap(version, item);\\n        }\\n    } as any;\\n\\n    if (hasAnyVersion) {\\n        options.versions = modelHistories.value?.get(item.id)\\n    }\\n    dialog.showDialog(\\n        defineAsyncComponent(() => import(\\\"../application/modelVersionDialog.vue\\\")),\\n        { closable: true, title: \\\"Change Version\\\", width: \\\"1080px\\\", maxHeight: \\\"500px\\\", overflow: \\\"auto\\\" }, options\\n    );\\n}\\n\\n\\nfunction moduleVersionDialog(item: ITableData) {\\n    dialog.showDialog(\\n        defineAsyncComponent(() => import(\\\"../application/moduleVersionDialog.vue\\\")),\\n        { closable: true, title: \\\"Change Version\\\", width: \\\"1080px\\\", maxHeight: \\\"500px\\\", overflow: \\\"auto\\\" },\\n        {\\n            module: { ID: item.id }, versions: importedModuleVersions.value?.get(item.id), cb: (moduleVersion: IModuleVersion) => {\\n                item.version = moduleVersion.version;\\n                item.children?.forEach(child => {\\n                    const modulesModel = moduleVersion.relatedModelHistories.find(e => e.modelID == child.id)\\n                    child.version = modulesModel?.version\\n                    updateDependencyMap(modulesModel?.version!, child);\\n                })\\n            }\\n        }\\n    );\\n}\\n\\nfunction close() {\\n    emit(\\\"close\\\");\\n}\\nfunction getItem(item: ITableData) {\\n    emit(\\\"getItem\\\", item);\\n}\\n\\nfunction cloudTargetMap(name: string, pureVal: boolean = false) {\\n    const map: Record<keyof IOrganizationCloud, string> = { azure: \\\"Public Cloud\\\", plateauGCP: \\\"Plateau Platform Playground\\\" };\\n    if (pureVal) {\\n        return Object.keys(map).find(e => {\\n            if (map[e as keyof IOrganizationCloud] === name) {\\n                return true;\\n            }\\n        })\\n    } else {\\n        let key = Object.keys(map).includes(name);\\n        if (!key)\\n            return;\\n        return map[name as keyof IOrganizationCloud];\\n    }\\n}\\n\\nfunction onTargetSelect(value: string) {\\n    selectedTarget.value = value\\n}\\n\\nconst isModuleImported = (item: IModule) => {\\n    return objectUseCase.isModuleImported(item);\\n}\\n\\n</script>\\n\\n\\n<style scoped>\\n.container {\\n    padding: 32px 20px 20px;\\n}\\n\\n.settings-container {\\n    position: relative;\\n    top: 0px;\\n    left: 0px;\\n}\\n\\n.custom-text {\\n    /* position: absolute; */\\n    font-family: 'Roboto';\\n    font-style: normal;\\n    font-weight: 500;\\n    font-size: 15px;\\n    line-height: 18px;\\n    /* left: 24px; */\\n    color: #212121;\\n}\\n\\n/* .custom-text.title{\\n    top: 92px;\\n}\\n\\n.custom-text.environment{\\n    top: 174px;\\n} */\\n\\n.radio-button {\\n    position: absolute;\\n    top: 60px;\\n    left: 20px;\\n    cursor: pointer;\\n}\\n\\n.radio-text {\\n    position: absolute;\\n    top: 59px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n    user-select: none;\\n    cursor: pointer;\\n}\\n\\n.existing-app-url {\\n    position: absolute;\\n    width: 760px;\\n    height: 40px;\\n    top: 114px;\\n    left: 20px;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #bcbcbc;\\n    border-radius: 4px;\\n    font: normal normal normal 14px/19px Roboto;\\n    letter-spacing: 0px;\\n    padding: 10px 0px 10px 10px;\\n}\\n\\n.url-error {\\n    border: 1px solid red;\\n}\\n\\n.url-disable {\\n    opacity: 0.5;\\n}\\n\\n.existing-app-url::placeholder {\\n    color: #bcbcbc;\\n    user-select: none;\\n}\\n\\n.modules-selected-checkbox {\\n    cursor: pointer;\\n}\\n\\n.modules-selected-text {\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #757575;\\n    margin: 0 0 13px 30px;\\n    ;\\n}\\n\\n/* .modules-selected-text.deploy {\\n    top: 257px;\\n} */\\n\\n.text-number {\\n    font: normal normal bold 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.modules-datatable {\\n    width: 760px;\\n    height: 288px;\\n    /* border: 1px solid #bcbcbc;\\n    overflow-x: hidden;\\n    overflow-y: auto; */\\n    margin-bottom: 20px;\\n}\\n\\n/* .modules-datatable.deploy {\\n    top: 286px;\\n} */\\n\\n.modules-datatable::-webkit-scrollbar {\\n    width: 4px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar-thumb {\\n    background: #bcbcbc 0% 0% no-repeat padding-box;\\n    border-radius: 10px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar-thumb:hover {\\n    background: #555;\\n}\\n\\n.row-container {\\n    width: 100%;\\n    height: 36px;\\n    position: relative;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #e0e0e0;\\n}\\n\\n.chevron {\\n    position: absolute;\\n    left: 4px;\\n    color: #757575;\\n    font-size: 24px;\\n}\\n\\n.chevron.disabled {\\n    pointer-events: none;\\n    color: #D5D5D5;\\n}\\n\\n.module-checkbox {\\n    position: absolute;\\n    top: 10px;\\n    left: 43px;\\n    cursor: pointer;\\n}\\n\\n.module-name {\\n    position: absolute;\\n    top: 9px;\\n    left: 69px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.module-name.imported {\\n    top: 10px;\\n    left: 87px;\\n}\\n\\n.module-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.model-checkbox {\\n    position: absolute;\\n    top: 10px;\\n    left: 59px;\\n    cursor: pointer;\\n}\\n\\n.model-icon {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 85px;\\n}\\n\\n.app-tier-model-icon {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 69px\\n}\\n\\n.app-tier-model-name {\\n    position: absolute;\\n    top: 10px;\\n    left: 87px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.app-tier-model-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.model-name {\\n    position: absolute;\\n    top: 9px;\\n    left: 103px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.model-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.version-text {\\n    margin: 10px 7px 10px auto;\\n    display: table;\\n    font: normal normal normal 12px/16px Roboto;\\n    color: #757575;\\n    cursor: pointer;\\n    user-select: none;\\n}\\n\\n.version-text.disabled {\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n\\n.version-icon {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #D5D5D5;\\n}\\n\\n.version-icon.disabled {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #EEEEEE;\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n\\n.footer {\\n    position: relative;\\n    width: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: end;\\n}\\n\\n.footer.deploy {\\n    position: relative;\\n    width: 100%;\\n}\\n\\n.footer.export {\\n    margin-top: 102px;\\n}\\n\\n.cancel-button {\\n    border-radius: 4px;\\n    user-select: none;\\n    font-style: normal;\\n    font-weight: 500;\\n    font-family: \\\"ROBOTO\\\";\\n    font-size: 15px;\\n    color: #757575;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n\\n\\n\\n.save-button {\\n    background: #151233 0% 0% no-repeat padding-box;\\n    border-radius: 4px;\\n    user-select: none;\\n    font-weight: 500;\\n    font-size: 15px;\\n    color: #ffffff;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n\\n.mobile-publish-text,\\n.web-publish-text {\\n    padding: 5px 12px;\\n    margin-bottom: 52px;\\n    width: 100%;\\n    color: #757575;\\n    font-size: 14px;\\n    background: #F5F5FA;\\n    border-radius: 4px;\\n    display: flex;\\n    align-items: center;\\n}\\n\\n.mobile-publish-text i,\\n.web-publish-text i {\\n    font-size: 24px;\\n    color: #151233;\\n    margin-right: 4px;\\n}\\n\\n.save-button.deploy {\\n    padding: 10px 16px;\\n}\\n\\n.button-disable .save-button {\\n    color: #757575;\\n    cursor: default;\\n}\\n\\n.button-disable .save-button:hover+.button-tooltip,\\n.start-screen:hover .button-tooltip,\\n.row-container:hover .button-tooltip,\\n.publish-info:hover .button-tooltip {\\n    visibility: visible;\\n    transition: opacity 0.3s ease-out 1s;\\n    opacity: 1;\\n}\\n\\n.button-tooltip {\\n    visibility: hidden;\\n    position: absolute;\\n    background: #757575;\\n    color: #FFFFFF;\\n    font-size: 11px;\\n    font-family: 'Roboto';\\n    text-align: center;\\n    border-radius: 4px;\\n    letter-spacing: 0.2px;\\n    padding: 6px 8px 6px 8px;\\n    top: 56px;\\n    left: 63px;\\n    opacity: 0;\\n}\\n\\n.publish-info {\\n    color: #757575;\\n    font-size: 20px;\\n    margin-left: 10px;\\n}\\n\\n.select-environment {\\n    width: 100%;\\n    font-size: 15px;\\n    height: 40px;\\n    line-height: 40px;\\n    margin-top: 4px\\n}\\n</style>\\n\\n<style>\\n.selected-environment {\\n    background-color: transparent;\\n    border-radius: 4px;\\n    border: 1px solid #BCBCBC;\\n    color: #212121;\\n    padding-left: 12px;\\n}\\n\\n.custom-placeholder:empty:before {\\n    color: #BCBCBC !important;\\n    font-weight: 400;\\n}\\n\\n.custom-select .items .option {\\n    font-size: 14px;\\n    padding-left: 12px;\\n    line-height: 32px;\\n}\\n\\n.custom-select .items .option:hover {\\n    background-color: #EEEEEE;\\n    color: #212121;\\n}\\n\\n.custom-select .items .option.disabled:hover {\\n    background-color: #FFFFFF;\\n    color: #212121;\\n}\\n\\n.custom-select.select-environment .items {\\n    margin-top: 4px;\\n    color: #212121;\\n    border-radius: 4px;\\n    border: 1px solid #E3E3E3;\\n    overflow: hidden;\\n    background-color: #FFFFFF;\\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\\n    position: static !important;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.selected-environment {\\n    background-color: transparent;\\n    border-radius: 4px;\\n    border: 1px solid #BCBCBC;\\n    color: #212121;\\n    padding-left: 12px;\\n}\\n.custom-placeholder:empty:before {\\n    color: #BCBCBC !important;\\n    font-weight: 400;\\n}\\n.custom-select .items .option {\\n    font-size: 14px;\\n    padding-left: 12px;\\n    line-height: 32px;\\n}\\n.custom-select .items .option:hover {\\n    background-color: #EEEEEE;\\n    color: #212121;\\n}\\n.custom-select .items .option.disabled:hover {\\n    background-color: #FFFFFF;\\n    color: #212121;\\n}\\n.custom-select.select-environment .items {\\n    margin-top: 4px;\\n    color: #212121;\\n    border-radius: 4px;\\n    border: 1px solid #E3E3E3;\\n    overflow: hidden;\\n    background-color: #FFFFFF;\\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\\n    position: static !important;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/presentation/vue3/components/application/appItemsTable.vue\"],\"names\":[],\"mappings\":\";AAkpCA;IACI,6BAA6B;IAC7B,kBAAkB;IAClB,yBAAyB;IACzB,cAAc;IACd,kBAAkB;AACtB;AAEA;IACI,yBAAyB;IACzB,gBAAgB;AACpB;AAEA;IACI,eAAe;IACf,kBAAkB;IAClB,iBAAiB;AACrB;AAEA;IACI,yBAAyB;IACzB,cAAc;AAClB;AAEA;IACI,yBAAyB;IACzB,cAAc;AAClB;AAEA;IACI,eAAe;IACf,cAAc;IACd,kBAAkB;IAClB,yBAAyB;IACzB,gBAAgB;IAChB,yBAAyB;IACzB,0CAA0C;IAC1C,2BAA2B;AAC/B\",\"sourcesContent\":[\"<template>\\n    <div>\\n        <div>\\n            <CheckboxComp :class=\\\"['modules-selected-checkbox', props.screenType == 'Deploy' ? 'deploy' : '']\\\"\\n                :minus=\\\"mainCheckboxState == false\\\" :check=\\\"mainCheckboxState == true\\\"\\n                @click=\\\"handleModuleCountCheckboxEvent(mainCheckboxState == undefined)\\\" />\\n            <div :class=\\\"['modules-selected-text', props.screenType == 'Deploy' ? 'deploy' : '']\\\">\\n                <span class=\\\"text-number\\\">{{ allChildCheckedModulesCount + anyChildCheckedModulesCount + checkedRootLevelModelsCount }}</span>\\n                of <span class=\\\"text-number\\\">{{ totalRootLevelCount }}</span> items selected\\n            </div>\\n        </div>\\n\\n        <!-- <div :class=\\\"['modules-datatable', props.screenType == 'Deploy' ? 'deploy' : '']\\\" id=\\\"module-container-div\\\" ></div> -->\\n         <div :class=\\\"['modules-datatable', props.screenType == 'Deploy' ? 'deploy' : '']\\\">\\n            <div v-for=\\\"item in items\\\" :key=\\\"item.id\\\">\\n                <div v-if=\\\"item?.type == 'module'\\\">\\n                    <div class=\\\"row-container\\\">\\n                        <i v-if=\\\"!item.imported\\\" :class=\\\"'mdi mdi-menu' + (item.collapsed ? '-right' : '-down') + ' chevron' + (!item.children || item.children.length == 0 ? ' disabled': '')\\\"\\n                            @click=\\\"handleCollapse(item)\\\" />\\n                        <CheckboxComp class=\\\"module-checkbox\\\" :check=\\\"item.allChildChecked\\\"\\n                            :minus=\\\"!item.allChildChecked && item.anyChildChecked\\\" :disabled=\\\"item.disabled\\\"\\n                            @click=\\\"handleItemCheckEvent(item)\\\" />\\n                        <i v-if=\\\"item.imported\\\" class=\\\"app-tier-model-icon mdi mdi-puzzle\\\" />\\n                        <span :class=\\\"['module-name', item.imported ? ` imported` : (item.disabled ? ' disabled': '')]\\\">{{ item.name }}</span>\\n                        <div v-if=\\\"item.imported\\\" class='version-text' @click=\\\"moduleVersionDialog(item)\\\">\\n                            {{ item.version ? item.version : 'No version' }}\\n                            <i :class=\\\"['mdi mdi-pencil-outline version-icon']\\\"></i>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row-container\\\" v-show=\\\"!item.imported && !item.collapsed\\\" v-for=\\\"child in item?.children\\\" :key=\\\"child.id\\\">\\n                        <CheckboxComp class=\\\"model-checkbox\\\" :check=\\\"child.checked\\\" :disabled=\\\"child.disabled\\\"\\n                            @click=\\\"handleItemCheckEvent(child)\\\" />\\n                        <i v-if=\\\"child.type != 'module'\\\" :class=\\\"'model-icon ' + ModelContants.getModelVisualInfo(child.type, undefined).icon\\\" \\n                            :style=\\\"{ color: ModelContants.getModelVisualInfo(child.type, undefined).color }\\\" />\\n                        \\n                        <span :class=\\\"['model-name', child.disabled ? ' disabled' : '']\\\">{{ child.name }}</span>\\n                        <div v-if=\\\"!child.usageType || child.usageType == 'appSettings'\\\" :class=\\\"['version-text', child.disabled ? 'disabled' : '']\\\" @click=\\\"versionDialog(child)\\\">\\n                            {{ child.version ? child.version : 'No version' }} <i v-if=\\\"!child.usageType || child.usageType == 'appSettings'\\\" :class=\\\"['mdi mdi-pencil-outline version-icon', child.disabled ? 'disabled' : '']\\\"></i>\\n                        </div>\\n                        <span v-if=\\\"child.disabled && !child.version\\\" class=\\\"button-tooltip\\\" \\n                            style=\\\"z-index: 1; width: 300px;\\\">No version available for publishing. <b>Stop Working</b> on this item and choose the <b>Ready to Publish</b> option.\\n                        </span>\\n                    </div>\\n                </div>\\n                <div v-else>\\n                    <div class=\\\"row-container\\\">\\n                        <CheckboxComp class=\\\"module-checkbox\\\" :check=\\\"item?.checked\\\" :disabled=\\\"item.disabled\\\"\\n                            @click=\\\"handleItemCheckEvent(item)\\\" />\\n                        <i :class=\\\"'app-tier-model-icon ' + ModelContants.getModelVisualInfo(item.type, undefined).icon\\\" \\n                        :style=\\\"{ color: ModelContants.getModelVisualInfo(item.type, undefined).color }\\\" />\\n                        <span class=\\\"app-tier-model-name\\\">{{ item?.name }}\\n                            <span class=\\\"start-screen\\\" v-if=\\\"startScreen?.ID == item.id\\\">\\n                                <i class=\\\"mdi mdi-home-outline\\\"></i>\\n                                <span class=\\\"button-tooltip\\\" style=\\\"top: -30px; left: 2px; z-index: 1; width: 80px;\\\">Start\\n                                    Screen</span>\\n                            </span>\\n                        </span>\\n\\n                        <span v-if=\\\"!item.usageType\\\" :class=\\\"['version-text', item.disabled ? 'disabled' : '']\\\" @click=\\\"versionDialog(item)\\\">\\n                            {{ item.version ? item.version : 'No version' }} <i v-if=\\\"!item.usageType\\\" :class=\\\"['mdi mdi-pencil-outline version-icon', item.disabled ? 'disabled' : '']\\\"></i>\\n                        </span>\\n                        <span v-if=\\\"item.disabled && !item.version\\\" class=\\\"button-tooltip\\\"\\n                            style=\\\"z-index: 1; width: 300px;\\\">No version available for publishing. <b>Stop Working</b> on this item and choose the <b>Ready to Publish</b> option.\\n                        </span>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div v-if=\\\"props.screenType == 'Deploy'\\\" style=\\\"margin-bottom: 102px\\\">\\n            <div style=\\\"display: flex; align-items: center;\\\">\\n                <span class=\\\"custom-text environment\\\"> Publish To </span>\\n                <span class=\\\"publish-info\\\">\\n                    <i class=\\\"mdi mdi-information\\\"></i>\\n                    <span class=\\\"button-tooltip\\\" style=\\\"top: 460px; left: 96px; z-index: 1; width: 231px;\\\">Publish To\\n                        options may change depending on the module type you choose.</span>\\n                </span>\\n            </div>\\n\\n            <CustomSelect :options=\\\"publishTargets\\\" @input=\\\"onTargetSelect\\\" :selectedOption=\\\"selectedTarget\\\"\\n                :default=\\\"selectedTarget\\\" :disabledOptions=\\\"disabledOptions\\\" selectedClass=\\\"selected-environment\\\"\\n                placeholder=\\\"Select the publish environment of your application\\\" class=\\\"select-environment\\\">\\n            </CustomSelect>\\n        </div>\\n        <div :class=\\\"['footer', props.screenType == 'Deploy' ? 'deploy' : 'export']\\\">\\n            <div :class=\\\"['cancel-button', props.screenType == 'Deploy' ? 'deploy' : '']\\\" @click=\\\"close\\\">Cancel</div>\\n            <div :class=\\\"[(saveButtonDisable ? ' button-disable' : '')]\\\"\\n                @click=\\\"!saveButtonDisable && props.buttonCb()\\\">\\n                <span class=\\\"save-button deploy\\\">{{ buttonNameDict[props.screenType] }}</span>\\n                <span v-if=\\\"!isStartScreenOK\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -46px; left: 652px; z-index: 1; width: 120px;\\\">You need to include your start screen.</span>\\n                <span v-else-if=\\\"props.screenType == 'Deploy' && !selectedTarget\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -46px; left: 644px; z-index: 1; width: 123px;\\\">You need to select a publish\\n                    environment.</span>\\n                <span v-else-if=\\\"!isThereVersion\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -95px; left: 644px; z-index: 1; width: 135px;\\\">There are no items ready to publish. At least\\n                    one of your items must be ready to publish.</span>\\n                <span v-else-if=\\\"!isAllDependenciesOK\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -95px; left: 644px; z-index: 1; width: 135px;\\\">{{ dependencyErrorStr }}</span>\\n            </div>\\n\\n        </div>\\n    </div>\\n</template>\\n\\n\\n<script setup lang=\\\"ts\\\">\\nimport { CryptoHelper } from \\\"@stechquick/algae/lib/helpers/cryptoHelper\\\";\\nimport { ModelContants } from \\\"../../../../../../common/qCloudTemp/modelContants\\\";\\nimport { computed, createApp, defineAsyncComponent, onMounted, ref } from \\\"vue\\\";\\nimport { IOrganizationCloud } from \\\"../../../../../../common/clean/domain/useCases/ICloudProvider\\\";\\nimport { IPlatformSelection, ITableData } from \\\"../../../../../../common/qCloudTemp/exporter\\\";\\nimport { IModuleRelatedModelItem, IQJsonAdditionals } from \\\"../../../../../../common/qCloudTemp/quickCloud\\\";\\nimport { container } from \\\"../../../../domain/core/diContainer\\\";\\nimport { IQCloudApi } from \\\"../../../../domain/infrastructure/IQCloudApi\\\";\\nimport { IModel, IModelHistoryInfo, IModule, IModuleVersion } from \\\"../../../../domain/model/models\\\";\\nimport { IDialog } from \\\"../../../../domain/presentation/IDialog\\\";\\nimport { IDeployJobs } from \\\"../../../../domain/useCase/IDeployJobs\\\";\\nimport { IJobUtils } from \\\"../../../../domain/useCase/IJobUtils\\\";\\nimport { IListMultiModelVersions } from \\\"../../../../domain/useCase/IListMultiModelVersions\\\";\\nimport { IListMultiModuleVersions } from \\\"../../../../domain/useCase/IListMultiModuleVersions\\\";\\nimport { IPackJobs } from \\\"../../../../domain/useCase/IPackJobs\\\";\\nimport { IUseCaseExecutor } from \\\"../../../../domain/useCase/IUseCaseExecutor\\\";\\nimport { IViewModel } from \\\"../../../../domain/viewModel/IViewModel\\\";\\nimport { IViewModelManager } from \\\"../../../../domain/viewModel/IViewModelManager\\\";\\nimport { IBackofficeUseCase } from \\\"../../../../domain/useCase/IBackofficeUseCase\\\";\\nimport { IApplicationUseCase } from \\\"../../../../domain/useCase/IApplicationUseCase\\\";\\nimport CustomSelect from \\\"../customSelect.vue\\\";\\nimport CheckboxComp from \\\"../checkboxComp.vue\\\";\\nimport { FileDisplayerExternalData, IFileDisplayerUseCase } from \\\"../../../../domain/useCase/IFileDisplayerUseCase\\\";\\nimport { ITreeItem } from \\\"../../../../domain/presentation/ITreeView\\\";\\nimport { FileExplorerConstants } from \\\"../../../../domain/useCase/IFileExplorer\\\";\\nimport { IObjectUseCase } from \\\"../../../../domain/useCase/IObjectUseCase\\\";\\n\\ninterface IDeployScreenAdditionalProps {\\n    screenType: \\\"Export\\\" | \\\"Deploy\\\" | \\\"Release\\\" | \\\"Create\\\" | \\\"Save\\\" | \\\"Update\\\";\\n    platformSelection: IPlatformSelection;\\n    buttonCb: () => void;\\n    buttonDisableCond: boolean;\\n}\\n\\ninterface IDisabledOptions {\\n    index: number\\n    cause: string;\\n}\\n\\nconst props = defineProps<IDeployScreenAdditionalProps>();\\nconst viewModel = container.resolve<IViewModel>(IViewModel);\\nconst viewModelManager = container.resolve<IViewModelManager>(IViewModelManager);\\nconst dialog = container.resolve<IDialog>(IDialog);\\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\\nconst fileDisplayerUseCase = container.resolve<IFileDisplayerUseCase>(IFileDisplayerUseCase);\\nconst objectUseCase = container.resolve<IObjectUseCase>(IObjectUseCase);\\n\\n\\nconst emit = defineEmits([\\\"close\\\", \\\"getItem\\\"]);\\nconst items = ref<Array<ITableData>>([]);\\nconst validations = ref<boolean>(true);\\nconst selectedTarget = ref<string>(\\\"\\\");\\nconst disabledOptions = ref<Array<IDisabledOptions>>();\\nconst publishTargets = ref<Array<string>>();\\nconst modelHistories = ref<Map<string, Array<IModelHistoryInfo>>>();\\nconst importedModuleVersions = ref<Map<string, Array<IModuleVersion>>>();\\nconst startScreen = ref<IModel>();\\nconst dependencyMap = ref<Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>>();\\nconst dependencyErrorStr = ref<string>('');\\nconst currentApp = computed(() => viewModel.apps.find((app) => app.ID == viewModel.studio.appId));\\nconst buttonNameDict = {\\n    \\\"Export\\\" : \\\"DOWNLOAD\\\",\\n    \\\"Deploy\\\": \\\"PUBLISH\\\",\\n    \\\"Release\\\": \\\"RELEASE\\\",\\n    \\\"Create\\\": \\\"CREATE\\\",\\n    \\\"Save\\\": \\\"SAVE\\\",\\n    \\\"Update\\\": \\\"UPDATE\\\"\\n} \\n\\n\\nonMounted(async () => {\\n    await executor.execute(async () => {\\n        await Promise.all([\\n            executor.executeUseCase<IListMultiModelVersions>(IListMultiModelVersions, {}).then(res => modelHistories.value = res),\\n            executor.executeUseCase<IListMultiModuleVersions>(IListMultiModuleVersions, {}).then(res => importedModuleVersions.value = res)\\n        ])\\n        initDependencies();\\n        handleItems();\\n        props.screenType == \\\"Deploy\\\" && syncPublishTargets();\\n        validations.value = validate();\\n        sendItems();\\n    }, { loading: true });\\n})\\n\\nconst allChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == \\\"module\\\" && e.allChildChecked).length);\\nconst anyChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == \\\"module\\\" && !e.allChildChecked && e.anyChildChecked).length);\\nconst checkedRootLevelModelsCount = computed(() => items.value.filter(e => e.type != \\\"module\\\" && e.checked).length)\\nconst totalRootLevelCount = computed(() => items.value.length);\\nconst saveButtonDisable = computed(() => (props.screenType == \\\"Deploy\\\" && props.platformSelection.web && selectedTarget.value == \\\"\\\") || !validations.value || !items.value.some((item) => item.checked || item.anyChildChecked) || !validateStartScreen() || !validateDependencies() || props.buttonDisableCond);\\nconst mainCheckboxState = computed(() => items.value.length == allChildCheckedModulesCount.value ? true\\n    : (anyChildCheckedModulesCount.value + checkedRootLevelModelsCount.value > 0 ? false : undefined));\\nconst isThereVersion = computed(() => checkMaxVersionOfAllItems());\\nconst isAllDependenciesOK = computed(validateDependencies)\\nconst isStartScreenOK = computed(validateStartScreen)\\n\\nfunction validate() {\\n    let result = true;\\n    const modules = items.value.filter(e => e.type == \\\"module\\\" && e.anyChildChecked);\\n    const appLayerItems = items.value.filter(e => e.type == \\\"qjson\\\" && e.checked);\\n\\n    startScreen.value = (viewModel.studio.items as Array<IModel>).find(item => (item.additionals as IQJsonAdditionals | undefined)?.isRootPage);\\n    if (!startScreen.value)\\n        return false;\\n\\n    if (props.screenType == \\\"Deploy\\\") {\\n        if (modules.length > 0)\\n            result = modules.map(e => e.children).filter(e => !e?.find(f => f.type == \\\"entityDesigner\\\" && f.checked)).length <= 0\\n\\n        let isApplicationWillDeploy = appLayerItems.length > 0;\\n        if (isApplicationWillDeploy) {\\n            result = appLayerItems\\n                .map(e => viewModel.studio.items.find(item => item.ID == e.id) as IModel)\\n                .findIndex(e => ((e.additionals as IQJsonAdditionals).isRootPage)) != -1;\\n        }\\n    }\\n\\n    return result;\\n}\\n\\nfunction validateDependencies() {\\n    const checkMap = new Map<string, boolean>();\\n    items.value.forEach(item => {\\n        if (item.type == 'module' && item.children && item.children.length > 0)\\n            item.children.forEach(child => checkMap.set(child.id, child.checked == true))\\n        else\\n            checkMap.set(item.id, item.checked == true)\\n    })\\n\\n    const mustBeCheckedMap = new Map<string, Array<string>>();\\n    dependencyMap.value?.forEach((deps, id) => {\\n        if (!checkMap.get(id))\\n            return;\\n\\n        deps.dependedTo.forEach(dependedId => {\\n            if (checkMap.get(dependedId))\\n                return;\\n\\n            if (mustBeCheckedMap.has(id)) {\\n                const vals = mustBeCheckedMap.get(id)!\\n                vals.push(dependedId)\\n                mustBeCheckedMap.set(id, vals)\\n            } else {\\n                mustBeCheckedMap.set(id, [dependedId])\\n            }\\n\\n        });\\n    })\\n\\n    //set deps error text\\n    const [firstItemID] = mustBeCheckedMap.keys();\\n    if (firstItemID) {\\n        const firstItemDeps = mustBeCheckedMap.get(firstItemID);\\n        const firstItemDepStr = firstItemDeps ? firstItemDeps.map(findItem).map(e => e?.name).join(', ') : '';\\n        dependencyErrorStr.value = `Select ${firstItemDepStr} first. ${findItem(firstItemID)?.name} depends on ${firstItemDepStr}.`\\n    }\\n\\n    return mustBeCheckedMap.size == 0\\n}\\n\\nfunction validateStartScreen() {\\n    return (items.value.find((item) => item.id == startScreen.value?.ID))?.checked\\n}\\n\\nfunction findItem(ID: string) {\\n    for (const item of items.value) {\\n        if (item.type != 'module' && item.id == ID)\\n            return item;\\n        if (item.type == 'module' && item.children && item.children.length > 0) {\\n            const f = item.children.find(e => e.id == ID)\\n            if (f) return f\\n        }\\n    }\\n}\\nfunction sendItems() {\\n    items.value.forEach(item => {\\n            if(item.type != \\\"appSettings\\\" && item.type != \\\"module\\\" && item.type != \\\"folder\\\" && item.usageType != \\\"appSettings\\\" && item.usageType != \\\"appAssetList\\\")  {\\n                item.checked && getItem(item);\\n            }\\n            else {\\n                item.children?.forEach(child => {\\n                    child.checked && getItem(child);\\n                 })\\n            }\\n        })\\n}\\nfunction initDependencies() {\\n    const map = new Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>();\\n    const depMap = new Map<string, Array<string>>();\\n\\n    viewModelManager.flatMapItems(viewModel.studio.items, (item) => {\\n        if (item.objectType != \\\"model\\\") { return; }\\n\\n        const isImportedModule = item.owner.objectType == \\\"module\\\" && isModuleImported(item.owner as IModule);\\n\\n        let version: string | undefined;\\n        if (!isImportedModule) {\\n            const maxVersion = getItemMaxVersion(item)\\n            if (!maxVersion)\\n                return depMap.set(item.ID, item.dependentModels ? item.dependentModels.map(e => e.modelId) : Array<string>());\\n            version = maxVersion;\\n        }\\n        else {\\n            const moduleVersions = importedModuleVersions.value?.get(item.owner.ID)\\n            const moduleVersion = (item.owner as IModule).relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion\\n\\n            const importedModuleModel = moduleVersions?.filter(e => e.version == moduleVersion).flatMap(e => e.relatedModelHistories).find(e => e.modelID == item.ID)\\n            version = importedModuleModel?.version\\n        }\\n\\n        const historyItem = modelHistories.value?.get(item.ID)?.find(e => e.version == version);\\n\\n        depMap.set(item.ID, historyItem?.dependentModels ? historyItem?.dependentModels.map(e => e.modelId) : Array<string>())\\n    });\\n\\n\\n    depMap.forEach((dependedTo, modelId) => {\\n        const dependedBy = Array<string>();\\n        depMap.forEach((dependencies, depModelId) => {\\n            if (dependencies.some(depId => depId == modelId))\\n                dependedBy.push(depModelId)\\n        })\\n        map.set(modelId, { dependedBy, dependedTo });\\n    })\\n    dependencyMap.value = map;\\n}\\n\\nfunction isModelDepended(item: ITableData) {\\n    const deps = dependencyMap.value?.get(item.id)?.dependedBy\\n    if (!deps) return false;\\n\\n    return deps.some(dep => items.value.some(item => {\\n        if (item.type == 'module' && item.anyChildChecked) {\\n            return item.children?.some(child => child.checked && child.id == dep)\\n        }\\n        return item.id == dep && item.checked\\n    }));\\n}\\n// function createDialogComp(item: ITableData) {\\n//     const newChild = createApp(ExportDialogItem, {\\n//         handleItemCheckEvent,\\n//         startScreen,\\n//         versionDialog,\\n//         handleCollapse,\\n//         item: item,\\n//         moduleVersionDialog\\n//     });\\n//     const mountEl = document.createElement('div');\\n//     newChild.mount(mountEl);\\n//     const parentEl = document.getElementById('module-container-div');\\n//     parentEl?.appendChild(mountEl);\\n// }\\nfunction createAndAppendItem({ newItem }: { newItem: ITableData }) {\\n    // createDialogComp(newItem);\\n    if (newItem.parent) {\\n        return;\\n    }\\n    items.value.push(newItem);\\n}\\n// function assignItemRowRefs(itemName: string, element: any) {\\n//     itemRowRefs.value[itemName] = element;\\n// }\\nfunction handleItems() {\\n    // - App Settings\\n    const appSettings = viewModel.studio.items.find(e => e.name == 'App Settings');\\n    const maxVersion = getItemMaxVersion(appSettings as IModel)\\n    const settingsData = appSettings && {\\n        id: appSettings.ID,\\n        name: appSettings.name,\\n        checked: true,\\n        disabled: false,\\n        type: (appSettings as IModel).modelType,\\n        version: !maxVersion ? 'latest' : maxVersion\\n    };\\n    appSettings && settingsData && createAndAppendItem({ newItem: settingsData });\\n\\n\\n    // - UI Settings\\n    const uiSettingsID = CryptoHelper.CreateGuid();\\n    const uiSettingsModels = viewModel.studio.items.filter((item) => item.objectType == \\\"model\\\" && item.usageType == \\\"appSettings\\\") as Array<IModel>;\\n    const uiSettings: ITableData = {\\n        id: uiSettingsID,\\n        collapsed: true,\\n        name: \\\"UI Settings\\\",\\n        type: \\\"module\\\",\\n        imported: false,\\n        checked: true,\\n        children: [{} as ITableData]\\n    };\\n    uiSettings && createAndAppendItem({ newItem: uiSettings });\\n    uiSettings.children = uiSettingsModels.map(settings => {\\n        const maxVersion = getItemMaxVersion(settings)\\n        const childData = {\\n            id: settings.ID,\\n            parent: uiSettings,\\n            name: settings.name,\\n            type: settings.modelType,\\n            checked: maxVersion != undefined,\\n            usageType: settings?.usageType,\\n            disabled: !maxVersion,\\n            version: maxVersion,\\n            level: 2\\n        }\\n        createAndAppendItem({ newItem: childData });\\n        return childData;\\n    })\\n    handleParentCheckedStatus(uiSettings, false);\\n\\n\\n    // - Styled Components\\n    const uiAssetID = CryptoHelper.CreateGuid();\\n    const appAssetList = viewModel.studio.items.filter((item) => item.objectType == \\\"model\\\" && item.usageType == \\\"appAssetList\\\") as Array<IModel>;\\n    const uiAssetList: ITableData = {\\n        id: uiAssetID,\\n        collapsed: true,\\n        name: \\\"Styled Components\\\",\\n        type: \\\"module\\\",\\n        imported: false,\\n        anyChildChecked: true,\\n        allChildChecked: true,\\n        children: [{} as ITableData]\\n    };\\n    uiAssetList && createAndAppendItem({ newItem: uiAssetList });\\n    uiAssetList.children = appAssetList.map((asset) => {\\n        const childAsset = {\\n            id: asset.ID,\\n            parent: uiAssetList,\\n            name: asset.name,\\n            type: asset.modelType,\\n            checked: true,\\n            usageType: asset?.usageType,\\n            level: 2\\n        }\\n        createAndAppendItem({ newItem: childAsset });\\n        return childAsset;\\n    }) as Array<ITableData>;\\n    handleParentCheckedStatus(uiAssetList, false);\\n\\n    \\n    const treeItems = fileDisplayerUseCase.cloneFileExplorerTreeView({\\n        displayFilterer: (item, hasChildren) => {\\n            switch (item.ID) { case FileExplorerConstants.uiAssetListID: case FileExplorerConstants.uiSettingsID: return false; default: break; }\\n            switch (item.objectType) {\\n                case \\\"application\\\": return false;\\n                case \\\"module\\\": return true;\\n                case \\\"folder\\\": return hasChildren;\\n                case \\\"model\\\": return true;\\n            }\\n        },\\n    });\\n\\n    const converter = (treeItem: ITreeItem<FileDisplayerExternalData>, options: {ownerModule?: {isImportedModule: boolean;moduleVersion: string | undefined;relatedModelHistories: IModuleRelatedModelItem[] | undefined}}): ITableData => {\\n        const item = treeItem.externalData;\\n        if (item.objectType == \\\"application\\\") { throw new Error(\\\"unexpected item type\\\"); }\\n\\n        const fullPath = objectUseCase.getFullPath(item, \\\"self\\\");\\n        let level = fullPath.split(\\\"/\\\").length - 1;\\n\\n        let tableData: ITableData;\\n        switch(item.objectType) {\\n            case \\\"folder\\\":\\n                tableData = {\\n                    id: item.ID, name: item.name, type: \\\"folder\\\", collapsed: true, level,\\n                    children: treeItem.children?.map((item) => converter(item, { ownerModule: options.ownerModule })),\\n                };\\n                tableData.children?.forEach(child => child.parent = tableData);\\n                handleParentCheckedStatus(tableData, false);\\n                break;\\n            case \\\"model\\\":\\n                if (options.ownerModule) {\\n                    tableData = { id: item.ID, name: item.name, type: item.modelType, level };\\n                    if (!options.ownerModule.isImportedModule || item.isUnmodifiable) {\\n                        const maxVersion = getItemMaxVersion(item);\\n                        tableData = {\\n                            ...tableData,\\n                            checked: maxVersion ? true : item.isUnmodifiable,\\n                            disabled: maxVersion ? false : !item.isUnmodifiable,\\n                            version: item.isUnmodifiable ? 'latest' : maxVersion,\\n                        };\\n                    } else {\\n                        const importedModulesModel = options.ownerModule.relatedModelHistories?.find(e => e.modelID == item.ID)\\n                        tableData = { ...tableData, checked: true, disabled: false, version: importedModulesModel?.version };\\n                    }\\n                } else {\\n                    const maxVersion = getItemMaxVersion(item);\\n                    tableData = {\\n                        id: item.ID,\\n                        name: item.name,\\n                        checked: maxVersion ? true : item.isUnmodifiable,\\n                        disabled: maxVersion ? false : !item.isUnmodifiable,\\n                        type: item.modelType,\\n                        version: item.isUnmodifiable ? 'latest' : maxVersion,\\n                        level,\\n                    };\\n                }\\n                break;\\n            case \\\"module\\\":\\n                const isImportedModule = isModuleImported(item);\\n                const moduleVersion = item.relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion;\\n                const relatedModelHistories = isImportedModule ? importedModuleVersions.value?.get(item.ID)?.find(module => module.version == moduleVersion)?.relatedModelHistories : undefined\\n                \\n                tableData = {\\n                    id: item.ID,\\n                    collapsed: true,\\n                    name: item.name,\\n                    type: \\\"module\\\",\\n                    imported: isImportedModule,\\n                    version: moduleVersion,\\n                    children: treeItem.children?.map((item) => converter(item, {ownerModule: {isImportedModule, moduleVersion, relatedModelHistories}})),\\n                }\\n                tableData.children?.forEach(child => child.parent = tableData);\\n                handleParentCheckedStatus(tableData, false);\\n                break;\\n        }\\n        return tableData;\\n    };\\n    const tableDatas = treeItems.map(item => converter(item, {}));\\n\\n    const traverser = (tableData: ITableData) => {\\n        createAndAppendItem({ newItem: tableData });\\n        tableData.children?.forEach(traverser);\\n    };\\n    \\n    tableDatas.forEach(traverser);\\n}\\n\\nfunction getItemMaxVersion(item: IModel): string | undefined {\\n    if (!modelHistories.value?.has(item.ID))\\n        return undefined;\\n\\n    const versions = modelHistories.value.get(item.ID);\\n    if (!versions)\\n        return undefined;\\n\\n    const findMaxVersion = (versions: Array<string>) => {\\n        const versionNumbers = versions.map(v => {\\n            const parts: Array<string> = v.split(\\\".\\\");\\n            return parseInt(parts[0]) * 10 + parseInt(parts[1]) * 1;\\n        })\\n\\n        versionNumbers.sort((a, b) => b - a);\\n\\n        const maxVersion = versionNumbers[0];\\n        return `${Math.floor(maxVersion / 10)}.${maxVersion % 10}`;\\n    }\\n\\n    return findMaxVersion(versions.map(e => e.version!));\\n\\n}\\nfunction checkMaxVersionOfAllItems() {\\n    let isThereVersion: boolean = false;\\n    items.value.forEach(item => {\\n        if (item.type == \\\"module\\\") {\\n            item.children?.forEach(child => {\\n                if (child.version) {\\n                    isThereVersion = true;\\n                }\\n\\n            })\\n        }\\n        else {\\n            if (item.version) {\\n                isThereVersion = true;\\n            }\\n        }\\n    })\\n    return isThereVersion;\\n}\\nfunction handleModuleCountCheckboxEvent(value: boolean) {\\n    items.value.filter(e => !e.disabled).forEach((item) => {\\n        item.checked = value;\\n        const allItemsCheckable = item.allChildChecked != undefined && item.children && item.children.length > 0 && !item.children.some(c => c.disabled);\\n        if (allItemsCheckable) item.allChildChecked = value;\\n        if (item.anyChildChecked != undefined) item.anyChildChecked = value;\\n        if (item.children) item.children.filter(c => !c.disabled).forEach((child) => (child.checked = value));\\n    });\\n    \\n    validations.value = validate();\\n    props.screenType == \\\"Deploy\\\" && syncPublishTargets();\\n}\\n\\nfunction handleCollapse(item: ITableData, childIterate?: boolean, collapsed?: boolean) {\\n    item.collapsed = collapsed !== undefined ? collapsed : !item.collapsed;\\n    if (childIterate) {\\n        item.children?.forEach(child => {\\n            const childEl = document.getElementById(child.id);\\n            childEl!.style.display = item.collapsed ? \\\"none\\\" : \\\"block\\\";\\n            handleCollapse(child, childIterate, item.collapsed);\\n        })\\n    }\\n}\\n\\nfunction checkAllDependents(item: ITableData, recurseParent: boolean) {\\n    if (item.disabled || item.checked) return;\\n\\n    item.checked = true\\n    item.parent && handleParentCheckedStatus(item.parent, recurseParent);\\n\\n    const deps = dependencyMap.value?.get(item.id)?.dependedTo\\n    if (!deps) return;\\n\\n    deps.forEach(dep => {\\n        items.value.forEach(item => {\\n            if (item.type == 'module' && !item.allChildChecked) {\\n                const willCheckItem = item.children?.find(child => !child.checked && child.id == dep)\\n                willCheckItem && checkAllDependents(willCheckItem, recurseParent);\\n                handleParentCheckedStatus(item, recurseParent);\\n                return;\\n            }\\n\\n            if (!item.checked && item.id == dep) {\\n                checkAllDependents(item, recurseParent);\\n                item.parent && handleParentCheckedStatus(item.parent, recurseParent);\\n            }\\n        })\\n    });\\n}\\n\\nfunction handleItemCheckEvent(item: ITableData) {\\n    if (item.disabled || isModelDepended(item) || item.name == 'App Settings')\\n        return;\\n\\n    if (item.type != \\\"module\\\" && item.type != \\\"folder\\\") {\\n        if (item.checked) {\\n            item.checked = false;\\n            item.parent && handleParentCheckedStatus(item.parent, true);\\n        } else {\\n            checkAllDependents(item, true);\\n        }\\n    } else {\\n        if (item.children && item.children.filter(c => !c.disabled).length > 0) {\\n            if (item.anyChildChecked) {\\n                item.children.filter(c => !c.disabled).forEach(child => child.checked = false);\\n                item.checked = false;\\n                handleParentCheckedStatus(item, true);\\n            } else {\\n                item.children.forEach(child => checkAllDependents(child, true));\\n                item.checked = true;\\n            }\\n        }\\n        else {\\n            item.checked = !item.checked;\\n            item.allChildChecked = false;\\n        }\\n    }\\n    getItem(item);\\n    validations.value = validate();\\n    props.screenType == \\\"Deploy\\\" && syncPublishTargets();\\n}\\n\\nfunction handleParentCheckedStatus(item: ITableData, recurseParent: boolean) {\\n    item.disabled = item.children && (item.children.length == 0 || !item.children?.some(child => !child.disabled))\\n    item.allChildChecked = item.children && item.children.length > 0 && !item.children.some((child) => !child.checked || child.disabled);\\n    item.anyChildChecked = item.children?.some((child) => child.checked && !child.disabled);\\n    if (recurseParent && item.parent) {\\n        handleParentCheckedStatus(item.parent, true);\\n    }\\n}\\n\\nfunction syncPublishTargets() {\\n    publishTargets.value = []; disabledOptions.value = [];\\n\\n    const targets = viewModel.user?.selectedOrganization?.actions?.publish?.targets;\\n    if (!targets)\\n        return;\\n\\n    const isSelectAnyItem = items.value.find(e => e.anyChildChecked || e.checked);\\n    if (!isSelectAnyItem) {\\n        publishTargets.value = Object.entries(targets).map(e => cloudTargetMap(e[0])!);\\n        const disabledOptionList = Array<IDisabledOptions>();\\n        for (let i = 0; i < publishTargets.value.length; i++) {\\n            disabledOptionList.push({ index: i, cause: \\\"You need to include items to publish.\\\" })\\n        }\\n        disabledOptions.value = disabledOptionList;\\n        return;\\n    }\\n\\n    const checkedPublishTargets = checkAndSetDisabledCauses(targets);\\n    const sortedTargets = checkedPublishTargets.sort((e, f) => (!e.cause === !f.cause) ? 0 : e.cause ? 1 : -1);\\n\\n    const disabledOptionList = Array<IDisabledOptions>();\\n    for (let i = 0; i < sortedTargets.length; i++) {\\n        const cause = sortedTargets[i].cause;\\n        if (cause) disabledOptionList.push({ index: i, cause })\\n    }\\n    disabledOptions.value = disabledOptionList;\\n    publishTargets.value = sortedTargets.map(e => e.optionName);\\n\\n    selectedTarget.value = !sortedTargets[0].cause ? sortedTargets[0].optionName : \\\"\\\";\\n}\\n\\nfunction checkAndSetDisabledCauses(targets: Record<keyof IOrganizationCloud, boolean>) {\\n    const list = Array<{ optionName: string, cause?: string }>();\\n\\n    Object.keys(targets).forEach(e => {\\n        const key = e as keyof IOrganizationCloud;\\n        const value = targets[key];\\n        const optionName = cloudTargetMap(key)!;\\n        if (!value)\\n            return list.push({ optionName, cause: \\\"You are not authorized to publish to this target.\\\" });\\n\\n\\n        switch (key) {\\n            case \\\"azure\\\":\\n                const traverseSelectedItems = (status: boolean, items?: Array<ITableData>) => {\\n                    if (!items || items.length == 0) { return status; }\\n                    for (const item of items) {\\n                        if (item.checked || item.anyChildChecked) {\\n                            if (item.type == \\\"module\\\") {\\n                                status = traverseSelectedItems(status, item.children);\\n                            }\\n                            if (item.type == \\\"entityDesigner\\\" || item.type == \\\"bpmn\\\" || item.type == \\\"process\\\") {\\n                                status = false;\\n                                break;\\n                            }\\n                        }\\n\\n                    }\\n                    return status;\\n                }\\n\\n                const status = traverseSelectedItems(true, items.value);\\n                if (!status)\\n                    return list.push({ optionName, cause: \\\"Entity and process models cannot be published to this target.\\\" });\\n                break;\\n            case \\\"plateauGCP\\\":\\n                const modulesHasNotAnEDModel = items.value.filter(e => e.name != \\\"UI Settings\\\").find(e => e.type == \\\"module\\\" && e.anyChildChecked && e.children?.some(c => c.checked && (c.type == \\\"bpmn\\\" || c.type == \\\"process\\\")) && !e.children?.some(c => c.type == \\\"entityDesigner\\\" && c.checked))\\n                if (modulesHasNotAnEDModel)\\n                    return list.push({ optionName, cause: `This target not available. Selected module '${modulesHasNotAnEDModel.name}' has not any Data Model.` })\\n                break;\\n        }\\n\\n        list.push({ optionName });\\n    })\\n\\n    return list;\\n}\\n\\nfunction updateDependencyMap(newVersion: string, item: ITableData) {\\n    const deps = dependencyMap.value?.get(item.id);\\n    dependencyMap.value?.set(item.id, {\\n        dependedBy: deps?.dependedBy || Array<string>(),\\n        dependedTo: modelHistories.value?.get(item.id)?.find(e => e.version == newVersion)?.dependentModels?.map(e => e.modelId) || Array<string>()\\n    })\\n}\\n\\nfunction versionDialog(item: ITableData) {\\n    const clickedNode = { id: item.id, state: { checked: item.checked }, text: item.name, type: item.type, version: item.version };\\n    const hasAnyVersion = modelHistories.value?.has(item.id);\\n    const options = {\\n        clickedNode, cb: (version: string) => {\\n            item.version = version;\\n            updateDependencyMap(version, item);\\n        }\\n    } as any;\\n\\n    if (hasAnyVersion) {\\n        options.versions = modelHistories.value?.get(item.id)\\n    }\\n    dialog.showDialog(\\n        defineAsyncComponent(() => import(\\\"../application/modelVersionDialog.vue\\\")),\\n        { closable: true, title: \\\"Change Version\\\", width: \\\"1080px\\\", maxHeight: \\\"500px\\\", overflow: \\\"auto\\\" }, options\\n    );\\n}\\n\\n\\nfunction moduleVersionDialog(item: ITableData) {\\n    dialog.showDialog(\\n        defineAsyncComponent(() => import(\\\"../application/moduleVersionDialog.vue\\\")),\\n        { closable: true, title: \\\"Change Version\\\", width: \\\"1080px\\\", maxHeight: \\\"500px\\\", overflow: \\\"auto\\\" },\\n        {\\n            module: { ID: item.id }, versions: importedModuleVersions.value?.get(item.id), cb: (moduleVersion: IModuleVersion) => {\\n                item.version = moduleVersion.version;\\n                item.children?.forEach(child => {\\n                    const modulesModel = moduleVersion.relatedModelHistories.find(e => e.modelID == child.id)\\n                    child.version = modulesModel?.version\\n                    updateDependencyMap(modulesModel?.version!, child);\\n                })\\n            }\\n        }\\n    );\\n}\\n\\nfunction close() {\\n    emit(\\\"close\\\");\\n}\\nfunction getItem(item: ITableData) {\\n    emit(\\\"getItem\\\", item);\\n}\\n\\nfunction cloudTargetMap(name: string, pureVal: boolean = false) {\\n    const map: Record<keyof IOrganizationCloud, string> = { azure: \\\"Public Cloud\\\", plateauGCP: \\\"Plateau Platform Playground\\\" };\\n    if (pureVal) {\\n        return Object.keys(map).find(e => {\\n            if (map[e as keyof IOrganizationCloud] === name) {\\n                return true;\\n            }\\n        })\\n    } else {\\n        let key = Object.keys(map).includes(name);\\n        if (!key)\\n            return;\\n        return map[name as keyof IOrganizationCloud];\\n    }\\n}\\n\\nfunction onTargetSelect(value: string) {\\n    selectedTarget.value = value\\n}\\n\\nconst isModuleImported = (item: IModule) => {\\n    return objectUseCase.isModuleImported(item);\\n}\\n\\n</script>\\n\\n\\n<style scoped>\\n.container {\\n    padding: 32px 20px 20px;\\n}\\n\\n.settings-container {\\n    position: relative;\\n    top: 0px;\\n    left: 0px;\\n}\\n\\n.custom-text {\\n    /* position: absolute; */\\n    font-family: 'Roboto';\\n    font-style: normal;\\n    font-weight: 500;\\n    font-size: 15px;\\n    line-height: 18px;\\n    /* left: 24px; */\\n    color: #212121;\\n}\\n\\n/* .custom-text.title{\\n    top: 92px;\\n}\\n\\n.custom-text.environment{\\n    top: 174px;\\n} */\\n\\n.radio-button {\\n    position: absolute;\\n    top: 60px;\\n    left: 20px;\\n    cursor: pointer;\\n}\\n\\n.radio-text {\\n    position: absolute;\\n    top: 59px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n    user-select: none;\\n    cursor: pointer;\\n}\\n\\n.existing-app-url {\\n    position: absolute;\\n    width: 760px;\\n    height: 40px;\\n    top: 114px;\\n    left: 20px;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #bcbcbc;\\n    border-radius: 4px;\\n    font: normal normal normal 14px/19px Roboto;\\n    letter-spacing: 0px;\\n    padding: 10px 0px 10px 10px;\\n}\\n\\n.url-error {\\n    border: 1px solid red;\\n}\\n\\n.url-disable {\\n    opacity: 0.5;\\n}\\n\\n.existing-app-url::placeholder {\\n    color: #bcbcbc;\\n    user-select: none;\\n}\\n\\n.modules-selected-checkbox {\\n    cursor: pointer;\\n}\\n\\n.modules-selected-text {\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #757575;\\n    margin: 0 0 13px 30px;\\n    ;\\n}\\n\\n/* .modules-selected-text.deploy {\\n    top: 257px;\\n} */\\n\\n.text-number {\\n    font: normal normal bold 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.modules-datatable {\\n    width: 760px;\\n    height: 288px;\\n    /* border: 1px solid #bcbcbc;\\n    overflow-x: hidden;\\n    overflow-y: auto; */\\n    margin-bottom: 20px;\\n}\\n\\n/* .modules-datatable.deploy {\\n    top: 286px;\\n} */\\n\\n.modules-datatable::-webkit-scrollbar {\\n    width: 4px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar-thumb {\\n    background: #bcbcbc 0% 0% no-repeat padding-box;\\n    border-radius: 10px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar-thumb:hover {\\n    background: #555;\\n}\\n\\n.row-container {\\n    width: 100%;\\n    height: 36px;\\n    position: relative;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #e0e0e0;\\n}\\n\\n.chevron {\\n    position: absolute;\\n    left: 4px;\\n    color: #757575;\\n    font-size: 24px;\\n}\\n\\n.chevron.disabled {\\n    pointer-events: none;\\n    color: #D5D5D5;\\n}\\n\\n.module-checkbox {\\n    position: absolute;\\n    top: 10px;\\n    left: 43px;\\n    cursor: pointer;\\n}\\n\\n.module-name {\\n    position: absolute;\\n    top: 9px;\\n    left: 69px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.module-name.imported {\\n    top: 10px;\\n    left: 87px;\\n}\\n\\n.module-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.model-checkbox {\\n    position: absolute;\\n    top: 10px;\\n    left: 59px;\\n    cursor: pointer;\\n}\\n\\n.model-icon {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 85px;\\n}\\n\\n.app-tier-model-icon {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 69px\\n}\\n\\n.app-tier-model-name {\\n    position: absolute;\\n    top: 10px;\\n    left: 87px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.app-tier-model-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.model-name {\\n    position: absolute;\\n    top: 9px;\\n    left: 103px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.model-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.version-text {\\n    margin: 10px 7px 10px auto;\\n    display: table;\\n    font: normal normal normal 12px/16px Roboto;\\n    color: #757575;\\n    cursor: pointer;\\n    user-select: none;\\n}\\n\\n.version-text.disabled {\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n\\n.version-icon {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #D5D5D5;\\n}\\n\\n.version-icon.disabled {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #EEEEEE;\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n\\n.footer {\\n    position: relative;\\n    width: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: end;\\n}\\n\\n.footer.deploy {\\n    position: relative;\\n    width: 100%;\\n}\\n\\n.footer.export {\\n    margin-top: 102px;\\n}\\n\\n.cancel-button {\\n    border-radius: 4px;\\n    user-select: none;\\n    font-style: normal;\\n    font-weight: 500;\\n    font-family: \\\"ROBOTO\\\";\\n    font-size: 15px;\\n    color: #757575;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n\\n\\n\\n.save-button {\\n    background: #151233 0% 0% no-repeat padding-box;\\n    border-radius: 4px;\\n    user-select: none;\\n    font-weight: 500;\\n    font-size: 15px;\\n    color: #ffffff;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n\\n.mobile-publish-text,\\n.web-publish-text {\\n    padding: 5px 12px;\\n    margin-bottom: 52px;\\n    width: 100%;\\n    color: #757575;\\n    font-size: 14px;\\n    background: #F5F5FA;\\n    border-radius: 4px;\\n    display: flex;\\n    align-items: center;\\n}\\n\\n.mobile-publish-text i,\\n.web-publish-text i {\\n    font-size: 24px;\\n    color: #151233;\\n    margin-right: 4px;\\n}\\n\\n.save-button.deploy {\\n    padding: 10px 16px;\\n}\\n\\n.button-disable .save-button {\\n    color: #757575;\\n    cursor: default;\\n}\\n\\n.button-disable .save-button:hover+.button-tooltip,\\n.start-screen:hover .button-tooltip,\\n.row-container:hover .button-tooltip,\\n.publish-info:hover .button-tooltip {\\n    visibility: visible;\\n    transition: opacity 0.3s ease-out 1s;\\n    opacity: 1;\\n}\\n\\n.button-tooltip {\\n    visibility: hidden;\\n    position: absolute;\\n    background: #757575;\\n    color: #FFFFFF;\\n    font-size: 11px;\\n    font-family: 'Roboto';\\n    text-align: center;\\n    border-radius: 4px;\\n    letter-spacing: 0.2px;\\n    padding: 6px 8px 6px 8px;\\n    top: 56px;\\n    left: 63px;\\n    opacity: 0;\\n}\\n\\n.publish-info {\\n    color: #757575;\\n    font-size: 20px;\\n    margin-left: 10px;\\n}\\n\\n.select-environment {\\n    width: 100%;\\n    font-size: 15px;\\n    height: 40px;\\n    line-height: 40px;\\n    margin-top: 4px\\n}\\n</style>\\n\\n<style>\\n.selected-environment {\\n    background-color: transparent;\\n    border-radius: 4px;\\n    border: 1px solid #BCBCBC;\\n    color: #212121;\\n    padding-left: 12px;\\n}\\n\\n.custom-placeholder:empty:before {\\n    color: #BCBCBC !important;\\n    font-weight: 400;\\n}\\n\\n.custom-select .items .option {\\n    font-size: 14px;\\n    padding-left: 12px;\\n    line-height: 32px;\\n}\\n\\n.custom-select .items .option:hover {\\n    background-color: #EEEEEE;\\n    color: #212121;\\n}\\n\\n.custom-select .items .option.disabled:hover {\\n    background-color: #FFFFFF;\\n    color: #212121;\\n}\\n\\n.custom-select.select-environment .items {\\n    margin-top: 4px;\\n    color: #212121;\\n    border-radius: 4px;\\n    border: 1px solid #E3E3E3;\\n    overflow: hidden;\\n    background-color: #FFFFFF;\\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\\n    position: static !important;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n*[data-v-0a397840] {\\n        font-family: \\\"Roboto\\\";\\n}\\n.container[data-v-0a397840] {\\n        padding: 20px;\\n}\\n.app-version-type label[data-v-0a397840] {\\n        font-weight: 500;\\n        font-size: 16px;\\n        line-height: 24px;\\n        color: #151233;\\n        margin-bottom: 4px;\\n}\\n.select-app-version-type[data-v-0a397840] {\\n        width: 100%;\\n        font-size: 15px;\\n        height: 40px;\\n        line-height: 40px;\\n        border: 1px solid #BCBCBC;\\n        border-radius: 4px;\\n        padding: 0px 12px;\\n}\\n.buttons-div[data-v-0a397840] {\\n        display: flex;\\n        justify-content: end;\\n        margin-top: 60px;\\n}\\n.cancel-button[data-v-0a397840] {\\n        font-weight: 500;\\n        font-size: 16px;\\n        text-align: center;\\n        color: #757575;\\n        display: flex;\\n        align-items: center;\\n        padding: 8px 16px;\\n        border-radius: 4px;\\n        margin-right: 4px;\\n        border: none;\\n        background: transparent;\\n}\\n.create-button[data-v-0a397840] {\\n        font-weight: 500;\\n        font-size: 16px;\\n        text-align: center;\\n        color: #FFFFFF;\\n        background: #151233;\\n        display: flex;\\n        align-items: center;\\n        padding: 8px 16px;\\n        border-radius: 4px;\\n        border: none;\\n}\\n.create-button[data-v-0a397840]:disabled {\\n        color: #757575;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/presentation/vue3/components/application/createAppVersion.vue\"],\"names\":[],\"mappings\":\";AAoGI;QACI,qBAAqB;AACzB;AACA;QACI,aAAa;AACjB;AACA;QACI,gBAAgB;QAChB,eAAe;QACf,iBAAiB;QACjB,cAAc;QACd,kBAAkB;AACtB;AACA;QACI,WAAW;QACX,eAAe;QACf,YAAY;QACZ,iBAAiB;QACjB,yBAAyB;QACzB,kBAAkB;QAClB,iBAAiB;AACrB;AACA;QACI,aAAa;QACb,oBAAoB;QACpB,gBAAgB;AACpB;AACA;QACI,gBAAgB;QAChB,eAAe;QACf,kBAAkB;QAClB,cAAc;QACd,aAAa;QACb,mBAAmB;QACnB,iBAAiB;QACjB,kBAAkB;QAClB,iBAAiB;QACjB,YAAY;QACZ,uBAAuB;AAC3B;AACA;QACI,gBAAgB;QAChB,eAAe;QACf,kBAAkB;QAClB,cAAc;QACd,mBAAmB;QACnB,aAAa;QACb,mBAAmB;QACnB,iBAAiB;QACjB,kBAAkB;QAClB,YAAY;AAChB;AACA;QACI,cAAc;AAClB\",\"sourcesContent\":[\"<script setup lang=\\\"ts\\\">\\n    import { computed, ref } from \\\"vue\\\";\\n    import { IApplication } from \\\"../../../../domain/model/models\\\";\\n    import { IIDEInputDefinitions } from \\\"../../../../domain/presentation/IIDEInputDefinitions\\\";\\n    import IDEInput from \\\"../../components/application/IDEInput.vue\\\";\\n    import CustomSelect from \\\"../customSelect.vue\\\"\\n    import AppItemsTable from \\\"./appItemsTable.vue\\\"\\n    import { ITableData } from \\\"../../../../../../common/qCloudTemp/exporter\\\";\\n    import { container } from \\\"../../../../domain/core/diContainer\\\";\\n    import { IUseCaseExecutor } from \\\"../../../../domain/useCase/IUseCaseExecutor\\\";\\n    import { IApplicationVersionUseCase, VersionIncType } from \\\"../../../../domain/useCase/IApplicationVersionUseCase\\\";\\n    import { IReleaseApplicationRequest } from \\\"../../../../../../common/qCloudTemp/symDtoObjects\\\";\\n\\n    interface IDisabledOptions {\\n        index: number\\n        cause: string;\\n    }\\n    interface IAppVersionModel {\\n        modelID: string;\\n        version: string;\\n    }\\n    interface ICreateAppVersionProp {\\n        app?: IApplication\\n    }\\n    const props = defineProps<ICreateAppVersionProp>();\\n    const executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\\n    const applicationVersionUseCase = container.resolve<IApplicationVersionUseCase>(IApplicationVersionUseCase);\\n\\n    const releaseTypeOptions = ref([`Major Version (v${getLastRelasedVersion(\\\"Major\\\")})`, `Minor Version (v${getLastRelasedVersion(\\\"Minor\\\")})`, `Fix Version (v${getLastRelasedVersion(\\\"Fix\\\")})`]);\\n    const releaseType = ref<VersionIncType>();\\n    const disabledOptions = ref<Array<IDisabledOptions>>([]);\\n    const isDescriptionValid = ref<boolean>(true);\\n    const description = ref(\\\"\\\");\\n    const appModels = ref<Array<IAppVersionModel>>([]);\\n    const emit = defineEmits([\\\"close\\\"]);\\n    const buttonDisableCond = computed(() => !releaseType.value)\\n\\n    const validations = ref<Record<\\\"description\\\", IIDEInputDefinitions[\\\"validations\\\"]>>({\\n        description: { minAndMaxLength: { min: 3, max: 100 }, availableCharacters: false, nonSpaceCharacter: false },\\n    });\\n    function close() {\\n        emit('close');\\n    }\\n    function setReleaseType(type: VersionIncType) {\\n        releaseType.value = (type.split(\\\" \\\")[0] as VersionIncType);\\n    }\\n    function descriptionValidationStatus(isValid: boolean) {\\n        isDescriptionValid.value = isValid\\n\\n    }\\n    function setDescValue(desc: string) {\\n        description.value = desc\\n    }\\n    function getItems(item: ITableData) {\\n        const model: IAppVersionModel = {\\n            modelID: item.id,\\n            version: item.version ?? \\\"latest\\\"\\n        }\\n        item.checked ? appModels.value?.push(model) : appModels.value = appModels.value?.filter(model => model.modelID != item.id);\\n    }\\n    function createNewAppVersion() {\\n        let request: IReleaseApplicationRequest = {    \\n            appID: props.app!.ID,\\n            appVersionIncType: releaseType.value!,\\n            models: appModels.value,\\n            description: description.value,\\n        }\\n        executor.execute(async () => {\\n            await applicationVersionUseCase.releaseApplication(request);\\n            close();\\n        }, {loading: true})\\n    }\\n    function getLastRelasedVersion(incType: string) {\\n        const [major, minor, fix] = props.app?.lastReleasedVersion ? props.app?.lastReleasedVersion.split(\\\".\\\").map(Number) : [0,0,0]\\n        switch (incType) {\\n            case 'Major':\\n                return `${major + 1}.0.0`;\\n            case 'Minor':\\n                return `${major}.${minor + 1}.0`;\\n            case 'Fix':\\n                return `${major}.${minor}.${fix + 1}`;\\n            default: return;\\n        }\\n    }\\n</script>\\n<template>\\n    <div class=\\\"container\\\">\\n        <div class=\\\"app-version-type\\\">\\n            <label>Type</label>\\n            <CustomSelect class=\\\"select-app-version-type\\\" :options=\\\"releaseTypeOptions\\\" :placeholder=\\\"'Select Release Type'\\\"  :selectedClass=\\\"'selected-type'\\\" @input=\\\"setReleaseType\\\" :disabledOptions=\\\"disabledOptions\\\"></CustomSelect>\\n        </div>\\n        <div style=\\\"margin: 24px 0 \\\">\\n            <IDEInput :isRequired=\\\"false\\\" elementId=\\\"descriptionInput\\\" @validateStatus=\\\"descriptionValidationStatus\\\" placeholder=\\\"\\\" \\n                :type=\\\"'textarea'\\\" :value=\\\"description\\\"   info-text=\\\"Description\\\" :validations=\\\"validations.description\\\" @getValue=\\\"setDescValue\\\" />\\n        </div>\\n        <AppItemsTable :screenType = \\\"'Create'\\\" :buttonCb=\\\"createNewAppVersion\\\" @getItem=\\\"getItems\\\" :platformSelection=\\\"{web: true, mobile: true}\\\" @close=\\\"close\\\" :buttonDisableCond=\\\"buttonDisableCond\\\"></AppItemsTable>\\n    </div>\\n</template>\\n\\n<style scoped>\\n    * {\\n        font-family: \\\"Roboto\\\";\\n    }\\n    .container {\\n        padding: 20px;\\n    }\\n    .app-version-type label {\\n        font-weight: 500;\\n        font-size: 16px;\\n        line-height: 24px;\\n        color: #151233;\\n        margin-bottom: 4px;\\n    }\\n    .select-app-version-type {\\n        width: 100%;\\n        font-size: 15px;\\n        height: 40px;\\n        line-height: 40px;\\n        border: 1px solid #BCBCBC;\\n        border-radius: 4px;\\n        padding: 0px 12px;\\n    }\\n    .buttons-div {\\n        display: flex;\\n        justify-content: end;\\n        margin-top: 60px;\\n    }\\n    .cancel-button {\\n        font-weight: 500;\\n        font-size: 16px;\\n        text-align: center;\\n        color: #757575;\\n        display: flex;\\n        align-items: center;\\n        padding: 8px 16px;\\n        border-radius: 4px;\\n        margin-right: 4px;\\n        border: none;\\n        background: transparent;\\n    }\\n    .create-button {\\n        font-weight: 500;\\n        font-size: 16px;\\n        text-align: center;\\n        color: #FFFFFF;\\n        background: #151233;\\n        display: flex;\\n        align-items: center;\\n        padding: 8px 16px;\\n        border-radius: 4px;\\n        border: none;\\n    }\\n    .create-button:disabled {\\n        color: #757575;\\n    }\\n</style>\\n<style>\\n    .selected-type {\\n        background-color: transparent;\\n        color: #212121;\\n        height: 40px;\\n    }\\n    .custom-select .items {\\n        color: #212121;\\n        border-radius: 8px;\\n        border: 1px solid #E3E3E3;\\n        overflow: hidden;\\n        background-color: #FFFFFF;\\n        box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\\n        /* margin-top: 40px; */\\n    }\\n    .custom-select .items .option {\\n        font-size: 14px;\\n        padding-left: 12px;\\n    }\\n    .custom-select .items .option:hover {\\n        background-color: #EEEEEE;\\n        color: #212121;\\n    }\\n    .select-release-type i {\\n        font-size: 16px;\\n        color: #BCBCBC;\\n    }\\n    .custom-placeholder:empty:before {\\n        color: #BCBCBC !important;\\n        font-weight: 400;\\n    }\\n    .custom-select.select-release-type .items {\\n        position: static !important;\\n    }\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.selected-type {\\n        background-color: transparent;\\n        color: #212121;\\n        height: 40px;\\n}\\n.custom-select .items {\\n        color: #212121;\\n        border-radius: 8px;\\n        border: 1px solid #E3E3E3;\\n        overflow: hidden;\\n        background-color: #FFFFFF;\\n        box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\\n        /* margin-top: 40px; */\\n}\\n.custom-select .items .option {\\n        font-size: 14px;\\n        padding-left: 12px;\\n}\\n.custom-select .items .option:hover {\\n        background-color: #EEEEEE;\\n        color: #212121;\\n}\\n.select-release-type i {\\n        font-size: 16px;\\n        color: #BCBCBC;\\n}\\n.custom-placeholder:empty:before {\\n        color: #BCBCBC !important;\\n        font-weight: 400;\\n}\\n.custom-select.select-release-type .items {\\n        position: static !important;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/presentation/vue3/components/application/createAppVersion.vue\"],\"names\":[],\"mappings\":\";AA6JI;QACI,6BAA6B;QAC7B,cAAc;QACd,YAAY;AAChB;AACA;QACI,cAAc;QACd,kBAAkB;QAClB,yBAAyB;QACzB,gBAAgB;QAChB,yBAAyB;QACzB,0CAA0C;QAC1C,sBAAsB;AAC1B;AACA;QACI,eAAe;QACf,kBAAkB;AACtB;AACA;QACI,yBAAyB;QACzB,cAAc;AAClB;AACA;QACI,eAAe;QACf,cAAc;AAClB;AACA;QACI,yBAAyB;QACzB,gBAAgB;AACpB;AACA;QACI,2BAA2B;AAC/B\",\"sourcesContent\":[\"<script setup lang=\\\"ts\\\">\\n    import { computed, ref } from \\\"vue\\\";\\n    import { IApplication } from \\\"../../../../domain/model/models\\\";\\n    import { IIDEInputDefinitions } from \\\"../../../../domain/presentation/IIDEInputDefinitions\\\";\\n    import IDEInput from \\\"../../components/application/IDEInput.vue\\\";\\n    import CustomSelect from \\\"../customSelect.vue\\\"\\n    import AppItemsTable from \\\"./appItemsTable.vue\\\"\\n    import { ITableData } from \\\"../../../../../../common/qCloudTemp/exporter\\\";\\n    import { container } from \\\"../../../../domain/core/diContainer\\\";\\n    import { IUseCaseExecutor } from \\\"../../../../domain/useCase/IUseCaseExecutor\\\";\\n    import { IApplicationVersionUseCase, VersionIncType } from \\\"../../../../domain/useCase/IApplicationVersionUseCase\\\";\\n    import { IReleaseApplicationRequest } from \\\"../../../../../../common/qCloudTemp/symDtoObjects\\\";\\n\\n    interface IDisabledOptions {\\n        index: number\\n        cause: string;\\n    }\\n    interface IAppVersionModel {\\n        modelID: string;\\n        version: string;\\n    }\\n    interface ICreateAppVersionProp {\\n        app?: IApplication\\n    }\\n    const props = defineProps<ICreateAppVersionProp>();\\n    const executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\\n    const applicationVersionUseCase = container.resolve<IApplicationVersionUseCase>(IApplicationVersionUseCase);\\n\\n    const releaseTypeOptions = ref([`Major Version (v${getLastRelasedVersion(\\\"Major\\\")})`, `Minor Version (v${getLastRelasedVersion(\\\"Minor\\\")})`, `Fix Version (v${getLastRelasedVersion(\\\"Fix\\\")})`]);\\n    const releaseType = ref<VersionIncType>();\\n    const disabledOptions = ref<Array<IDisabledOptions>>([]);\\n    const isDescriptionValid = ref<boolean>(true);\\n    const description = ref(\\\"\\\");\\n    const appModels = ref<Array<IAppVersionModel>>([]);\\n    const emit = defineEmits([\\\"close\\\"]);\\n    const buttonDisableCond = computed(() => !releaseType.value)\\n\\n    const validations = ref<Record<\\\"description\\\", IIDEInputDefinitions[\\\"validations\\\"]>>({\\n        description: { minAndMaxLength: { min: 3, max: 100 }, availableCharacters: false, nonSpaceCharacter: false },\\n    });\\n    function close() {\\n        emit('close');\\n    }\\n    function setReleaseType(type: VersionIncType) {\\n        releaseType.value = (type.split(\\\" \\\")[0] as VersionIncType);\\n    }\\n    function descriptionValidationStatus(isValid: boolean) {\\n        isDescriptionValid.value = isValid\\n\\n    }\\n    function setDescValue(desc: string) {\\n        description.value = desc\\n    }\\n    function getItems(item: ITableData) {\\n        const model: IAppVersionModel = {\\n            modelID: item.id,\\n            version: item.version ?? \\\"latest\\\"\\n        }\\n        item.checked ? appModels.value?.push(model) : appModels.value = appModels.value?.filter(model => model.modelID != item.id);\\n    }\\n    function createNewAppVersion() {\\n        let request: IReleaseApplicationRequest = {    \\n            appID: props.app!.ID,\\n            appVersionIncType: releaseType.value!,\\n            models: appModels.value,\\n            description: description.value,\\n        }\\n        executor.execute(async () => {\\n            await applicationVersionUseCase.releaseApplication(request);\\n            close();\\n        }, {loading: true})\\n    }\\n    function getLastRelasedVersion(incType: string) {\\n        const [major, minor, fix] = props.app?.lastReleasedVersion ? props.app?.lastReleasedVersion.split(\\\".\\\").map(Number) : [0,0,0]\\n        switch (incType) {\\n            case 'Major':\\n                return `${major + 1}.0.0`;\\n            case 'Minor':\\n                return `${major}.${minor + 1}.0`;\\n            case 'Fix':\\n                return `${major}.${minor}.${fix + 1}`;\\n            default: return;\\n        }\\n    }\\n</script>\\n<template>\\n    <div class=\\\"container\\\">\\n        <div class=\\\"app-version-type\\\">\\n            <label>Type</label>\\n            <CustomSelect class=\\\"select-app-version-type\\\" :options=\\\"releaseTypeOptions\\\" :placeholder=\\\"'Select Release Type'\\\"  :selectedClass=\\\"'selected-type'\\\" @input=\\\"setReleaseType\\\" :disabledOptions=\\\"disabledOptions\\\"></CustomSelect>\\n        </div>\\n        <div style=\\\"margin: 24px 0 \\\">\\n            <IDEInput :isRequired=\\\"false\\\" elementId=\\\"descriptionInput\\\" @validateStatus=\\\"descriptionValidationStatus\\\" placeholder=\\\"\\\" \\n                :type=\\\"'textarea'\\\" :value=\\\"description\\\"   info-text=\\\"Description\\\" :validations=\\\"validations.description\\\" @getValue=\\\"setDescValue\\\" />\\n        </div>\\n        <AppItemsTable :screenType = \\\"'Create'\\\" :buttonCb=\\\"createNewAppVersion\\\" @getItem=\\\"getItems\\\" :platformSelection=\\\"{web: true, mobile: true}\\\" @close=\\\"close\\\" :buttonDisableCond=\\\"buttonDisableCond\\\"></AppItemsTable>\\n    </div>\\n</template>\\n\\n<style scoped>\\n    * {\\n        font-family: \\\"Roboto\\\";\\n    }\\n    .container {\\n        padding: 20px;\\n    }\\n    .app-version-type label {\\n        font-weight: 500;\\n        font-size: 16px;\\n        line-height: 24px;\\n        color: #151233;\\n        margin-bottom: 4px;\\n    }\\n    .select-app-version-type {\\n        width: 100%;\\n        font-size: 15px;\\n        height: 40px;\\n        line-height: 40px;\\n        border: 1px solid #BCBCBC;\\n        border-radius: 4px;\\n        padding: 0px 12px;\\n    }\\n    .buttons-div {\\n        display: flex;\\n        justify-content: end;\\n        margin-top: 60px;\\n    }\\n    .cancel-button {\\n        font-weight: 500;\\n        font-size: 16px;\\n        text-align: center;\\n        color: #757575;\\n        display: flex;\\n        align-items: center;\\n        padding: 8px 16px;\\n        border-radius: 4px;\\n        margin-right: 4px;\\n        border: none;\\n        background: transparent;\\n    }\\n    .create-button {\\n        font-weight: 500;\\n        font-size: 16px;\\n        text-align: center;\\n        color: #FFFFFF;\\n        background: #151233;\\n        display: flex;\\n        align-items: center;\\n        padding: 8px 16px;\\n        border-radius: 4px;\\n        border: none;\\n    }\\n    .create-button:disabled {\\n        color: #757575;\\n    }\\n</style>\\n<style>\\n    .selected-type {\\n        background-color: transparent;\\n        color: #212121;\\n        height: 40px;\\n    }\\n    .custom-select .items {\\n        color: #212121;\\n        border-radius: 8px;\\n        border: 1px solid #E3E3E3;\\n        overflow: hidden;\\n        background-color: #FFFFFF;\\n        box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\\n        /* margin-top: 40px; */\\n    }\\n    .custom-select .items .option {\\n        font-size: 14px;\\n        padding-left: 12px;\\n    }\\n    .custom-select .items .option:hover {\\n        background-color: #EEEEEE;\\n        color: #212121;\\n    }\\n    .select-release-type i {\\n        font-size: 16px;\\n        color: #BCBCBC;\\n    }\\n    .custom-placeholder:empty:before {\\n        color: #BCBCBC !important;\\n        font-weight: 400;\\n    }\\n    .custom-select.select-release-type .items {\\n        position: static !important;\\n    }\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, normalizeClass as _normalizeClass, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, vShow as _vShow, withDirectives as _withDirectives, createStaticVNode as _createStaticVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-437385e0\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"text-number\" }\nconst _hoisted_2 = { class: \"text-number\" }\nconst _hoisted_3 = { key: 0 }\nconst _hoisted_4 = { class: \"row-container\" }\nconst _hoisted_5 = [\"onClick\"]\nconst _hoisted_6 = {\n  key: 1,\n  class: \"app-tier-model-icon mdi mdi-puzzle\"\n}\nconst _hoisted_7 = [\"onClick\"]\nconst _hoisted_8 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: /*#__PURE__*/_normalizeClass(['mdi mdi-pencil-outline version-icon'])\n}, null, -1 /* HOISTED */))\nconst _hoisted_9 = [\"onClick\"]\nconst _hoisted_10 = {\n  key: 2,\n  class: \"button-tooltip\",\n  style: {\"z-index\":\"1\",\"width\":\"300px\"}\n}\nconst _hoisted_11 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"b\", null, \"Stop Working\", -1 /* HOISTED */))\nconst _hoisted_12 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"b\", null, \"Ready to Publish\", -1 /* HOISTED */))\nconst _hoisted_13 = { key: 1 }\nconst _hoisted_14 = { class: \"row-container\" }\nconst _hoisted_15 = { class: \"app-tier-model-name\" }\nconst _hoisted_16 = {\n  key: 0,\n  class: \"start-screen\"\n}\nconst _hoisted_17 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"mdi mdi-home-outline\" }, null, -1 /* HOISTED */))\nconst _hoisted_18 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"button-tooltip\",\n  style: {\"top\":\"-30px\",\"left\":\"2px\",\"z-index\":\"1\",\"width\":\"80px\"}\n}, \"Start Screen\", -1 /* HOISTED */))\nconst _hoisted_19 = [\n  _hoisted_17,\n  _hoisted_18\n]\nconst _hoisted_20 = [\"onClick\"]\nconst _hoisted_21 = {\n  key: 1,\n  class: \"button-tooltip\",\n  style: {\"z-index\":\"1\",\"width\":\"300px\"}\n}\nconst _hoisted_22 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"b\", null, \"Stop Working\", -1 /* HOISTED */))\nconst _hoisted_23 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"b\", null, \"Ready to Publish\", -1 /* HOISTED */))\nconst _hoisted_24 = {\n  key: 0,\n  style: {\"margin-bottom\":\"102px\"}\n}\nconst _hoisted_25 = /*#__PURE__*/_createStaticVNode(\"<div style=\\\"display:flex;align-items:center;\\\" data-v-437385e0><span class=\\\"custom-text environment\\\" data-v-437385e0> Publish To </span><span class=\\\"publish-info\\\" data-v-437385e0><i class=\\\"mdi mdi-information\\\" data-v-437385e0></i><span class=\\\"button-tooltip\\\" style=\\\"top:460px;left:96px;z-index:1;width:231px;\\\" data-v-437385e0>Publish To options may change depending on the module type you choose.</span></span></div>\", 1)\nconst _hoisted_26 = { class: \"save-button deploy\" }\nconst _hoisted_27 = {\n  key: 0,\n  class: \"button-tooltip\",\n  style: {\"top\":\"-46px\",\"left\":\"652px\",\"z-index\":\"1\",\"width\":\"120px\"}\n}\nconst _hoisted_28 = {\n  key: 1,\n  class: \"button-tooltip\",\n  style: {\"top\":\"-46px\",\"left\":\"644px\",\"z-index\":\"1\",\"width\":\"123px\"}\n}\nconst _hoisted_29 = {\n  key: 2,\n  class: \"button-tooltip\",\n  style: {\"top\":\"-95px\",\"left\":\"644px\",\"z-index\":\"1\",\"width\":\"135px\"}\n}\nconst _hoisted_30 = {\n  key: 3,\n  class: \"button-tooltip\",\n  style: {\"top\":\"-95px\",\"left\":\"644px\",\"z-index\":\"1\",\"width\":\"135px\"}\n}\n\nimport { CryptoHelper } from \"@stechquick/algae/lib/helpers/cryptoHelper\";\nimport { ModelContants } from \"../../../../../../common/qCloudTemp/modelContants\";\nimport { computed, createApp, defineAsyncComponent, onMounted, ref } from \"vue\";\nimport { IOrganizationCloud } from \"../../../../../../common/clean/domain/useCases/ICloudProvider\";\nimport { IPlatformSelection, ITableData } from \"../../../../../../common/qCloudTemp/exporter\";\nimport { IModuleRelatedModelItem, IQJsonAdditionals } from \"../../../../../../common/qCloudTemp/quickCloud\";\nimport { container } from \"../../../../domain/core/diContainer\";\nimport { IQCloudApi } from \"../../../../domain/infrastructure/IQCloudApi\";\nimport { IModel, IModelHistoryInfo, IModule, IModuleVersion } from \"../../../../domain/model/models\";\nimport { IDialog } from \"../../../../domain/presentation/IDialog\";\nimport { IDeployJobs } from \"../../../../domain/useCase/IDeployJobs\";\nimport { IJobUtils } from \"../../../../domain/useCase/IJobUtils\";\nimport { IListMultiModelVersions } from \"../../../../domain/useCase/IListMultiModelVersions\";\nimport { IListMultiModuleVersions } from \"../../../../domain/useCase/IListMultiModuleVersions\";\nimport { IPackJobs } from \"../../../../domain/useCase/IPackJobs\";\nimport { IUseCaseExecutor } from \"../../../../domain/useCase/IUseCaseExecutor\";\nimport { IViewModel } from \"../../../../domain/viewModel/IViewModel\";\nimport { IViewModelManager } from \"../../../../domain/viewModel/IViewModelManager\";\nimport { IBackofficeUseCase } from \"../../../../domain/useCase/IBackofficeUseCase\";\nimport { IApplicationUseCase } from \"../../../../domain/useCase/IApplicationUseCase\";\nimport CustomSelect from \"../customSelect.vue\";\nimport CheckboxComp from \"../checkboxComp.vue\";\nimport { FileDisplayerExternalData, IFileDisplayerUseCase } from \"../../../../domain/useCase/IFileDisplayerUseCase\";\nimport { ITreeItem } from \"../../../../domain/presentation/ITreeView\";\nimport { FileExplorerConstants } from \"../../../../domain/useCase/IFileExplorer\";\nimport { IObjectUseCase } from \"../../../../domain/useCase/IObjectUseCase\";\n\ninterface IDeployScreenAdditionalProps {\n    screenType: \"Export\" | \"Deploy\" | \"Release\" | \"Create\" | \"Save\" | \"Update\";\n    platformSelection: IPlatformSelection;\n    buttonCb: () => void;\n    buttonDisableCond: boolean;\n}\n\ninterface IDisabledOptions {\n    index: number\n    cause: string;\n}\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'appItemsTable',\n  props: {\n    screenType: null,\n    platformSelection: null,\n    buttonCb: { type: Function },\n    buttonDisableCond: { type: Boolean }\n  },\n  emits: [\"close\", \"getItem\"],\n  setup(__props: any, { emit }) {\n\nconst props = __props as {\n    screenType: \"Export\" | \"Deploy\" | \"Release\" | \"Create\" | \"Save\" | \"Update\";\n    platformSelection: IPlatformSelection;\n    buttonCb: () => void;\n    buttonDisableCond: boolean;\n};\n\n\nconst viewModel = container.resolve<IViewModel>(IViewModel);\nconst viewModelManager = container.resolve<IViewModelManager>(IViewModelManager);\nconst dialog = container.resolve<IDialog>(IDialog);\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\nconst fileDisplayerUseCase = container.resolve<IFileDisplayerUseCase>(IFileDisplayerUseCase);\nconst objectUseCase = container.resolve<IObjectUseCase>(IObjectUseCase);\n\n\n\nconst items = ref<Array<ITableData>>([]);\nconst validations = ref<boolean>(true);\nconst selectedTarget = ref<string>(\"\");\nconst disabledOptions = ref<Array<IDisabledOptions>>();\nconst publishTargets = ref<Array<string>>();\nconst modelHistories = ref<Map<string, Array<IModelHistoryInfo>>>();\nconst importedModuleVersions = ref<Map<string, Array<IModuleVersion>>>();\nconst startScreen = ref<IModel>();\nconst dependencyMap = ref<Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>>();\nconst dependencyErrorStr = ref<string>('');\nconst currentApp = computed(() => viewModel.apps.find((app) => app.ID == viewModel.studio.appId));\nconst buttonNameDict = {\n    \"Export\" : \"DOWNLOAD\",\n    \"Deploy\": \"PUBLISH\",\n    \"Release\": \"RELEASE\",\n    \"Create\": \"CREATE\",\n    \"Save\": \"SAVE\",\n    \"Update\": \"UPDATE\"\n} \n\n\nonMounted(async () => {\n    await executor.execute(async () => {\n        await Promise.all([\n            executor.executeUseCase<IListMultiModelVersions>(IListMultiModelVersions, {}).then(res => modelHistories.value = res),\n            executor.executeUseCase<IListMultiModuleVersions>(IListMultiModuleVersions, {}).then(res => importedModuleVersions.value = res)\n        ])\n        initDependencies();\n        handleItems();\n        props.screenType == \"Deploy\" && syncPublishTargets();\n        validations.value = validate();\n        sendItems();\n    }, { loading: true });\n})\n\nconst allChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == \"module\" && e.allChildChecked).length);\nconst anyChildCheckedModulesCount = computed(() => items.value.filter(e => e.type == \"module\" && !e.allChildChecked && e.anyChildChecked).length);\nconst checkedRootLevelModelsCount = computed(() => items.value.filter(e => e.type != \"module\" && e.checked).length)\nconst totalRootLevelCount = computed(() => items.value.length);\nconst saveButtonDisable = computed(() => (props.screenType == \"Deploy\" && props.platformSelection.web && selectedTarget.value == \"\") || !validations.value || !items.value.some((item) => item.checked || item.anyChildChecked) || !validateStartScreen() || !validateDependencies() || props.buttonDisableCond);\nconst mainCheckboxState = computed(() => items.value.length == allChildCheckedModulesCount.value ? true\n    : (anyChildCheckedModulesCount.value + checkedRootLevelModelsCount.value > 0 ? false : undefined));\nconst isThereVersion = computed(() => checkMaxVersionOfAllItems());\nconst isAllDependenciesOK = computed(validateDependencies)\nconst isStartScreenOK = computed(validateStartScreen)\n\nfunction validate() {\n    let result = true;\n    const modules = items.value.filter(e => e.type == \"module\" && e.anyChildChecked);\n    const appLayerItems = items.value.filter(e => e.type == \"qjson\" && e.checked);\n\n    startScreen.value = (viewModel.studio.items as Array<IModel>).find(item => (item.additionals as IQJsonAdditionals | undefined)?.isRootPage);\n    if (!startScreen.value)\n        return false;\n\n    if (props.screenType == \"Deploy\") {\n        if (modules.length > 0)\n            result = modules.map(e => e.children).filter(e => !e?.find(f => f.type == \"entityDesigner\" && f.checked)).length <= 0\n\n        let isApplicationWillDeploy = appLayerItems.length > 0;\n        if (isApplicationWillDeploy) {\n            result = appLayerItems\n                .map(e => viewModel.studio.items.find(item => item.ID == e.id) as IModel)\n                .findIndex(e => ((e.additionals as IQJsonAdditionals).isRootPage)) != -1;\n        }\n    }\n\n    return result;\n}\n\nfunction validateDependencies() {\n    const checkMap = new Map<string, boolean>();\n    items.value.forEach(item => {\n        if (item.type == 'module' && item.children && item.children.length > 0)\n            item.children.forEach(child => checkMap.set(child.id, child.checked == true))\n        else\n            checkMap.set(item.id, item.checked == true)\n    })\n\n    const mustBeCheckedMap = new Map<string, Array<string>>();\n    dependencyMap.value?.forEach((deps, id) => {\n        if (!checkMap.get(id))\n            return;\n\n        deps.dependedTo.forEach(dependedId => {\n            if (checkMap.get(dependedId))\n                return;\n\n            if (mustBeCheckedMap.has(id)) {\n                const vals = mustBeCheckedMap.get(id)!\n                vals.push(dependedId)\n                mustBeCheckedMap.set(id, vals)\n            } else {\n                mustBeCheckedMap.set(id, [dependedId])\n            }\n\n        });\n    })\n\n    //set deps error text\n    const [firstItemID] = mustBeCheckedMap.keys();\n    if (firstItemID) {\n        const firstItemDeps = mustBeCheckedMap.get(firstItemID);\n        const firstItemDepStr = firstItemDeps ? firstItemDeps.map(findItem).map(e => e?.name).join(', ') : '';\n        dependencyErrorStr.value = `Select ${firstItemDepStr} first. ${findItem(firstItemID)?.name} depends on ${firstItemDepStr}.`\n    }\n\n    return mustBeCheckedMap.size == 0\n}\n\nfunction validateStartScreen() {\n    return (items.value.find((item) => item.id == startScreen.value?.ID))?.checked\n}\n\nfunction findItem(ID: string) {\n    for (const item of items.value) {\n        if (item.type != 'module' && item.id == ID)\n            return item;\n        if (item.type == 'module' && item.children && item.children.length > 0) {\n            const f = item.children.find(e => e.id == ID)\n            if (f) return f\n        }\n    }\n}\nfunction sendItems() {\n    items.value.forEach(item => {\n            if(item.type != \"appSettings\" && item.type != \"module\" && item.type != \"folder\" && item.usageType != \"appSettings\" && item.usageType != \"appAssetList\")  {\n                item.checked && getItem(item);\n            }\n            else {\n                item.children?.forEach(child => {\n                    child.checked && getItem(child);\n                 })\n            }\n        })\n}\nfunction initDependencies() {\n    const map = new Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>();\n    const depMap = new Map<string, Array<string>>();\n\n    viewModelManager.flatMapItems(viewModel.studio.items, (item) => {\n        if (item.objectType != \"model\") { return; }\n\n        const isImportedModule = item.owner.objectType == \"module\" && isModuleImported(item.owner as IModule);\n\n        let version: string | undefined;\n        if (!isImportedModule) {\n            const maxVersion = getItemMaxVersion(item)\n            if (!maxVersion)\n                return depMap.set(item.ID, item.dependentModels ? item.dependentModels.map(e => e.modelId) : Array<string>());\n            version = maxVersion;\n        }\n        else {\n            const moduleVersions = importedModuleVersions.value?.get(item.owner.ID)\n            const moduleVersion = (item.owner as IModule).relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion\n\n            const importedModuleModel = moduleVersions?.filter(e => e.version == moduleVersion).flatMap(e => e.relatedModelHistories).find(e => e.modelID == item.ID)\n            version = importedModuleModel?.version\n        }\n\n        const historyItem = modelHistories.value?.get(item.ID)?.find(e => e.version == version);\n\n        depMap.set(item.ID, historyItem?.dependentModels ? historyItem?.dependentModels.map(e => e.modelId) : Array<string>())\n    });\n\n\n    depMap.forEach((dependedTo, modelId) => {\n        const dependedBy = Array<string>();\n        depMap.forEach((dependencies, depModelId) => {\n            if (dependencies.some(depId => depId == modelId))\n                dependedBy.push(depModelId)\n        })\n        map.set(modelId, { dependedBy, dependedTo });\n    })\n    dependencyMap.value = map;\n}\n\nfunction isModelDepended(item: ITableData) {\n    const deps = dependencyMap.value?.get(item.id)?.dependedBy\n    if (!deps) return false;\n\n    return deps.some(dep => items.value.some(item => {\n        if (item.type == 'module' && item.anyChildChecked) {\n            return item.children?.some(child => child.checked && child.id == dep)\n        }\n        return item.id == dep && item.checked\n    }));\n}\n// function createDialogComp(item: ITableData) {\n//     const newChild = createApp(ExportDialogItem, {\n//         handleItemCheckEvent,\n//         startScreen,\n//         versionDialog,\n//         handleCollapse,\n//         item: item,\n//         moduleVersionDialog\n//     });\n//     const mountEl = document.createElement('div');\n//     newChild.mount(mountEl);\n//     const parentEl = document.getElementById('module-container-div');\n//     parentEl?.appendChild(mountEl);\n// }\nfunction createAndAppendItem({ newItem }: { newItem: ITableData }) {\n    // createDialogComp(newItem);\n    if (newItem.parent) {\n        return;\n    }\n    items.value.push(newItem);\n}\n// function assignItemRowRefs(itemName: string, element: any) {\n//     itemRowRefs.value[itemName] = element;\n// }\nfunction handleItems() {\n    // - App Settings\n    const appSettings = viewModel.studio.items.find(e => e.name == 'App Settings');\n    const maxVersion = getItemMaxVersion(appSettings as IModel)\n    const settingsData = appSettings && {\n        id: appSettings.ID,\n        name: appSettings.name,\n        checked: true,\n        disabled: false,\n        type: (appSettings as IModel).modelType,\n        version: !maxVersion ? 'latest' : maxVersion\n    };\n    appSettings && settingsData && createAndAppendItem({ newItem: settingsData });\n\n\n    // - UI Settings\n    const uiSettingsID = CryptoHelper.CreateGuid();\n    const uiSettingsModels = viewModel.studio.items.filter((item) => item.objectType == \"model\" && item.usageType == \"appSettings\") as Array<IModel>;\n    const uiSettings: ITableData = {\n        id: uiSettingsID,\n        collapsed: true,\n        name: \"UI Settings\",\n        type: \"module\",\n        imported: false,\n        checked: true,\n        children: [{} as ITableData]\n    };\n    uiSettings && createAndAppendItem({ newItem: uiSettings });\n    uiSettings.children = uiSettingsModels.map(settings => {\n        const maxVersion = getItemMaxVersion(settings)\n        const childData = {\n            id: settings.ID,\n            parent: uiSettings,\n            name: settings.name,\n            type: settings.modelType,\n            checked: maxVersion != undefined,\n            usageType: settings?.usageType,\n            disabled: !maxVersion,\n            version: maxVersion,\n            level: 2\n        }\n        createAndAppendItem({ newItem: childData });\n        return childData;\n    })\n    handleParentCheckedStatus(uiSettings, false);\n\n\n    // - Styled Components\n    const uiAssetID = CryptoHelper.CreateGuid();\n    const appAssetList = viewModel.studio.items.filter((item) => item.objectType == \"model\" && item.usageType == \"appAssetList\") as Array<IModel>;\n    const uiAssetList: ITableData = {\n        id: uiAssetID,\n        collapsed: true,\n        name: \"Styled Components\",\n        type: \"module\",\n        imported: false,\n        anyChildChecked: true,\n        allChildChecked: true,\n        children: [{} as ITableData]\n    };\n    uiAssetList && createAndAppendItem({ newItem: uiAssetList });\n    uiAssetList.children = appAssetList.map((asset) => {\n        const childAsset = {\n            id: asset.ID,\n            parent: uiAssetList,\n            name: asset.name,\n            type: asset.modelType,\n            checked: true,\n            usageType: asset?.usageType,\n            level: 2\n        }\n        createAndAppendItem({ newItem: childAsset });\n        return childAsset;\n    }) as Array<ITableData>;\n    handleParentCheckedStatus(uiAssetList, false);\n\n    \n    const treeItems = fileDisplayerUseCase.cloneFileExplorerTreeView({\n        displayFilterer: (item, hasChildren) => {\n            switch (item.ID) { case FileExplorerConstants.uiAssetListID: case FileExplorerConstants.uiSettingsID: return false; default: break; }\n            switch (item.objectType) {\n                case \"application\": return false;\n                case \"module\": return true;\n                case \"folder\": return hasChildren;\n                case \"model\": return true;\n            }\n        },\n    });\n\n    const converter = (treeItem: ITreeItem<FileDisplayerExternalData>, options: {ownerModule?: {isImportedModule: boolean;moduleVersion: string | undefined;relatedModelHistories: IModuleRelatedModelItem[] | undefined}}): ITableData => {\n        const item = treeItem.externalData;\n        if (item.objectType == \"application\") { throw new Error(\"unexpected item type\"); }\n\n        const fullPath = objectUseCase.getFullPath(item, \"self\");\n        let level = fullPath.split(\"/\").length - 1;\n\n        let tableData: ITableData;\n        switch(item.objectType) {\n            case \"folder\":\n                tableData = {\n                    id: item.ID, name: item.name, type: \"folder\", collapsed: true, level,\n                    children: treeItem.children?.map((item) => converter(item, { ownerModule: options.ownerModule })),\n                };\n                tableData.children?.forEach(child => child.parent = tableData);\n                handleParentCheckedStatus(tableData, false);\n                break;\n            case \"model\":\n                if (options.ownerModule) {\n                    tableData = { id: item.ID, name: item.name, type: item.modelType, level };\n                    if (!options.ownerModule.isImportedModule || item.isUnmodifiable) {\n                        const maxVersion = getItemMaxVersion(item);\n                        tableData = {\n                            ...tableData,\n                            checked: maxVersion ? true : item.isUnmodifiable,\n                            disabled: maxVersion ? false : !item.isUnmodifiable,\n                            version: item.isUnmodifiable ? 'latest' : maxVersion,\n                        };\n                    } else {\n                        const importedModulesModel = options.ownerModule.relatedModelHistories?.find(e => e.modelID == item.ID)\n                        tableData = { ...tableData, checked: true, disabled: false, version: importedModulesModel?.version };\n                    }\n                } else {\n                    const maxVersion = getItemMaxVersion(item);\n                    tableData = {\n                        id: item.ID,\n                        name: item.name,\n                        checked: maxVersion ? true : item.isUnmodifiable,\n                        disabled: maxVersion ? false : !item.isUnmodifiable,\n                        type: item.modelType,\n                        version: item.isUnmodifiable ? 'latest' : maxVersion,\n                        level,\n                    };\n                }\n                break;\n            case \"module\":\n                const isImportedModule = isModuleImported(item);\n                const moduleVersion = item.relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion;\n                const relatedModelHistories = isImportedModule ? importedModuleVersions.value?.get(item.ID)?.find(module => module.version == moduleVersion)?.relatedModelHistories : undefined\n                \n                tableData = {\n                    id: item.ID,\n                    collapsed: true,\n                    name: item.name,\n                    type: \"module\",\n                    imported: isImportedModule,\n                    version: moduleVersion,\n                    children: treeItem.children?.map((item) => converter(item, {ownerModule: {isImportedModule, moduleVersion, relatedModelHistories}})),\n                }\n                tableData.children?.forEach(child => child.parent = tableData);\n                handleParentCheckedStatus(tableData, false);\n                break;\n        }\n        return tableData;\n    };\n    const tableDatas = treeItems.map(item => converter(item, {}));\n\n    const traverser = (tableData: ITableData) => {\n        createAndAppendItem({ newItem: tableData });\n        tableData.children?.forEach(traverser);\n    };\n    \n    tableDatas.forEach(traverser);\n}\n\nfunction getItemMaxVersion(item: IModel): string | undefined {\n    if (!modelHistories.value?.has(item.ID))\n        return undefined;\n\n    const versions = modelHistories.value.get(item.ID);\n    if (!versions)\n        return undefined;\n\n    const findMaxVersion = (versions: Array<string>) => {\n        const versionNumbers = versions.map(v => {\n            const parts: Array<string> = v.split(\".\");\n            return parseInt(parts[0]) * 10 + parseInt(parts[1]) * 1;\n        })\n\n        versionNumbers.sort((a, b) => b - a);\n\n        const maxVersion = versionNumbers[0];\n        return `${Math.floor(maxVersion / 10)}.${maxVersion % 10}`;\n    }\n\n    return findMaxVersion(versions.map(e => e.version!));\n\n}\nfunction checkMaxVersionOfAllItems() {\n    let isThereVersion: boolean = false;\n    items.value.forEach(item => {\n        if (item.type == \"module\") {\n            item.children?.forEach(child => {\n                if (child.version) {\n                    isThereVersion = true;\n                }\n\n            })\n        }\n        else {\n            if (item.version) {\n                isThereVersion = true;\n            }\n        }\n    })\n    return isThereVersion;\n}\nfunction handleModuleCountCheckboxEvent(value: boolean) {\n    items.value.filter(e => !e.disabled).forEach((item) => {\n        item.checked = value;\n        const allItemsCheckable = item.allChildChecked != undefined && item.children && item.children.length > 0 && !item.children.some(c => c.disabled);\n        if (allItemsCheckable) item.allChildChecked = value;\n        if (item.anyChildChecked != undefined) item.anyChildChecked = value;\n        if (item.children) item.children.filter(c => !c.disabled).forEach((child) => (child.checked = value));\n    });\n    \n    validations.value = validate();\n    props.screenType == \"Deploy\" && syncPublishTargets();\n}\n\nfunction handleCollapse(item: ITableData, childIterate?: boolean, collapsed?: boolean) {\n    item.collapsed = collapsed !== undefined ? collapsed : !item.collapsed;\n    if (childIterate) {\n        item.children?.forEach(child => {\n            const childEl = document.getElementById(child.id);\n            childEl!.style.display = item.collapsed ? \"none\" : \"block\";\n            handleCollapse(child, childIterate, item.collapsed);\n        })\n    }\n}\n\nfunction checkAllDependents(item: ITableData, recurseParent: boolean) {\n    if (item.disabled || item.checked) return;\n\n    item.checked = true\n    item.parent && handleParentCheckedStatus(item.parent, recurseParent);\n\n    const deps = dependencyMap.value?.get(item.id)?.dependedTo\n    if (!deps) return;\n\n    deps.forEach(dep => {\n        items.value.forEach(item => {\n            if (item.type == 'module' && !item.allChildChecked) {\n                const willCheckItem = item.children?.find(child => !child.checked && child.id == dep)\n                willCheckItem && checkAllDependents(willCheckItem, recurseParent);\n                handleParentCheckedStatus(item, recurseParent);\n                return;\n            }\n\n            if (!item.checked && item.id == dep) {\n                checkAllDependents(item, recurseParent);\n                item.parent && handleParentCheckedStatus(item.parent, recurseParent);\n            }\n        })\n    });\n}\n\nfunction handleItemCheckEvent(item: ITableData) {\n    if (item.disabled || isModelDepended(item) || item.name == 'App Settings')\n        return;\n\n    if (item.type != \"module\" && item.type != \"folder\") {\n        if (item.checked) {\n            item.checked = false;\n            item.parent && handleParentCheckedStatus(item.parent, true);\n        } else {\n            checkAllDependents(item, true);\n        }\n    } else {\n        if (item.children && item.children.filter(c => !c.disabled).length > 0) {\n            if (item.anyChildChecked) {\n                item.children.filter(c => !c.disabled).forEach(child => child.checked = false);\n                item.checked = false;\n                handleParentCheckedStatus(item, true);\n            } else {\n                item.children.forEach(child => checkAllDependents(child, true));\n                item.checked = true;\n            }\n        }\n        else {\n            item.checked = !item.checked;\n            item.allChildChecked = false;\n        }\n    }\n    getItem(item);\n    validations.value = validate();\n    props.screenType == \"Deploy\" && syncPublishTargets();\n}\n\nfunction handleParentCheckedStatus(item: ITableData, recurseParent: boolean) {\n    item.disabled = item.children && (item.children.length == 0 || !item.children?.some(child => !child.disabled))\n    item.allChildChecked = item.children && item.children.length > 0 && !item.children.some((child) => !child.checked || child.disabled);\n    item.anyChildChecked = item.children?.some((child) => child.checked && !child.disabled);\n    if (recurseParent && item.parent) {\n        handleParentCheckedStatus(item.parent, true);\n    }\n}\n\nfunction syncPublishTargets() {\n    publishTargets.value = []; disabledOptions.value = [];\n\n    const targets = viewModel.user?.selectedOrganization?.actions?.publish?.targets;\n    if (!targets)\n        return;\n\n    const isSelectAnyItem = items.value.find(e => e.anyChildChecked || e.checked);\n    if (!isSelectAnyItem) {\n        publishTargets.value = Object.entries(targets).map(e => cloudTargetMap(e[0])!);\n        const disabledOptionList = Array<IDisabledOptions>();\n        for (let i = 0; i < publishTargets.value.length; i++) {\n            disabledOptionList.push({ index: i, cause: \"You need to include items to publish.\" })\n        }\n        disabledOptions.value = disabledOptionList;\n        return;\n    }\n\n    const checkedPublishTargets = checkAndSetDisabledCauses(targets);\n    const sortedTargets = checkedPublishTargets.sort((e, f) => (!e.cause === !f.cause) ? 0 : e.cause ? 1 : -1);\n\n    const disabledOptionList = Array<IDisabledOptions>();\n    for (let i = 0; i < sortedTargets.length; i++) {\n        const cause = sortedTargets[i].cause;\n        if (cause) disabledOptionList.push({ index: i, cause })\n    }\n    disabledOptions.value = disabledOptionList;\n    publishTargets.value = sortedTargets.map(e => e.optionName);\n\n    selectedTarget.value = !sortedTargets[0].cause ? sortedTargets[0].optionName : \"\";\n}\n\nfunction checkAndSetDisabledCauses(targets: Record<keyof IOrganizationCloud, boolean>) {\n    const list = Array<{ optionName: string, cause?: string }>();\n\n    Object.keys(targets).forEach(e => {\n        const key = e as keyof IOrganizationCloud;\n        const value = targets[key];\n        const optionName = cloudTargetMap(key)!;\n        if (!value)\n            return list.push({ optionName, cause: \"You are not authorized to publish to this target.\" });\n\n\n        switch (key) {\n            case \"azure\":\n                const traverseSelectedItems = (status: boolean, items?: Array<ITableData>) => {\n                    if (!items || items.length == 0) { return status; }\n                    for (const item of items) {\n                        if (item.checked || item.anyChildChecked) {\n                            if (item.type == \"module\") {\n                                status = traverseSelectedItems(status, item.children);\n                            }\n                            if (item.type == \"entityDesigner\" || item.type == \"bpmn\" || item.type == \"process\") {\n                                status = false;\n                                break;\n                            }\n                        }\n\n                    }\n                    return status;\n                }\n\n                const status = traverseSelectedItems(true, items.value);\n                if (!status)\n                    return list.push({ optionName, cause: \"Entity and process models cannot be published to this target.\" });\n                break;\n            case \"plateauGCP\":\n                const modulesHasNotAnEDModel = items.value.filter(e => e.name != \"UI Settings\").find(e => e.type == \"module\" && e.anyChildChecked && e.children?.some(c => c.checked && (c.type == \"bpmn\" || c.type == \"process\")) && !e.children?.some(c => c.type == \"entityDesigner\" && c.checked))\n                if (modulesHasNotAnEDModel)\n                    return list.push({ optionName, cause: `This target not available. Selected module '${modulesHasNotAnEDModel.name}' has not any Data Model.` })\n                break;\n        }\n\n        list.push({ optionName });\n    })\n\n    return list;\n}\n\nfunction updateDependencyMap(newVersion: string, item: ITableData) {\n    const deps = dependencyMap.value?.get(item.id);\n    dependencyMap.value?.set(item.id, {\n        dependedBy: deps?.dependedBy || Array<string>(),\n        dependedTo: modelHistories.value?.get(item.id)?.find(e => e.version == newVersion)?.dependentModels?.map(e => e.modelId) || Array<string>()\n    })\n}\n\nfunction versionDialog(item: ITableData) {\n    const clickedNode = { id: item.id, state: { checked: item.checked }, text: item.name, type: item.type, version: item.version };\n    const hasAnyVersion = modelHistories.value?.has(item.id);\n    const options = {\n        clickedNode, cb: (version: string) => {\n            item.version = version;\n            updateDependencyMap(version, item);\n        }\n    } as any;\n\n    if (hasAnyVersion) {\n        options.versions = modelHistories.value?.get(item.id)\n    }\n    dialog.showDialog(\n        defineAsyncComponent(() => import(\"../application/modelVersionDialog.vue\")),\n        { closable: true, title: \"Change Version\", width: \"1080px\", maxHeight: \"500px\", overflow: \"auto\" }, options\n    );\n}\n\n\nfunction moduleVersionDialog(item: ITableData) {\n    dialog.showDialog(\n        defineAsyncComponent(() => import(\"../application/moduleVersionDialog.vue\")),\n        { closable: true, title: \"Change Version\", width: \"1080px\", maxHeight: \"500px\", overflow: \"auto\" },\n        {\n            module: { ID: item.id }, versions: importedModuleVersions.value?.get(item.id), cb: (moduleVersion: IModuleVersion) => {\n                item.version = moduleVersion.version;\n                item.children?.forEach(child => {\n                    const modulesModel = moduleVersion.relatedModelHistories.find(e => e.modelID == child.id)\n                    child.version = modulesModel?.version\n                    updateDependencyMap(modulesModel?.version!, child);\n                })\n            }\n        }\n    );\n}\n\nfunction close() {\n    emit(\"close\");\n}\nfunction getItem(item: ITableData) {\n    emit(\"getItem\", item);\n}\n\nfunction cloudTargetMap(name: string, pureVal: boolean = false) {\n    const map: Record<keyof IOrganizationCloud, string> = { azure: \"Public Cloud\", plateauGCP: \"Plateau Platform Playground\" };\n    if (pureVal) {\n        return Object.keys(map).find(e => {\n            if (map[e as keyof IOrganizationCloud] === name) {\n                return true;\n            }\n        })\n    } else {\n        let key = Object.keys(map).includes(name);\n        if (!key)\n            return;\n        return map[name as keyof IOrganizationCloud];\n    }\n}\n\nfunction onTargetSelect(value: string) {\n    selectedTarget.value = value\n}\n\nconst isModuleImported = (item: IModule) => {\n    return objectUseCase.isModuleImported(item);\n}\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"div\", null, [\n      _createVNode(CheckboxComp, {\n        class: _normalizeClass(['modules-selected-checkbox', props.screenType == 'Deploy' ? 'deploy' : '']),\n        minus: _unref(mainCheckboxState) == false,\n        check: _unref(mainCheckboxState) == true,\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (handleModuleCountCheckboxEvent(_unref(mainCheckboxState) == undefined)))\n      }, null, 8 /* PROPS */, [\"class\", \"minus\", \"check\"]),\n      _createElementVNode(\"div\", {\n        class: _normalizeClass(['modules-selected-text', props.screenType == 'Deploy' ? 'deploy' : ''])\n      }, [\n        _createElementVNode(\"span\", _hoisted_1, _toDisplayString(_unref(allChildCheckedModulesCount) + _unref(anyChildCheckedModulesCount) + _unref(checkedRootLevelModelsCount)), 1 /* TEXT */),\n        _createTextVNode(\" of \"),\n        _createElementVNode(\"span\", _hoisted_2, _toDisplayString(_unref(totalRootLevelCount)), 1 /* TEXT */),\n        _createTextVNode(\" items selected \")\n      ], 2 /* CLASS */)\n    ]),\n    _createCommentVNode(\" <div :class=\\\"['modules-datatable', props.screenType == 'Deploy' ? 'deploy' : '']\\\" id=\\\"module-container-div\\\" ></div> \"),\n    _createElementVNode(\"div\", {\n      class: _normalizeClass(['modules-datatable', props.screenType == 'Deploy' ? 'deploy' : ''])\n    }, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(items.value, (item) => {\n        return (_openBlock(), _createElementBlock(\"div\", {\n          key: item.id\n        }, [\n          (item?.type == 'module')\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n                _createElementVNode(\"div\", _hoisted_4, [\n                  (!item.imported)\n                    ? (_openBlock(), _createElementBlock(\"i\", {\n                        key: 0,\n                        class: _normalizeClass('mdi mdi-menu' + (item.collapsed ? '-right' : '-down') + ' chevron' + (!item.children || item.children.length == 0 ? ' disabled': '')),\n                        onClick: ($event: any) => (handleCollapse(item))\n                      }, null, 10 /* CLASS, PROPS */, _hoisted_5))\n                    : _createCommentVNode(\"v-if\", true),\n                  _createVNode(CheckboxComp, {\n                    class: \"module-checkbox\",\n                    check: item.allChildChecked,\n                    minus: !item.allChildChecked && item.anyChildChecked,\n                    disabled: item.disabled,\n                    onClick: ($event: any) => (handleItemCheckEvent(item))\n                  }, null, 8 /* PROPS */, [\"check\", \"minus\", \"disabled\", \"onClick\"]),\n                  (item.imported)\n                    ? (_openBlock(), _createElementBlock(\"i\", _hoisted_6))\n                    : _createCommentVNode(\"v-if\", true),\n                  _createElementVNode(\"span\", {\n                    class: _normalizeClass(['module-name', item.imported ? ` imported` : (item.disabled ? ' disabled': '')])\n                  }, _toDisplayString(item.name), 3 /* TEXT, CLASS */),\n                  (item.imported)\n                    ? (_openBlock(), _createElementBlock(\"div\", {\n                        key: 2,\n                        class: \"version-text\",\n                        onClick: ($event: any) => (moduleVersionDialog(item))\n                      }, [\n                        _createTextVNode(_toDisplayString(item.version ? item.version : 'No version') + \" \", 1 /* TEXT */),\n                        _hoisted_8\n                      ], 8 /* PROPS */, _hoisted_7))\n                    : _createCommentVNode(\"v-if\", true)\n                ]),\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item?.children, (child) => {\n                  return _withDirectives((_openBlock(), _createElementBlock(\"div\", {\n                    class: \"row-container\",\n                    key: child.id\n                  }, [\n                    _createVNode(CheckboxComp, {\n                      class: \"model-checkbox\",\n                      check: child.checked,\n                      disabled: child.disabled,\n                      onClick: ($event: any) => (handleItemCheckEvent(child))\n                    }, null, 8 /* PROPS */, [\"check\", \"disabled\", \"onClick\"]),\n                    (child.type != 'module')\n                      ? (_openBlock(), _createElementBlock(\"i\", {\n                          key: 0,\n                          class: _normalizeClass('model-icon ' + _unref(ModelContants).getModelVisualInfo(child.type, undefined).icon),\n                          style: _normalizeStyle({ color: _unref(ModelContants).getModelVisualInfo(child.type, undefined).color })\n                        }, null, 6 /* CLASS, STYLE */))\n                      : _createCommentVNode(\"v-if\", true),\n                    _createElementVNode(\"span\", {\n                      class: _normalizeClass(['model-name', child.disabled ? ' disabled' : ''])\n                    }, _toDisplayString(child.name), 3 /* TEXT, CLASS */),\n                    (!child.usageType || child.usageType == 'appSettings')\n                      ? (_openBlock(), _createElementBlock(\"div\", {\n                          key: 1,\n                          class: _normalizeClass(['version-text', child.disabled ? 'disabled' : '']),\n                          onClick: ($event: any) => (versionDialog(child))\n                        }, [\n                          _createTextVNode(_toDisplayString(child.version ? child.version : 'No version') + \" \", 1 /* TEXT */),\n                          (!child.usageType || child.usageType == 'appSettings')\n                            ? (_openBlock(), _createElementBlock(\"i\", {\n                                key: 0,\n                                class: _normalizeClass(['mdi mdi-pencil-outline version-icon', child.disabled ? 'disabled' : ''])\n                              }, null, 2 /* CLASS */))\n                            : _createCommentVNode(\"v-if\", true)\n                        ], 10 /* CLASS, PROPS */, _hoisted_9))\n                      : _createCommentVNode(\"v-if\", true),\n                    (child.disabled && !child.version)\n                      ? (_openBlock(), _createElementBlock(\"span\", _hoisted_10, [\n                          _createTextVNode(\"No version available for publishing. \"),\n                          _hoisted_11,\n                          _createTextVNode(\" on this item and choose the \"),\n                          _hoisted_12,\n                          _createTextVNode(\" option. \")\n                        ]))\n                      : _createCommentVNode(\"v-if\", true)\n                  ])), [\n                    [_vShow, !item.imported && !item.collapsed]\n                  ])\n                }), 128 /* KEYED_FRAGMENT */))\n              ]))\n            : (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [\n                _createElementVNode(\"div\", _hoisted_14, [\n                  _createVNode(CheckboxComp, {\n                    class: \"module-checkbox\",\n                    check: item?.checked,\n                    disabled: item.disabled,\n                    onClick: ($event: any) => (handleItemCheckEvent(item))\n                  }, null, 8 /* PROPS */, [\"check\", \"disabled\", \"onClick\"]),\n                  _createElementVNode(\"i\", {\n                    class: _normalizeClass('app-tier-model-icon ' + _unref(ModelContants).getModelVisualInfo(item.type, undefined).icon),\n                    style: _normalizeStyle({ color: _unref(ModelContants).getModelVisualInfo(item.type, undefined).color })\n                  }, null, 6 /* CLASS, STYLE */),\n                  _createElementVNode(\"span\", _hoisted_15, [\n                    _createTextVNode(_toDisplayString(item?.name) + \" \", 1 /* TEXT */),\n                    (startScreen.value?.ID == item.id)\n                      ? (_openBlock(), _createElementBlock(\"span\", _hoisted_16, _hoisted_19))\n                      : _createCommentVNode(\"v-if\", true)\n                  ]),\n                  (!item.usageType)\n                    ? (_openBlock(), _createElementBlock(\"span\", {\n                        key: 0,\n                        class: _normalizeClass(['version-text', item.disabled ? 'disabled' : '']),\n                        onClick: ($event: any) => (versionDialog(item))\n                      }, [\n                        _createTextVNode(_toDisplayString(item.version ? item.version : 'No version') + \" \", 1 /* TEXT */),\n                        (!item.usageType)\n                          ? (_openBlock(), _createElementBlock(\"i\", {\n                              key: 0,\n                              class: _normalizeClass(['mdi mdi-pencil-outline version-icon', item.disabled ? 'disabled' : ''])\n                            }, null, 2 /* CLASS */))\n                          : _createCommentVNode(\"v-if\", true)\n                      ], 10 /* CLASS, PROPS */, _hoisted_20))\n                    : _createCommentVNode(\"v-if\", true),\n                  (item.disabled && !item.version)\n                    ? (_openBlock(), _createElementBlock(\"span\", _hoisted_21, [\n                        _createTextVNode(\"No version available for publishing. \"),\n                        _hoisted_22,\n                        _createTextVNode(\" on this item and choose the \"),\n                        _hoisted_23,\n                        _createTextVNode(\" option. \")\n                      ]))\n                    : _createCommentVNode(\"v-if\", true)\n                ])\n              ]))\n        ]))\n      }), 128 /* KEYED_FRAGMENT */))\n    ], 2 /* CLASS */),\n    (props.screenType == 'Deploy')\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_24, [\n          _hoisted_25,\n          _createVNode(CustomSelect, {\n            options: publishTargets.value,\n            onInput: onTargetSelect,\n            selectedOption: selectedTarget.value,\n            default: selectedTarget.value,\n            disabledOptions: disabledOptions.value,\n            selectedClass: \"selected-environment\",\n            placeholder: \"Select the publish environment of your application\",\n            class: \"select-environment\"\n          }, null, 8 /* PROPS */, [\"options\", \"selectedOption\", \"default\", \"disabledOptions\"])\n        ]))\n      : _createCommentVNode(\"v-if\", true),\n    _createElementVNode(\"div\", {\n      class: _normalizeClass(['footer', props.screenType == 'Deploy' ? 'deploy' : 'export'])\n    }, [\n      _createElementVNode(\"div\", {\n        class: _normalizeClass(['cancel-button', props.screenType == 'Deploy' ? 'deploy' : '']),\n        onClick: close\n      }, \"Cancel\", 2 /* CLASS */),\n      _createElementVNode(\"div\", {\n        class: _normalizeClass([(_unref(saveButtonDisable) ? ' button-disable' : '')]),\n        onClick: _cache[1] || (_cache[1] = ($event: any) => (!_unref(saveButtonDisable) && props.buttonCb()))\n      }, [\n        _createElementVNode(\"span\", _hoisted_26, _toDisplayString(buttonNameDict[props.screenType]), 1 /* TEXT */),\n        (!_unref(isStartScreenOK))\n          ? (_openBlock(), _createElementBlock(\"span\", _hoisted_27, \"You need to include your start screen.\"))\n          : (props.screenType == 'Deploy' && !selectedTarget.value)\n            ? (_openBlock(), _createElementBlock(\"span\", _hoisted_28, \"You need to select a publish environment.\"))\n            : (!_unref(isThereVersion))\n              ? (_openBlock(), _createElementBlock(\"span\", _hoisted_29, \"There are no items ready to publish. At least one of your items must be ready to publish.\"))\n              : (!_unref(isAllDependenciesOK))\n                ? (_openBlock(), _createElementBlock(\"span\", _hoisted_30, _toDisplayString(dependencyErrorStr.value), 1 /* TEXT */))\n                : _createCommentVNode(\"v-if\", true)\n      ], 2 /* CLASS */)\n    ], 2 /* CLASS */)\n  ]))\n}\n}\n\n})","\n      import API from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./appItemsTable.vue?vue&type=style&index=0&id=437385e0&scoped=true&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./appItemsTable.vue?vue&type=style&index=0&id=437385e0&scoped=true&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./appItemsTable.vue?vue&type=style&index=1&id=437385e0&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./appItemsTable.vue?vue&type=style&index=1&id=437385e0&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","import script from \"./appItemsTable.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./appItemsTable.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./appItemsTable.vue?vue&type=style&index=0&id=437385e0&scoped=true&lang=css\"\nimport \"./appItemsTable.vue?vue&type=style&index=1&id=437385e0&lang=css\"\n\nimport exportComponent from \"/home/runner/work/studio/studio/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-437385e0\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createVNode as _createVNode, unref as _unref, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-0a397840\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"container\" }\nconst _hoisted_2 = { class: \"app-version-type\" }\nconst _hoisted_3 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"Type\", -1 /* HOISTED */))\nconst _hoisted_4 = { style: {\"margin\":\"24px 0\"} }\n\nimport { computed, ref } from \"vue\";\n    import { IApplication } from \"../../../../domain/model/models\";\n    import { IIDEInputDefinitions } from \"../../../../domain/presentation/IIDEInputDefinitions\";\n    import IDEInput from \"../../components/application/IDEInput.vue\";\n    import CustomSelect from \"../customSelect.vue\"\n    import AppItemsTable from \"./appItemsTable.vue\"\n    import { ITableData } from \"../../../../../../common/qCloudTemp/exporter\";\n    import { container } from \"../../../../domain/core/diContainer\";\n    import { IUseCaseExecutor } from \"../../../../domain/useCase/IUseCaseExecutor\";\n    import { IApplicationVersionUseCase, VersionIncType } from \"../../../../domain/useCase/IApplicationVersionUseCase\";\n    import { IReleaseApplicationRequest } from \"../../../../../../common/qCloudTemp/symDtoObjects\";\n\n    interface IDisabledOptions {\n        index: number\n        cause: string;\n    }\n    interface IAppVersionModel {\n        modelID: string;\n        version: string;\n    }\n    interface ICreateAppVersionProp {\n        app?: IApplication\n    }\n    \nexport default /*#__PURE__*/_defineComponent({\n  __name: 'createAppVersion',\n  props: {\n    app: null\n  },\n  emits: [\"close\"],\n  setup(__props: any, { emit }) {\n\nconst props = __props as {\n        app?: IApplication\n    };\n\n    \n    const executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\n    const applicationVersionUseCase = container.resolve<IApplicationVersionUseCase>(IApplicationVersionUseCase);\n\n    const releaseTypeOptions = ref([`Major Version (v${getLastRelasedVersion(\"Major\")})`, `Minor Version (v${getLastRelasedVersion(\"Minor\")})`, `Fix Version (v${getLastRelasedVersion(\"Fix\")})`]);\n    const releaseType = ref<VersionIncType>();\n    const disabledOptions = ref<Array<IDisabledOptions>>([]);\n    const isDescriptionValid = ref<boolean>(true);\n    const description = ref(\"\");\n    const appModels = ref<Array<IAppVersionModel>>([]);\n    \n    const buttonDisableCond = computed(() => !releaseType.value)\n\n    const validations = ref<Record<\"description\", IIDEInputDefinitions[\"validations\"]>>({\n        description: { minAndMaxLength: { min: 3, max: 100 }, availableCharacters: false, nonSpaceCharacter: false },\n    });\n    function close() {\n        emit('close');\n    }\n    function setReleaseType(type: VersionIncType) {\n        releaseType.value = (type.split(\" \")[0] as VersionIncType);\n    }\n    function descriptionValidationStatus(isValid: boolean) {\n        isDescriptionValid.value = isValid\n\n    }\n    function setDescValue(desc: string) {\n        description.value = desc\n    }\n    function getItems(item: ITableData) {\n        const model: IAppVersionModel = {\n            modelID: item.id,\n            version: item.version ?? \"latest\"\n        }\n        item.checked ? appModels.value?.push(model) : appModels.value = appModels.value?.filter(model => model.modelID != item.id);\n    }\n    function createNewAppVersion() {\n        let request: IReleaseApplicationRequest = {    \n            appID: props.app!.ID,\n            appVersionIncType: releaseType.value!,\n            models: appModels.value,\n            description: description.value,\n        }\n        executor.execute(async () => {\n            await applicationVersionUseCase.releaseApplication(request);\n            close();\n        }, {loading: true})\n    }\n    function getLastRelasedVersion(incType: string) {\n        const [major, minor, fix] = props.app?.lastReleasedVersion ? props.app?.lastReleasedVersion.split(\".\").map(Number) : [0,0,0]\n        switch (incType) {\n            case 'Major':\n                return `${major + 1}.0.0`;\n            case 'Minor':\n                return `${major}.${minor + 1}.0`;\n            case 'Fix':\n                return `${major}.${minor}.${fix + 1}`;\n            default: return;\n        }\n    }\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _hoisted_3,\n      _createVNode(CustomSelect, {\n        class: \"select-app-version-type\",\n        options: releaseTypeOptions.value,\n        placeholder: 'Select Release Type',\n        selectedClass: 'selected-type',\n        onInput: setReleaseType,\n        disabledOptions: disabledOptions.value\n      }, null, 8 /* PROPS */, [\"options\", \"disabledOptions\"])\n    ]),\n    _createElementVNode(\"div\", _hoisted_4, [\n      _createVNode(IDEInput, {\n        isRequired: false,\n        elementId: \"descriptionInput\",\n        onValidateStatus: descriptionValidationStatus,\n        placeholder: \"\",\n        type: 'textarea',\n        value: description.value,\n        \"info-text\": \"Description\",\n        validations: validations.value.description,\n        onGetValue: setDescValue\n      }, null, 8 /* PROPS */, [\"value\", \"validations\"])\n    ]),\n    _createVNode(AppItemsTable, {\n      screenType: 'Create',\n      buttonCb: createNewAppVersion,\n      onGetItem: getItems,\n      platformSelection: {web: true, mobile: true},\n      onClose: close,\n      buttonDisableCond: _unref(buttonDisableCond)\n    }, null, 8 /* PROPS */, [\"buttonDisableCond\"])\n  ]))\n}\n}\n\n})","\n      import API from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./createAppVersion.vue?vue&type=style&index=0&id=0a397840&scoped=true&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./createAppVersion.vue?vue&type=style&index=0&id=0a397840&scoped=true&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./createAppVersion.vue?vue&type=style&index=1&id=0a397840&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./createAppVersion.vue?vue&type=style&index=1&id=0a397840&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","import script from \"./createAppVersion.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./createAppVersion.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./createAppVersion.vue?vue&type=style&index=0&id=0a397840&scoped=true&lang=css\"\nimport \"./createAppVersion.vue?vue&type=style&index=1&id=0a397840&lang=css\"\n\nimport exportComponent from \"/home/runner/work/studio/studio/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0a397840\"]])\n\nexport default __exports__"],"names":["___CSS_LOADER_EXPORT___","push","module","id","_withScopeId","n","_hoisted_1","class","_hoisted_2","_hoisted_3","key","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_","_hoisted_9","_hoisted_10","style","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","__name","props","screenType","platformSelection","buttonCb","type","Function","buttonDisableCond","Boolean","emits","setup","__props","emit","viewModel","IViewModel","viewModelManager","IViewModelManager","dialog","IDialog","executor","IUseCaseExecutor","fileDisplayerUseCase","IFileDisplayerUseCase","objectUseCase","IObjectUseCase","items","validations","selectedTarget","disabledOptions","publishTargets","modelHistories","importedModuleVersions","startScreen","dependencyMap","dependencyErrorStr","buttonNameDict","apps","find","app","ID","studio","appId","async","execute","Promise","all","executeUseCase","IListMultiModelVersions","then","res","value","IListMultiModuleVersions","map","Map","depMap","flatMapItems","item","objectType","version","owner","isModuleImported","moduleVersions","get","moduleVersion","relatedApplications","applicationID","importedVersion","importedModuleModel","filter","e","flatMap","relatedModelHistories","modelID","maxVersion","getItemMaxVersion","set","dependentModels","modelId","Array","historyItem","forEach","dependedTo","dependedBy","dependencies","depModelId","some","depId","initDependencies","appSettings","name","settingsData","checked","disabled","modelType","createAndAppendItem","newItem","uiSettingsID","CryptoHelper","uiSettingsModels","usageType","uiSettings","collapsed","imported","children","settings","childData","parent","undefined","level","handleParentCheckedStatus","uiAssetID","appAssetList","uiAssetList","anyChildChecked","allChildChecked","asset","childAsset","treeItems","cloneFileExplorerTreeView","displayFilterer","hasChildren","converter","treeItem","options","externalData","Error","tableData","getFullPath","split","length","ownerModule","child","isImportedModule","isUnmodifiable","importedModulesModel","tableDatas","traverser","handleItems","syncPublishTargets","validate","getItem","loading","allChildCheckedModulesCount","anyChildCheckedModulesCount","checkedRootLevelModelsCount","totalRootLevelCount","saveButtonDisable","web","validateStartScreen","validateDependencies","mainCheckboxState","isThereVersion","checkMaxVersionOfAllItems","isAllDependenciesOK","isStartScreenOK","result","modules","appLayerItems","additionals","isRootPage","f","findIndex","checkMap","mustBeCheckedMap","deps","dependedId","has","vals","firstItemID","keys","firstItemDeps","firstItemDepStr","findItem","join","size","versions","versionNumbers","v","parts","parseInt","sort","a","b","Math","floor","findMaxVersion","handleCollapse","childIterate","document","getElementById","display","checkAllDependents","recurseParent","dep","willCheckItem","handleItemCheckEvent","isModelDepended","c","targets","user","selectedOrganization","actions","publish","Object","entries","cloudTargetMap","disabledOptionList","i","index","cause","checkedPublishTargets","list","optionName","traverseSelectedItems","status","modulesHasNotAnEDModel","checkAndSetDisabledCauses","sortedTargets","updateDependencyMap","newVersion","versionDialog","clickedNode","state","text","cb","showDialog","closable","title","width","maxHeight","overflow","close","pureVal","azure","plateauGCP","includes","onTargetSelect","_ctx","_cache","minus","check","onClick","$event","modulesModel","getModelVisualInfo","icon","color","onInput","selectedOption","default","selectedClass","placeholder","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","applicationVersionUseCase","IApplicationVersionUseCase","releaseTypeOptions","getLastRelasedVersion","releaseType","isDescriptionValid","description","appModels","minAndMaxLength","min","max","availableCharacters","nonSpaceCharacter","setReleaseType","descriptionValidationStatus","isValid","setDescValue","desc","getItems","model","createNewAppVersion","request","appID","appVersionIncType","models","releaseApplication","incType","major","minor","fix","lastReleasedVersion","Number","IDEInput","isRequired","elementId","onValidateStatus","onGetValue","onGetItem","mobile","onClose"],"sourceRoot":""}