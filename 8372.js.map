{"version":3,"file":"8372.js?ver=0.0.329_1721814560971","mappings":"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","sources":["webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/workflowExportDialog.vue?2026","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/workflowExportDialog.vue?f708","webpack://qcloud_shell/../common/everything/workflow/helpers/modelSetup.ts","webpack://qcloud_shell/../common/helpers/idHelper.ts","webpack://qcloud_shell/./src/domain/useCase/ICreateWorkflowExportJob.ts","webpack://qcloud_shell/./src/domain/useCase/IFileDisplayerUseCase.ts","webpack://qcloud_shell/./src/domain/useCase/IListMultiModelVersions.ts","webpack://qcloud_shell/./src/domain/useCase/IListMultiModuleVersions.ts","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/workflowExportDialog.vue?0f6b","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/workflowExportDialog.vue?b446","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/workflowExportDialog.vue?3faf","webpack://qcloud_shell/./src/presentation/vue3/components/dialogs/publish/workflowExportDialog.vue"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.container[data-v-8ef20d50] {\\n    padding: 32px 20px 20px;\\n}\\n.settings-container[data-v-8ef20d50] {\\n    position: relative;\\n    top: 0px;\\n    left: 0px;\\n}\\n.custom-text[data-v-8ef20d50] {\\n    /* position: absolute; */\\n    font-family: 'Roboto';\\n    font-style: normal;\\n    font-weight: 500;\\n    font-size: 15px;\\n    line-height: 18px;\\n    /* left: 24px; */\\n    color: #212121;\\n}\\n\\n/* .custom-text.title{\\n    top: 92px;\\n}\\n\\n.custom-text.environment{\\n    top: 174px;\\n} */\\n.radio-button[data-v-8ef20d50] {\\n    position: absolute;\\n    top: 60px;\\n    left: 20px;\\n    cursor: pointer;\\n}\\n.radio-text[data-v-8ef20d50] {\\n    position: absolute;\\n    top: 59px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n    user-select: none;\\n    cursor: pointer;\\n}\\n.existing-app-url[data-v-8ef20d50] {\\n    position: absolute;\\n    width: 760px;\\n    height: 40px;\\n    top: 114px;\\n    left: 20px;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #bcbcbc;\\n    border-radius: 4px;\\n    font: normal normal normal 14px/19px Roboto;\\n    letter-spacing: 0px;\\n    padding: 10px 0px 10px 10px;\\n}\\n.url-error[data-v-8ef20d50] {\\n    border: 1px solid red;\\n}\\n.url-disable[data-v-8ef20d50] {\\n    opacity: 0.5;\\n}\\n.existing-app-url[data-v-8ef20d50]::placeholder {\\n    color: #bcbcbc;\\n    user-select: none;\\n}\\n.modules-selected-checkbox[data-v-8ef20d50] {\\n    cursor: pointer;\\n}\\n.modules-selected-text[data-v-8ef20d50] {\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #757575;\\n    margin: 0 0 13px 30px;\\n}\\n\\n/* .modules-selected-text.deploy {\\n    top: 257px;\\n} */\\n.text-number[data-v-8ef20d50] {\\n    font: normal normal bold 14px/19px Roboto;\\n    color: #212121;\\n}\\n.modules-datatable[data-v-8ef20d50] {\\n    width: 760px;\\n    height: 288px;\\n    border: 1px solid #bcbcbc;\\n    overflow-x: hidden;\\n    overflow-y: auto;\\n    margin-bottom: 20px;\\n}\\n\\n/* .modules-datatable.deploy {\\n    top: 286px;\\n} */\\n.modules-datatable[data-v-8ef20d50]::-webkit-scrollbar {\\n    width: 4px;\\n}\\n.modules-datatable[data-v-8ef20d50]::-webkit-scrollbar-thumb {\\n    background: #bcbcbc 0% 0% no-repeat padding-box;\\n    border-radius: 10px;\\n}\\n.modules-datatable[data-v-8ef20d50]::-webkit-scrollbar-thumb:hover {\\n    background: #555;\\n}\\n.row-container[data-v-8ef20d50] {\\n    width: 100%;\\n    height: 36px;\\n    position: relative;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #e0e0e0;\\n}\\n.chevron[data-v-8ef20d50] {\\n    position: absolute;\\n    left: 4px;\\n    color: #757575;\\n    font-size: 24px;\\n}\\n.chevron.disabled[data-v-8ef20d50] {\\n    pointer-events: none;\\n    color: #D5D5D5;\\n}\\n.module-checkbox[data-v-8ef20d50] {\\n    position: absolute;\\n    top: 10px;\\n    left: 43px;\\n    cursor: pointer;\\n}\\n.module-name[data-v-8ef20d50] {\\n    position: absolute;\\n    top: 9px;\\n    left: 69px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n.module-name.imported[data-v-8ef20d50] {\\n    top: 10px;\\n    left: 87px;\\n}\\n.module-name.disabled[data-v-8ef20d50] {\\n    color: #D5D5D5;\\n}\\n.model-checkbox[data-v-8ef20d50] {\\n    position: absolute;\\n    top: 10px;\\n    left: 59px;\\n    cursor: pointer;\\n}\\n.model-icon[data-v-8ef20d50] {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 85px;\\n}\\n.app-tier-model-icon[data-v-8ef20d50] {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 69px\\n}\\n.app-tier-model-name[data-v-8ef20d50] {\\n    position: absolute;\\n    top: 10px;\\n    left: 87px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n.app-tier-model-name.disabled[data-v-8ef20d50] {\\n    color: #D5D5D5;\\n}\\n.model-name[data-v-8ef20d50] {\\n    position: absolute;\\n    top: 9px;\\n    left: 103px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n.model-name.disabled[data-v-8ef20d50] {\\n    color: #D5D5D5;\\n}\\n.version-text[data-v-8ef20d50] {\\n    margin: 10px 7px 10px auto;\\n    display: table;\\n    font: normal normal normal 12px/16px Roboto;\\n    color: #757575;\\n    cursor: pointer;\\n    user-select: none;\\n}\\n.version-text.disabled[data-v-8ef20d50] {\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n.version-icon[data-v-8ef20d50] {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #D5D5D5;\\n}\\n.version-icon.disabled[data-v-8ef20d50] {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #EEEEEE;\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n.footer[data-v-8ef20d50] {\\n    position: relative;\\n    width: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: end;\\n}\\n.footer.deploy[data-v-8ef20d50] {\\n    position: relative;\\n    width: 100%;\\n}\\n.footer.export[data-v-8ef20d50] {\\n    margin-top: 102px;\\n}\\n.cancel-button[data-v-8ef20d50] {\\n    border-radius: 4px;\\n    user-select: none;\\n    font-style: normal;\\n    font-weight: 500;\\n    font-family: \\\"ROBOTO\\\";\\n    font-size: 15px;\\n    color: #757575;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n.save-button[data-v-8ef20d50] {\\n    background: #151233 0% 0% no-repeat padding-box;\\n    border-radius: 4px;\\n    user-select: none;\\n    font-weight: 500;\\n    font-size: 15px;\\n    color: #ffffff;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n.mobile-publish-text[data-v-8ef20d50],\\n.web-publish-text[data-v-8ef20d50] {\\n    padding: 5px 12px;\\n    margin-bottom: 52px;\\n    width: 100%;\\n    color: #757575;\\n    font-size: 14px;\\n    background: #F5F5FA;\\n    border-radius: 4px;\\n    display: flex;\\n    align-items: center;\\n}\\n.mobile-publish-text i[data-v-8ef20d50],\\n.web-publish-text i[data-v-8ef20d50] {\\n    font-size: 24px;\\n    color: #151233;\\n    margin-right: 4px;\\n}\\n.save-button.deploy[data-v-8ef20d50] {\\n    padding: 10px 16px;\\n}\\n.button-disable .save-button[data-v-8ef20d50] {\\n    color: #757575;\\n    cursor: default;\\n}\\n.button-disable .save-button:hover+.button-tooltip[data-v-8ef20d50],\\n.start-screen:hover .button-tooltip[data-v-8ef20d50],\\n.row-container:hover .button-tooltip[data-v-8ef20d50],\\n.publish-info:hover .button-tooltip[data-v-8ef20d50] {\\n    visibility: visible;\\n    transition: opacity 0.3s ease-out 1s;\\n    opacity: 1;\\n}\\n.button-tooltip[data-v-8ef20d50] {\\n    visibility: hidden;\\n    position: absolute;\\n    background: #757575;\\n    color: #FFFFFF;\\n    font-size: 11px;\\n    font-family: 'Roboto';\\n    text-align: center;\\n    border-radius: 4px;\\n    letter-spacing: 0.2px;\\n    padding: 6px 8px 6px 8px;\\n    top: 56px;\\n    left: 63px;\\n    opacity: 0;\\n}\\n.publish-info[data-v-8ef20d50] {\\n    color: #757575;\\n    font-size: 20px;\\n    margin-left: 10px;\\n}\\n.select-environment[data-v-8ef20d50] {\\n    width: 100%;\\n    font-size: 15px;\\n    height: 40px;\\n    line-height: 40px;\\n    margin-top: 4px\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/presentation/vue3/components/dialogs/publish/workflowExportDialog.vue\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"<template>\\n    <div class=\\\"container\\\">\\n        <div>\\n            <CheckboxComp :class=\\\"['modules-selected-checkbox']\\\"\\n                :minus=\\\"selectedItemsCount != totalItemsCount\\\" :check=\\\"selectedItemsCount == totalItemsCount\\\"\\n                @click=\\\"clickMainCheckbox\\\" />\\n            <div :class=\\\"['modules-selected-text']\\\">\\n                <span class=\\\"text-number\\\">{{ selectedItemsCount }}</span>\\n                of <span class=\\\"text-number\\\">{{ totalItemsCount }}</span> items selected\\n            </div>\\n        </div>\\n        <div :class=\\\"['modules-datatable']\\\" id=\\\"module-container-div\\\"> </div>\\n        <div :class=\\\"['footer','export']\\\">\\n            <div :class=\\\"['cancel-button', ]\\\" @click=\\\"emit('close')\\\">Cancel</div>\\n            <div :class=\\\"(isDownloadBtnDisable ? ' button-disable' : '')\\\"\\n                @click=\\\"!isDownloadBtnDisable && downloadBtnClicked()\\\">\\n                <span class=\\\"save-button \\\">DOWNLOAD</span>\\n                <span v-if=\\\"!isWorkflowExecutionItemsOK\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -80px; left: 626px; z-index: 1; width: 145px;\\\">'getUser' & 'nofify' flows not found. </span>\\n                <span v-if=\\\"!isThereVersion\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -80px; left: 626px; z-index: 1; width: 145px;\\\">There are no items ready to publish. At least\\n                    one of your items must be ready to publish.</span>\\n                <span v-else-if=\\\"!isAllDependenciesOK\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -95px; left: 644px; z-index: 1; width: 135px;\\\">{{ dependencyErrorStr }}</span>\\n            </div>\\n        </div>\\n    </div>\\n</template>\\n\\n\\n<script setup lang=\\\"ts\\\">\\nimport { computed,createApp,defineAsyncComponent,onMounted,ref } from \\\"vue\\\";\\nimport { ITableData } from \\\"../../../../../../../common/qCloudTemp/exporter\\\";\\nimport { IModuleRelatedModelItem } from \\\"../../../../../../../common/qCloudTemp/quickCloud\\\";\\nimport { container } from \\\"../../../../../domain/core/diContainer\\\";\\nimport { IModel,IModelHistoryInfo,IModule,IModuleVersion,IWorkflowExportItem } from \\\"../../../../../domain/model/models\\\";\\nimport { IDialog } from \\\"../../../../../domain/presentation/IDialog\\\";\\nimport { ITreeItem } from \\\"../../../../../domain/presentation/ITreeView\\\";\\nimport { ICreateWorkflowExportJob } from \\\"../../../../../domain/useCase/ICreateWorkflowExportJob\\\";\\nimport { FileDisplayerExternalData,IFileDisplayerUseCase } from \\\"../../../../../domain/useCase/IFileDisplayerUseCase\\\";\\nimport { FileExplorerConstants } from \\\"../../../../../domain/useCase/IFileExplorer\\\";\\nimport { IListMultiModelVersions } from \\\"../../../../../domain/useCase/IListMultiModelVersions\\\";\\nimport { IListMultiModuleVersions } from \\\"../../../../../domain/useCase/IListMultiModuleVersions\\\";\\nimport { IObjectUseCase } from \\\"../../../../../domain/useCase/IObjectUseCase\\\";\\nimport { IUseCaseExecutor } from \\\"../../../../../domain/useCase/IUseCaseExecutor\\\";\\nimport { IViewModel } from \\\"../../../../../domain/viewModel/IViewModel\\\";\\nimport CheckboxComp from \\\"../../checkboxComp.vue\\\";\\nimport ExportDialogItem from \\\"./components/exportDialogItem.vue\\\";\\nimport { ModelSetup } from \\\"../../../../../../../common/everything/workflow/helpers/modelSetup\\\";\\nimport { IModelTraverser } from \\\"../../../../../domain/useCase/IModelTraverser\\\";\\n\\nconst viewModel = container.resolve<IViewModel>(IViewModel);\\nconst dialog = container.resolve<IDialog>(IDialog);\\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\\nconst fileDisplayerUseCase = container.resolve<IFileDisplayerUseCase>(IFileDisplayerUseCase);\\nconst objectUseCase = container.resolve<IObjectUseCase>(IObjectUseCase);\\nconst modelTraverser = container.resolve<IModelTraverser>(IModelTraverser);\\n\\nconst emit = defineEmits([\\\"close\\\"]);\\nconst items = ref<Array<ITableData>>([]);\\nconst modelHistories = ref<Map<string, Array<IModelHistoryInfo>>>();\\nconst importedModuleVersions = ref<Map<string, Array<IModuleVersion>>>();\\nconst startScreen = ref<IModel>();\\nconst dependencyMap = ref<Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>>();\\nconst dependencyErrorStr = ref<string>('');\\n\\nconst allModels = modelTraverser.flattenAllModels();\\nconst overridingMap = new ModelSetup().createOverriderMap(allModels);\\n\\nonMounted(async () => {\\n    await executor.execute(async () => {\\n        const excludedTypes: Array<IModel[\\\"modelType\\\"]> = ['bpmn', 'process', 'entityDesigner', 'process'];\\n        await Promise.all([\\n            executor.executeUseCase<IListMultiModelVersions>(IListMultiModelVersions, { excludedTypes }).then(res => modelHistories.value = res),\\n            executor.executeUseCase<IListMultiModuleVersions>(IListMultiModuleVersions, {}).then(res => importedModuleVersions.value = res)\\n        ]);\\n        initDependencies();\\n        handleItems();\\n    }, { loading: true });\\n})\\n\\nconst totalItemsCount = computed<number>(() => countItems(items.value));\\nconst selectedItemsCount = computed<number>(() => countItems(items.value, true));\\n\\nconst countItems = (arr:Array<ITableData>, useCheckedFilter = false) => {\\n  return arr.reduce((acc, item) => {\\n    if(useCheckedFilter && (item?.anyChildChecked == false || item?.checked == false)) return acc;\\n    let count = 1;\\n    if (item?.children) {\\n      count += countItems(item.children, useCheckedFilter);\\n    }\\n    return acc + count;\\n  }, 0);\\n};\\n\\nconst isDownloadBtnDisable = computed(validate);\\n// const mainCheckboxState = computed(() => items.value.length == allChildCheckedModulesCount.value ? true\\n//     : (anyChildCheckedModulesCount.value + checkedRootLevelModelsCount.value > 0 ? false : undefined));\\nconst isThereVersion = computed(() => checkMaxVersionOfAllItems());\\nconst isWorkflowExecutionItemsOK = computed(() => checkWorkflowExecutionItems());\\nconst isAllDependenciesOK = computed(validateDependencies)\\n\\nfunction validate() {\\n    return !items.value.some((item) => item.checked || item.anyChildChecked) || !validateDependencies() || !checkWorkflowExecutionItems();\\n}\\n\\n\\nfunction validateDependencies() {\\n    const checkMap = new Map<string, boolean>();\\n    items.value.forEach(item => {\\n        if (item.type == 'module' && item.children && item.children.length > 0)\\n            item.children.forEach(child => checkMap.set(child.id, child.checked == true))\\n        else\\n            checkMap.set(item.id, item.checked == true)\\n    })\\n\\n    const mustBeCheckedMap = new Map<string, Array<string>>();\\n    dependencyMap.value?.forEach((deps, id) => {\\n        if (!checkMap.get(id))\\n            return;\\n\\n        deps.dependedTo.forEach(dependedId => {\\n            if (checkMap.get(dependedId))\\n                return;\\n\\n            if (mustBeCheckedMap.has(id)) {\\n                const vals = mustBeCheckedMap.get(id)!\\n                vals.push(dependedId)\\n                mustBeCheckedMap.set(id, vals)\\n            } else {\\n                mustBeCheckedMap.set(id, [dependedId])\\n            }\\n\\n        });\\n    })\\n\\n    //set deps error text\\n    const [firstItemID] = mustBeCheckedMap.keys();\\n    if (firstItemID) {\\n        const firstItemDeps = mustBeCheckedMap.get(firstItemID);\\n        const firstItemDepStr = firstItemDeps ? firstItemDeps.map(findItem).map(e => e?.name).join(', ') : '';\\n        dependencyErrorStr.value = `Select ${firstItemDepStr} first. ${findItem(firstItemID)?.name} depends on ${firstItemDepStr}.`\\n    }\\n\\n    return mustBeCheckedMap.size == 0\\n}\\n\\n\\nfunction findItem(ID: string) {\\n    for (const item of items.value) {\\n        if (item.type != 'module' && item.id == ID)\\n            return item;\\n        if (item.type == 'module' && item.children && item.children.length > 0) {\\n            const f = item.children.find(e => e.id == ID)\\n            if (f) return f\\n        }\\n    }\\n}\\n\\nfunction initDependencies() {\\n    const map = new Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>();\\n    const depMap = new Map<string, Array<string>>();\\n\\n    modelTraverser.flattenAllModels().forEach(item => {\\n        const isImportedModule = item.owner.objectType == \\\"module\\\" && objectUseCase.isModuleImported(item.owner);\\n\\n        let version: string | undefined;\\n        if (!isImportedModule) {\\n            const maxVersion = getItemMaxVersion(item)\\n            if (!maxVersion)\\n                return depMap.set(item.ID, item.dependentModels ? item.dependentModels.map(e => e.modelId) : Array<string>());\\n            version = maxVersion;\\n        }\\n        else {\\n            const moduleVersions = importedModuleVersions.value?.get(item.owner.ID)\\n            const moduleVersion = (item.owner as IModule).relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion\\n\\n            const importedModuleModel = moduleVersions?.filter(e => e.version == moduleVersion).flatMap(e => e.relatedModelHistories).find(e => e.modelID == item.ID)\\n            version = importedModuleModel?.version\\n        }\\n\\n        const historyItem = modelHistories.value?.get(item.ID)?.find(e => e.version == version);\\n        const deps = historyItem?.dependentModels ? historyItem?.dependentModels.map(e => e.modelId).map(e => overridingMap.get(e) || e) : Array<string>()\\n        depMap.set(item.ID, deps);\\n    });\\n\\n\\n    depMap.forEach((dependedTo, modelId) => {\\n        const dependedBy = Array<string>();\\n        depMap.forEach((dependencies, depModelId) => {\\n            if (dependencies.some(depId => depId == modelId))\\n                dependedBy.push(depModelId)\\n        })\\n        map.set(modelId, { dependedBy, dependedTo });\\n    })\\n    dependencyMap.value = map;\\n}\\n\\nfunction isModelDepended(item: ITableData) {\\n    const deps = dependencyMap.value?.get(item.id)?.dependedBy\\n    if (!deps) return false;\\n\\n    return deps.some(dep => items.value.some(item => {\\n        if (item.type == 'module' && item.anyChildChecked) {\\n            return item.children?.some(child => child.checked && child.id == dep)\\n        }\\n        return item.id == dep && item.checked\\n    }));\\n}\\nfunction createDialogComp(item: ITableData) {\\n    const newChild = createApp(ExportDialogItem, {\\n        handleItemCheckEvent,\\n        startScreen,\\n        versionDialog,\\n        handleCollapse,\\n        item: item,\\n        moduleVersionDialog\\n    });\\n    const mountEl = document.createElement('div');\\n    newChild.mount(mountEl);\\n    const parentEl = document.getElementById('module-container-div');\\n    parentEl?.appendChild(mountEl);\\n}\\nfunction createAndAppendItem({ newItem }: { newItem: ITableData }) {\\n    if(!newItem.overridden){\\n        createDialogComp(newItem);\\n        items.value.push(newItem);\\n    }\\n}\\n\\nfunction handleItems() {\\n    const treeItems = fileDisplayerUseCase.cloneFileExplorerTreeView({\\n        displayFilterer: (item, hasChildren) => {\\n            switch (item.ID) { case FileExplorerConstants.uiAssetListID: case FileExplorerConstants.uiSettingsID: return false; default: break; }\\n            switch (item.objectType) {\\n                case \\\"application\\\": return false;\\n                case \\\"module\\\": return true;\\n                case \\\"folder\\\": return hasChildren;\\n                case \\\"model\\\": return true;\\n            }\\n        },\\n    });\\n\\n    const converter = (treeItem: ITreeItem<FileDisplayerExternalData>, options: {ownerModule?: {isImportedModule: boolean;moduleVersion: string | undefined;relatedModelHistories: IModuleRelatedModelItem[] | undefined}}): ITableData => {\\n        const item = treeItem.externalData;\\n        if (item.objectType == \\\"application\\\") { throw new Error(\\\"unexpected item type\\\"); }\\n\\n        const fullPath = objectUseCase.getFullPath(item, \\\"self\\\");\\n        let level = fullPath.split(\\\"/\\\").length - 1;\\n\\n        let tableData: ITableData;\\n        switch(item.objectType) {\\n            case \\\"folder\\\":\\n                tableData = {\\n                    id: item.ID, name: item.name, type: \\\"folder\\\", collapsed: true, level,\\n                    children: treeItem.children?.map((item) => converter(item, { ownerModule: options.ownerModule })),\\n                };\\n                tableData.children?.forEach(child => child.parent = tableData);\\n                handleParentCheckedStatus(tableData, false);\\n                break;\\n            case \\\"model\\\":\\n                if (options.ownerModule) {\\n                    tableData = { id: item.ID, name: item.name, type: item.modelType, level, overridden: item.overridden}; //FIXME: set overridden status to externalData\\n                    if (!options.ownerModule.isImportedModule || item.isUnmodifiable) {\\n                        const maxVersion = getItemMaxVersion(item);\\n                        tableData = {\\n                            ...tableData,\\n                            checked: maxVersion ? true : item.isUnmodifiable,\\n                            disabled: maxVersion ? false : !item.isUnmodifiable,\\n                            version: maxVersion || 'latest',\\n                        };\\n                    } else {\\n                        const importedModulesModel = options.ownerModule.relatedModelHistories?.find(e => e.modelID == item.ID)\\n                        tableData = { ...tableData, checked: true, disabled: false, version: importedModulesModel?.version, overridden: item.overridden };\\n                    }\\n                } else {\\n                    const maxVersion = getItemMaxVersion(item);\\n                    tableData = {\\n                        id: item.ID,\\n                        name: item.name,\\n                        checked: maxVersion ? true : item.isUnmodifiable,\\n                        disabled: maxVersion ? false : !item.isUnmodifiable,\\n                        type: item.modelType,\\n                        version: maxVersion || 'latest',\\n                        level,\\n                        overridden: item.overridden,\\n                    };\\n                }\\n                break;\\n            case \\\"module\\\":\\n                const isImportedModule = objectUseCase.isModuleImported(item);\\n                const moduleVersion = item.relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion;\\n                const relatedModelHistories = isImportedModule ? importedModuleVersions.value?.get(item.ID)?.find(module => module.version == moduleVersion)?.relatedModelHistories : undefined\\n                \\n                tableData = {\\n                    id: item.ID,\\n                    collapsed: true,\\n                    name: item.name,\\n                    type: \\\"module\\\",\\n                    imported: isImportedModule,\\n                    version: moduleVersion,\\n                    children: treeItem.children?.map((item) => converter(item, {ownerModule: {isImportedModule, moduleVersion, relatedModelHistories}})),\\n                }\\n                tableData.children?.forEach(child => child.parent = tableData);\\n                handleParentCheckedStatus(tableData, false);\\n                break;\\n        }\\n        return tableData;\\n    };\\n    const tableDatas = treeItems.map(item => converter(item, {}));\\n\\n    const traverser = (tableData: ITableData) => {\\n        createAndAppendItem({ newItem: tableData });\\n        tableData.children?.forEach(traverser);\\n    };\\n    \\n    tableDatas.forEach(traverser);\\n}\\n\\nfunction getItemMaxVersion(item: IModel): string | undefined {\\n    if (!modelHistories.value?.has(item.ID))\\n        return undefined;\\n\\n    const versions = modelHistories.value.get(item.ID);\\n    if (!versions)\\n        return undefined;\\n\\n    const findMaxVersion = (versions: Array<string>) => {\\n        const versionNumbers = versions.map(v => {\\n            const parts: Array<string> = v.split(\\\".\\\");\\n            return parseInt(parts[0]) * 10 + parseInt(parts[1]) * 1;\\n        })\\n\\n        versionNumbers.sort((a, b) => b - a);\\n\\n        const maxVersion = versionNumbers[0];\\n        return `${Math.floor(maxVersion / 10)}.${maxVersion % 10}`;\\n    }\\n\\n    return findMaxVersion(versions.map(e => e.version!));\\n\\n}\\n\\nfunction checkMaxVersionOfAllItems() {\\n    let isThereVersion: boolean = false;\\n    items.value.forEach(item => {\\n        if (item.type == \\\"module\\\") {\\n            item.children?.forEach(child => {\\n                if (child.version) {\\n                    isThereVersion = true;\\n                }\\n\\n            })\\n        }\\n        else {\\n            if (item.version) {\\n                isThereVersion = true;\\n            }\\n        }\\n    })\\n    return isThereVersion;\\n}\\n\\n//FIXME: Tum objectler check edilmeli.\\nfunction checkWorkflowExecutionItems() {\\n    let getUserOK = false, notifyOK = false;\\n    const fn = (item: ITableData, name: string, type: string) => item.checked && item.type == type && item.name === name;\\n    for(const item of items.value) {\\n        if(getUserOK && notifyOK) break;\\n        if (item.type == \\\"module\\\" && item.children) {\\n            if(!getUserOK) getUserOK = item.children.some(e => fn(e, 'getUser', 'flow'));\\n            if(!notifyOK) notifyOK = item.children.some(e => fn(e, 'notify', 'flow'));\\n        }\\n        else {\\n            if(!getUserOK) getUserOK = !!fn(item, 'getUser', 'flow');\\n            if(!notifyOK) notifyOK = !!fn(item, 'notify', 'flow');\\n        }\\n    }\\n    return getUserOK && notifyOK;\\n}\\n\\nfunction clickMainCheckbox(){\\n    const checked = totalItemsCount.value == selectedItemsCount.value;\\n    items.value.filter(e => !e?.disabled).forEach((item) => {\\n        item.checked = !checked;\\n        const allItemsCheckable = item.allChildChecked != undefined && item.children && item.children.length > 0 && !item.children.some(c => c.disabled);\\n        if (allItemsCheckable) item.allChildChecked = !checked;\\n        if (item.anyChildChecked != undefined) item.anyChildChecked = !checked;\\n        if (item.children) item.children.filter(c => !c.disabled).forEach((child) => (child.checked = !checked));\\n    });\\n}\\n\\n\\nfunction handleCollapse(item: ITableData, childIterate?: boolean, collapsed?: boolean) {\\n    item.collapsed = collapsed !== undefined ? collapsed : !item.collapsed;\\n    if (childIterate) {\\n        item.children?.forEach(child => {\\n            const childEl = document.getElementById(child.id);\\n            childEl!.style.display = item.collapsed ? \\\"none\\\" : \\\"block\\\";\\n            handleCollapse(child, childIterate, item.collapsed);\\n        })\\n    }\\n}\\n\\nfunction checkAllDependents(item: ITableData, recurseParent: boolean) {\\n    if (item.disabled || item.checked) return;\\n\\n    item.checked = true\\n    item.parent && handleParentCheckedStatus(item.parent, recurseParent);\\n\\n    const deps = dependencyMap.value?.get(item.id)?.dependedTo\\n    if (!deps) return;\\n\\n    deps.forEach(dep => {\\n        items.value.forEach(item => {\\n            if (item.type == 'module' && !item.allChildChecked) {\\n                const willCheckItem = item.children?.find(child => !child.checked && child.id == dep)\\n                willCheckItem && checkAllDependents(willCheckItem, recurseParent);\\n                handleParentCheckedStatus(item, recurseParent);\\n                return;\\n            }\\n\\n            if (!item.checked && item.id == dep) {\\n                checkAllDependents(item, recurseParent);\\n                item.parent && handleParentCheckedStatus(item.parent, recurseParent);\\n            }\\n        })\\n    });\\n}\\n\\nfunction handleItemCheckEvent(item: ITableData) {\\n    if (item.disabled || isModelDepended(item) || item.name == 'App Settings')\\n        return;\\n\\n    if (item.type != \\\"module\\\" && item.type != \\\"folder\\\") {\\n        if (item.checked) {\\n            item.checked = false;\\n            item.parent && handleParentCheckedStatus(item.parent, true);\\n        } else {\\n            checkAllDependents(item, true);\\n        }\\n    } else {\\n        if (item.children && item.children.filter(c => !c.disabled).length > 0) {\\n            if (item.anyChildChecked) {\\n                item.children.filter(c => !c.disabled).forEach(child => child.checked = false);\\n                item.checked = false;\\n                handleParentCheckedStatus(item, true);\\n            } else {\\n                item.children.forEach(child => checkAllDependents(child, true));\\n                item.checked = true;\\n            }\\n        }\\n        else {\\n            item.checked = !item.checked;\\n            item.allChildChecked = false;\\n        }\\n    }\\n\\n}\\n\\nfunction handleParentCheckedStatus(item: ITableData, recurseParent: boolean) {\\n    item.disabled = item.children && (item.children.length == 0 || !item.children?.some(child => !child.disabled))\\n    item.allChildChecked = item.children && item.children.length > 0 && !item.children.some((child) => !child.checked || child.disabled);\\n    item.anyChildChecked = item.children?.some((child) => child.checked && !child.disabled);\\n    if (recurseParent && item.parent) {\\n        handleParentCheckedStatus(item.parent, true);\\n    }\\n}\\n\\nfunction updateDependencyMap(newVersion: string, item: ITableData) {\\n    const deps = dependencyMap.value?.get(item.id);\\n    dependencyMap.value?.set(item.id, {\\n        dependedBy: deps?.dependedBy || Array<string>(),\\n        dependedTo: modelHistories.value?.get(item.id)?.find(e => e.version == newVersion)?.dependentModels?.map(e => e.modelId) || Array<string>()\\n    })\\n}\\n\\nfunction versionDialog(item: ITableData) {\\n    const clickedNode = { id: item.id, state: { checked: item.checked }, text: item.name, type: item.type, version: item.version };\\n    const hasAnyVersion = modelHistories.value?.has(item.id);\\n    const options = {\\n        clickedNode, cb: (version: string) => {\\n            item.version = version;\\n            updateDependencyMap(version, item);\\n        }\\n    } as any;\\n\\n    if (hasAnyVersion) {\\n        options.versions = modelHistories.value?.get(item.id)\\n    }\\n    dialog.showDialog(\\n        defineAsyncComponent(() => import(\\\"../../application/modelVersionDialog.vue\\\")),\\n        { closable: true, title: \\\"Change Version\\\", width: \\\"1080px\\\", maxHeight: \\\"500px\\\", overflow: \\\"auto\\\" }, options\\n    );\\n}\\n\\nfunction moduleVersionDialog(item: ITableData) {\\n    dialog.showDialog(\\n        defineAsyncComponent(() => import(\\\"../../application/moduleVersionDialog.vue\\\")),\\n        { closable: true, title: \\\"Change Version\\\", width: \\\"1080px\\\", maxHeight: \\\"500px\\\", overflow: \\\"auto\\\" },\\n        {\\n            module: { ID: item.id }, versions: importedModuleVersions.value?.get(item.id), cb: (moduleVersion: IModuleVersion) => {\\n                item.version = moduleVersion.version;\\n                item.children?.forEach(child => {\\n                    const modulesModel = moduleVersion.relatedModelHistories.find(e => e.modelID == child.id)\\n                    child.version = modulesModel?.version\\n                    updateDependencyMap(modulesModel?.version!, child);\\n                })\\n            }\\n        }\\n    );\\n}\\n\\nasync function downloadBtnClicked() {\\n    executor.execute(\\n        async () => {\\n            const items = getJobItems();\\n            await executor.executeUseCase<ICreateWorkflowExportJob>(ICreateWorkflowExportJob, { items });\\n            emit(\\\"close\\\");\\n    },{ loading: true });\\n}\\n\\nfunction getJobItems(): Array<IWorkflowExportItem> {\\n    const findCheckedItems = (item: ITableData): Array<IWorkflowExportItem> | undefined => {\\n        if(!item.version || !item.checked) return;\\n\\n        if(item.type != 'module' && item.type != 'folder')\\n            return [{ ID: item.id, version: item.version }];\\n        \\n        if(!item.anyChildChecked) return;\\n\\n        const children = Array<IWorkflowExportItem>();\\n        item.children?.forEach(ch => {\\n            const childList = findCheckedItems(ch);\\n            if(childList && childList.length > 0) Array.prototype.push.apply(children, childList);\\n        });\\n        return children;\\n    }\\n\\n    const jobItems = Array<IWorkflowExportItem>();\\n    items.value.forEach(e => {\\n        const itemList = findCheckedItems(e);\\n        if(itemList && itemList.length > 0) Array.prototype.push.apply(jobItems, itemList);\\n    });\\n    return jobItems;\\n\\n}\\n\\n</script>\\n\\n\\n<style scoped>\\n.container {\\n    padding: 32px 20px 20px;\\n}\\n\\n.settings-container {\\n    position: relative;\\n    top: 0px;\\n    left: 0px;\\n}\\n\\n.custom-text {\\n    /* position: absolute; */\\n    font-family: 'Roboto';\\n    font-style: normal;\\n    font-weight: 500;\\n    font-size: 15px;\\n    line-height: 18px;\\n    /* left: 24px; */\\n    color: #212121;\\n}\\n\\n/* .custom-text.title{\\n    top: 92px;\\n}\\n\\n.custom-text.environment{\\n    top: 174px;\\n} */\\n\\n.radio-button {\\n    position: absolute;\\n    top: 60px;\\n    left: 20px;\\n    cursor: pointer;\\n}\\n\\n.radio-text {\\n    position: absolute;\\n    top: 59px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n    user-select: none;\\n    cursor: pointer;\\n}\\n\\n.existing-app-url {\\n    position: absolute;\\n    width: 760px;\\n    height: 40px;\\n    top: 114px;\\n    left: 20px;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #bcbcbc;\\n    border-radius: 4px;\\n    font: normal normal normal 14px/19px Roboto;\\n    letter-spacing: 0px;\\n    padding: 10px 0px 10px 10px;\\n}\\n\\n.url-error {\\n    border: 1px solid red;\\n}\\n\\n.url-disable {\\n    opacity: 0.5;\\n}\\n\\n.existing-app-url::placeholder {\\n    color: #bcbcbc;\\n    user-select: none;\\n}\\n\\n.modules-selected-checkbox {\\n    cursor: pointer;\\n}\\n\\n.modules-selected-text {\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #757575;\\n    margin: 0 0 13px 30px;\\n    ;\\n}\\n\\n/* .modules-selected-text.deploy {\\n    top: 257px;\\n} */\\n\\n.text-number {\\n    font: normal normal bold 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.modules-datatable {\\n    width: 760px;\\n    height: 288px;\\n    border: 1px solid #bcbcbc;\\n    overflow-x: hidden;\\n    overflow-y: auto;\\n    margin-bottom: 20px;\\n}\\n\\n/* .modules-datatable.deploy {\\n    top: 286px;\\n} */\\n\\n.modules-datatable::-webkit-scrollbar {\\n    width: 4px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar-thumb {\\n    background: #bcbcbc 0% 0% no-repeat padding-box;\\n    border-radius: 10px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar-thumb:hover {\\n    background: #555;\\n}\\n\\n.row-container {\\n    width: 100%;\\n    height: 36px;\\n    position: relative;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #e0e0e0;\\n}\\n\\n.chevron {\\n    position: absolute;\\n    left: 4px;\\n    color: #757575;\\n    font-size: 24px;\\n}\\n\\n.chevron.disabled {\\n    pointer-events: none;\\n    color: #D5D5D5;\\n}\\n\\n.module-checkbox {\\n    position: absolute;\\n    top: 10px;\\n    left: 43px;\\n    cursor: pointer;\\n}\\n\\n.module-name {\\n    position: absolute;\\n    top: 9px;\\n    left: 69px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.module-name.imported {\\n    top: 10px;\\n    left: 87px;\\n}\\n\\n.module-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.model-checkbox {\\n    position: absolute;\\n    top: 10px;\\n    left: 59px;\\n    cursor: pointer;\\n}\\n\\n.model-icon {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 85px;\\n}\\n\\n.app-tier-model-icon {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 69px\\n}\\n\\n.app-tier-model-name {\\n    position: absolute;\\n    top: 10px;\\n    left: 87px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.app-tier-model-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.model-name {\\n    position: absolute;\\n    top: 9px;\\n    left: 103px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.model-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.version-text {\\n    margin: 10px 7px 10px auto;\\n    display: table;\\n    font: normal normal normal 12px/16px Roboto;\\n    color: #757575;\\n    cursor: pointer;\\n    user-select: none;\\n}\\n\\n.version-text.disabled {\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n\\n.version-icon {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #D5D5D5;\\n}\\n\\n.version-icon.disabled {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #EEEEEE;\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n\\n.footer {\\n    position: relative;\\n    width: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: end;\\n}\\n\\n.footer.deploy {\\n    position: relative;\\n    width: 100%;\\n}\\n\\n.footer.export {\\n    margin-top: 102px;\\n}\\n\\n.cancel-button {\\n    border-radius: 4px;\\n    user-select: none;\\n    font-style: normal;\\n    font-weight: 500;\\n    font-family: \\\"ROBOTO\\\";\\n    font-size: 15px;\\n    color: #757575;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n\\n\\n\\n.save-button {\\n    background: #151233 0% 0% no-repeat padding-box;\\n    border-radius: 4px;\\n    user-select: none;\\n    font-weight: 500;\\n    font-size: 15px;\\n    color: #ffffff;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n\\n.mobile-publish-text,\\n.web-publish-text {\\n    padding: 5px 12px;\\n    margin-bottom: 52px;\\n    width: 100%;\\n    color: #757575;\\n    font-size: 14px;\\n    background: #F5F5FA;\\n    border-radius: 4px;\\n    display: flex;\\n    align-items: center;\\n}\\n\\n.mobile-publish-text i,\\n.web-publish-text i {\\n    font-size: 24px;\\n    color: #151233;\\n    margin-right: 4px;\\n}\\n\\n.save-button.deploy {\\n    padding: 10px 16px;\\n}\\n\\n.button-disable .save-button {\\n    color: #757575;\\n    cursor: default;\\n}\\n\\n.button-disable .save-button:hover+.button-tooltip,\\n.start-screen:hover .button-tooltip,\\n.row-container:hover .button-tooltip,\\n.publish-info:hover .button-tooltip {\\n    visibility: visible;\\n    transition: opacity 0.3s ease-out 1s;\\n    opacity: 1;\\n}\\n\\n.button-tooltip {\\n    visibility: hidden;\\n    position: absolute;\\n    background: #757575;\\n    color: #FFFFFF;\\n    font-size: 11px;\\n    font-family: 'Roboto';\\n    text-align: center;\\n    border-radius: 4px;\\n    letter-spacing: 0.2px;\\n    padding: 6px 8px 6px 8px;\\n    top: 56px;\\n    left: 63px;\\n    opacity: 0;\\n}\\n\\n.publish-info {\\n    color: #757575;\\n    font-size: 20px;\\n    margin-left: 10px;\\n}\\n\\n.select-environment {\\n    width: 100%;\\n    font-size: 15px;\\n    height: 40px;\\n    line-height: 40px;\\n    margin-top: 4px\\n}\\n</style>\\n\\n<style>\\n.selected-environment {\\n    background-color: transparent;\\n    border-radius: 4px;\\n    border: 1px solid #BCBCBC;\\n    color: #212121;\\n    padding-left: 12px;\\n}\\n\\n.custom-placeholder:empty:before {\\n    color: #BCBCBC !important;\\n    font-weight: 400;\\n}\\n\\n.custom-select .items .option {\\n    font-size: 14px;\\n    padding-left: 12px;\\n    line-height: 32px;\\n}\\n\\n.custom-select .items .option:hover {\\n    background-color: #EEEEEE;\\n    color: #212121;\\n}\\n\\n.custom-select .items .option.disabled:hover {\\n    background-color: #FFFFFF;\\n    color: #212121;\\n}\\n\\n.custom-select.select-environment .items {\\n    margin-top: 4px;\\n    color: #212121;\\n    border-radius: 4px;\\n    border: 1px solid #E3E3E3;\\n    overflow: hidden;\\n    background-color: #FFFFFF;\\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\\n    position: static !important;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.selected-environment {\\n    background-color: transparent;\\n    border-radius: 4px;\\n    border: 1px solid #BCBCBC;\\n    color: #212121;\\n    padding-left: 12px;\\n}\\n.custom-placeholder:empty:before {\\n    color: #BCBCBC !important;\\n    font-weight: 400;\\n}\\n.custom-select .items .option {\\n    font-size: 14px;\\n    padding-left: 12px;\\n    line-height: 32px;\\n}\\n.custom-select .items .option:hover {\\n    background-color: #EEEEEE;\\n    color: #212121;\\n}\\n.custom-select .items .option.disabled:hover {\\n    background-color: #FFFFFF;\\n    color: #212121;\\n}\\n.custom-select.select-environment .items {\\n    margin-top: 4px;\\n    color: #212121;\\n    border-radius: 4px;\\n    border: 1px solid #E3E3E3;\\n    overflow: hidden;\\n    background-color: #FFFFFF;\\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\\n    position: static !important;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/presentation/vue3/components/dialogs/publish/workflowExportDialog.vue\"],\"names\":[],\"mappings\":\";AAm4BA;IACI,6BAA6B;IAC7B,kBAAkB;IAClB,yBAAyB;IACzB,cAAc;IACd,kBAAkB;AACtB;AAEA;IACI,yBAAyB;IACzB,gBAAgB;AACpB;AAEA;IACI,eAAe;IACf,kBAAkB;IAClB,iBAAiB;AACrB;AAEA;IACI,yBAAyB;IACzB,cAAc;AAClB;AAEA;IACI,yBAAyB;IACzB,cAAc;AAClB;AAEA;IACI,eAAe;IACf,cAAc;IACd,kBAAkB;IAClB,yBAAyB;IACzB,gBAAgB;IAChB,yBAAyB;IACzB,0CAA0C;IAC1C,2BAA2B;AAC/B\",\"sourcesContent\":[\"<template>\\n    <div class=\\\"container\\\">\\n        <div>\\n            <CheckboxComp :class=\\\"['modules-selected-checkbox']\\\"\\n                :minus=\\\"selectedItemsCount != totalItemsCount\\\" :check=\\\"selectedItemsCount == totalItemsCount\\\"\\n                @click=\\\"clickMainCheckbox\\\" />\\n            <div :class=\\\"['modules-selected-text']\\\">\\n                <span class=\\\"text-number\\\">{{ selectedItemsCount }}</span>\\n                of <span class=\\\"text-number\\\">{{ totalItemsCount }}</span> items selected\\n            </div>\\n        </div>\\n        <div :class=\\\"['modules-datatable']\\\" id=\\\"module-container-div\\\"> </div>\\n        <div :class=\\\"['footer','export']\\\">\\n            <div :class=\\\"['cancel-button', ]\\\" @click=\\\"emit('close')\\\">Cancel</div>\\n            <div :class=\\\"(isDownloadBtnDisable ? ' button-disable' : '')\\\"\\n                @click=\\\"!isDownloadBtnDisable && downloadBtnClicked()\\\">\\n                <span class=\\\"save-button \\\">DOWNLOAD</span>\\n                <span v-if=\\\"!isWorkflowExecutionItemsOK\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -80px; left: 626px; z-index: 1; width: 145px;\\\">'getUser' & 'nofify' flows not found. </span>\\n                <span v-if=\\\"!isThereVersion\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -80px; left: 626px; z-index: 1; width: 145px;\\\">There are no items ready to publish. At least\\n                    one of your items must be ready to publish.</span>\\n                <span v-else-if=\\\"!isAllDependenciesOK\\\" class=\\\"button-tooltip\\\"\\n                    style=\\\"top: -95px; left: 644px; z-index: 1; width: 135px;\\\">{{ dependencyErrorStr }}</span>\\n            </div>\\n        </div>\\n    </div>\\n</template>\\n\\n\\n<script setup lang=\\\"ts\\\">\\nimport { computed,createApp,defineAsyncComponent,onMounted,ref } from \\\"vue\\\";\\nimport { ITableData } from \\\"../../../../../../../common/qCloudTemp/exporter\\\";\\nimport { IModuleRelatedModelItem } from \\\"../../../../../../../common/qCloudTemp/quickCloud\\\";\\nimport { container } from \\\"../../../../../domain/core/diContainer\\\";\\nimport { IModel,IModelHistoryInfo,IModule,IModuleVersion,IWorkflowExportItem } from \\\"../../../../../domain/model/models\\\";\\nimport { IDialog } from \\\"../../../../../domain/presentation/IDialog\\\";\\nimport { ITreeItem } from \\\"../../../../../domain/presentation/ITreeView\\\";\\nimport { ICreateWorkflowExportJob } from \\\"../../../../../domain/useCase/ICreateWorkflowExportJob\\\";\\nimport { FileDisplayerExternalData,IFileDisplayerUseCase } from \\\"../../../../../domain/useCase/IFileDisplayerUseCase\\\";\\nimport { FileExplorerConstants } from \\\"../../../../../domain/useCase/IFileExplorer\\\";\\nimport { IListMultiModelVersions } from \\\"../../../../../domain/useCase/IListMultiModelVersions\\\";\\nimport { IListMultiModuleVersions } from \\\"../../../../../domain/useCase/IListMultiModuleVersions\\\";\\nimport { IObjectUseCase } from \\\"../../../../../domain/useCase/IObjectUseCase\\\";\\nimport { IUseCaseExecutor } from \\\"../../../../../domain/useCase/IUseCaseExecutor\\\";\\nimport { IViewModel } from \\\"../../../../../domain/viewModel/IViewModel\\\";\\nimport CheckboxComp from \\\"../../checkboxComp.vue\\\";\\nimport ExportDialogItem from \\\"./components/exportDialogItem.vue\\\";\\nimport { ModelSetup } from \\\"../../../../../../../common/everything/workflow/helpers/modelSetup\\\";\\nimport { IModelTraverser } from \\\"../../../../../domain/useCase/IModelTraverser\\\";\\n\\nconst viewModel = container.resolve<IViewModel>(IViewModel);\\nconst dialog = container.resolve<IDialog>(IDialog);\\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\\nconst fileDisplayerUseCase = container.resolve<IFileDisplayerUseCase>(IFileDisplayerUseCase);\\nconst objectUseCase = container.resolve<IObjectUseCase>(IObjectUseCase);\\nconst modelTraverser = container.resolve<IModelTraverser>(IModelTraverser);\\n\\nconst emit = defineEmits([\\\"close\\\"]);\\nconst items = ref<Array<ITableData>>([]);\\nconst modelHistories = ref<Map<string, Array<IModelHistoryInfo>>>();\\nconst importedModuleVersions = ref<Map<string, Array<IModuleVersion>>>();\\nconst startScreen = ref<IModel>();\\nconst dependencyMap = ref<Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>>();\\nconst dependencyErrorStr = ref<string>('');\\n\\nconst allModels = modelTraverser.flattenAllModels();\\nconst overridingMap = new ModelSetup().createOverriderMap(allModels);\\n\\nonMounted(async () => {\\n    await executor.execute(async () => {\\n        const excludedTypes: Array<IModel[\\\"modelType\\\"]> = ['bpmn', 'process', 'entityDesigner', 'process'];\\n        await Promise.all([\\n            executor.executeUseCase<IListMultiModelVersions>(IListMultiModelVersions, { excludedTypes }).then(res => modelHistories.value = res),\\n            executor.executeUseCase<IListMultiModuleVersions>(IListMultiModuleVersions, {}).then(res => importedModuleVersions.value = res)\\n        ]);\\n        initDependencies();\\n        handleItems();\\n    }, { loading: true });\\n})\\n\\nconst totalItemsCount = computed<number>(() => countItems(items.value));\\nconst selectedItemsCount = computed<number>(() => countItems(items.value, true));\\n\\nconst countItems = (arr:Array<ITableData>, useCheckedFilter = false) => {\\n  return arr.reduce((acc, item) => {\\n    if(useCheckedFilter && (item?.anyChildChecked == false || item?.checked == false)) return acc;\\n    let count = 1;\\n    if (item?.children) {\\n      count += countItems(item.children, useCheckedFilter);\\n    }\\n    return acc + count;\\n  }, 0);\\n};\\n\\nconst isDownloadBtnDisable = computed(validate);\\n// const mainCheckboxState = computed(() => items.value.length == allChildCheckedModulesCount.value ? true\\n//     : (anyChildCheckedModulesCount.value + checkedRootLevelModelsCount.value > 0 ? false : undefined));\\nconst isThereVersion = computed(() => checkMaxVersionOfAllItems());\\nconst isWorkflowExecutionItemsOK = computed(() => checkWorkflowExecutionItems());\\nconst isAllDependenciesOK = computed(validateDependencies)\\n\\nfunction validate() {\\n    return !items.value.some((item) => item.checked || item.anyChildChecked) || !validateDependencies() || !checkWorkflowExecutionItems();\\n}\\n\\n\\nfunction validateDependencies() {\\n    const checkMap = new Map<string, boolean>();\\n    items.value.forEach(item => {\\n        if (item.type == 'module' && item.children && item.children.length > 0)\\n            item.children.forEach(child => checkMap.set(child.id, child.checked == true))\\n        else\\n            checkMap.set(item.id, item.checked == true)\\n    })\\n\\n    const mustBeCheckedMap = new Map<string, Array<string>>();\\n    dependencyMap.value?.forEach((deps, id) => {\\n        if (!checkMap.get(id))\\n            return;\\n\\n        deps.dependedTo.forEach(dependedId => {\\n            if (checkMap.get(dependedId))\\n                return;\\n\\n            if (mustBeCheckedMap.has(id)) {\\n                const vals = mustBeCheckedMap.get(id)!\\n                vals.push(dependedId)\\n                mustBeCheckedMap.set(id, vals)\\n            } else {\\n                mustBeCheckedMap.set(id, [dependedId])\\n            }\\n\\n        });\\n    })\\n\\n    //set deps error text\\n    const [firstItemID] = mustBeCheckedMap.keys();\\n    if (firstItemID) {\\n        const firstItemDeps = mustBeCheckedMap.get(firstItemID);\\n        const firstItemDepStr = firstItemDeps ? firstItemDeps.map(findItem).map(e => e?.name).join(', ') : '';\\n        dependencyErrorStr.value = `Select ${firstItemDepStr} first. ${findItem(firstItemID)?.name} depends on ${firstItemDepStr}.`\\n    }\\n\\n    return mustBeCheckedMap.size == 0\\n}\\n\\n\\nfunction findItem(ID: string) {\\n    for (const item of items.value) {\\n        if (item.type != 'module' && item.id == ID)\\n            return item;\\n        if (item.type == 'module' && item.children && item.children.length > 0) {\\n            const f = item.children.find(e => e.id == ID)\\n            if (f) return f\\n        }\\n    }\\n}\\n\\nfunction initDependencies() {\\n    const map = new Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>();\\n    const depMap = new Map<string, Array<string>>();\\n\\n    modelTraverser.flattenAllModels().forEach(item => {\\n        const isImportedModule = item.owner.objectType == \\\"module\\\" && objectUseCase.isModuleImported(item.owner);\\n\\n        let version: string | undefined;\\n        if (!isImportedModule) {\\n            const maxVersion = getItemMaxVersion(item)\\n            if (!maxVersion)\\n                return depMap.set(item.ID, item.dependentModels ? item.dependentModels.map(e => e.modelId) : Array<string>());\\n            version = maxVersion;\\n        }\\n        else {\\n            const moduleVersions = importedModuleVersions.value?.get(item.owner.ID)\\n            const moduleVersion = (item.owner as IModule).relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion\\n\\n            const importedModuleModel = moduleVersions?.filter(e => e.version == moduleVersion).flatMap(e => e.relatedModelHistories).find(e => e.modelID == item.ID)\\n            version = importedModuleModel?.version\\n        }\\n\\n        const historyItem = modelHistories.value?.get(item.ID)?.find(e => e.version == version);\\n        const deps = historyItem?.dependentModels ? historyItem?.dependentModels.map(e => e.modelId).map(e => overridingMap.get(e) || e) : Array<string>()\\n        depMap.set(item.ID, deps);\\n    });\\n\\n\\n    depMap.forEach((dependedTo, modelId) => {\\n        const dependedBy = Array<string>();\\n        depMap.forEach((dependencies, depModelId) => {\\n            if (dependencies.some(depId => depId == modelId))\\n                dependedBy.push(depModelId)\\n        })\\n        map.set(modelId, { dependedBy, dependedTo });\\n    })\\n    dependencyMap.value = map;\\n}\\n\\nfunction isModelDepended(item: ITableData) {\\n    const deps = dependencyMap.value?.get(item.id)?.dependedBy\\n    if (!deps) return false;\\n\\n    return deps.some(dep => items.value.some(item => {\\n        if (item.type == 'module' && item.anyChildChecked) {\\n            return item.children?.some(child => child.checked && child.id == dep)\\n        }\\n        return item.id == dep && item.checked\\n    }));\\n}\\nfunction createDialogComp(item: ITableData) {\\n    const newChild = createApp(ExportDialogItem, {\\n        handleItemCheckEvent,\\n        startScreen,\\n        versionDialog,\\n        handleCollapse,\\n        item: item,\\n        moduleVersionDialog\\n    });\\n    const mountEl = document.createElement('div');\\n    newChild.mount(mountEl);\\n    const parentEl = document.getElementById('module-container-div');\\n    parentEl?.appendChild(mountEl);\\n}\\nfunction createAndAppendItem({ newItem }: { newItem: ITableData }) {\\n    if(!newItem.overridden){\\n        createDialogComp(newItem);\\n        items.value.push(newItem);\\n    }\\n}\\n\\nfunction handleItems() {\\n    const treeItems = fileDisplayerUseCase.cloneFileExplorerTreeView({\\n        displayFilterer: (item, hasChildren) => {\\n            switch (item.ID) { case FileExplorerConstants.uiAssetListID: case FileExplorerConstants.uiSettingsID: return false; default: break; }\\n            switch (item.objectType) {\\n                case \\\"application\\\": return false;\\n                case \\\"module\\\": return true;\\n                case \\\"folder\\\": return hasChildren;\\n                case \\\"model\\\": return true;\\n            }\\n        },\\n    });\\n\\n    const converter = (treeItem: ITreeItem<FileDisplayerExternalData>, options: {ownerModule?: {isImportedModule: boolean;moduleVersion: string | undefined;relatedModelHistories: IModuleRelatedModelItem[] | undefined}}): ITableData => {\\n        const item = treeItem.externalData;\\n        if (item.objectType == \\\"application\\\") { throw new Error(\\\"unexpected item type\\\"); }\\n\\n        const fullPath = objectUseCase.getFullPath(item, \\\"self\\\");\\n        let level = fullPath.split(\\\"/\\\").length - 1;\\n\\n        let tableData: ITableData;\\n        switch(item.objectType) {\\n            case \\\"folder\\\":\\n                tableData = {\\n                    id: item.ID, name: item.name, type: \\\"folder\\\", collapsed: true, level,\\n                    children: treeItem.children?.map((item) => converter(item, { ownerModule: options.ownerModule })),\\n                };\\n                tableData.children?.forEach(child => child.parent = tableData);\\n                handleParentCheckedStatus(tableData, false);\\n                break;\\n            case \\\"model\\\":\\n                if (options.ownerModule) {\\n                    tableData = { id: item.ID, name: item.name, type: item.modelType, level, overridden: item.overridden}; //FIXME: set overridden status to externalData\\n                    if (!options.ownerModule.isImportedModule || item.isUnmodifiable) {\\n                        const maxVersion = getItemMaxVersion(item);\\n                        tableData = {\\n                            ...tableData,\\n                            checked: maxVersion ? true : item.isUnmodifiable,\\n                            disabled: maxVersion ? false : !item.isUnmodifiable,\\n                            version: maxVersion || 'latest',\\n                        };\\n                    } else {\\n                        const importedModulesModel = options.ownerModule.relatedModelHistories?.find(e => e.modelID == item.ID)\\n                        tableData = { ...tableData, checked: true, disabled: false, version: importedModulesModel?.version, overridden: item.overridden };\\n                    }\\n                } else {\\n                    const maxVersion = getItemMaxVersion(item);\\n                    tableData = {\\n                        id: item.ID,\\n                        name: item.name,\\n                        checked: maxVersion ? true : item.isUnmodifiable,\\n                        disabled: maxVersion ? false : !item.isUnmodifiable,\\n                        type: item.modelType,\\n                        version: maxVersion || 'latest',\\n                        level,\\n                        overridden: item.overridden,\\n                    };\\n                }\\n                break;\\n            case \\\"module\\\":\\n                const isImportedModule = objectUseCase.isModuleImported(item);\\n                const moduleVersion = item.relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion;\\n                const relatedModelHistories = isImportedModule ? importedModuleVersions.value?.get(item.ID)?.find(module => module.version == moduleVersion)?.relatedModelHistories : undefined\\n                \\n                tableData = {\\n                    id: item.ID,\\n                    collapsed: true,\\n                    name: item.name,\\n                    type: \\\"module\\\",\\n                    imported: isImportedModule,\\n                    version: moduleVersion,\\n                    children: treeItem.children?.map((item) => converter(item, {ownerModule: {isImportedModule, moduleVersion, relatedModelHistories}})),\\n                }\\n                tableData.children?.forEach(child => child.parent = tableData);\\n                handleParentCheckedStatus(tableData, false);\\n                break;\\n        }\\n        return tableData;\\n    };\\n    const tableDatas = treeItems.map(item => converter(item, {}));\\n\\n    const traverser = (tableData: ITableData) => {\\n        createAndAppendItem({ newItem: tableData });\\n        tableData.children?.forEach(traverser);\\n    };\\n    \\n    tableDatas.forEach(traverser);\\n}\\n\\nfunction getItemMaxVersion(item: IModel): string | undefined {\\n    if (!modelHistories.value?.has(item.ID))\\n        return undefined;\\n\\n    const versions = modelHistories.value.get(item.ID);\\n    if (!versions)\\n        return undefined;\\n\\n    const findMaxVersion = (versions: Array<string>) => {\\n        const versionNumbers = versions.map(v => {\\n            const parts: Array<string> = v.split(\\\".\\\");\\n            return parseInt(parts[0]) * 10 + parseInt(parts[1]) * 1;\\n        })\\n\\n        versionNumbers.sort((a, b) => b - a);\\n\\n        const maxVersion = versionNumbers[0];\\n        return `${Math.floor(maxVersion / 10)}.${maxVersion % 10}`;\\n    }\\n\\n    return findMaxVersion(versions.map(e => e.version!));\\n\\n}\\n\\nfunction checkMaxVersionOfAllItems() {\\n    let isThereVersion: boolean = false;\\n    items.value.forEach(item => {\\n        if (item.type == \\\"module\\\") {\\n            item.children?.forEach(child => {\\n                if (child.version) {\\n                    isThereVersion = true;\\n                }\\n\\n            })\\n        }\\n        else {\\n            if (item.version) {\\n                isThereVersion = true;\\n            }\\n        }\\n    })\\n    return isThereVersion;\\n}\\n\\n//FIXME: Tum objectler check edilmeli.\\nfunction checkWorkflowExecutionItems() {\\n    let getUserOK = false, notifyOK = false;\\n    const fn = (item: ITableData, name: string, type: string) => item.checked && item.type == type && item.name === name;\\n    for(const item of items.value) {\\n        if(getUserOK && notifyOK) break;\\n        if (item.type == \\\"module\\\" && item.children) {\\n            if(!getUserOK) getUserOK = item.children.some(e => fn(e, 'getUser', 'flow'));\\n            if(!notifyOK) notifyOK = item.children.some(e => fn(e, 'notify', 'flow'));\\n        }\\n        else {\\n            if(!getUserOK) getUserOK = !!fn(item, 'getUser', 'flow');\\n            if(!notifyOK) notifyOK = !!fn(item, 'notify', 'flow');\\n        }\\n    }\\n    return getUserOK && notifyOK;\\n}\\n\\nfunction clickMainCheckbox(){\\n    const checked = totalItemsCount.value == selectedItemsCount.value;\\n    items.value.filter(e => !e?.disabled).forEach((item) => {\\n        item.checked = !checked;\\n        const allItemsCheckable = item.allChildChecked != undefined && item.children && item.children.length > 0 && !item.children.some(c => c.disabled);\\n        if (allItemsCheckable) item.allChildChecked = !checked;\\n        if (item.anyChildChecked != undefined) item.anyChildChecked = !checked;\\n        if (item.children) item.children.filter(c => !c.disabled).forEach((child) => (child.checked = !checked));\\n    });\\n}\\n\\n\\nfunction handleCollapse(item: ITableData, childIterate?: boolean, collapsed?: boolean) {\\n    item.collapsed = collapsed !== undefined ? collapsed : !item.collapsed;\\n    if (childIterate) {\\n        item.children?.forEach(child => {\\n            const childEl = document.getElementById(child.id);\\n            childEl!.style.display = item.collapsed ? \\\"none\\\" : \\\"block\\\";\\n            handleCollapse(child, childIterate, item.collapsed);\\n        })\\n    }\\n}\\n\\nfunction checkAllDependents(item: ITableData, recurseParent: boolean) {\\n    if (item.disabled || item.checked) return;\\n\\n    item.checked = true\\n    item.parent && handleParentCheckedStatus(item.parent, recurseParent);\\n\\n    const deps = dependencyMap.value?.get(item.id)?.dependedTo\\n    if (!deps) return;\\n\\n    deps.forEach(dep => {\\n        items.value.forEach(item => {\\n            if (item.type == 'module' && !item.allChildChecked) {\\n                const willCheckItem = item.children?.find(child => !child.checked && child.id == dep)\\n                willCheckItem && checkAllDependents(willCheckItem, recurseParent);\\n                handleParentCheckedStatus(item, recurseParent);\\n                return;\\n            }\\n\\n            if (!item.checked && item.id == dep) {\\n                checkAllDependents(item, recurseParent);\\n                item.parent && handleParentCheckedStatus(item.parent, recurseParent);\\n            }\\n        })\\n    });\\n}\\n\\nfunction handleItemCheckEvent(item: ITableData) {\\n    if (item.disabled || isModelDepended(item) || item.name == 'App Settings')\\n        return;\\n\\n    if (item.type != \\\"module\\\" && item.type != \\\"folder\\\") {\\n        if (item.checked) {\\n            item.checked = false;\\n            item.parent && handleParentCheckedStatus(item.parent, true);\\n        } else {\\n            checkAllDependents(item, true);\\n        }\\n    } else {\\n        if (item.children && item.children.filter(c => !c.disabled).length > 0) {\\n            if (item.anyChildChecked) {\\n                item.children.filter(c => !c.disabled).forEach(child => child.checked = false);\\n                item.checked = false;\\n                handleParentCheckedStatus(item, true);\\n            } else {\\n                item.children.forEach(child => checkAllDependents(child, true));\\n                item.checked = true;\\n            }\\n        }\\n        else {\\n            item.checked = !item.checked;\\n            item.allChildChecked = false;\\n        }\\n    }\\n\\n}\\n\\nfunction handleParentCheckedStatus(item: ITableData, recurseParent: boolean) {\\n    item.disabled = item.children && (item.children.length == 0 || !item.children?.some(child => !child.disabled))\\n    item.allChildChecked = item.children && item.children.length > 0 && !item.children.some((child) => !child.checked || child.disabled);\\n    item.anyChildChecked = item.children?.some((child) => child.checked && !child.disabled);\\n    if (recurseParent && item.parent) {\\n        handleParentCheckedStatus(item.parent, true);\\n    }\\n}\\n\\nfunction updateDependencyMap(newVersion: string, item: ITableData) {\\n    const deps = dependencyMap.value?.get(item.id);\\n    dependencyMap.value?.set(item.id, {\\n        dependedBy: deps?.dependedBy || Array<string>(),\\n        dependedTo: modelHistories.value?.get(item.id)?.find(e => e.version == newVersion)?.dependentModels?.map(e => e.modelId) || Array<string>()\\n    })\\n}\\n\\nfunction versionDialog(item: ITableData) {\\n    const clickedNode = { id: item.id, state: { checked: item.checked }, text: item.name, type: item.type, version: item.version };\\n    const hasAnyVersion = modelHistories.value?.has(item.id);\\n    const options = {\\n        clickedNode, cb: (version: string) => {\\n            item.version = version;\\n            updateDependencyMap(version, item);\\n        }\\n    } as any;\\n\\n    if (hasAnyVersion) {\\n        options.versions = modelHistories.value?.get(item.id)\\n    }\\n    dialog.showDialog(\\n        defineAsyncComponent(() => import(\\\"../../application/modelVersionDialog.vue\\\")),\\n        { closable: true, title: \\\"Change Version\\\", width: \\\"1080px\\\", maxHeight: \\\"500px\\\", overflow: \\\"auto\\\" }, options\\n    );\\n}\\n\\nfunction moduleVersionDialog(item: ITableData) {\\n    dialog.showDialog(\\n        defineAsyncComponent(() => import(\\\"../../application/moduleVersionDialog.vue\\\")),\\n        { closable: true, title: \\\"Change Version\\\", width: \\\"1080px\\\", maxHeight: \\\"500px\\\", overflow: \\\"auto\\\" },\\n        {\\n            module: { ID: item.id }, versions: importedModuleVersions.value?.get(item.id), cb: (moduleVersion: IModuleVersion) => {\\n                item.version = moduleVersion.version;\\n                item.children?.forEach(child => {\\n                    const modulesModel = moduleVersion.relatedModelHistories.find(e => e.modelID == child.id)\\n                    child.version = modulesModel?.version\\n                    updateDependencyMap(modulesModel?.version!, child);\\n                })\\n            }\\n        }\\n    );\\n}\\n\\nasync function downloadBtnClicked() {\\n    executor.execute(\\n        async () => {\\n            const items = getJobItems();\\n            await executor.executeUseCase<ICreateWorkflowExportJob>(ICreateWorkflowExportJob, { items });\\n            emit(\\\"close\\\");\\n    },{ loading: true });\\n}\\n\\nfunction getJobItems(): Array<IWorkflowExportItem> {\\n    const findCheckedItems = (item: ITableData): Array<IWorkflowExportItem> | undefined => {\\n        if(!item.version || !item.checked) return;\\n\\n        if(item.type != 'module' && item.type != 'folder')\\n            return [{ ID: item.id, version: item.version }];\\n        \\n        if(!item.anyChildChecked) return;\\n\\n        const children = Array<IWorkflowExportItem>();\\n        item.children?.forEach(ch => {\\n            const childList = findCheckedItems(ch);\\n            if(childList && childList.length > 0) Array.prototype.push.apply(children, childList);\\n        });\\n        return children;\\n    }\\n\\n    const jobItems = Array<IWorkflowExportItem>();\\n    items.value.forEach(e => {\\n        const itemList = findCheckedItems(e);\\n        if(itemList && itemList.length > 0) Array.prototype.push.apply(jobItems, itemList);\\n    });\\n    return jobItems;\\n\\n}\\n\\n</script>\\n\\n\\n<style scoped>\\n.container {\\n    padding: 32px 20px 20px;\\n}\\n\\n.settings-container {\\n    position: relative;\\n    top: 0px;\\n    left: 0px;\\n}\\n\\n.custom-text {\\n    /* position: absolute; */\\n    font-family: 'Roboto';\\n    font-style: normal;\\n    font-weight: 500;\\n    font-size: 15px;\\n    line-height: 18px;\\n    /* left: 24px; */\\n    color: #212121;\\n}\\n\\n/* .custom-text.title{\\n    top: 92px;\\n}\\n\\n.custom-text.environment{\\n    top: 174px;\\n} */\\n\\n.radio-button {\\n    position: absolute;\\n    top: 60px;\\n    left: 20px;\\n    cursor: pointer;\\n}\\n\\n.radio-text {\\n    position: absolute;\\n    top: 59px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n    user-select: none;\\n    cursor: pointer;\\n}\\n\\n.existing-app-url {\\n    position: absolute;\\n    width: 760px;\\n    height: 40px;\\n    top: 114px;\\n    left: 20px;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #bcbcbc;\\n    border-radius: 4px;\\n    font: normal normal normal 14px/19px Roboto;\\n    letter-spacing: 0px;\\n    padding: 10px 0px 10px 10px;\\n}\\n\\n.url-error {\\n    border: 1px solid red;\\n}\\n\\n.url-disable {\\n    opacity: 0.5;\\n}\\n\\n.existing-app-url::placeholder {\\n    color: #bcbcbc;\\n    user-select: none;\\n}\\n\\n.modules-selected-checkbox {\\n    cursor: pointer;\\n}\\n\\n.modules-selected-text {\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #757575;\\n    margin: 0 0 13px 30px;\\n    ;\\n}\\n\\n/* .modules-selected-text.deploy {\\n    top: 257px;\\n} */\\n\\n.text-number {\\n    font: normal normal bold 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.modules-datatable {\\n    width: 760px;\\n    height: 288px;\\n    border: 1px solid #bcbcbc;\\n    overflow-x: hidden;\\n    overflow-y: auto;\\n    margin-bottom: 20px;\\n}\\n\\n/* .modules-datatable.deploy {\\n    top: 286px;\\n} */\\n\\n.modules-datatable::-webkit-scrollbar {\\n    width: 4px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar-thumb {\\n    background: #bcbcbc 0% 0% no-repeat padding-box;\\n    border-radius: 10px;\\n}\\n\\n.modules-datatable::-webkit-scrollbar-thumb:hover {\\n    background: #555;\\n}\\n\\n.row-container {\\n    width: 100%;\\n    height: 36px;\\n    position: relative;\\n    background: #ffffff 0% 0% no-repeat padding-box;\\n    border: 1px solid #e0e0e0;\\n}\\n\\n.chevron {\\n    position: absolute;\\n    left: 4px;\\n    color: #757575;\\n    font-size: 24px;\\n}\\n\\n.chevron.disabled {\\n    pointer-events: none;\\n    color: #D5D5D5;\\n}\\n\\n.module-checkbox {\\n    position: absolute;\\n    top: 10px;\\n    left: 43px;\\n    cursor: pointer;\\n}\\n\\n.module-name {\\n    position: absolute;\\n    top: 9px;\\n    left: 69px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.module-name.imported {\\n    top: 10px;\\n    left: 87px;\\n}\\n\\n.module-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.model-checkbox {\\n    position: absolute;\\n    top: 10px;\\n    left: 59px;\\n    cursor: pointer;\\n}\\n\\n.model-icon {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 85px;\\n}\\n\\n.app-tier-model-icon {\\n    position: absolute;\\n    width: 16px;\\n    height: 16px;\\n    top: 6px;\\n    left: 69px\\n}\\n\\n.app-tier-model-name {\\n    position: absolute;\\n    top: 10px;\\n    left: 87px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.app-tier-model-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.model-name {\\n    position: absolute;\\n    top: 9px;\\n    left: 103px;\\n    font: normal normal normal 14px/19px Roboto;\\n    color: #212121;\\n}\\n\\n.model-name.disabled {\\n    color: #D5D5D5;\\n}\\n\\n.version-text {\\n    margin: 10px 7px 10px auto;\\n    display: table;\\n    font: normal normal normal 12px/16px Roboto;\\n    color: #757575;\\n    cursor: pointer;\\n    user-select: none;\\n}\\n\\n.version-text.disabled {\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n\\n.version-icon {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #D5D5D5;\\n}\\n\\n.version-icon.disabled {\\n    font: normal normal normal 16px/19px Material Design Icons;\\n    color: #EEEEEE;\\n    pointer-events: none;\\n    cursor: pointer;\\n}\\n\\n.footer {\\n    position: relative;\\n    width: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: end;\\n}\\n\\n.footer.deploy {\\n    position: relative;\\n    width: 100%;\\n}\\n\\n.footer.export {\\n    margin-top: 102px;\\n}\\n\\n.cancel-button {\\n    border-radius: 4px;\\n    user-select: none;\\n    font-style: normal;\\n    font-weight: 500;\\n    font-family: \\\"ROBOTO\\\";\\n    font-size: 15px;\\n    color: #757575;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n\\n\\n\\n.save-button {\\n    background: #151233 0% 0% no-repeat padding-box;\\n    border-radius: 4px;\\n    user-select: none;\\n    font-weight: 500;\\n    font-size: 15px;\\n    color: #ffffff;\\n    padding: 10px 16px;\\n    cursor: pointer;\\n}\\n\\n.mobile-publish-text,\\n.web-publish-text {\\n    padding: 5px 12px;\\n    margin-bottom: 52px;\\n    width: 100%;\\n    color: #757575;\\n    font-size: 14px;\\n    background: #F5F5FA;\\n    border-radius: 4px;\\n    display: flex;\\n    align-items: center;\\n}\\n\\n.mobile-publish-text i,\\n.web-publish-text i {\\n    font-size: 24px;\\n    color: #151233;\\n    margin-right: 4px;\\n}\\n\\n.save-button.deploy {\\n    padding: 10px 16px;\\n}\\n\\n.button-disable .save-button {\\n    color: #757575;\\n    cursor: default;\\n}\\n\\n.button-disable .save-button:hover+.button-tooltip,\\n.start-screen:hover .button-tooltip,\\n.row-container:hover .button-tooltip,\\n.publish-info:hover .button-tooltip {\\n    visibility: visible;\\n    transition: opacity 0.3s ease-out 1s;\\n    opacity: 1;\\n}\\n\\n.button-tooltip {\\n    visibility: hidden;\\n    position: absolute;\\n    background: #757575;\\n    color: #FFFFFF;\\n    font-size: 11px;\\n    font-family: 'Roboto';\\n    text-align: center;\\n    border-radius: 4px;\\n    letter-spacing: 0.2px;\\n    padding: 6px 8px 6px 8px;\\n    top: 56px;\\n    left: 63px;\\n    opacity: 0;\\n}\\n\\n.publish-info {\\n    color: #757575;\\n    font-size: 20px;\\n    margin-left: 10px;\\n}\\n\\n.select-environment {\\n    width: 100%;\\n    font-size: 15px;\\n    height: 40px;\\n    line-height: 40px;\\n    margin-top: 4px\\n}\\n</style>\\n\\n<style>\\n.selected-environment {\\n    background-color: transparent;\\n    border-radius: 4px;\\n    border: 1px solid #BCBCBC;\\n    color: #212121;\\n    padding-left: 12px;\\n}\\n\\n.custom-placeholder:empty:before {\\n    color: #BCBCBC !important;\\n    font-weight: 400;\\n}\\n\\n.custom-select .items .option {\\n    font-size: 14px;\\n    padding-left: 12px;\\n    line-height: 32px;\\n}\\n\\n.custom-select .items .option:hover {\\n    background-color: #EEEEEE;\\n    color: #212121;\\n}\\n\\n.custom-select .items .option.disabled:hover {\\n    background-color: #FFFFFF;\\n    color: #212121;\\n}\\n\\n.custom-select.select-environment .items {\\n    margin-top: 4px;\\n    color: #212121;\\n    border-radius: 4px;\\n    border: 1px solid #E3E3E3;\\n    overflow: hidden;\\n    background-color: #FFFFFF;\\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\\n    position: static !important;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import { IModelInfo } from \"../../../qCloudTemp/quickCloud\";\nimport { IdHelper } from '../../../../common/helpers/idHelper';\nimport { ModelType } from \"../../studio/ui/IStudioUIModelBase\";\ninterface IModelForOverrideMapCreation {\n    ID: IModelInfo[\"ID\"];\n    overriddenModel?: IModelInfo[\"overriddenModel\"];\n}\nexport class ModelSetup {\n    constructor() { }\n\n    public createOverriderMap(allModels:Array<IModelForOverrideMapCreation>) {\n        return allModels.reduce((prev, model) => {\n            if (!model.overriddenModel) { return prev; }\n            prev.set(model.overriddenModel.ID, model.ID);\n            return prev;\n        }, new Map<string, string>());\n    }\n\n    public changeModelRef(modelBody: string | object, overridderMap: Map<string, string>): string | object {\n        const wasObject = typeof modelBody == \"object\";\n        let modelStr = wasObject ? JSON.stringify(modelBody) : modelBody;\n\n        modelStr = modelStr.replace(/<<([a-zA-Z0-9_]+):([a-zA-Z0-9_\\-]+)>>/g, (match, type: ModelType, modelId: string) => {\n            const replaceModelId = overridderMap.get(modelId) || modelId;\n            return type == \"workflow\" ? `T_${replaceModelId}}` : IdHelper.embedIdType(replaceModelId, type);\n        });\n\n        return wasObject ? JSON.parse(modelStr) as object : modelStr;\n    }\n\n}\n\n","import { ModelType } from \"../everything/studio/ui/IStudioUIModelBase\";\n\nexport class IdHelper {\n    public static extractId(str: string) {\n        const regex = /<<[^:]+:([^>]+)>>/;\n        const match = str.match(regex);\n    \n        if (match && match[1]) {\n            return match[1];\n        } else {\n            throw new Error(\"The input string does not match the expected pattern.\");\n        }\n    }\n    public static extractIdType(str: string) {\n        //<<modelType:id>>\n        const colonIndex = str.indexOf(\":\");\n        if (!str.startsWith(\"<<\") || !str.endsWith(\">>\") || colonIndex == -1) { return undefined; }\n        const [modelType, id] = str.substring(2, str.length - 2).split(\":\");\n        return { modelType, id };\n    }\n    public static embedIdType(id: string, type: ModelType) {\n        return `<<${type}:${id}>>`;\n    }\n}\n\n","import { IWorkflowExportItem } from \"../model/models\";\nimport { IUseCase } from \"./IUseCase\";\n\nexport interface ICreateWorkflowExportJobParam {\n    items: Array<IWorkflowExportItem>;\n}\n\nexport interface ICreateWorkflowExportJob extends IUseCase<void, ICreateWorkflowExportJobParam> {}\n\nexport const ICreateWorkflowExportJob = Symbol.for(\"ICreateWorkflowExportJob\");","import { IApplication, IFolder, IModel, IModule } from \"../model/models\";\nimport { ITreeItem, ITreeView } from \"../presentation/ITreeView\";\nimport { IFEExternalData } from \"./IFileExplorer\";\n\nexport interface IDisplayItemsAdditional {\n    id: string;\n    name: string;\n    externalData: FileDisplayerExternalData;\n}\nexport type DisplayModelsCb = (item: FileDisplayerExternalData, hasChildren: boolean) => boolean;\nexport interface ICloneFileExplorerOptions {\n    displayFilterer?: DisplayModelsCb;\n    cb?: { select?: (item: ITreeItem<FileDisplayerExternalData>) => void };\n}\nexport interface IDisplayItemsOptions extends ICloneFileExplorerOptions {\n    additionalItems?: Array<IDisplayItemsAdditional>;\n    additionalRoot?: IDisplayItemsAdditional;\n}\n\nexport type FileDisplayerExternalData = IApplication | IFEExternalData;\n\nexport interface IFileDisplayerUseCase {\n    cloneFileExplorerTreeView(options: ICloneFileExplorerOptions): Array<ITreeItem<FileDisplayerExternalData>>;\n    createFileExplorerClone(domElement: HTMLElement, options: IDisplayItemsOptions): ITreeView<FileDisplayerExternalData>;\n}\nexport const IFileDisplayerUseCase = Symbol.for(\"IFileDisplayerUseCase\");","import { IModel, IModelHistoryInfo } from \"../model/models\";\nimport { IUseCase } from \"./IUseCase\";\n\nexport interface IListMultiModelVersionsParam {\n    excludedTypes?: Array<IModel[\"modelType\"]>;\n }\nexport interface IListMultiModelVersions extends IUseCase<Map<string, Array<IModelHistoryInfo>>, IListMultiModelVersionsParam> {\n\n}\nexport const IListMultiModelVersions = Symbol.for(\"IListMultiModelVersions\");","import { IModuleVersion } from \"../../../../common/qCloudTemp/quickCloud\";\nimport { IUseCase } from \"./IUseCase\";\n\nexport interface IListMultiModuleVersionsParam { }\nexport interface IListMultiModuleVersions extends IUseCase<Map<string, Array<IModuleVersion>>, IListMultiModuleVersionsParam> {\n\n}\nexport const IListMultiModuleVersions = Symbol.for(\"IListMultiModuleVersions\");","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, normalizeClass as _normalizeClass, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-8ef20d50\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"container\" }\nconst _hoisted_2 = {\n  class: /*#__PURE__*/_normalizeClass(['modules-selected-text'])\n}\nconst _hoisted_3 = { class: \"text-number\" }\nconst _hoisted_4 = { class: \"text-number\" }\nconst _hoisted_5 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: /*#__PURE__*/_normalizeClass(['modules-datatable']),\n  id: \"module-container-div\"\n}, null, -1 /* HOISTED */))\nconst _hoisted_6 = {\n  class: /*#__PURE__*/_normalizeClass(['footer','export'])\n}\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"save-button\" }, \"DOWNLOAD\", -1 /* HOISTED */))\nconst _hoisted_8 = {\n  key: 0,\n  class: \"button-tooltip\",\n  style: {\"top\":\"-80px\",\"left\":\"626px\",\"z-index\":\"1\",\"width\":\"145px\"}\n}\nconst _hoisted_9 = {\n  key: 1,\n  class: \"button-tooltip\",\n  style: {\"top\":\"-80px\",\"left\":\"626px\",\"z-index\":\"1\",\"width\":\"145px\"}\n}\nconst _hoisted_10 = {\n  key: 2,\n  class: \"button-tooltip\",\n  style: {\"top\":\"-95px\",\"left\":\"644px\",\"z-index\":\"1\",\"width\":\"135px\"}\n}\n\nimport { computed,createApp,defineAsyncComponent,onMounted,ref } from \"vue\";\nimport { ITableData } from \"../../../../../../../common/qCloudTemp/exporter\";\nimport { IModuleRelatedModelItem } from \"../../../../../../../common/qCloudTemp/quickCloud\";\nimport { container } from \"../../../../../domain/core/diContainer\";\nimport { IModel,IModelHistoryInfo,IModule,IModuleVersion,IWorkflowExportItem } from \"../../../../../domain/model/models\";\nimport { IDialog } from \"../../../../../domain/presentation/IDialog\";\nimport { ITreeItem } from \"../../../../../domain/presentation/ITreeView\";\nimport { ICreateWorkflowExportJob } from \"../../../../../domain/useCase/ICreateWorkflowExportJob\";\nimport { FileDisplayerExternalData,IFileDisplayerUseCase } from \"../../../../../domain/useCase/IFileDisplayerUseCase\";\nimport { FileExplorerConstants } from \"../../../../../domain/useCase/IFileExplorer\";\nimport { IListMultiModelVersions } from \"../../../../../domain/useCase/IListMultiModelVersions\";\nimport { IListMultiModuleVersions } from \"../../../../../domain/useCase/IListMultiModuleVersions\";\nimport { IObjectUseCase } from \"../../../../../domain/useCase/IObjectUseCase\";\nimport { IUseCaseExecutor } from \"../../../../../domain/useCase/IUseCaseExecutor\";\nimport { IViewModel } from \"../../../../../domain/viewModel/IViewModel\";\nimport CheckboxComp from \"../../checkboxComp.vue\";\nimport ExportDialogItem from \"./components/exportDialogItem.vue\";\nimport { ModelSetup } from \"../../../../../../../common/everything/workflow/helpers/modelSetup\";\nimport { IModelTraverser } from \"../../../../../domain/useCase/IModelTraverser\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'workflowExportDialog',\n  emits: [\"close\"],\n  setup(__props, { emit }) {\n\nconst viewModel = container.resolve<IViewModel>(IViewModel);\nconst dialog = container.resolve<IDialog>(IDialog);\nconst executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\nconst fileDisplayerUseCase = container.resolve<IFileDisplayerUseCase>(IFileDisplayerUseCase);\nconst objectUseCase = container.resolve<IObjectUseCase>(IObjectUseCase);\nconst modelTraverser = container.resolve<IModelTraverser>(IModelTraverser);\n\n\nconst items = ref<Array<ITableData>>([]);\nconst modelHistories = ref<Map<string, Array<IModelHistoryInfo>>>();\nconst importedModuleVersions = ref<Map<string, Array<IModuleVersion>>>();\nconst startScreen = ref<IModel>();\nconst dependencyMap = ref<Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>>();\nconst dependencyErrorStr = ref<string>('');\n\nconst allModels = modelTraverser.flattenAllModels();\nconst overridingMap = new ModelSetup().createOverriderMap(allModels);\n\nonMounted(async () => {\n    await executor.execute(async () => {\n        const excludedTypes: Array<IModel[\"modelType\"]> = ['bpmn', 'process', 'entityDesigner', 'process'];\n        await Promise.all([\n            executor.executeUseCase<IListMultiModelVersions>(IListMultiModelVersions, { excludedTypes }).then(res => modelHistories.value = res),\n            executor.executeUseCase<IListMultiModuleVersions>(IListMultiModuleVersions, {}).then(res => importedModuleVersions.value = res)\n        ]);\n        initDependencies();\n        handleItems();\n    }, { loading: true });\n})\n\nconst totalItemsCount = computed<number>(() => countItems(items.value));\nconst selectedItemsCount = computed<number>(() => countItems(items.value, true));\n\nconst countItems = (arr:Array<ITableData>, useCheckedFilter = false) => {\n  return arr.reduce((acc, item) => {\n    if(useCheckedFilter && (item?.anyChildChecked == false || item?.checked == false)) return acc;\n    let count = 1;\n    if (item?.children) {\n      count += countItems(item.children, useCheckedFilter);\n    }\n    return acc + count;\n  }, 0);\n};\n\nconst isDownloadBtnDisable = computed(validate);\n// const mainCheckboxState = computed(() => items.value.length == allChildCheckedModulesCount.value ? true\n//     : (anyChildCheckedModulesCount.value + checkedRootLevelModelsCount.value > 0 ? false : undefined));\nconst isThereVersion = computed(() => checkMaxVersionOfAllItems());\nconst isWorkflowExecutionItemsOK = computed(() => checkWorkflowExecutionItems());\nconst isAllDependenciesOK = computed(validateDependencies)\n\nfunction validate() {\n    return !items.value.some((item) => item.checked || item.anyChildChecked) || !validateDependencies() || !checkWorkflowExecutionItems();\n}\n\n\nfunction validateDependencies() {\n    const checkMap = new Map<string, boolean>();\n    items.value.forEach(item => {\n        if (item.type == 'module' && item.children && item.children.length > 0)\n            item.children.forEach(child => checkMap.set(child.id, child.checked == true))\n        else\n            checkMap.set(item.id, item.checked == true)\n    })\n\n    const mustBeCheckedMap = new Map<string, Array<string>>();\n    dependencyMap.value?.forEach((deps, id) => {\n        if (!checkMap.get(id))\n            return;\n\n        deps.dependedTo.forEach(dependedId => {\n            if (checkMap.get(dependedId))\n                return;\n\n            if (mustBeCheckedMap.has(id)) {\n                const vals = mustBeCheckedMap.get(id)!\n                vals.push(dependedId)\n                mustBeCheckedMap.set(id, vals)\n            } else {\n                mustBeCheckedMap.set(id, [dependedId])\n            }\n\n        });\n    })\n\n    //set deps error text\n    const [firstItemID] = mustBeCheckedMap.keys();\n    if (firstItemID) {\n        const firstItemDeps = mustBeCheckedMap.get(firstItemID);\n        const firstItemDepStr = firstItemDeps ? firstItemDeps.map(findItem).map(e => e?.name).join(', ') : '';\n        dependencyErrorStr.value = `Select ${firstItemDepStr} first. ${findItem(firstItemID)?.name} depends on ${firstItemDepStr}.`\n    }\n\n    return mustBeCheckedMap.size == 0\n}\n\n\nfunction findItem(ID: string) {\n    for (const item of items.value) {\n        if (item.type != 'module' && item.id == ID)\n            return item;\n        if (item.type == 'module' && item.children && item.children.length > 0) {\n            const f = item.children.find(e => e.id == ID)\n            if (f) return f\n        }\n    }\n}\n\nfunction initDependencies() {\n    const map = new Map<string, { dependedTo: Array<string>, dependedBy: Array<string> }>();\n    const depMap = new Map<string, Array<string>>();\n\n    modelTraverser.flattenAllModels().forEach(item => {\n        const isImportedModule = item.owner.objectType == \"module\" && objectUseCase.isModuleImported(item.owner);\n\n        let version: string | undefined;\n        if (!isImportedModule) {\n            const maxVersion = getItemMaxVersion(item)\n            if (!maxVersion)\n                return depMap.set(item.ID, item.dependentModels ? item.dependentModels.map(e => e.modelId) : Array<string>());\n            version = maxVersion;\n        }\n        else {\n            const moduleVersions = importedModuleVersions.value?.get(item.owner.ID)\n            const moduleVersion = (item.owner as IModule).relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion\n\n            const importedModuleModel = moduleVersions?.filter(e => e.version == moduleVersion).flatMap(e => e.relatedModelHistories).find(e => e.modelID == item.ID)\n            version = importedModuleModel?.version\n        }\n\n        const historyItem = modelHistories.value?.get(item.ID)?.find(e => e.version == version);\n        const deps = historyItem?.dependentModels ? historyItem?.dependentModels.map(e => e.modelId).map(e => overridingMap.get(e) || e) : Array<string>()\n        depMap.set(item.ID, deps);\n    });\n\n\n    depMap.forEach((dependedTo, modelId) => {\n        const dependedBy = Array<string>();\n        depMap.forEach((dependencies, depModelId) => {\n            if (dependencies.some(depId => depId == modelId))\n                dependedBy.push(depModelId)\n        })\n        map.set(modelId, { dependedBy, dependedTo });\n    })\n    dependencyMap.value = map;\n}\n\nfunction isModelDepended(item: ITableData) {\n    const deps = dependencyMap.value?.get(item.id)?.dependedBy\n    if (!deps) return false;\n\n    return deps.some(dep => items.value.some(item => {\n        if (item.type == 'module' && item.anyChildChecked) {\n            return item.children?.some(child => child.checked && child.id == dep)\n        }\n        return item.id == dep && item.checked\n    }));\n}\nfunction createDialogComp(item: ITableData) {\n    const newChild = createApp(ExportDialogItem, {\n        handleItemCheckEvent,\n        startScreen,\n        versionDialog,\n        handleCollapse,\n        item: item,\n        moduleVersionDialog\n    });\n    const mountEl = document.createElement('div');\n    newChild.mount(mountEl);\n    const parentEl = document.getElementById('module-container-div');\n    parentEl?.appendChild(mountEl);\n}\nfunction createAndAppendItem({ newItem }: { newItem: ITableData }) {\n    if(!newItem.overridden){\n        createDialogComp(newItem);\n        items.value.push(newItem);\n    }\n}\n\nfunction handleItems() {\n    const treeItems = fileDisplayerUseCase.cloneFileExplorerTreeView({\n        displayFilterer: (item, hasChildren) => {\n            switch (item.ID) { case FileExplorerConstants.uiAssetListID: case FileExplorerConstants.uiSettingsID: return false; default: break; }\n            switch (item.objectType) {\n                case \"application\": return false;\n                case \"module\": return true;\n                case \"folder\": return hasChildren;\n                case \"model\": return true;\n            }\n        },\n    });\n\n    const converter = (treeItem: ITreeItem<FileDisplayerExternalData>, options: {ownerModule?: {isImportedModule: boolean;moduleVersion: string | undefined;relatedModelHistories: IModuleRelatedModelItem[] | undefined}}): ITableData => {\n        const item = treeItem.externalData;\n        if (item.objectType == \"application\") { throw new Error(\"unexpected item type\"); }\n\n        const fullPath = objectUseCase.getFullPath(item, \"self\");\n        let level = fullPath.split(\"/\").length - 1;\n\n        let tableData: ITableData;\n        switch(item.objectType) {\n            case \"folder\":\n                tableData = {\n                    id: item.ID, name: item.name, type: \"folder\", collapsed: true, level,\n                    children: treeItem.children?.map((item) => converter(item, { ownerModule: options.ownerModule })),\n                };\n                tableData.children?.forEach(child => child.parent = tableData);\n                handleParentCheckedStatus(tableData, false);\n                break;\n            case \"model\":\n                if (options.ownerModule) {\n                    tableData = { id: item.ID, name: item.name, type: item.modelType, level, overridden: item.overridden}; //FIXME: set overridden status to externalData\n                    if (!options.ownerModule.isImportedModule || item.isUnmodifiable) {\n                        const maxVersion = getItemMaxVersion(item);\n                        tableData = {\n                            ...tableData,\n                            checked: maxVersion ? true : item.isUnmodifiable,\n                            disabled: maxVersion ? false : !item.isUnmodifiable,\n                            version: maxVersion || 'latest',\n                        };\n                    } else {\n                        const importedModulesModel = options.ownerModule.relatedModelHistories?.find(e => e.modelID == item.ID)\n                        tableData = { ...tableData, checked: true, disabled: false, version: importedModulesModel?.version, overridden: item.overridden };\n                    }\n                } else {\n                    const maxVersion = getItemMaxVersion(item);\n                    tableData = {\n                        id: item.ID,\n                        name: item.name,\n                        checked: maxVersion ? true : item.isUnmodifiable,\n                        disabled: maxVersion ? false : !item.isUnmodifiable,\n                        type: item.modelType,\n                        version: maxVersion || 'latest',\n                        level,\n                        overridden: item.overridden,\n                    };\n                }\n                break;\n            case \"module\":\n                const isImportedModule = objectUseCase.isModuleImported(item);\n                const moduleVersion = item.relatedApplications.find(app => app.applicationID == viewModel.studio.appId)?.importedVersion;\n                const relatedModelHistories = isImportedModule ? importedModuleVersions.value?.get(item.ID)?.find(module => module.version == moduleVersion)?.relatedModelHistories : undefined\n                \n                tableData = {\n                    id: item.ID,\n                    collapsed: true,\n                    name: item.name,\n                    type: \"module\",\n                    imported: isImportedModule,\n                    version: moduleVersion,\n                    children: treeItem.children?.map((item) => converter(item, {ownerModule: {isImportedModule, moduleVersion, relatedModelHistories}})),\n                }\n                tableData.children?.forEach(child => child.parent = tableData);\n                handleParentCheckedStatus(tableData, false);\n                break;\n        }\n        return tableData;\n    };\n    const tableDatas = treeItems.map(item => converter(item, {}));\n\n    const traverser = (tableData: ITableData) => {\n        createAndAppendItem({ newItem: tableData });\n        tableData.children?.forEach(traverser);\n    };\n    \n    tableDatas.forEach(traverser);\n}\n\nfunction getItemMaxVersion(item: IModel): string | undefined {\n    if (!modelHistories.value?.has(item.ID))\n        return undefined;\n\n    const versions = modelHistories.value.get(item.ID);\n    if (!versions)\n        return undefined;\n\n    const findMaxVersion = (versions: Array<string>) => {\n        const versionNumbers = versions.map(v => {\n            const parts: Array<string> = v.split(\".\");\n            return parseInt(parts[0]) * 10 + parseInt(parts[1]) * 1;\n        })\n\n        versionNumbers.sort((a, b) => b - a);\n\n        const maxVersion = versionNumbers[0];\n        return `${Math.floor(maxVersion / 10)}.${maxVersion % 10}`;\n    }\n\n    return findMaxVersion(versions.map(e => e.version!));\n\n}\n\nfunction checkMaxVersionOfAllItems() {\n    let isThereVersion: boolean = false;\n    items.value.forEach(item => {\n        if (item.type == \"module\") {\n            item.children?.forEach(child => {\n                if (child.version) {\n                    isThereVersion = true;\n                }\n\n            })\n        }\n        else {\n            if (item.version) {\n                isThereVersion = true;\n            }\n        }\n    })\n    return isThereVersion;\n}\n\n//FIXME: Tum objectler check edilmeli.\nfunction checkWorkflowExecutionItems() {\n    let getUserOK = false, notifyOK = false;\n    const fn = (item: ITableData, name: string, type: string) => item.checked && item.type == type && item.name === name;\n    for(const item of items.value) {\n        if(getUserOK && notifyOK) break;\n        if (item.type == \"module\" && item.children) {\n            if(!getUserOK) getUserOK = item.children.some(e => fn(e, 'getUser', 'flow'));\n            if(!notifyOK) notifyOK = item.children.some(e => fn(e, 'notify', 'flow'));\n        }\n        else {\n            if(!getUserOK) getUserOK = !!fn(item, 'getUser', 'flow');\n            if(!notifyOK) notifyOK = !!fn(item, 'notify', 'flow');\n        }\n    }\n    return getUserOK && notifyOK;\n}\n\nfunction clickMainCheckbox(){\n    const checked = totalItemsCount.value == selectedItemsCount.value;\n    items.value.filter(e => !e?.disabled).forEach((item) => {\n        item.checked = !checked;\n        const allItemsCheckable = item.allChildChecked != undefined && item.children && item.children.length > 0 && !item.children.some(c => c.disabled);\n        if (allItemsCheckable) item.allChildChecked = !checked;\n        if (item.anyChildChecked != undefined) item.anyChildChecked = !checked;\n        if (item.children) item.children.filter(c => !c.disabled).forEach((child) => (child.checked = !checked));\n    });\n}\n\n\nfunction handleCollapse(item: ITableData, childIterate?: boolean, collapsed?: boolean) {\n    item.collapsed = collapsed !== undefined ? collapsed : !item.collapsed;\n    if (childIterate) {\n        item.children?.forEach(child => {\n            const childEl = document.getElementById(child.id);\n            childEl!.style.display = item.collapsed ? \"none\" : \"block\";\n            handleCollapse(child, childIterate, item.collapsed);\n        })\n    }\n}\n\nfunction checkAllDependents(item: ITableData, recurseParent: boolean) {\n    if (item.disabled || item.checked) return;\n\n    item.checked = true\n    item.parent && handleParentCheckedStatus(item.parent, recurseParent);\n\n    const deps = dependencyMap.value?.get(item.id)?.dependedTo\n    if (!deps) return;\n\n    deps.forEach(dep => {\n        items.value.forEach(item => {\n            if (item.type == 'module' && !item.allChildChecked) {\n                const willCheckItem = item.children?.find(child => !child.checked && child.id == dep)\n                willCheckItem && checkAllDependents(willCheckItem, recurseParent);\n                handleParentCheckedStatus(item, recurseParent);\n                return;\n            }\n\n            if (!item.checked && item.id == dep) {\n                checkAllDependents(item, recurseParent);\n                item.parent && handleParentCheckedStatus(item.parent, recurseParent);\n            }\n        })\n    });\n}\n\nfunction handleItemCheckEvent(item: ITableData) {\n    if (item.disabled || isModelDepended(item) || item.name == 'App Settings')\n        return;\n\n    if (item.type != \"module\" && item.type != \"folder\") {\n        if (item.checked) {\n            item.checked = false;\n            item.parent && handleParentCheckedStatus(item.parent, true);\n        } else {\n            checkAllDependents(item, true);\n        }\n    } else {\n        if (item.children && item.children.filter(c => !c.disabled).length > 0) {\n            if (item.anyChildChecked) {\n                item.children.filter(c => !c.disabled).forEach(child => child.checked = false);\n                item.checked = false;\n                handleParentCheckedStatus(item, true);\n            } else {\n                item.children.forEach(child => checkAllDependents(child, true));\n                item.checked = true;\n            }\n        }\n        else {\n            item.checked = !item.checked;\n            item.allChildChecked = false;\n        }\n    }\n\n}\n\nfunction handleParentCheckedStatus(item: ITableData, recurseParent: boolean) {\n    item.disabled = item.children && (item.children.length == 0 || !item.children?.some(child => !child.disabled))\n    item.allChildChecked = item.children && item.children.length > 0 && !item.children.some((child) => !child.checked || child.disabled);\n    item.anyChildChecked = item.children?.some((child) => child.checked && !child.disabled);\n    if (recurseParent && item.parent) {\n        handleParentCheckedStatus(item.parent, true);\n    }\n}\n\nfunction updateDependencyMap(newVersion: string, item: ITableData) {\n    const deps = dependencyMap.value?.get(item.id);\n    dependencyMap.value?.set(item.id, {\n        dependedBy: deps?.dependedBy || Array<string>(),\n        dependedTo: modelHistories.value?.get(item.id)?.find(e => e.version == newVersion)?.dependentModels?.map(e => e.modelId) || Array<string>()\n    })\n}\n\nfunction versionDialog(item: ITableData) {\n    const clickedNode = { id: item.id, state: { checked: item.checked }, text: item.name, type: item.type, version: item.version };\n    const hasAnyVersion = modelHistories.value?.has(item.id);\n    const options = {\n        clickedNode, cb: (version: string) => {\n            item.version = version;\n            updateDependencyMap(version, item);\n        }\n    } as any;\n\n    if (hasAnyVersion) {\n        options.versions = modelHistories.value?.get(item.id)\n    }\n    dialog.showDialog(\n        defineAsyncComponent(() => import(\"../../application/modelVersionDialog.vue\")),\n        { closable: true, title: \"Change Version\", width: \"1080px\", maxHeight: \"500px\", overflow: \"auto\" }, options\n    );\n}\n\nfunction moduleVersionDialog(item: ITableData) {\n    dialog.showDialog(\n        defineAsyncComponent(() => import(\"../../application/moduleVersionDialog.vue\")),\n        { closable: true, title: \"Change Version\", width: \"1080px\", maxHeight: \"500px\", overflow: \"auto\" },\n        {\n            module: { ID: item.id }, versions: importedModuleVersions.value?.get(item.id), cb: (moduleVersion: IModuleVersion) => {\n                item.version = moduleVersion.version;\n                item.children?.forEach(child => {\n                    const modulesModel = moduleVersion.relatedModelHistories.find(e => e.modelID == child.id)\n                    child.version = modulesModel?.version\n                    updateDependencyMap(modulesModel?.version!, child);\n                })\n            }\n        }\n    );\n}\n\nasync function downloadBtnClicked() {\n    executor.execute(\n        async () => {\n            const items = getJobItems();\n            await executor.executeUseCase<ICreateWorkflowExportJob>(ICreateWorkflowExportJob, { items });\n            emit(\"close\");\n    },{ loading: true });\n}\n\nfunction getJobItems(): Array<IWorkflowExportItem> {\n    const findCheckedItems = (item: ITableData): Array<IWorkflowExportItem> | undefined => {\n        if(!item.version || !item.checked) return;\n\n        if(item.type != 'module' && item.type != 'folder')\n            return [{ ID: item.id, version: item.version }];\n        \n        if(!item.anyChildChecked) return;\n\n        const children = Array<IWorkflowExportItem>();\n        item.children?.forEach(ch => {\n            const childList = findCheckedItems(ch);\n            if(childList && childList.length > 0) Array.prototype.push.apply(children, childList);\n        });\n        return children;\n    }\n\n    const jobItems = Array<IWorkflowExportItem>();\n    items.value.forEach(e => {\n        const itemList = findCheckedItems(e);\n        if(itemList && itemList.length > 0) Array.prototype.push.apply(jobItems, itemList);\n    });\n    return jobItems;\n\n}\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", null, [\n      _createVNode(CheckboxComp, {\n        class: _normalizeClass(['modules-selected-checkbox']),\n        minus: _unref(selectedItemsCount) != _unref(totalItemsCount),\n        check: _unref(selectedItemsCount) == _unref(totalItemsCount),\n        onClick: clickMainCheckbox\n      }, null, 8 /* PROPS */, [\"minus\", \"check\"]),\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"span\", _hoisted_3, _toDisplayString(_unref(selectedItemsCount)), 1 /* TEXT */),\n        _createTextVNode(\" of \"),\n        _createElementVNode(\"span\", _hoisted_4, _toDisplayString(_unref(totalItemsCount)), 1 /* TEXT */),\n        _createTextVNode(\" items selected \")\n      ])\n    ]),\n    _hoisted_5,\n    _createElementVNode(\"div\", _hoisted_6, [\n      _createElementVNode(\"div\", {\n        class: _normalizeClass(['cancel-button', ]),\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (emit('close')))\n      }, \"Cancel\"),\n      _createElementVNode(\"div\", {\n        class: _normalizeClass((_unref(isDownloadBtnDisable) ? ' button-disable' : '')),\n        onClick: _cache[1] || (_cache[1] = ($event: any) => (!_unref(isDownloadBtnDisable) && downloadBtnClicked()))\n      }, [\n        _hoisted_7,\n        (!_unref(isWorkflowExecutionItemsOK))\n          ? (_openBlock(), _createElementBlock(\"span\", _hoisted_8, \"'getUser' & 'nofify' flows not found. \"))\n          : _createCommentVNode(\"v-if\", true),\n        (!_unref(isThereVersion))\n          ? (_openBlock(), _createElementBlock(\"span\", _hoisted_9, \"There are no items ready to publish. At least one of your items must be ready to publish.\"))\n          : (!_unref(isAllDependenciesOK))\n            ? (_openBlock(), _createElementBlock(\"span\", _hoisted_10, _toDisplayString(dependencyErrorStr.value), 1 /* TEXT */))\n            : _createCommentVNode(\"v-if\", true)\n      ], 2 /* CLASS */)\n    ])\n  ]))\n}\n}\n\n})","\n      import API from \"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./workflowExportDialog.vue?vue&type=style&index=0&id=8ef20d50&scoped=true&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./workflowExportDialog.vue?vue&type=style&index=0&id=8ef20d50&scoped=true&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./workflowExportDialog.vue?vue&type=style&index=1&id=8ef20d50&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[9].use[0]!./workflowExportDialog.vue?vue&type=style&index=1&id=8ef20d50&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","import script from \"./workflowExportDialog.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./workflowExportDialog.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./workflowExportDialog.vue?vue&type=style&index=0&id=8ef20d50&scoped=true&lang=css\"\nimport \"./workflowExportDialog.vue?vue&type=style&index=1&id=8ef20d50&lang=css\"\n\nimport exportComponent from \"/home/runner/work/studio/studio/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-8ef20d50\"]])\n\nexport default __exports__"],"names":["___CSS_LOADER_EXPORT___","push","module","id","ModelSetup","constructor","createOverriderMap","allModels","reduce","prev","model","overriddenModel","set","ID","Map","changeModelRef","modelBody","overridderMap","wasObject","modelStr","JSON","stringify","replace","match","type","modelId","replaceModelId","get","parse","IdHelper","static","str","Error","colonIndex","indexOf","startsWith","endsWith","modelType","substring","length","split","ICreateWorkflowExportJob","Symbol","for","IFileDisplayerUseCase","IListMultiModelVersions","IListMultiModuleVersions","_withScopeId","n","_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_","_hoisted_6","_hoisted_7","_hoisted_8","key","style","_hoisted_9","_hoisted_10","__name","emits","setup","__props","emit","viewModel","IViewModel","dialog","IDialog","executor","IUseCaseExecutor","fileDisplayerUseCase","objectUseCase","IObjectUseCase","modelTraverser","IModelTraverser","items","modelHistories","importedModuleVersions","startScreen","dependencyMap","dependencyErrorStr","flattenAllModels","overridingMap","async","execute","Promise","all","executeUseCase","excludedTypes","then","res","value","map","depMap","forEach","item","version","owner","objectType","isModuleImported","moduleVersions","moduleVersion","relatedApplications","find","app","applicationID","studio","appId","importedVersion","importedModuleModel","filter","e","flatMap","relatedModelHistories","modelID","maxVersion","getItemMaxVersion","dependentModels","Array","historyItem","deps","dependedTo","dependedBy","dependencies","depModelId","some","depId","initDependencies","treeItems","cloneFileExplorerTreeView","displayFilterer","hasChildren","converter","treeItem","options","externalData","tableData","level","getFullPath","name","collapsed","children","ownerModule","child","parent","handleParentCheckedStatus","overridden","isImportedModule","isUnmodifiable","checked","disabled","importedModulesModel","undefined","imported","tableDatas","traverser","newItem","newChild","createApp","handleItemCheckEvent","versionDialog","handleCollapse","moduleVersionDialog","mountEl","document","createElement","mount","parentEl","getElementById","appendChild","createDialogComp","createAndAppendItem","handleItems","loading","totalItemsCount","countItems","selectedItemsCount","arr","useCheckedFilter","acc","anyChildChecked","count","isDownloadBtnDisable","validateDependencies","checkWorkflowExecutionItems","isThereVersion","checkMaxVersionOfAllItems","isWorkflowExecutionItemsOK","isAllDependenciesOK","checkMap","mustBeCheckedMap","dependedId","has","vals","firstItemID","keys","firstItemDeps","firstItemDepStr","findItem","join","size","f","versions","versionNumbers","v","parts","parseInt","sort","a","b","Math","floor","findMaxVersion","getUserOK","notifyOK","fn","clickMainCheckbox","allChildChecked","c","childIterate","display","checkAllDependents","recurseParent","dep","willCheckItem","isModelDepended","updateDependencyMap","newVersion","clickedNode","state","text","cb","showDialog","closable","title","width","maxHeight","overflow","modulesModel","getJobItems","findCheckedItems","ch","childList","prototype","apply","jobItems","itemList","_ctx","_cache","minus","check","onClick","$event","downloadBtnClicked","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement"],"sourceRoot":""}