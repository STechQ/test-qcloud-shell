"use strict";(self.webpackChunkqcloud_shell=self.webpackChunkqcloud_shell||[]).push([[9129],{5430:(n,t,o)=>{o.d(t,{Z:()=>l});var i=o(1864),e=o.n(i),a=o(352),r=o.n(a),c=o(5612),s=r()(e());s.i(c.Z),s.push([n.id,"\n.blockShadow[data-v-b15d371a] {\n    background-color: black;\n    top: 0px;\n    left: 0px;\n    position: fixed;\n    height: 100%;\n    width: 100%;\n    opacity: 0.7;\n}\n.center[data-v-b15d371a] {\n    text-align: center;\n}\nh1[data-v-b15d371a] {\n    margin: 0px;\n}\n.action[data-v-b15d371a]:hover {\n    border-color: black;\n}\n.notification-confirmation-button[data-v-b15d371a] {\n    width: 90px;\n    height: 32px;\n    border-radius: 4px;\n    opacity: 1;\n    background-color: transparent;\n    margin-left: 8px;\n\n    font: var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-medium) var(--unnamed-font-size-14) / var(--unnamed-line-spacing-19)\n        var(--unnamed-font-family-roboto);\n    letter-spacing: var(--unnamed-character-spacing-0);\n    font: normal normal medium 14px/19px Roboto;\n    letter-spacing: 0px;\n    opacity: 1;\n}\n.button-info[data-v-b15d371a] {\n    border: 1px solid var(--white);\n    border: 1px solid #ffffff;\n    border-radius: 4px;\n    opacity: 1;\n    color: white;\n}\n.action[data-v-b15d371a] {\n    height: 21px;\n    padding: 0px 6px;\n    border-radius: 5px;\n    cursor: pointer;\n    border: thin solid currentColor;\n    background-color: transparent;\n}\n.notification-icon[data-v-b15d371a] {\n    font-size: 36px;\n    margin-top: 16px;\n    margin-left: 16px;\n    margin-bottom: 16px;\n}\n.notification-icon[data-v-b15d371a]::before {\n    line-height: normal;\n}\n.notification-text[data-v-b15d371a] {\n    /* UI Properties */\n    font: var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-16) / var(--unnamed-line-spacing-21)\n        var(--unnamed-font-family-roboto);\n    letter-spacing: var(--unnamed-character-spacing-0);\n    text-align: left;\n    font: normal normal normal 16px/21px Roboto;\n    opacity: 1;\n\n    width: 290px;\n    word-wrap: break-word;\n\n    margin-bottom: 24px;\n    word-wrap: break-word;\n}\n.notification-text-margin[data-v-b15d371a] {\n    margin-left: 72px;\n    margin-top: -20px;\n}\n.notification-text-padding[data-v-b15d371a] {\n    padding-top: 24px;\n    padding-left: 24px;\n}\n.close-text[data-v-b15d371a] {\n    cursor: pointer;\n    margin-left: 12px;\n    margin-right: 16px;\n\n    height: 24px;\n    /* UI Properties */\n    font: var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-24) / 29px Material Design Icons Desktop;\n    color: var(--white);\n    font: normal normal normal 24px/29px Material Design Icons Desktop;\n    letter-spacing: 0.43px;\n    color: #ffffff;\n    opacity: 1;\n    text-align: right;\n}\n.notification-container[data-v-b15d371a] {\n    align-items: center;\n}\n.notification-header[data-v-b15d371a] {\n    display: flex;\n    align-items: center;\n}\n.notification-title[data-v-b15d371a] {\n    font: var(--unnamed-font-style-normal) normal bold var(--unnamed-font-size-16) / var(--unnamed-line-spacing-21) var(--unnamed-font-family-roboto);\n    letter-spacing: var(--unnamed-character-spacing-0);\n    color: var(--white);\n    text-align: left;\n    font: normal normal bold 16px/21px Roboto;\n    letter-spacing: 0px;\n    opacity: 1;\n    padding-left: 24px;\n    width: 290px;\n    word-break: break-all;\n}\n.button-container[data-v-b15d371a] {\n    float: right;\n    margin-right: 52px;\n    margin-bottom: 16px;\n}\n","",{version:3,sources:["webpack://./src/presentation/vue3/components/notification.vue"],names:[],mappings:";AA+HA;IACI,uBAAuB;IACvB,QAAQ;IACR,SAAS;IACT,eAAe;IACf,YAAY;IACZ,WAAW;IACX,YAAY;AAChB;AACA;IACI,kBAAkB;AACtB;AACA;IACI,WAAW;AACf;AACA;IACI,mBAAmB;AACvB;AACA;IACI,WAAW;IACX,YAAY;IACZ,kBAAkB;IAClB,UAAU;IACV,6BAA6B;IAC7B,gBAAgB;;IAEhB;yCACqC;IACrC,kDAAkD;IAClD,2CAA2C;IAC3C,mBAAmB;IACnB,UAAU;AACd;AACA;IACI,8BAA8B;IAC9B,yBAAyB;IACzB,kBAAkB;IAClB,UAAU;IACV,YAAY;AAChB;AAEA;IACI,YAAY;IACZ,gBAAgB;IAChB,kBAAkB;IAClB,eAAe;IACf,+BAA+B;IAC/B,6BAA6B;AACjC;AACA;IACI,eAAe;IACf,gBAAgB;IAChB,iBAAiB;IACjB,mBAAmB;AACvB;AACA;IACI,mBAAmB;AACvB;AACA;IACI,kBAAkB;IAClB;yCACqC;IACrC,kDAAkD;IAClD,gBAAgB;IAChB,2CAA2C;IAC3C,UAAU;;IAEV,YAAY;IACZ,qBAAqB;;IAErB,mBAAmB;IACnB,qBAAqB;AACzB;AAEA;IACI,iBAAiB;IACjB,iBAAiB;AACrB;AAEA;IACI,iBAAiB;IACjB,kBAAkB;AACtB;AACA;IACI,eAAe;IACf,iBAAiB;IACjB,kBAAkB;;IAElB,YAAY;IACZ,kBAAkB;IAClB,gJAAgJ;IAChJ,mBAAmB;IACnB,kEAAkE;IAClE,sBAAsB;IACtB,cAAc;IACd,UAAU;IACV,iBAAiB;AACrB;AACA;IACI,mBAAmB;AACvB;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;AACA;IACI,iJAAiJ;IACjJ,kDAAkD;IAClD,mBAAmB;IACnB,gBAAgB;IAChB,yCAAyC;IACzC,mBAAmB;IACnB,UAAU;IACV,kBAAkB;IAClB,YAAY;IACZ,qBAAqB;AACzB;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,mBAAmB;AACvB",sourcesContent:['<script setup lang="ts">\nimport { ref } from "vue";\nimport "vue-toastification/dist/index.css";\nimport { container } from "../../../domain/core/diContainer";\nimport { INotificationInteractor, INotificationOptions } from "../../../domain/model/INotificationOptions";\nimport { INotification } from "../../../domain/presentation/INotification";\n\nexport interface INot {\n    options: INotificationOptions;\n    zindex: number;\n}\nconst emit = defineEmits(["close-toast"]);\nconst props = defineProps<INot>();\nlet showDetail = ref(false);\nconst iconClass = ref(getIconClass());\n\nif (props.options?.copy) {\n    const options = props.options;\n    options.interactors = options.interactors || [];\n    options.interactors.unshift({\n        customClose: true,\n        text: "copy",\n        onInteract: () => {\n            const copyText = (options.title ? options.title + "\\n" : "") + options.text;\n            navigator.clipboard.writeText(copyText);\n            container.resolve<INotification>(INotification).showNotification({ text: "copied", type: "success", copy: false });\n        },\n    });\n}\nprops.options.interactors\n    ?.filter((interactor) => interactor.optionsPleaseSelect)\n    .forEach((interactor) => {\n        interactor.options = interactor.options || [];\n        if (interactor.options.find((option) => option.selected)) {\n            return;\n        }\n\n        interactor.options.unshift({ id: "pleaseSelect", text: "pleaseSelect" });\n    });\nconst requireds = {\n    interactors: props.options.interactors?.filter((interactor) => interactor.required).length || 0,\n    interracted: 0,\n};\nconst showBlockShadow = ref(requireds.interactors > 0);\n\nfunction decideClose(interactor: INotificationInteractor) {\n    if (!interactor.required) {\n        return;\n    }\n    if (requireds.interactors > ++requireds.interracted) {\n        return;\n    }\n\n    showBlockShadow.value = false;\n    emit("close-toast");\n}\nfunction selected(interactor: INotificationInteractor, event: Event) {\n    clickedOption(interactor, (event.target as HTMLSelectElement).selectedIndex, event);\n}\nfunction clickedOption(interactor: INotificationInteractor, index: number, event: Event) {\n    const selectedOption = interactor.options![index];\n    const close = () => decideClose(interactor);\n    if (!interactor.customClose) {\n        close();\n    } else {\n        event.stopPropagation();\n    }\n    interactor.onInteract({ selectedOption: { text: selectedOption.text, id: selectedOption.id, index }, close });\n}\nfunction clicked(interactor: INotificationInteractor, event: MouseEvent) {\n    const close = () => decideClose(interactor);\n    if (!interactor.customClose) {\n        close();\n    } else {\n        event.stopPropagation();\n    }\n    interactor.onInteract({ close });\n}\n\nfunction getIconClass() {\n    if (props.options.type == "error") return "mdi mdi-close-circle";\n    else if (props.options.type == "info") return "mdi mdi-information";\n    else if (props.options.type == "success") return "mdi mdi-check-circle";\n    else if (props.options.type == "warning") return "mdi mdi-alert";\n}\n<\/script>\n\n<template>\n    <div class="notification-container">\n        <template v-if="showBlockShadow">\n            <teleport to="body">\n                <div class="blockShadow" :style="{ zIndex: props.zindex }"></div>\n            </teleport>\n        </template>\n        <div class="notification-header">\n            <i :class="iconClass + \' notification-icon\' + \' col-1\'" :style="options.type == \'info\' ? \'color: white\' : \'color: black\'" />\n            <div :class="options.title ? \'notification-title col-2\' : \'notification-text notification-text-padding col-2\'">\n                {{ options.title ? options.title : options.text }}\n            </div>\n            <div class="close-text mdi mdi-close" :style="options.type == \'info\' ? \'color: white\' : \'color: black\'" />\n        </div>\n        <div>\n            <div v-if="options.title" class="notification-text notification-text-margin">{{ options.text }}</div>\n        </div>\n        <div class="button-container">\n            <template v-for="(interactor, index) in options.interactors" :key="index">\n                <template v-if="interactor.options">\n                    <select v-if="interactor.optionsType == \'combo\'" @click.stop="" @change="selected(interactor, $event)">\n                        <option v-for="option in interactor.options" :selected="option.selected" :key="option.id">{{ option.text }}</option>\n                    </select>\n                    <template v-else>\n                        <button\n                            :class="\'notification-confirmation-button\' + (options.type == \'info\' ? \' button-info\' : \'\')"\n                            v-for="(option, index) in interactor.options"\n                            :key="option.id"\n                            @click="clickedOption(interactor, index, $event)"\n                        >\n                            {{ option.text }}\n                        </button>\n                    </template>\n                </template>\n            </template>\n        </div>\n    </div>\n</template>\n<style scoped>\n@import url("../../../styles/IDE3.css");\n.blockShadow {\n    background-color: black;\n    top: 0px;\n    left: 0px;\n    position: fixed;\n    height: 100%;\n    width: 100%;\n    opacity: 0.7;\n}\n.center {\n    text-align: center;\n}\nh1 {\n    margin: 0px;\n}\n.action:hover {\n    border-color: black;\n}\n.notification-confirmation-button {\n    width: 90px;\n    height: 32px;\n    border-radius: 4px;\n    opacity: 1;\n    background-color: transparent;\n    margin-left: 8px;\n\n    font: var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-medium) var(--unnamed-font-size-14) / var(--unnamed-line-spacing-19)\n        var(--unnamed-font-family-roboto);\n    letter-spacing: var(--unnamed-character-spacing-0);\n    font: normal normal medium 14px/19px Roboto;\n    letter-spacing: 0px;\n    opacity: 1;\n}\n.button-info {\n    border: 1px solid var(--white);\n    border: 1px solid #ffffff;\n    border-radius: 4px;\n    opacity: 1;\n    color: white;\n}\n\n.action {\n    height: 21px;\n    padding: 0px 6px;\n    border-radius: 5px;\n    cursor: pointer;\n    border: thin solid currentColor;\n    background-color: transparent;\n}\n.notification-icon {\n    font-size: 36px;\n    margin-top: 16px;\n    margin-left: 16px;\n    margin-bottom: 16px;\n}\n.notification-icon::before {\n    line-height: normal;\n}\n.notification-text {\n    /* UI Properties */\n    font: var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-16) / var(--unnamed-line-spacing-21)\n        var(--unnamed-font-family-roboto);\n    letter-spacing: var(--unnamed-character-spacing-0);\n    text-align: left;\n    font: normal normal normal 16px/21px Roboto;\n    opacity: 1;\n\n    width: 290px;\n    word-wrap: break-word;\n\n    margin-bottom: 24px;\n    word-wrap: break-word;\n}\n\n.notification-text-margin {\n    margin-left: 72px;\n    margin-top: -20px;\n}\n\n.notification-text-padding {\n    padding-top: 24px;\n    padding-left: 24px;\n}\n.close-text {\n    cursor: pointer;\n    margin-left: 12px;\n    margin-right: 16px;\n\n    height: 24px;\n    /* UI Properties */\n    font: var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-24) / 29px Material Design Icons Desktop;\n    color: var(--white);\n    font: normal normal normal 24px/29px Material Design Icons Desktop;\n    letter-spacing: 0.43px;\n    color: #ffffff;\n    opacity: 1;\n    text-align: right;\n}\n.notification-container {\n    align-items: center;\n}\n\n.notification-header {\n    display: flex;\n    align-items: center;\n}\n.notification-title {\n    font: var(--unnamed-font-style-normal) normal bold var(--unnamed-font-size-16) / var(--unnamed-line-spacing-21) var(--unnamed-font-family-roboto);\n    letter-spacing: var(--unnamed-character-spacing-0);\n    color: var(--white);\n    text-align: left;\n    font: normal normal bold 16px/21px Roboto;\n    letter-spacing: 0px;\n    opacity: 1;\n    padding-left: 24px;\n    width: 290px;\n    word-break: break-all;\n}\n\n.button-container {\n    float: right;\n    margin-right: 52px;\n    margin-bottom: 16px;\n}\n</style>\n\n<style>\n.Vue-Toastification__toast {\n    width: 388px;\n    box-shadow: 2px 2px 15px #00000066;\n    border-radius: 4px;\n    opacity: 0.9;\n    color: black;\n    padding: 0px;\n}\n.Vue-Toastification__toast--warning {\n    background: #f3ca40 0% 0% no-repeat padding-box;\n}\n.Vue-Toastification__toast--success {\n    background: #29c660 0% 0% no-repeat padding-box;\n}\n.Vue-Toastification__toast--error {\n    background: #ff6b6b 0% 0% no-repeat padding-box;\n}\n.Vue-Toastification__toast--info {\n    color: white;\n    background: #151233 0% 0% no-repeat padding-box;\n}\n</style>\n'],sourceRoot:""}]);const l=s},9412:(n,t,o)=>{o.d(t,{Z:()=>c});var i=o(1864),e=o.n(i),a=o(352),r=o.n(a)()(e());r.push([n.id,"\n.Vue-Toastification__toast {\n    width: 388px;\n    box-shadow: 2px 2px 15px #00000066;\n    border-radius: 4px;\n    opacity: 0.9;\n    color: black;\n    padding: 0px;\n}\n.Vue-Toastification__toast--warning {\n    background: #f3ca40 0% 0% no-repeat padding-box;\n}\n.Vue-Toastification__toast--success {\n    background: #29c660 0% 0% no-repeat padding-box;\n}\n.Vue-Toastification__toast--error {\n    background: #ff6b6b 0% 0% no-repeat padding-box;\n}\n.Vue-Toastification__toast--info {\n    color: white;\n    background: #151233 0% 0% no-repeat padding-box;\n}\n","",{version:3,sources:["webpack://./src/presentation/vue3/components/notification.vue"],names:[],mappings:";AA8PA;IACI,YAAY;IACZ,kCAAkC;IAClC,kBAAkB;IAClB,YAAY;IACZ,YAAY;IACZ,YAAY;AAChB;AACA;IACI,+CAA+C;AACnD;AACA;IACI,+CAA+C;AACnD;AACA;IACI,+CAA+C;AACnD;AACA;IACI,YAAY;IACZ,+CAA+C;AACnD",sourcesContent:['<script setup lang="ts">\nimport { ref } from "vue";\nimport "vue-toastification/dist/index.css";\nimport { container } from "../../../domain/core/diContainer";\nimport { INotificationInteractor, INotificationOptions } from "../../../domain/model/INotificationOptions";\nimport { INotification } from "../../../domain/presentation/INotification";\n\nexport interface INot {\n    options: INotificationOptions;\n    zindex: number;\n}\nconst emit = defineEmits(["close-toast"]);\nconst props = defineProps<INot>();\nlet showDetail = ref(false);\nconst iconClass = ref(getIconClass());\n\nif (props.options?.copy) {\n    const options = props.options;\n    options.interactors = options.interactors || [];\n    options.interactors.unshift({\n        customClose: true,\n        text: "copy",\n        onInteract: () => {\n            const copyText = (options.title ? options.title + "\\n" : "") + options.text;\n            navigator.clipboard.writeText(copyText);\n            container.resolve<INotification>(INotification).showNotification({ text: "copied", type: "success", copy: false });\n        },\n    });\n}\nprops.options.interactors\n    ?.filter((interactor) => interactor.optionsPleaseSelect)\n    .forEach((interactor) => {\n        interactor.options = interactor.options || [];\n        if (interactor.options.find((option) => option.selected)) {\n            return;\n        }\n\n        interactor.options.unshift({ id: "pleaseSelect", text: "pleaseSelect" });\n    });\nconst requireds = {\n    interactors: props.options.interactors?.filter((interactor) => interactor.required).length || 0,\n    interracted: 0,\n};\nconst showBlockShadow = ref(requireds.interactors > 0);\n\nfunction decideClose(interactor: INotificationInteractor) {\n    if (!interactor.required) {\n        return;\n    }\n    if (requireds.interactors > ++requireds.interracted) {\n        return;\n    }\n\n    showBlockShadow.value = false;\n    emit("close-toast");\n}\nfunction selected(interactor: INotificationInteractor, event: Event) {\n    clickedOption(interactor, (event.target as HTMLSelectElement).selectedIndex, event);\n}\nfunction clickedOption(interactor: INotificationInteractor, index: number, event: Event) {\n    const selectedOption = interactor.options![index];\n    const close = () => decideClose(interactor);\n    if (!interactor.customClose) {\n        close();\n    } else {\n        event.stopPropagation();\n    }\n    interactor.onInteract({ selectedOption: { text: selectedOption.text, id: selectedOption.id, index }, close });\n}\nfunction clicked(interactor: INotificationInteractor, event: MouseEvent) {\n    const close = () => decideClose(interactor);\n    if (!interactor.customClose) {\n        close();\n    } else {\n        event.stopPropagation();\n    }\n    interactor.onInteract({ close });\n}\n\nfunction getIconClass() {\n    if (props.options.type == "error") return "mdi mdi-close-circle";\n    else if (props.options.type == "info") return "mdi mdi-information";\n    else if (props.options.type == "success") return "mdi mdi-check-circle";\n    else if (props.options.type == "warning") return "mdi mdi-alert";\n}\n<\/script>\n\n<template>\n    <div class="notification-container">\n        <template v-if="showBlockShadow">\n            <teleport to="body">\n                <div class="blockShadow" :style="{ zIndex: props.zindex }"></div>\n            </teleport>\n        </template>\n        <div class="notification-header">\n            <i :class="iconClass + \' notification-icon\' + \' col-1\'" :style="options.type == \'info\' ? \'color: white\' : \'color: black\'" />\n            <div :class="options.title ? \'notification-title col-2\' : \'notification-text notification-text-padding col-2\'">\n                {{ options.title ? options.title : options.text }}\n            </div>\n            <div class="close-text mdi mdi-close" :style="options.type == \'info\' ? \'color: white\' : \'color: black\'" />\n        </div>\n        <div>\n            <div v-if="options.title" class="notification-text notification-text-margin">{{ options.text }}</div>\n        </div>\n        <div class="button-container">\n            <template v-for="(interactor, index) in options.interactors" :key="index">\n                <template v-if="interactor.options">\n                    <select v-if="interactor.optionsType == \'combo\'" @click.stop="" @change="selected(interactor, $event)">\n                        <option v-for="option in interactor.options" :selected="option.selected" :key="option.id">{{ option.text }}</option>\n                    </select>\n                    <template v-else>\n                        <button\n                            :class="\'notification-confirmation-button\' + (options.type == \'info\' ? \' button-info\' : \'\')"\n                            v-for="(option, index) in interactor.options"\n                            :key="option.id"\n                            @click="clickedOption(interactor, index, $event)"\n                        >\n                            {{ option.text }}\n                        </button>\n                    </template>\n                </template>\n            </template>\n        </div>\n    </div>\n</template>\n<style scoped>\n@import url("../../../styles/IDE3.css");\n.blockShadow {\n    background-color: black;\n    top: 0px;\n    left: 0px;\n    position: fixed;\n    height: 100%;\n    width: 100%;\n    opacity: 0.7;\n}\n.center {\n    text-align: center;\n}\nh1 {\n    margin: 0px;\n}\n.action:hover {\n    border-color: black;\n}\n.notification-confirmation-button {\n    width: 90px;\n    height: 32px;\n    border-radius: 4px;\n    opacity: 1;\n    background-color: transparent;\n    margin-left: 8px;\n\n    font: var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-medium) var(--unnamed-font-size-14) / var(--unnamed-line-spacing-19)\n        var(--unnamed-font-family-roboto);\n    letter-spacing: var(--unnamed-character-spacing-0);\n    font: normal normal medium 14px/19px Roboto;\n    letter-spacing: 0px;\n    opacity: 1;\n}\n.button-info {\n    border: 1px solid var(--white);\n    border: 1px solid #ffffff;\n    border-radius: 4px;\n    opacity: 1;\n    color: white;\n}\n\n.action {\n    height: 21px;\n    padding: 0px 6px;\n    border-radius: 5px;\n    cursor: pointer;\n    border: thin solid currentColor;\n    background-color: transparent;\n}\n.notification-icon {\n    font-size: 36px;\n    margin-top: 16px;\n    margin-left: 16px;\n    margin-bottom: 16px;\n}\n.notification-icon::before {\n    line-height: normal;\n}\n.notification-text {\n    /* UI Properties */\n    font: var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-16) / var(--unnamed-line-spacing-21)\n        var(--unnamed-font-family-roboto);\n    letter-spacing: var(--unnamed-character-spacing-0);\n    text-align: left;\n    font: normal normal normal 16px/21px Roboto;\n    opacity: 1;\n\n    width: 290px;\n    word-wrap: break-word;\n\n    margin-bottom: 24px;\n    word-wrap: break-word;\n}\n\n.notification-text-margin {\n    margin-left: 72px;\n    margin-top: -20px;\n}\n\n.notification-text-padding {\n    padding-top: 24px;\n    padding-left: 24px;\n}\n.close-text {\n    cursor: pointer;\n    margin-left: 12px;\n    margin-right: 16px;\n\n    height: 24px;\n    /* UI Properties */\n    font: var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-24) / 29px Material Design Icons Desktop;\n    color: var(--white);\n    font: normal normal normal 24px/29px Material Design Icons Desktop;\n    letter-spacing: 0.43px;\n    color: #ffffff;\n    opacity: 1;\n    text-align: right;\n}\n.notification-container {\n    align-items: center;\n}\n\n.notification-header {\n    display: flex;\n    align-items: center;\n}\n.notification-title {\n    font: var(--unnamed-font-style-normal) normal bold var(--unnamed-font-size-16) / var(--unnamed-line-spacing-21) var(--unnamed-font-family-roboto);\n    letter-spacing: var(--unnamed-character-spacing-0);\n    color: var(--white);\n    text-align: left;\n    font: normal normal bold 16px/21px Roboto;\n    letter-spacing: 0px;\n    opacity: 1;\n    padding-left: 24px;\n    width: 290px;\n    word-break: break-all;\n}\n\n.button-container {\n    float: right;\n    margin-right: 52px;\n    margin-bottom: 16px;\n}\n</style>\n\n<style>\n.Vue-Toastification__toast {\n    width: 388px;\n    box-shadow: 2px 2px 15px #00000066;\n    border-radius: 4px;\n    opacity: 0.9;\n    color: black;\n    padding: 0px;\n}\n.Vue-Toastification__toast--warning {\n    background: #f3ca40 0% 0% no-repeat padding-box;\n}\n.Vue-Toastification__toast--success {\n    background: #29c660 0% 0% no-repeat padding-box;\n}\n.Vue-Toastification__toast--error {\n    background: #ff6b6b 0% 0% no-repeat padding-box;\n}\n.Vue-Toastification__toast--info {\n    color: white;\n    background: #151233 0% 0% no-repeat padding-box;\n}\n</style>\n'],sourceRoot:""}]);const c=r},9129:(n,t,o)=>{o.r(t),o.d(t,{default:()=>N});var i=o(2068),e=o(9045),a=o(1705),r=o(1407),c=(o(1078),o(3734)),s=o(9166);const l={class:"notification-container"},p={class:"notification-header"},d={key:0,class:"notification-text notification-text-margin"},f={class:"button-container"},A=["onChange"],m=["selected"],x=["onClick"],u=(0,i.aZ)({__name:"notification",props:{options:null,zindex:null},emits:["close-toast"],setup(n,{emit:t}){var o,u,g;const v=n;(0,r.iH)(!1);const b=(0,r.iH)("error"==v.options.type?"mdi mdi-close-circle":"info"==v.options.type?"mdi mdi-information":"success"==v.options.type?"mdi mdi-check-circle":"warning"==v.options.type?"mdi mdi-alert":void 0);if(null===(o=v.options)||void 0===o?void 0:o.copy){const n=v.options;n.interactors=n.interactors||[],n.interactors.unshift({customClose:!0,text:"copy",onInteract:()=>{const t=(n.title?n.title+"\n":"")+n.text;navigator.clipboard.writeText(t),c.nC.resolve(s.L).showNotification({text:"copied",type:"success",copy:!1})}})}null===(u=v.options.interactors)||void 0===u||u.filter((n=>n.optionsPleaseSelect)).forEach((n=>{n.options=n.options||[],n.options.find((n=>n.selected))||n.options.unshift({id:"pleaseSelect",text:"pleaseSelect"})}));const C={interactors:(null===(g=v.options.interactors)||void 0===g?void 0:g.filter((n=>n.required)).length)||0,interracted:0},I=(0,r.iH)(C.interactors>0);function h(n,o,i){const e=n.options[o],a=()=>function(n){n.required&&(C.interactors>++C.interracted||(I.value=!1,t("close-toast")))}(n);n.customClose?i.stopPropagation():a(),n.onInteract({selectedOption:{text:e.text,id:e.id,index:o},close:a})}return(t,o)=>((0,i.wg)(),(0,i.iD)("div",l,[I.value?((0,i.wg)(),(0,i.j4)(i.lR,{key:0,to:"body"},[(0,i._)("div",{class:"blockShadow",style:(0,e.normalizeStyle)({zIndex:v.zindex})},null,4)])):(0,i.kq)("v-if",!0),(0,i._)("div",p,[(0,i._)("i",{class:(0,e.normalizeClass)(b.value+" notification-icon col-1"),style:(0,e.normalizeStyle)("info"==n.options.type?"color: white":"color: black")},null,6),(0,i._)("div",{class:(0,e.normalizeClass)(n.options.title?"notification-title col-2":"notification-text notification-text-padding col-2")},(0,e.toDisplayString)(n.options.title?n.options.title:n.options.text),3),(0,i._)("div",{class:"close-text mdi mdi-close",style:(0,e.normalizeStyle)("info"==n.options.type?"color: white":"color: black")},null,4)]),(0,i._)("div",null,[n.options.title?((0,i.wg)(),(0,i.iD)("div",d,(0,e.toDisplayString)(n.options.text),1)):(0,i.kq)("v-if",!0)]),(0,i._)("div",f,[((0,i.wg)(!0),(0,i.iD)(i.HY,null,(0,i.Ko)(n.options.interactors,((t,r)=>((0,i.wg)(),(0,i.iD)(i.HY,{key:r},[t.options?((0,i.wg)(),(0,i.iD)(i.HY,{key:0},["combo"==t.optionsType?((0,i.wg)(),(0,i.iD)("select",{key:0,onClick:o[0]||(o[0]=(0,a.withModifiers)((()=>{}),["stop"])),onChange:n=>function(n,t){h(n,t.target.selectedIndex,t)}(t,n)},[((0,i.wg)(!0),(0,i.iD)(i.HY,null,(0,i.Ko)(t.options,(n=>((0,i.wg)(),(0,i.iD)("option",{selected:n.selected,key:n.id},(0,e.toDisplayString)(n.text),9,m)))),128))],40,A)):((0,i.wg)(!0),(0,i.iD)(i.HY,{key:1},(0,i.Ko)(t.options,((o,a)=>((0,i.wg)(),(0,i.iD)("button",{class:(0,e.normalizeClass)("notification-confirmation-button"+("info"==n.options.type?" button-info":"")),key:o.id,onClick:n=>h(t,a,n)},(0,e.toDisplayString)(o.text),11,x)))),128))],64)):(0,i.kq)("v-if",!0)],64)))),128))])]))}});var g=o(5701),v=o.n(g),b=o(8236),C=o.n(b),I=o(6080),h=o.n(I),y=o(6850),k=o.n(y),B=o(7182),w=o.n(B),D=o(9213),_=o.n(D),z=o(5430),S={};S.styleTagTransform=_(),S.setAttributes=k(),S.insert=h().bind(null,"head"),S.domAPI=C(),S.insertStyleElement=w(),v()(z.Z,S),z.Z&&z.Z.locals&&z.Z.locals;var Y=o(9412),T={};T.styleTagTransform=_(),T.setAttributes=k(),T.insert=h().bind(null,"head"),T.domAPI=C(),T.insertStyleElement=w(),v()(Y.Z,T),Y.Z&&Y.Z.locals&&Y.Z.locals;const N=(0,o(1419).Z)(u,[["__scopeId","data-v-b15d371a"]])}}]);
//# sourceMappingURL=9129.js.map