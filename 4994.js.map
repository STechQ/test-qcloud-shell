{"version":3,"file":"4994.js","mappings":"8HASA,IAAIA,GAAe,EACnB,IAAIC,SAAcC,GAAOA,MAAOC,MAAK,IAAMH,GAAe,IACrC,oBAAf,WAA8BI,YACpC,MAAMC,GAAsC,IAAjBL,EAMpB,SAASM,EAAqBC,EAAkBC,EAAoC,CAAC,GAExF,IAAIC,EAA2CC,EAC3CC,EACJ,MAAMC,EAA6CL,IAC3CI,GAASE,aAAaF,GAC1BA,EAAQG,YAAW,KAAQJ,EAAO,IAAIK,MAAM,gDAAgDR,KAAW,GAAKA,EAA6B,EAO7I,OAJIA,GACAK,EAAWL,GAGR,CACHK,aACAI,QAAS,IAAIf,SAAW,CAACC,EAAKe,KAdT,IAACC,IAc8ChB,EAA5BO,EAdKJ,GAAsBG,EAAIW,eAAkBC,GAA8BN,YAAW,IAAMI,EAAGE,KAAUF,EAc3ER,EAASO,CAAG,IACtFR,WACAC,SAER,C,0GC/BA,SAASW,IACL,MAAMC,GAAO,SAEb,OADAR,YAAW,KAAQQ,EAAKb,UAAU,GAAI,KAC/Ba,EAAKN,OAChB,CAEOO,eAAeC,EAA6BC,EAAoBP,SAC7DQ,EAAiB,CAACD,IACxB,MAAME,EAAM,aAA8BF,SACpCP,EAAGS,EACb,CACOJ,eAAeG,EAAiBE,EAA6BV,GAChE,IAAIW,GAAM,EACV,MAAQA,GACJ,IACID,EAAaE,SAAQL,GAAc,aAAkBA,KACrDI,GAAM,C,CACR,MAAOE,SACCV,G,OAGRH,aAAE,EAAFA,IACV,C,mCCAO,MAAMc,EAAqBC,OAAOC,IAAI,qB,oFCnB7C,MCJA,GDI4B,QAAiB,CAC3CC,OAAQ,UACRC,MAAMC,GAGD,CAACC,EAAUC,MACR,WAAc,QAAoB,MAAO,KAAM,iBEVzD,GCI4B,QAAiB,CAC3CJ,OAAQ,OACRC,MAAMC,IAEkB,aAAsCL,EAAA,GAC9CQ,cAAc,CAAC,SAG1B,CAACF,EAAUC,MACR,WAAc,QAAoB,UAAW,KAAM,EACzD,IAAAE,GAAoB,MAAO,KAAM,EAC/B,QAAa,U","sources":["webpack://qcloud_shell/./src/common/promiseHelper.ts","webpack://qcloud_shell/./src/domain/core/diContainer.ts","webpack://qcloud_shell/./src/domain/useCase/IBackofficeUseCase.ts","webpack://qcloud_shell/./src/presentation/vue3/components/backoffice/tag/tagList.vue?322f","webpack://qcloud_shell/./src/presentation/vue3/components/backoffice/tag/tagList.vue","webpack://qcloud_shell/./src/presentation/vue3/pages/backoffice/tags.vue","webpack://qcloud_shell/./src/presentation/vue3/pages/backoffice/tags.vue?4161"],"sourcesContent":["export interface IPromiseData<T> {\n    promise: Promise<T>;\n    resolver: (value: T | PromiseLike<T>) => void;\n    reject: (reason?: any) => void;\n    startTimer: (timeout: number) => void;\n}\n\n//some platforms have syncronous resolve problem (ex: IOS JavascriptCore)\ndeclare var doNothing: any;\nlet syncResolved = false as boolean;\nnew Promise<void>(res => res()).then(() => syncResolved = true);\ntypeof(doNothing) != \"undefined\" && doNothing();\nconst syncResolveProblem = syncResolved === true; // platform has sync resolve problem or not\n\ntype ResolveFunc<T> = (value: T | PromiseLike<T>) => void;\n/**\n * @param timeout timeout time in ms, undefined if infinite\n */\nexport function createPromiseData<T>(timeout?: number, opt: { fixSyncResolve?: boolean } = {}): IPromiseData<T> {\n    const syncResolveFixer = (cb: ResolveFunc<T>) => syncResolveProblem && opt.fixSyncResolve ? (value: T | PromiseLike<T>) => setTimeout(() => cb(value)) : cb;\n    let resolver: ResolveFunc<T> = <any>undefined, reject: (reason?: any) => void = <any>undefined;\n    let timer: number;\n    const startTimer: IPromiseData<T>[\"startTimer\"] = (timeout: number) => {\n        if (timer) { clearTimeout(timer); }\n        timer = setTimeout(() => { reject(new Error(`The operation has timed out. timeoutValue  : ${timeout}`)); }, timeout) as unknown as number;\n    }\n\n    if (timeout) {\n        startTimer(timeout);\n    }\n\n    return {\n        startTimer,\n        promise: new Promise<T>((res, rej) => { resolver = syncResolveFixer(res); reject = rej; }),\n        resolver,\n        reject\n    };\n}","import { container, singleton, inject, injectable } from \"tsyringe\";\nimport { DependencyContainer } from \"tsyringe\";\nimport { createPromiseData } from \"../../common/promiseHelper\";\n\ninterface IDependencyContainer extends DependencyContainer { }; // for vite vs webpack :( remember\n\nfunction sleep() {\n    const prom = createPromiseData<void>();\n    setTimeout(() => { prom.resolver() }, 100);\n    return prom.promise;\n}\n\nexport async function delayWithResolve<TInterface>(dependency: symbol, cb: (dep: TInterface) => void | Promise<void>) {\n    await delayTillResolve([dependency]);\n    const dep = container.resolve<TInterface>(dependency);\n    await cb(dep);\n}\nexport async function delayTillResolve(dependencies: Array<symbol>, cb?: () => void | Promise<void>) {\n    let run = false;\n    while (!run) {\n        try {\n            dependencies.forEach(dependency => container.resolve(dependency));\n            run = true;\n        } catch (err) {\n            await sleep();\n        }\n    }\n    await cb?.();\n}\n\nexport { container, singleton, inject, injectable, IDependencyContainer }","import { IUser_SUSI } from \"../../../../common/qCloudTemp/authentication\";\nimport { IOrganization } from \"../../../../common/qCloudTemp/membership\";\nimport { IApplication } from \"../../../../common/qCloudTemp/quickCloud\";\nimport { IBoListOrganizationUsersRequest, IBoRemoveUserFromOrganizationRequest, IBoUpdateOrganizationRequest, IBoUpdateOrganizationResponse } from \"../../../../common/qCloudTemp/symDtoObjects\";\nimport { IUpdateOrganization, IUpdateUserInfo } from \"../infrastructure/IQCloudApi\";\n\nexport interface IAzureResourceGroupUrls {\n    overviewUrl: string;\n    costUrl: string;\n}\n\nexport interface IBackofficeUseCase {\n    setBreadcrumb(values: Array<string>): void;\n    clearBreadcrumb(): void;\n    getAzureResourceGroupUrls(resourceGroupId: string): Promise<IAzureResourceGroupUrls>;\n    getDashboardInfo(): Promise<void>;\n    getUserInfo(userId: string): Promise<IUser_SUSI>;\n    getOrganizationInfo(organizationId: string): Promise<IOrganization>;\n    listUsers(): Promise<void>;\n    listOrganizations(): Promise<void>;\n    updateUserInfo(userId: string, properties: IUpdateUserInfo): Promise<IUser_SUSI>;\n    removeUserFromOrganization(properties: IBoRemoveUserFromOrganizationRequest): Promise<void>;\n    listOrganizationUsers(organizationId: string): Promise<Array<IUser_SUSI>>;\n    listOrganizationApps(organizationId: string): Promise<Array<IApplication>>;\n    deleteOrganization(organizationId: string, organizationName: string): Promise<void>;\n    updateOrganization(organizationId: string, properties: IUpdateOrganization): Promise<IOrganization>;\n}\n\nexport const IBackofficeUseCase = Symbol.for(\"IBackofficeUseCase\");","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport { computed, defineAsyncComponent, ref } from \"vue\";\n\n// const viewModel = container.resolve<IViewModel>(IViewModel);\n// const executor = container.resolve<IUseCaseExecutor>(IUseCaseExecutor);\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'tagList',\n  setup(__props) {\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, \" Tag List \"))\n}\n}\n\n})","import script from \"./tagList.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./tagList.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./tags.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./tags.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport { container } from \"../../../../domain/core/diContainer\";\nimport { IBackofficeUseCase } from \"../../../../domain/useCase/IBackofficeUseCase\";\nimport { IUseCaseExecutor } from \"../../../../domain/useCase/IUseCaseExecutor\";\nimport TagList from \"../../components/backoffice/tag/tagList.vue\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'tags',\n  setup(__props) {\n\nconst backofficeUseCase = container.resolve<IBackofficeUseCase>(IBackofficeUseCase);\nbackofficeUseCase.setBreadcrumb([\"Tags\"]);\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"section\", null, [\n    _createElementVNode(\"div\", null, [\n      _createVNode(TagList)\n    ])\n  ]))\n}\n}\n\n})"],"names":["syncResolved","Promise","res","then","doNothing","syncResolveProblem","createPromiseData","timeout","opt","resolver","reject","timer","startTimer","clearTimeout","setTimeout","Error","promise","rej","cb","fixSyncResolve","value","sleep","prom","async","delayWithResolve","dependency","delayTillResolve","dep","dependencies","run","forEach","err","IBackofficeUseCase","Symbol","for","__name","setup","__props","_ctx","_cache","setBreadcrumb","_"],"sourceRoot":""}