"use strict";(this.webpackChunkqcloud_shell=this.webpackChunkqcloud_shell||[]).push([[4773],{21060:(n,t,o)=>{o.d(t,{Z:()=>m});var i=o(34663),e=o.n(i),a=o(7638),r=o.n(a),s=o(79240),c=o(87167),p=o.n(c),l=new URL(o(69086),o.b),d=r()(e());d.i(s.Z);var f=p()(l);d.push([n.id,"\n.blockShadow[data-v-a3e1ea94] {\n    background-color: black;\n    top: 0px;\n    left: 0px;\n    position: fixed;\n    height: 100%;\n    width: 100%;\n    opacity: 0.7;\n}\n.center[data-v-a3e1ea94] {\n    text-align: center;\n}\nh1[data-v-a3e1ea94] {\n    margin: 0px;\n}\n.action[data-v-a3e1ea94]:hover {\n    border-color: black;\n}\n.notification-confirmation-button[data-v-a3e1ea94] {\n    width: 90px;\n    height: 32px;\n    border-radius: 4px;\n    opacity: 1;\n    background-color: transparent;\n    margin-left: 8px;\n\n    font: var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-medium) var(--unnamed-font-size-14) / var(--unnamed-line-spacing-19)\n        var(--unnamed-font-family-roboto);\n    letter-spacing: var(--unnamed-character-spacing-0);\n    font: normal normal medium 14px/19px Roboto;\n    letter-spacing: 0px;\n    opacity: 1;\n}\n.button-info[data-v-a3e1ea94] {\n    border: 1px solid var(--white);\n    border: 1px solid #ffffff;\n    border-radius: 4px;\n    opacity: 1;\n    color: white;\n}\n.action[data-v-a3e1ea94] {\n    height: 21px;\n    padding: 0px 6px;\n    border-radius: 5px;\n    cursor: pointer;\n    border: thin solid currentColor;\n    background-color: transparent;\n}\n.notification-icon[data-v-a3e1ea94] {\n    font-size: 36px;\n    margin: 16px 0 16px 16px;\n}\n.notification-icon[data-v-a3e1ea94]::before {\n    line-height: normal;\n}\n.notification-text[data-v-a3e1ea94] {\n    /* UI Properties */\n    font: var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-16) / var(--unnamed-line-spacing-21)\n        var(--unnamed-font-family-roboto);\n    letter-spacing: var(--unnamed-character-spacing-0);\n    text-align: left;\n    font: normal normal normal 16px/21px Roboto;\n    opacity: 1;\n\n    width: 290px;\n    word-wrap: break-word;\n\n    margin-bottom: 24px;\n    word-wrap: break-word;\n}\n.notification-text-margin[data-v-a3e1ea94] {\n    margin-left: 72px;\n    margin-top: -20px;\n}\n.notification-text-padding[data-v-a3e1ea94] {\n    padding-top: 24px;\n    padding-left: 24px;\n}\n.close-text[data-v-a3e1ea94] {\n    cursor: pointer;\n    margin: 16px 16px 16px 12px;\n    height: 24px;\n    /* UI Properties */\n    font: var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-24) / 29px Material Design Icons Desktop;\n    color: var(--white);\n    font: normal normal normal 24px/29px Material Design Icons Desktop;\n    letter-spacing: 0.43px;\n    color: #ffffff;\n    text-align: right;\n}\n.notification-container[data-v-a3e1ea94] {\n    align-items: center;\n}\n.notification-header[data-v-a3e1ea94] {\n    display: flex;\n    align-items: center;\n}\n.notification-title[data-v-a3e1ea94] {\n    font: var(--unnamed-font-style-normal) normal bold var(--unnamed-font-size-16) / var(--unnamed-line-spacing-21) var(--unnamed-font-family-roboto);\n    letter-spacing: var(--unnamed-character-spacing-0);\n    color: var(--white);\n    text-align: left;\n    font: normal normal bold 16px/21px Roboto;\n    letter-spacing: 0px;\n    opacity: 1;\n    padding-left: 24px;\n    width: 290px;\n    word-break: break-all;\n}\n.button-container[data-v-a3e1ea94] {\n    float: right;\n    margin-right: 52px;\n    margin-bottom: 16px;\n}\n.check-circle[data-v-a3e1ea94] {\n    background: url("+f+");\n}\n","",{version:3,sources:["webpack://./src/presentation/vue3/components/notification.vue"],names:[],mappings:";AA8KA;IACI,uBAAuB;IACvB,QAAQ;IACR,SAAS;IACT,eAAe;IACf,YAAY;IACZ,WAAW;IACX,YAAY;AAChB;AACA;IACI,kBAAkB;AACtB;AACA;IACI,WAAW;AACf;AACA;IACI,mBAAmB;AACvB;AACA;IACI,WAAW;IACX,YAAY;IACZ,kBAAkB;IAClB,UAAU;IACV,6BAA6B;IAC7B,gBAAgB;;IAEhB;yCACqC;IACrC,kDAAkD;IAClD,2CAA2C;IAC3C,mBAAmB;IACnB,UAAU;AACd;AACA;IACI,8BAA8B;IAC9B,yBAAyB;IACzB,kBAAkB;IAClB,UAAU;IACV,YAAY;AAChB;AAEA;IACI,YAAY;IACZ,gBAAgB;IAChB,kBAAkB;IAClB,eAAe;IACf,+BAA+B;IAC/B,6BAA6B;AACjC;AACA;IACI,eAAe;IACf,wBAAwB;AAC5B;AACA;IACI,mBAAmB;AACvB;AACA;IACI,kBAAkB;IAClB;yCACqC;IACrC,kDAAkD;IAClD,gBAAgB;IAChB,2CAA2C;IAC3C,UAAU;;IAEV,YAAY;IACZ,qBAAqB;;IAErB,mBAAmB;IACnB,qBAAqB;AACzB;AAEA;IACI,iBAAiB;IACjB,iBAAiB;AACrB;AAEA;IACI,iBAAiB;IACjB,kBAAkB;AACtB;AACA;IACI,eAAe;IACf,2BAA2B;IAC3B,YAAY;IACZ,kBAAkB;IAClB,gJAAgJ;IAChJ,mBAAmB;IACnB,kEAAkE;IAClE,sBAAsB;IACtB,cAAc;IACd,iBAAiB;AACrB;AACA;IACI,mBAAmB;AACvB;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;AACA;IACI,iJAAiJ;IACjJ,kDAAkD;IAClD,mBAAmB;IACnB,gBAAgB;IAChB,yCAAyC;IACzC,mBAAmB;IACnB,UAAU;IACV,kBAAkB;IAClB,YAAY;IACZ,qBAAqB;AACzB;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,mBAAmB;AACvB;AAEA;IACI,mDAA0D;AAC9D",sourcesContent:['<script setup lang="ts">\nimport { defineAsyncComponent, ref } from "vue";\nimport "vue-toastification/dist/index.css";\nimport { container } from "../../../domain/core/diContainer";\nimport { INotificationInteractor, INotificationOptions } from "../../../domain/model/INotificationOptions";\nimport { INotification } from "../../../domain/presentation/INotification";\nimport { IPage } from "../../../domain/presentation/IPage";\n\nexport interface INot {\n    options: INotificationOptions;\n    zindex: number;\n}\nconst emit = defineEmits(["close-toast"]);\nconst props = defineProps<INot>();\nlet showDetail = ref(false);\nconst iconClass = ref(getIconClass());\nconst page = container.resolve<IPage>(IPage);\nif (props.options?.copy) {\n    const options = props.options;\n    options.interactors = options.interactors || [];\n    options.interactors.unshift({\n        customClose: true,\n        text: "copy",\n        onInteract: () => {\n            const copyText = (options.title ? options.title + "\\n" : "") + options.text;\n            navigator.clipboard.writeText(copyText);\n            container.resolve<INotification>(INotification).showNotification({ text: "copied", type: "success", copy: false });\n        },\n    });\n}\nprops.options.interactors\n    ?.filter((interactor) => interactor.optionsPleaseSelect)\n    .forEach((interactor) => {\n        interactor.options = interactor.options || [];\n        if (interactor.options.find((option) => option.selected)) {\n            return;\n        }\n\n        interactor.options.unshift({ id: "pleaseSelect", text: "pleaseSelect" });\n    });\nconst requireds = {\n    interactors: props.options.interactors?.filter((interactor) => interactor.required).length || 0,\n    interracted: 0,\n};\nconst showBlockShadow = ref(requireds.interactors > 0);\n\nfunction decideClose(interactor: INotificationInteractor) {\n    if (!interactor.required) {\n        return;\n    }\n    if (requireds.interactors > ++requireds.interracted) {\n        return;\n    }\n\n    showBlockShadow.value = false;\n    emit("close-toast");\n}\nfunction selected(interactor: INotificationInteractor, event: Event) {\n    clickedOption(interactor, (event.target as HTMLSelectElement).selectedIndex, event);\n}\nfunction clickedOption(interactor: INotificationInteractor, index: number, event: Event) {\n    const selectedOption = interactor.options![index];\n    const close = () => decideClose(interactor);\n    if (!interactor.customClose) {\n        close();\n    } else {\n        event.stopPropagation();\n    }\n    interactor.onInteract({ selectedOption: { text: selectedOption.text, id: selectedOption.id, index }, close });\n}\nfunction clicked(interactor: INotificationInteractor, event: MouseEvent) {\n    const close = () => decideClose(interactor);\n    if (!interactor.customClose) {\n        close();\n    } else {\n        event.stopPropagation();\n    }\n    interactor.onInteract({ close });\n}\n\nfunction getIconClass() {\n    if (props.options.type == "error") return "mdi mdi-close-circle";\n    else if (props.options.type == "info") return "mdi mdi-information";\n    else if (props.options.type == "success") return "mdi mdi-check-circle";\n    else if (props.options.type == "warning") return "mdi mdi-alert";\n}\nconst errorTypeImgDict :Record<INotificationOptions["type"], string>= {\n    success: "../../../../src/images/check-circle.svg",\n    info: "../../../../src/images/information.svg",\n    warning: "../../../../src/images/alert.svg",\n    error: "../../../../src/images/close-circle.svg",\n};\nconst getNotificationImg = (type: INotificationOptions["type"]) => errorTypeImgDict[type];\n\nfunction seeProgressDetails() {\n    page.openPage(\n        defineAsyncComponent(() => import(\'../components/dialogs/publish/publishHistory.vue\')),\n        {name : "Progress Details"}\n    );\n}\n\nfunction chooseRedirectFunc(funcName: string | undefined) {\n    if(funcName == undefined){ return;}\n    // functions that help to redirect to another page should be added here as a new case\n    switch(funcName) {\n        case "seeProgressDetails" : seeProgressDetails(); break;\n        default: break;\n    }\n\n}\n<\/script>\n\n<template>\n    <div class="notification-container">\n        <template v-if="showBlockShadow">\n            <teleport to="body">\n                <div class="blockShadow" :style="{ zIndex: props.zindex }"></div>\n            </teleport>\n        </template>\n        <div class="notification-header">\n            \x3c!-- <i :class="iconClass + \' notification-icon\' + \' col-1\'" :style="[(options.type == \'info\' ? \'color: white\' : \'color: black\'),(options.title ? \'margin: 25px 0 0 16px\' : \'\'),(options.title && options.link ? \'margin: 40px 0 -20px 16px\' : \'\') ]" /> --\x3e\n            <img class="notification-icon col-1\'" :data-notif-type="options.type" :src="getNotificationImg(options.type)" :style="[(options.title ? \'margin: 25px 0 0 16px\' : \'\'),(options.title && options.link ? \'margin: 40px 0 -20px 16px\' : \'\') ]"/>\n            <div :class="options.title ? \'notification-title col-2\' : \'notification-text notification-text-padding col-2\'">\n                <span>{{ options.title ? options.title : options.text }}</span>\n                <div v-if="options.link && !options.title" style="margin-top: 20px">\n                    <div v-if = "options.link?.redirectFunc" @click="chooseRedirectFunc(options.link?.redirectFunc)">\n                        <span style="text-decoration: underline; cursor: pointer; font-weight: 500;">{{options.link.linkText}}</span>\n                    </div>\n                    <div v-if="options.link?.url">\n                        <a :href="options.link.url" target="_blank" style="color: #FFFFFF">{{options.link.linkText}}</a>\n                    </div>\n                </div>\n            </div>\n           \n            <div class="close-text mdi mdi-close" :style="[(options.type == \'info\' ? \'color: white\' : \'color: black\'),(options.title ? \'margin: 25px 0 0 16px\' : \'\'),(options.title && options.link ? \'margin: 40px 0 -20px 16px\' : \'\')]" />\n        </div>\n        <div v-if="options.title">\n            <div  class="notification-text notification-text-margin">\n                <span>{{ options.text }}</span>\n                <div v-if="options.link" style="margin-top: 10px">\n                    <div v-if = "options.link?.redirectFunc" @click="chooseRedirectFunc(options.link?.redirectFunc)">\n                        <span style="text-decoration: underline; cursor: pointer; font-weight: 500;">{{options.link.linkText}}</span>\n                    </div>\n                    <div v-if="options.link?.url">\n                        <a :href="options.link.url" target="_blank" style="color: #FFFFFF">{{options.link.linkText}}</a>\n                    </div>\n                </div>\n            </div>\n            \n        </div>\n        <div class="button-container" v-if="options.interactors">\n            <template v-for="(interactor, index) in options.interactors" :key="index">\n                <template v-if="interactor.options">\n                    <select v-if="interactor.optionsType == \'combo\'" @click.stop="" @change="selected(interactor, $event)">\n                        <option v-for="option in interactor.options" :selected="option.selected" :key="option.id">{{ option.text }}</option>\n                    </select>\n                    <template v-else>\n                        <button\n                            :class="\'notification-confirmation-button\' + (options.type == \'info\' ? \' button-info\' : \'\')"\n                            v-for="(option, index) in interactor.options"\n                            :key="option.id"\n                            @click="clickedOption(interactor, index, $event)"\n                        >\n                            {{ option.text }}\n                        </button>\n                    </template>\n                </template>\n            </template>\n        </div>\n        \n    </div>\n</template>\n<style scoped>\n@import url("../../../styles/IDE3.css");\n.blockShadow {\n    background-color: black;\n    top: 0px;\n    left: 0px;\n    position: fixed;\n    height: 100%;\n    width: 100%;\n    opacity: 0.7;\n}\n.center {\n    text-align: center;\n}\nh1 {\n    margin: 0px;\n}\n.action:hover {\n    border-color: black;\n}\n.notification-confirmation-button {\n    width: 90px;\n    height: 32px;\n    border-radius: 4px;\n    opacity: 1;\n    background-color: transparent;\n    margin-left: 8px;\n\n    font: var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-medium) var(--unnamed-font-size-14) / var(--unnamed-line-spacing-19)\n        var(--unnamed-font-family-roboto);\n    letter-spacing: var(--unnamed-character-spacing-0);\n    font: normal normal medium 14px/19px Roboto;\n    letter-spacing: 0px;\n    opacity: 1;\n}\n.button-info {\n    border: 1px solid var(--white);\n    border: 1px solid #ffffff;\n    border-radius: 4px;\n    opacity: 1;\n    color: white;\n}\n\n.action {\n    height: 21px;\n    padding: 0px 6px;\n    border-radius: 5px;\n    cursor: pointer;\n    border: thin solid currentColor;\n    background-color: transparent;\n}\n.notification-icon {\n    font-size: 36px;\n    margin: 16px 0 16px 16px;\n}\n.notification-icon::before {\n    line-height: normal;\n}\n.notification-text {\n    /* UI Properties */\n    font: var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-16) / var(--unnamed-line-spacing-21)\n        var(--unnamed-font-family-roboto);\n    letter-spacing: var(--unnamed-character-spacing-0);\n    text-align: left;\n    font: normal normal normal 16px/21px Roboto;\n    opacity: 1;\n\n    width: 290px;\n    word-wrap: break-word;\n\n    margin-bottom: 24px;\n    word-wrap: break-word;\n}\n\n.notification-text-margin {\n    margin-left: 72px;\n    margin-top: -20px;\n}\n\n.notification-text-padding {\n    padding-top: 24px;\n    padding-left: 24px;\n}\n.close-text {\n    cursor: pointer;\n    margin: 16px 16px 16px 12px;\n    height: 24px;\n    /* UI Properties */\n    font: var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-24) / 29px Material Design Icons Desktop;\n    color: var(--white);\n    font: normal normal normal 24px/29px Material Design Icons Desktop;\n    letter-spacing: 0.43px;\n    color: #ffffff;\n    text-align: right;\n}\n.notification-container {\n    align-items: center;\n}\n\n.notification-header {\n    display: flex;\n    align-items: center;\n}\n.notification-title {\n    font: var(--unnamed-font-style-normal) normal bold var(--unnamed-font-size-16) / var(--unnamed-line-spacing-21) var(--unnamed-font-family-roboto);\n    letter-spacing: var(--unnamed-character-spacing-0);\n    color: var(--white);\n    text-align: left;\n    font: normal normal bold 16px/21px Roboto;\n    letter-spacing: 0px;\n    opacity: 1;\n    padding-left: 24px;\n    width: 290px;\n    word-break: break-all;\n}\n\n.button-container {\n    float: right;\n    margin-right: 52px;\n    margin-bottom: 16px;\n}\n\n.check-circle {\n    background: url("../../../../src/images/check-circle.svg");\n}\n</style>\n\n<style>\n.Vue-Toastification__toast {\n    width: 388px;\n    box-shadow: 2px 2px 15px #00000066;\n    border-radius: 8px;\n    color: black;\n    padding: 0px;\n}\n.Vue-Toastification__toast--warning {\n    background: #f3ca40 0% 0% no-repeat padding-box;\n}\n.Vue-Toastification__toast--success {\n    background: #29c660 0% 0% no-repeat padding-box;\n}\n.Vue-Toastification__toast--error {\n    background: #ff6b6b 0% 0% no-repeat padding-box;\n}\n.Vue-Toastification__toast--info {\n    color: white;\n    background: #151233 0% 0% no-repeat padding-box;\n}\n</style>\n'],sourceRoot:""}]);const m=d},5265:(n,t,o)=>{o.d(t,{Z:()=>s});var i=o(34663),e=o.n(i),a=o(7638),r=o.n(a)()(e());r.push([n.id,"\n.Vue-Toastification__toast {\n    width: 388px;\n    box-shadow: 2px 2px 15px #00000066;\n    border-radius: 8px;\n    color: black;\n    padding: 0px;\n}\n.Vue-Toastification__toast--warning {\n    background: #f3ca40 0% 0% no-repeat padding-box;\n}\n.Vue-Toastification__toast--success {\n    background: #29c660 0% 0% no-repeat padding-box;\n}\n.Vue-Toastification__toast--error {\n    background: #ff6b6b 0% 0% no-repeat padding-box;\n}\n.Vue-Toastification__toast--info {\n    color: white;\n    background: #151233 0% 0% no-repeat padding-box;\n}\n","",{version:3,sources:["webpack://./src/presentation/vue3/components/notification.vue"],names:[],mappings:";AA4SA;IACI,YAAY;IACZ,kCAAkC;IAClC,kBAAkB;IAClB,YAAY;IACZ,YAAY;AAChB;AACA;IACI,+CAA+C;AACnD;AACA;IACI,+CAA+C;AACnD;AACA;IACI,+CAA+C;AACnD;AACA;IACI,YAAY;IACZ,+CAA+C;AACnD",sourcesContent:['<script setup lang="ts">\nimport { defineAsyncComponent, ref } from "vue";\nimport "vue-toastification/dist/index.css";\nimport { container } from "../../../domain/core/diContainer";\nimport { INotificationInteractor, INotificationOptions } from "../../../domain/model/INotificationOptions";\nimport { INotification } from "../../../domain/presentation/INotification";\nimport { IPage } from "../../../domain/presentation/IPage";\n\nexport interface INot {\n    options: INotificationOptions;\n    zindex: number;\n}\nconst emit = defineEmits(["close-toast"]);\nconst props = defineProps<INot>();\nlet showDetail = ref(false);\nconst iconClass = ref(getIconClass());\nconst page = container.resolve<IPage>(IPage);\nif (props.options?.copy) {\n    const options = props.options;\n    options.interactors = options.interactors || [];\n    options.interactors.unshift({\n        customClose: true,\n        text: "copy",\n        onInteract: () => {\n            const copyText = (options.title ? options.title + "\\n" : "") + options.text;\n            navigator.clipboard.writeText(copyText);\n            container.resolve<INotification>(INotification).showNotification({ text: "copied", type: "success", copy: false });\n        },\n    });\n}\nprops.options.interactors\n    ?.filter((interactor) => interactor.optionsPleaseSelect)\n    .forEach((interactor) => {\n        interactor.options = interactor.options || [];\n        if (interactor.options.find((option) => option.selected)) {\n            return;\n        }\n\n        interactor.options.unshift({ id: "pleaseSelect", text: "pleaseSelect" });\n    });\nconst requireds = {\n    interactors: props.options.interactors?.filter((interactor) => interactor.required).length || 0,\n    interracted: 0,\n};\nconst showBlockShadow = ref(requireds.interactors > 0);\n\nfunction decideClose(interactor: INotificationInteractor) {\n    if (!interactor.required) {\n        return;\n    }\n    if (requireds.interactors > ++requireds.interracted) {\n        return;\n    }\n\n    showBlockShadow.value = false;\n    emit("close-toast");\n}\nfunction selected(interactor: INotificationInteractor, event: Event) {\n    clickedOption(interactor, (event.target as HTMLSelectElement).selectedIndex, event);\n}\nfunction clickedOption(interactor: INotificationInteractor, index: number, event: Event) {\n    const selectedOption = interactor.options![index];\n    const close = () => decideClose(interactor);\n    if (!interactor.customClose) {\n        close();\n    } else {\n        event.stopPropagation();\n    }\n    interactor.onInteract({ selectedOption: { text: selectedOption.text, id: selectedOption.id, index }, close });\n}\nfunction clicked(interactor: INotificationInteractor, event: MouseEvent) {\n    const close = () => decideClose(interactor);\n    if (!interactor.customClose) {\n        close();\n    } else {\n        event.stopPropagation();\n    }\n    interactor.onInteract({ close });\n}\n\nfunction getIconClass() {\n    if (props.options.type == "error") return "mdi mdi-close-circle";\n    else if (props.options.type == "info") return "mdi mdi-information";\n    else if (props.options.type == "success") return "mdi mdi-check-circle";\n    else if (props.options.type == "warning") return "mdi mdi-alert";\n}\nconst errorTypeImgDict :Record<INotificationOptions["type"], string>= {\n    success: "../../../../src/images/check-circle.svg",\n    info: "../../../../src/images/information.svg",\n    warning: "../../../../src/images/alert.svg",\n    error: "../../../../src/images/close-circle.svg",\n};\nconst getNotificationImg = (type: INotificationOptions["type"]) => errorTypeImgDict[type];\n\nfunction seeProgressDetails() {\n    page.openPage(\n        defineAsyncComponent(() => import(\'../components/dialogs/publish/publishHistory.vue\')),\n        {name : "Progress Details"}\n    );\n}\n\nfunction chooseRedirectFunc(funcName: string | undefined) {\n    if(funcName == undefined){ return;}\n    // functions that help to redirect to another page should be added here as a new case\n    switch(funcName) {\n        case "seeProgressDetails" : seeProgressDetails(); break;\n        default: break;\n    }\n\n}\n<\/script>\n\n<template>\n    <div class="notification-container">\n        <template v-if="showBlockShadow">\n            <teleport to="body">\n                <div class="blockShadow" :style="{ zIndex: props.zindex }"></div>\n            </teleport>\n        </template>\n        <div class="notification-header">\n            \x3c!-- <i :class="iconClass + \' notification-icon\' + \' col-1\'" :style="[(options.type == \'info\' ? \'color: white\' : \'color: black\'),(options.title ? \'margin: 25px 0 0 16px\' : \'\'),(options.title && options.link ? \'margin: 40px 0 -20px 16px\' : \'\') ]" /> --\x3e\n            <img class="notification-icon col-1\'" :data-notif-type="options.type" :src="getNotificationImg(options.type)" :style="[(options.title ? \'margin: 25px 0 0 16px\' : \'\'),(options.title && options.link ? \'margin: 40px 0 -20px 16px\' : \'\') ]"/>\n            <div :class="options.title ? \'notification-title col-2\' : \'notification-text notification-text-padding col-2\'">\n                <span>{{ options.title ? options.title : options.text }}</span>\n                <div v-if="options.link && !options.title" style="margin-top: 20px">\n                    <div v-if = "options.link?.redirectFunc" @click="chooseRedirectFunc(options.link?.redirectFunc)">\n                        <span style="text-decoration: underline; cursor: pointer; font-weight: 500;">{{options.link.linkText}}</span>\n                    </div>\n                    <div v-if="options.link?.url">\n                        <a :href="options.link.url" target="_blank" style="color: #FFFFFF">{{options.link.linkText}}</a>\n                    </div>\n                </div>\n            </div>\n           \n            <div class="close-text mdi mdi-close" :style="[(options.type == \'info\' ? \'color: white\' : \'color: black\'),(options.title ? \'margin: 25px 0 0 16px\' : \'\'),(options.title && options.link ? \'margin: 40px 0 -20px 16px\' : \'\')]" />\n        </div>\n        <div v-if="options.title">\n            <div  class="notification-text notification-text-margin">\n                <span>{{ options.text }}</span>\n                <div v-if="options.link" style="margin-top: 10px">\n                    <div v-if = "options.link?.redirectFunc" @click="chooseRedirectFunc(options.link?.redirectFunc)">\n                        <span style="text-decoration: underline; cursor: pointer; font-weight: 500;">{{options.link.linkText}}</span>\n                    </div>\n                    <div v-if="options.link?.url">\n                        <a :href="options.link.url" target="_blank" style="color: #FFFFFF">{{options.link.linkText}}</a>\n                    </div>\n                </div>\n            </div>\n            \n        </div>\n        <div class="button-container" v-if="options.interactors">\n            <template v-for="(interactor, index) in options.interactors" :key="index">\n                <template v-if="interactor.options">\n                    <select v-if="interactor.optionsType == \'combo\'" @click.stop="" @change="selected(interactor, $event)">\n                        <option v-for="option in interactor.options" :selected="option.selected" :key="option.id">{{ option.text }}</option>\n                    </select>\n                    <template v-else>\n                        <button\n                            :class="\'notification-confirmation-button\' + (options.type == \'info\' ? \' button-info\' : \'\')"\n                            v-for="(option, index) in interactor.options"\n                            :key="option.id"\n                            @click="clickedOption(interactor, index, $event)"\n                        >\n                            {{ option.text }}\n                        </button>\n                    </template>\n                </template>\n            </template>\n        </div>\n        \n    </div>\n</template>\n<style scoped>\n@import url("../../../styles/IDE3.css");\n.blockShadow {\n    background-color: black;\n    top: 0px;\n    left: 0px;\n    position: fixed;\n    height: 100%;\n    width: 100%;\n    opacity: 0.7;\n}\n.center {\n    text-align: center;\n}\nh1 {\n    margin: 0px;\n}\n.action:hover {\n    border-color: black;\n}\n.notification-confirmation-button {\n    width: 90px;\n    height: 32px;\n    border-radius: 4px;\n    opacity: 1;\n    background-color: transparent;\n    margin-left: 8px;\n\n    font: var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-medium) var(--unnamed-font-size-14) / var(--unnamed-line-spacing-19)\n        var(--unnamed-font-family-roboto);\n    letter-spacing: var(--unnamed-character-spacing-0);\n    font: normal normal medium 14px/19px Roboto;\n    letter-spacing: 0px;\n    opacity: 1;\n}\n.button-info {\n    border: 1px solid var(--white);\n    border: 1px solid #ffffff;\n    border-radius: 4px;\n    opacity: 1;\n    color: white;\n}\n\n.action {\n    height: 21px;\n    padding: 0px 6px;\n    border-radius: 5px;\n    cursor: pointer;\n    border: thin solid currentColor;\n    background-color: transparent;\n}\n.notification-icon {\n    font-size: 36px;\n    margin: 16px 0 16px 16px;\n}\n.notification-icon::before {\n    line-height: normal;\n}\n.notification-text {\n    /* UI Properties */\n    font: var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-16) / var(--unnamed-line-spacing-21)\n        var(--unnamed-font-family-roboto);\n    letter-spacing: var(--unnamed-character-spacing-0);\n    text-align: left;\n    font: normal normal normal 16px/21px Roboto;\n    opacity: 1;\n\n    width: 290px;\n    word-wrap: break-word;\n\n    margin-bottom: 24px;\n    word-wrap: break-word;\n}\n\n.notification-text-margin {\n    margin-left: 72px;\n    margin-top: -20px;\n}\n\n.notification-text-padding {\n    padding-top: 24px;\n    padding-left: 24px;\n}\n.close-text {\n    cursor: pointer;\n    margin: 16px 16px 16px 12px;\n    height: 24px;\n    /* UI Properties */\n    font: var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-24) / 29px Material Design Icons Desktop;\n    color: var(--white);\n    font: normal normal normal 24px/29px Material Design Icons Desktop;\n    letter-spacing: 0.43px;\n    color: #ffffff;\n    text-align: right;\n}\n.notification-container {\n    align-items: center;\n}\n\n.notification-header {\n    display: flex;\n    align-items: center;\n}\n.notification-title {\n    font: var(--unnamed-font-style-normal) normal bold var(--unnamed-font-size-16) / var(--unnamed-line-spacing-21) var(--unnamed-font-family-roboto);\n    letter-spacing: var(--unnamed-character-spacing-0);\n    color: var(--white);\n    text-align: left;\n    font: normal normal bold 16px/21px Roboto;\n    letter-spacing: 0px;\n    opacity: 1;\n    padding-left: 24px;\n    width: 290px;\n    word-break: break-all;\n}\n\n.button-container {\n    float: right;\n    margin-right: 52px;\n    margin-bottom: 16px;\n}\n\n.check-circle {\n    background: url("../../../../src/images/check-circle.svg");\n}\n</style>\n\n<style>\n.Vue-Toastification__toast {\n    width: 388px;\n    box-shadow: 2px 2px 15px #00000066;\n    border-radius: 8px;\n    color: black;\n    padding: 0px;\n}\n.Vue-Toastification__toast--warning {\n    background: #f3ca40 0% 0% no-repeat padding-box;\n}\n.Vue-Toastification__toast--success {\n    background: #29c660 0% 0% no-repeat padding-box;\n}\n.Vue-Toastification__toast--error {\n    background: #ff6b6b 0% 0% no-repeat padding-box;\n}\n.Vue-Toastification__toast--info {\n    color: white;\n    background: #151233 0% 0% no-repeat padding-box;\n}\n</style>\n'],sourceRoot:""}]);const s=r},24773:(n,t,o)=>{o.r(t),o.d(t,{default:()=>M});var i=o(71093),e=o(66190),a=o(46233),r=o(73843),s=(o(25173),o(5627)),c=o(50419),p=o(88390);const l={class:"notification-container"},d={class:"notification-header"},f=["data-notif-type","src"],m={key:0,style:{"margin-top":"20px"}},A={style:{"text-decoration":"underline",cursor:"pointer","font-weight":"500"}},g={key:1},u=["href"],x={key:1},v={class:"notification-text notification-text-margin"},k={key:0,style:{"margin-top":"10px"}},h={style:{"text-decoration":"underline",cursor:"pointer","font-weight":"500"}},I={key:1},b=["href"],C={key:2,class:"button-container"},y=["onChange"],w=["selected"],B=["onClick"],D=(0,i.aZ)({__name:"notification",props:{options:null,zindex:null},emits:["close-toast"],setup(n,{emit:t}){var D,F,_;const T=n;(0,r.iH)(!1),(0,r.iH)("error"==T.options.type?"mdi mdi-close-circle":"info"==T.options.type?"mdi mdi-information":"success"==T.options.type?"mdi mdi-check-circle":"warning"==T.options.type?"mdi mdi-alert":void 0);const N=s.nC.resolve(p.z);if(null===(D=T.options)||void 0===D?void 0:D.copy){const n=T.options;n.interactors=n.interactors||[],n.interactors.unshift({customClose:!0,text:"copy",onInteract:()=>{const t=(n.title?n.title+"\n":"")+n.text;navigator.clipboard.writeText(t),s.nC.resolve(c.L).showNotification({text:"copied",type:"success",copy:!1})}})}null===(F=T.options.interactors)||void 0===F||F.filter((n=>n.optionsPleaseSelect)).forEach((n=>{n.options=n.options||[],n.options.find((n=>n.selected))||n.options.unshift({id:"pleaseSelect",text:"pleaseSelect"})}));const P={interactors:(null===(_=T.options.interactors)||void 0===_?void 0:_.filter((n=>n.required)).length)||0,interracted:0},S=(0,r.iH)(P.interactors>0);function q(n,o,i){const e=n.options[o],a=()=>function(n){n.required&&(P.interactors>++P.interracted||(S.value=!1,t("close-toast")))}(n);n.customClose?i.stopPropagation():a(),n.onInteract({selectedOption:{text:e.text,id:e.id,index:o},close:a})}const z={success:"../../../../src/images/check-circle.svg",info:"../../../../src/images/information.svg",warning:"../../../../src/images/alert.svg",error:"../../../../src/images/close-circle.svg"};function Y(n){null!=n&&"seeProgressDetails"===n&&N.openPage((0,i.RC)((()=>o.e(6403).then(o.bind(o,86403)))),{name:"Progress Details"})}return(t,o)=>{var r,s,c,p,D;return(0,i.wg)(),(0,i.iD)("div",l,[S.value?((0,i.wg)(),(0,i.j4)(i.lR,{key:0,to:"body"},[(0,i._)("div",{class:"blockShadow",style:(0,e.normalizeStyle)({zIndex:T.zindex})},null,4)])):(0,i.kq)("v-if",!0),(0,i._)("div",d,[(0,i.kq)(" <i :class=\"iconClass + ' notification-icon' + ' col-1'\" :style=\"[(options.type == 'info' ? 'color: white' : 'color: black'),(options.title ? 'margin: 25px 0 0 16px' : ''),(options.title && options.link ? 'margin: 40px 0 -20px 16px' : '') ]\" /> "),(0,i._)("img",{class:"notification-icon col-1'","data-notif-type":n.options.type,src:(D=n.options.type,z[D]),style:(0,e.normalizeStyle)([n.options.title?"margin: 25px 0 0 16px":"",n.options.title&&n.options.link?"margin: 40px 0 -20px 16px":""])},null,12,f),(0,i._)("div",{class:(0,e.normalizeClass)(n.options.title?"notification-title col-2":"notification-text notification-text-padding col-2")},[(0,i._)("span",null,(0,e.toDisplayString)(n.options.title?n.options.title:n.options.text),1),n.options.link&&!n.options.title?((0,i.wg)(),(0,i.iD)("div",m,[(null===(r=n.options.link)||void 0===r?void 0:r.redirectFunc)?((0,i.wg)(),(0,i.iD)("div",{key:0,onClick:o[0]||(o[0]=t=>{var o;return Y(null===(o=n.options.link)||void 0===o?void 0:o.redirectFunc)})},[(0,i._)("span",A,(0,e.toDisplayString)(n.options.link.linkText),1)])):(0,i.kq)("v-if",!0),(null===(s=n.options.link)||void 0===s?void 0:s.url)?((0,i.wg)(),(0,i.iD)("div",g,[(0,i._)("a",{href:n.options.link.url,target:"_blank",style:{color:"#FFFFFF"}},(0,e.toDisplayString)(n.options.link.linkText),9,u)])):(0,i.kq)("v-if",!0)])):(0,i.kq)("v-if",!0)],2),(0,i._)("div",{class:"close-text mdi mdi-close",style:(0,e.normalizeStyle)(["info"==n.options.type?"color: white":"color: black",n.options.title?"margin: 25px 0 0 16px":"",n.options.title&&n.options.link?"margin: 40px 0 -20px 16px":""])},null,4)]),n.options.title?((0,i.wg)(),(0,i.iD)("div",x,[(0,i._)("div",v,[(0,i._)("span",null,(0,e.toDisplayString)(n.options.text),1),n.options.link?((0,i.wg)(),(0,i.iD)("div",k,[(null===(c=n.options.link)||void 0===c?void 0:c.redirectFunc)?((0,i.wg)(),(0,i.iD)("div",{key:0,onClick:o[1]||(o[1]=t=>{var o;return Y(null===(o=n.options.link)||void 0===o?void 0:o.redirectFunc)})},[(0,i._)("span",h,(0,e.toDisplayString)(n.options.link.linkText),1)])):(0,i.kq)("v-if",!0),(null===(p=n.options.link)||void 0===p?void 0:p.url)?((0,i.wg)(),(0,i.iD)("div",I,[(0,i._)("a",{href:n.options.link.url,target:"_blank",style:{color:"#FFFFFF"}},(0,e.toDisplayString)(n.options.link.linkText),9,b)])):(0,i.kq)("v-if",!0)])):(0,i.kq)("v-if",!0)])])):(0,i.kq)("v-if",!0),n.options.interactors?((0,i.wg)(),(0,i.iD)("div",C,[((0,i.wg)(!0),(0,i.iD)(i.HY,null,(0,i.Ko)(n.options.interactors,((t,r)=>((0,i.wg)(),(0,i.iD)(i.HY,{key:r},[t.options?((0,i.wg)(),(0,i.iD)(i.HY,{key:0},["combo"==t.optionsType?((0,i.wg)(),(0,i.iD)("select",{key:0,onClick:o[2]||(o[2]=(0,a.withModifiers)((()=>{}),["stop"])),onChange:n=>function(n,t){q(n,t.target.selectedIndex,t)}(t,n)},[((0,i.wg)(!0),(0,i.iD)(i.HY,null,(0,i.Ko)(t.options,(n=>((0,i.wg)(),(0,i.iD)("option",{selected:n.selected,key:n.id},(0,e.toDisplayString)(n.text),9,w)))),128))],40,y)):((0,i.wg)(!0),(0,i.iD)(i.HY,{key:1},(0,i.Ko)(t.options,((o,a)=>((0,i.wg)(),(0,i.iD)("button",{class:(0,e.normalizeClass)("notification-confirmation-button"+("info"==n.options.type?" button-info":"")),key:o.id,onClick:n=>q(t,a,n)},(0,e.toDisplayString)(o.text),11,B)))),128))],64)):(0,i.kq)("v-if",!0)],64)))),128))])):(0,i.kq)("v-if",!0)])}}});var F=o(17450),_=o.n(F),T=o(29530),N=o.n(T),P=o(16199),S=o.n(P),q=o(40458),z=o.n(q),Y=o(62916),E=o.n(Y),O=o(92165),R=o.n(O),Z=o(21060),V={};V.styleTagTransform=R(),V.setAttributes=z(),V.insert=S().bind(null,"head"),V.domAPI=N(),V.insertStyleElement=E(),_()(Z.Z,V),Z.Z&&Z.Z.locals&&Z.Z.locals;var U=o(5265),H={};H.styleTagTransform=R(),H.setAttributes=z(),H.insert=S().bind(null,"head"),H.domAPI=N(),H.insertStyleElement=E(),_()(U.Z,H),U.Z&&U.Z.locals&&U.Z.locals;const M=(0,o(32525).Z)(D,[["__scopeId","data-v-a3e1ea94"]])},69086:(n,t,o)=>{n.exports=o.p+"e0e7f1aae4fafad64907.svg"}}]);
//# sourceMappingURL=4773.js.map