const PRECACHE="precache-v1738572922729",PRECACHE_URLS=["error404.html","index.html","index.js","library/mdi/css/materialdesignicons.css","library/mdi/css/materialdesignicons.min.css","library/mdi/package.json","library/mdi/preview.html","library/mdi/scripts/verify.js","library/mdi/scss/_animated.scss","library/mdi/scss/_core.scss","library/mdi/scss/_extras.scss","library/mdi/scss/_functions.scss","library/mdi/scss/_icons.scss","library/mdi/scss/_path.scss","library/mdi/scss/_variables.scss","library/mdi/scss/materialdesignicons.scss","packages/assets/oidc.html","packages/websdk/0.js","packages/websdk/110.js","packages/websdk/128.js","packages/websdk/142.js","packages/websdk/178.js","packages/websdk/189.js","packages/websdk/193.js","packages/websdk/195.js","packages/websdk/199.js","packages/websdk/320.js","packages/websdk/321.js","packages/websdk/342.js","packages/websdk/352.js","packages/websdk/368.js","packages/websdk/40.js","packages/websdk/451.js","packages/websdk/47.js","packages/websdk/558.js","packages/websdk/560.js","packages/websdk/597.js","packages/websdk/614.js","packages/websdk/62.js","packages/websdk/658.js","packages/websdk/673.js","packages/websdk/681.js","packages/websdk/683.js","packages/websdk/692.js","packages/websdk/7.js","packages/websdk/716.js","packages/websdk/718.js","packages/websdk/723.js","packages/websdk/724.js","packages/websdk/738.js","packages/websdk/747.js","packages/websdk/75.js","packages/websdk/755.js","packages/websdk/784.js","packages/websdk/837.js","packages/websdk/84.js","packages/websdk/855.js","packages/websdk/867.js","packages/websdk/873.js","packages/websdk/902.js","packages/websdk/905.js","packages/websdk/908.js","packages/websdk/914.js","packages/websdk/919.js","packages/websdk/958.js","packages/websdk/plateauIAMPopup.js","packages/websdk/websdk.js","sw.js"],path=new URL(location).searchParams.get("path");PRECACHE_URLS.map((function(s){return path+s})),PRECACHE_URLS.push(path),self.addEventListener("install",(s=>{s.waitUntil(caches.open(PRECACHE).then((async s=>{try{await s.addAll(PRECACHE_URLS)}catch(e){console.error("sw: cache.addAll failed individual load starting");for(let e of PRECACHE_URLS)try{await s.add(e)}catch(s){console.warn("sw: cache.add failed for: ",e)}}})).then(self.skipWaiting()))})),self.addEventListener("activate",(s=>{const e=[PRECACHE];s.waitUntil(caches.keys().then((s=>s.filter((s=>!e.includes(s))))).then((s=>Promise.all(s.map((s=>caches.delete(s)))))).then((()=>self.clients.claim())))})),self.addEventListener("fetch",(s=>{s.request.url.startsWith(self.location.origin)&&s.respondWith(caches.match(s.request,{ignoreSearch:!0}).then((e=>e||fetch(s.request).then((s=>s)))))}));