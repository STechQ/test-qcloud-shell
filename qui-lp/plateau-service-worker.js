const PRECACHE="precache-v1744288815372",PRECACHE_URLS=["error404.html","index.html","index.js","library/mdi/css/materialdesignicons.css","library/mdi/css/materialdesignicons.min.css","library/mdi/package.json","library/mdi/preview.html","library/mdi/scripts/verify.js","library/mdi/scss/_animated.scss","library/mdi/scss/_core.scss","library/mdi/scss/_extras.scss","library/mdi/scss/_functions.scss","library/mdi/scss/_icons.scss","library/mdi/scss/_path.scss","library/mdi/scss/_variables.scss","library/mdi/scss/materialdesignicons.scss","packages/assets/oidc.html","packages/websdk/1062.js","packages/websdk/1063.js","packages/websdk/1321.js","packages/websdk/1558.js","packages/websdk/1723.js","packages/websdk/1837.js","packages/websdk/2084.js","packages/websdk/2193.js","packages/websdk/2342.js","packages/websdk/2560.js","packages/websdk/2597.js","packages/websdk/2919.js","packages/websdk/3195.js","packages/websdk/3199.js","packages/websdk/3412.js","packages/websdk/352.js","packages/websdk/4000.js","packages/websdk/4040.js","packages/websdk/4142.js","packages/websdk/4614.js","packages/websdk/4908.js","packages/websdk/5047.js","packages/websdk/5077.js","packages/websdk/5110.js","packages/websdk/5189.js","packages/websdk/5533.js","packages/websdk/5784.js","packages/websdk/5958.js","packages/websdk/6178.js","packages/websdk/6451.js","packages/websdk/6658.js","packages/websdk/683.js","packages/websdk/6867.js","packages/websdk/6905.js","packages/websdk/7007.js","packages/websdk/716.js","packages/websdk/7275.js","packages/websdk/7320.js","packages/websdk/7364.js","packages/websdk/7368.js","packages/websdk/738.js","packages/websdk/755.js","packages/websdk/7681.js","packages/websdk/7955.js","packages/websdk/8075.js","packages/websdk/8128.js","packages/websdk/9855.js","packages/websdk/9873.js","packages/websdk/9902.js","packages/websdk/9914.js","packages/websdk/plateauIAMPopup.js","packages/websdk/websdk.js","sw.js"],path=new URL(location).searchParams.get("path");PRECACHE_URLS.map((function(s){return path+s})),PRECACHE_URLS.push(path),self.addEventListener("install",(s=>{s.waitUntil(caches.open(PRECACHE).then((async s=>{try{await s.addAll(PRECACHE_URLS)}catch(e){console.error("sw: cache.addAll failed individual load starting");for(let e of PRECACHE_URLS)try{await s.add(e)}catch(s){console.warn("sw: cache.add failed for: ",e)}}})).then(self.skipWaiting()))})),self.addEventListener("activate",(s=>{const e=[PRECACHE];s.waitUntil(caches.keys().then((s=>s.filter((s=>!e.includes(s))))).then((s=>Promise.all(s.map((s=>caches.delete(s)))))).then((()=>self.clients.claim())))})),self.addEventListener("fetch",(s=>{s.request.url.startsWith(self.location.origin)&&s.respondWith(caches.match(s.request,{ignoreSearch:!0}).then((e=>e||fetch(s.request).then((s=>s)))))}));