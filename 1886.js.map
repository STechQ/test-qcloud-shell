{"version":3,"file":"1886.js?ver=0.0.285_1702466359328","mappings":"mIAMO,MAAMA,EAAgBC,OAAOC,IAAI,gB,mCCmBjC,MAAMC,EAAeF,OAAOC,IAAI,e","sources":["webpack://qcloud_shell/./src/domain/presentation/INotification.ts","webpack://qcloud_shell/./src/domain/useCase/IUserUseCase.ts"],"sourcesContent":["import { IConfirmOptions, IConfirmRetval, INotificationOptions } from \"../model/INotificationOptions\";\n\nexport interface INotification{\n    showNotification(options: INotificationOptions): Promise<void>;\n    showConfirm(options: IConfirmOptions): Promise<IConfirmRetval>;\n}\nexport const INotification = Symbol.for(\"INotification\");","import { IFeedbackAttachment } from \"../../../../common/qCloudTemp/feedback\";\nimport { IAddFeedbackResponse } from \"../../../../common/qCloudTemp/symDtoObjects\";\nimport { IUserRequest } from \"../../../../common/qCloudTemp/userRequest\";\n\nexport interface ICheckUserForUpdatesResult {\n    needProfileUpdate: boolean;\n}\nexport interface IUpdateUserOptions {\n    profile?: {\n        name: string;\n        lastName: string;\n        role: string;\n    };\n    preferences: {\n        emailConsent: boolean;\n    };\n}\n\nexport interface IUserUseCase {\n    updateUser(options: IUpdateUserOptions): Promise<void>\n    checkUserForUpdateNeeds(): Promise<ICheckUserForUpdatesResult>;\n    createFeedback(options: { type: string; description: string; attachments?: Array<IFeedbackAttachment>; }): Promise<IAddFeedbackResponse>\n    createUserPremiumAccountRequest(options: { orgDevCount: string; phoneNumber: string; companyName: string; }): Promise<IUserRequest>\n}\n\nexport const IUserUseCase = Symbol.for(\"IUserUseCase\");"],"names":["INotification","Symbol","for","IUserUseCase"],"sourceRoot":""}